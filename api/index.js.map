{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "../node_modules/remix/index.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "/Users/jerichocalibuso/sp-app/app/root.tsx", "../app/components/Navbar.tsx", "../app/components/AccountDropdown.tsx", "../app/utils/classNames.ts", "../app/components/Error.tsx", "../app/components/Footer.tsx", "../app/services/auth.server.ts", "../app/services/session.server.ts", "../app/utils/db.server.ts", "../app/hooks/useNProgress.tsx", "/Users/jerichocalibuso/sp-app/app/routes/manage-products/$productId.upload-image.tsx", "../app/utils/utils.server.ts", "/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.callback.tsx", "/Users/jerichocalibuso/sp-app/app/routes/order-history/$orderId.tsx", "/Users/jerichocalibuso/sp-app/app/routes/order-success.$orderId.tsx", "../app/services/paymongo.server.ts", "/Users/jerichocalibuso/sp-app/app/routes/manage-products/index.tsx", "../app/components/AddEditProductForm/index.tsx", "../app/routes/manage-products/index.tsx", "../app/components/Input.tsx", "../app/components/CategorySelect.tsx", "../app/components/Fieldset.tsx", "../app/components/AddEditProductForm/ConfirmDeleteModal.tsx", "/Users/jerichocalibuso/sp-app/app/routes/order-history/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/cloudinary-upload.tsx", "/Users/jerichocalibuso/sp-app/app/routes/assigned-orders.tsx", "/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.tsx", "/Users/jerichocalibuso/sp-app/app/routes/products/index.tsx", "../app/components/ProductsPage.tsx", "/Users/jerichocalibuso/sp-app/app/routes/create-orders.tsx", "/Users/jerichocalibuso/sp-app/app/routes/manage-orders.tsx", "/Users/jerichocalibuso/sp-app/app/routes/manage-users.tsx", "../app/components/ManageUserForm/index.tsx", "../app/routes/manage-users.tsx", "../app/components/RoleSelect.tsx", "../app/components/ManageUserForm/ConfirmDeleteModal.tsx", "/Users/jerichocalibuso/sp-app/app/routes/products/$id.tsx", "/Users/jerichocalibuso/sp-app/app/routes/unauthorized.tsx", "/Users/jerichocalibuso/sp-app/app/routes/checkout.tsx", "/Users/jerichocalibuso/sp-app/app/routes/chicken.tsx", "/Users/jerichocalibuso/sp-app/app/routes/signout.tsx", "/Users/jerichocalibuso/sp-app/app/routes/signin.tsx", "/Users/jerichocalibuso/sp-app/app/routes/signup.tsx", "/Users/jerichocalibuso/sp-app/app/routes/error.tsx", "/Users/jerichocalibuso/sp-app/app/routes/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/sales.tsx", "/Users/jerichocalibuso/sp-app/app/routes/beef.tsx", "/Users/jerichocalibuso/sp-app/app/routes/cart.tsx", "../app/components/Quantity.tsx", "/Users/jerichocalibuso/sp-app/app/routes/pork.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "/**\n * @remix-run/node v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar node = require('@remix-run/node');\n\n\n\nObject.defineProperty(exports, 'createCookie', {\n  enumerable: true,\n  get: function () { return node.createCookie; }\n});\nObject.defineProperty(exports, 'createCookieSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createCookieSessionStorage; }\n});\nObject.defineProperty(exports, 'createFileSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createFileSessionStorage; }\n});\nObject.defineProperty(exports, 'createMemorySessionStorage', {\n  enumerable: true,\n  get: function () { return node.createMemorySessionStorage; }\n});\nObject.defineProperty(exports, 'createSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createSessionStorage; }\n});\nObject.defineProperty(exports, 'unstable_createFileUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createFileUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_createMemoryUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createMemoryUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_parseMultipartFormData', {\n  enumerable: true,\n  get: function () { return node.unstable_parseMultipartFormData; }\n});\n\n/**\n * @remix-run/server-runtime v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar serverRuntime = require('@remix-run/server-runtime');\n\n\n\nObject.defineProperty(exports, 'createSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.createSession; }\n});\nObject.defineProperty(exports, 'isCookie', {\n  enumerable: true,\n  get: function () { return serverRuntime.isCookie; }\n});\nObject.defineProperty(exports, 'isSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.isSession; }\n});\nObject.defineProperty(exports, 'json', {\n  enumerable: true,\n  get: function () { return serverRuntime.json; }\n});\nObject.defineProperty(exports, 'redirect', {\n  enumerable: true,\n  get: function () { return serverRuntime.redirect; }\n});\n\n/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar react = require('@remix-run/react');\n\n\n\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function () { return react.Form; }\n});\nObject.defineProperty(exports, 'Link', {\n  enumerable: true,\n  get: function () { return react.Link; }\n});\nObject.defineProperty(exports, 'Links', {\n  enumerable: true,\n  get: function () { return react.Links; }\n});\nObject.defineProperty(exports, 'LiveReload', {\n  enumerable: true,\n  get: function () { return react.LiveReload; }\n});\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function () { return react.Meta; }\n});\nObject.defineProperty(exports, 'NavLink', {\n  enumerable: true,\n  get: function () { return react.NavLink; }\n});\nObject.defineProperty(exports, 'Outlet', {\n  enumerable: true,\n  get: function () { return react.Outlet; }\n});\nObject.defineProperty(exports, 'PrefetchPageLinks', {\n  enumerable: true,\n  get: function () { return react.PrefetchPageLinks; }\n});\nObject.defineProperty(exports, 'RemixBrowser', {\n  enumerable: true,\n  get: function () { return react.RemixBrowser; }\n});\nObject.defineProperty(exports, 'RemixServer', {\n  enumerable: true,\n  get: function () { return react.RemixServer; }\n});\nObject.defineProperty(exports, 'Scripts', {\n  enumerable: true,\n  get: function () { return react.Scripts; }\n});\nObject.defineProperty(exports, 'ScrollRestoration', {\n  enumerable: true,\n  get: function () { return react.ScrollRestoration; }\n});\nObject.defineProperty(exports, 'useActionData', {\n  enumerable: true,\n  get: function () { return react.useActionData; }\n});\nObject.defineProperty(exports, 'useBeforeUnload', {\n  enumerable: true,\n  get: function () { return react.useBeforeUnload; }\n});\nObject.defineProperty(exports, 'useCatch', {\n  enumerable: true,\n  get: function () { return react.useCatch; }\n});\nObject.defineProperty(exports, 'useFetcher', {\n  enumerable: true,\n  get: function () { return react.useFetcher; }\n});\nObject.defineProperty(exports, 'useFetchers', {\n  enumerable: true,\n  get: function () { return react.useFetchers; }\n});\nObject.defineProperty(exports, 'useFormAction', {\n  enumerable: true,\n  get: function () { return react.useFormAction; }\n});\nObject.defineProperty(exports, 'useHref', {\n  enumerable: true,\n  get: function () { return react.useHref; }\n});\nObject.defineProperty(exports, 'useLoaderData', {\n  enumerable: true,\n  get: function () { return react.useLoaderData; }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function () { return react.useLocation; }\n});\nObject.defineProperty(exports, 'useMatches', {\n  enumerable: true,\n  get: function () { return react.useMatches; }\n});\nObject.defineProperty(exports, 'useNavigate', {\n  enumerable: true,\n  get: function () { return react.useNavigate; }\n});\nObject.defineProperty(exports, 'useNavigationType', {\n  enumerable: true,\n  get: function () { return react.useNavigationType; }\n});\nObject.defineProperty(exports, 'useOutlet', {\n  enumerable: true,\n  get: function () { return react.useOutlet; }\n});\nObject.defineProperty(exports, 'useOutletContext', {\n  enumerable: true,\n  get: function () { return react.useOutletContext; }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function () { return react.useParams; }\n});\nObject.defineProperty(exports, 'useResolvedPath', {\n  enumerable: true,\n  get: function () { return react.useResolvedPath; }\n});\nObject.defineProperty(exports, 'useSearchParams', {\n  enumerable: true,\n  get: function () { return react.useSearchParams; }\n});\nObject.defineProperty(exports, 'useSubmit', {\n  enumerable: true,\n  get: function () { return react.useSubmit; }\n});\nObject.defineProperty(exports, 'useTransition', {\n  enumerable: true,\n  get: function () { return react.useTransition; }\n});\n\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/Users/jerichocalibuso/sp-app/app/entry.server.tsx\";\nimport * as route0 from \"/Users/jerichocalibuso/sp-app/app/root.tsx\";\nimport * as route1 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-products/$productId.upload-image.tsx\";\nimport * as route2 from \"/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.callback.tsx\";\nimport * as route3 from \"/Users/jerichocalibuso/sp-app/app/routes/order-history/$orderId.tsx\";\nimport * as route4 from \"/Users/jerichocalibuso/sp-app/app/routes/order-success.$orderId.tsx\";\nimport * as route5 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-products/index.tsx\";\nimport * as route6 from \"/Users/jerichocalibuso/sp-app/app/routes/order-history/index.tsx\";\nimport * as route7 from \"/Users/jerichocalibuso/sp-app/app/routes/cloudinary-upload.tsx\";\nimport * as route8 from \"/Users/jerichocalibuso/sp-app/app/routes/assigned-orders.tsx\";\nimport * as route9 from \"/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.tsx\";\nimport * as route10 from \"/Users/jerichocalibuso/sp-app/app/routes/products/index.tsx\";\nimport * as route11 from \"/Users/jerichocalibuso/sp-app/app/routes/create-orders.tsx\";\nimport * as route12 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-orders.tsx\";\nimport * as route13 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-users.tsx\";\nimport * as route14 from \"/Users/jerichocalibuso/sp-app/app/routes/products/$id.tsx\";\nimport * as route15 from \"/Users/jerichocalibuso/sp-app/app/routes/unauthorized.tsx\";\nimport * as route16 from \"/Users/jerichocalibuso/sp-app/app/routes/checkout.tsx\";\nimport * as route17 from \"/Users/jerichocalibuso/sp-app/app/routes/chicken.tsx\";\nimport * as route18 from \"/Users/jerichocalibuso/sp-app/app/routes/signout.tsx\";\nimport * as route19 from \"/Users/jerichocalibuso/sp-app/app/routes/signin.tsx\";\nimport * as route20 from \"/Users/jerichocalibuso/sp-app/app/routes/signup.tsx\";\nimport * as route21 from \"/Users/jerichocalibuso/sp-app/app/routes/error.tsx\";\nimport * as route22 from \"/Users/jerichocalibuso/sp-app/app/routes/index.tsx\";\nimport * as route23 from \"/Users/jerichocalibuso/sp-app/app/routes/sales.tsx\";\nimport * as route24 from \"/Users/jerichocalibuso/sp-app/app/routes/beef.tsx\";\nimport * as route25 from \"/Users/jerichocalibuso/sp-app/app/routes/cart.tsx\";\nimport * as route26 from \"/Users/jerichocalibuso/sp-app/app/routes/pork.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/manage-products/$productId.upload-image\": {\n      id: \"routes/manage-products/$productId.upload-image\",\n      parentId: \"root\",\n      path: \"manage-products/:productId/upload-image\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/auth/$provider.callback\": {\n      id: \"routes/auth/$provider.callback\",\n      parentId: \"root\",\n      path: \"auth/:provider/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/order-history/$orderId\": {\n      id: \"routes/order-history/$orderId\",\n      parentId: \"root\",\n      path: \"order-history/:orderId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/order-success.$orderId\": {\n      id: \"routes/order-success.$orderId\",\n      parentId: \"root\",\n      path: \"order-success/:orderId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/manage-products/index\": {\n      id: \"routes/manage-products/index\",\n      parentId: \"root\",\n      path: \"manage-products\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/order-history/index\": {\n      id: \"routes/order-history/index\",\n      parentId: \"root\",\n      path: \"order-history\",\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/cloudinary-upload\": {\n      id: \"routes/cloudinary-upload\",\n      parentId: \"root\",\n      path: \"cloudinary-upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/assigned-orders\": {\n      id: \"routes/assigned-orders\",\n      parentId: \"root\",\n      path: \"assigned-orders\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/auth/$provider\": {\n      id: \"routes/auth/$provider\",\n      parentId: \"root\",\n      path: \"auth/:provider\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/products/index\": {\n      id: \"routes/products/index\",\n      parentId: \"root\",\n      path: \"products\",\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/create-orders\": {\n      id: \"routes/create-orders\",\n      parentId: \"root\",\n      path: \"create-orders\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/manage-orders\": {\n      id: \"routes/manage-orders\",\n      parentId: \"root\",\n      path: \"manage-orders\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/manage-users\": {\n      id: \"routes/manage-users\",\n      parentId: \"root\",\n      path: \"manage-users\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/products/$id\": {\n      id: \"routes/products/$id\",\n      parentId: \"root\",\n      path: \"products/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/unauthorized\": {\n      id: \"routes/unauthorized\",\n      parentId: \"root\",\n      path: \"unauthorized\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/checkout\": {\n      id: \"routes/checkout\",\n      parentId: \"root\",\n      path: \"checkout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/chicken\": {\n      id: \"routes/chicken\",\n      parentId: \"root\",\n      path: \"chicken\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/signout\": {\n      id: \"routes/signout\",\n      parentId: \"root\",\n      path: \"signout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/signin\": {\n      id: \"routes/signin\",\n      parentId: \"root\",\n      path: \"signin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/error\": {\n      id: \"routes/error\",\n      parentId: \"root\",\n      path: \"error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/sales\": {\n      id: \"routes/sales\",\n      parentId: \"root\",\n      path: \"sales\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/beef\": {\n      id: \"routes/beef\",\n      parentId: \"root\",\n      path: \"beef\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/cart\": {\n      id: \"routes/cart\",\n      parentId: \"root\",\n      path: \"cart\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/pork\": {\n      id: \"routes/pork\",\n      parentId: \"root\",\n      path: \"pork\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    }\n  };", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  json,\n  Links,\n  LiveReload,\n  LoaderFunction,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from 'remix'\nimport type { MetaFunction } from 'remix'\nimport styles from './tailwind.css'\nimport nprogress from './styles/nprogress.css'\nimport Navbar from './components/Navbar'\nimport Error from './components/Error'\nimport Footer from './components/Footer'\nimport { authenticator } from './services/auth.server'\n\nimport nProgressStyles from 'nprogress/nprogress.css'\nimport { useNProgress } from './hooks/useNProgress'\nimport { Role } from '@prisma/client'\nimport { db } from './utils/db.server'\n\nexport function links() {\n  return [\n    { rel: 'stylesheet', href: styles },\n    { rel: 'icon', type: 'image/svg', href: '/images/logo.png' },\n    { rel: 'stylesheet', href: nProgressStyles },\n    { rel: 'stylesheet', href: nprogress },\n  ]\n}\n\nexport const meta: MetaFunction = () => {\n  return { title: 'Camille Meat Shop' }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // If the user is already authenticated redirect to /dashboard directly\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.id && user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user.id,\n        status: 'IN_CART',\n      },\n    })\n\n    return json({ user, currentOrder })\n  }\n\n  return json({ user })\n}\n\nexport default function App() {\n  const { user, currentOrder } = useLoaderData()\n\n  useNProgress()\n\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width,initial-scale=1' />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div>\n          <Navbar {...{ user, currentOrder }} />\n          <Outlet />\n          <Footer />\n        </div>\n\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  )\n}\n\nexport function ErrorBoundary() {\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <Links />\n      </head>\n      <body>\n        <Error />\n        {process.env.NODE_ENV === 'development' ? <LiveReload /> : null}\n      </body>\n    </html>\n  )\n}\n", "import { Fragment, useState } from 'react'\nimport { Dialog, Menu, Popover, Tab, Transition } from '@headlessui/react'\nimport {\n  ChevronDownIcon,\n  MenuIcon,\n  SearchIcon,\n  ShoppingCartIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { Link, LoaderFunction } from 'remix'\nimport { Order, Role, User } from '@prisma/client'\nimport { ArrowRightIcon } from '@heroicons/react/solid'\nimport AccountDropdown from './AccountDropdown'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\nconst navigation = {\n  pages: [\n    { name: 'All Products', href: '/products' },\n    { name: 'Chicken', href: '/chicken' },\n    { name: 'Pork', href: '/pork' },\n    { name: 'Beef', href: '/beef' },\n  ],\n}\n\ntype NavbarProps = {\n  user: User | null\n  currentOrder: Order | null\n}\n\nexport default function Navbar({ user, currentOrder }: NavbarProps) {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\n  return (\n    <>\n      <Transition.Root show={mobileMenuOpen} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-50 flex lg:hidden'\n          onClose={setMobileMenuOpen}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter='transition-opacity ease-linear duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='transition-opacity ease-linear duration-300'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-black bg-opacity-25' />\n          </Transition.Child>\n\n          <Transition.Child\n            as={Fragment}\n            enter='transition ease-in-out duration-300 transform'\n            enterFrom='-translate-x-full'\n            enterTo='translate-x-0'\n            leave='transition ease-in-out duration-300 transform'\n            leaveFrom='translate-x-0'\n            leaveTo='-translate-x-full'\n          >\n            <div className='relative flex w-full max-w-xs flex-col overflow-y-auto bg-white pb-12 shadow-xl'>\n              <div className='flex px-4 pt-5 pb-2.5'>\n                <button\n                  type='button'\n                  className='-m-2 inline-flex items-center justify-center rounded-md p-2 text-gray-700 hover:text-red-500'\n                  onClick={() => setMobileMenuOpen(false)}\n                >\n                  <span className='sr-only'>Close menu</span>\n                  <XIcon className='h-6 w-6' aria-hidden='true' />\n                </button>\n              </div>\n\n              {/* Links */}\n              <Tab.Group as='div' className='mt-2'>\n                <div className='border-b border-gray-200'></div>\n                <Tab.Panels as={Fragment}></Tab.Panels>\n              </Tab.Group>\n\n              <div className='space-y-6 border-t border-gray-200 py-6 px-4'>\n                {user?.role === Role.RIDER ? (\n                  <Link\n                    to={'/assigned-orders'}\n                    className='-m-2 block p-2 font-medium text-gray-900'\n                  >\n                    Assgined Orders\n                  </Link>\n                ) : (\n                  navigation.pages.map((page) => (\n                    <div key={page.name} className='flow-root'>\n                      <Link\n                        to={page.href}\n                        className='-m-2 block p-2 font-medium text-gray-900'\n                      >\n                        {page.name}\n                      </Link>\n                    </div>\n                  ))\n                )}\n              </div>\n\n              <div className='space-y-6 border-t border-gray-200 py-6 px-4'>\n                <div className='flow-root'>\n                  <Link\n                    to='#'\n                    className='-m-2 block p-2 font-medium text-gray-900'\n                  >\n                    Sign in\n                  </Link>\n                </div>\n                <div className='flow-root'>\n                  <Link\n                    to='#'\n                    className='-m-2 block p-2 font-medium text-gray-900'\n                  >\n                    Sign Up\n                  </Link>\n                </div>\n              </div>\n\n              <div className='space-y-6 border-t border-gray-200 py-6 px-4'></div>\n            </div>\n          </Transition.Child>\n        </Dialog>\n      </Transition.Root>\n\n      <header className='relative'>\n        <nav aria-label='Top'>\n          {/* Secondary navigation */}\n          <div className='fixed top-0 left-0 right-0 z-40 border-b border-gray-200 bg-white'>\n            <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>\n              <div className=''>\n                <div className='flex h-16 items-center justify-between'>\n                  {/* Logo (lg+) */}\n                  <div className='hidden lg:flex lg:items-center'>\n                    <Link to='/'>\n                      <span className='sr-only'>Camille Meat Shop</span>\n                      <img\n                        className='h-8 w-auto'\n                        src='/images/logo.png'\n                        alt='Camille Meat Shop Logo'\n                      />\n                    </Link>\n                  </div>\n\n                  <div className='hidden h-full lg:flex'>\n                    {/* Mega menus */}\n                    <Popover.Group className='ml-8'>\n                      <div className='flex h-full justify-center space-x-8'>\n                        {user?.role === Role.RIDER ? (\n                          <Link\n                            to={'/assigned-orders'}\n                            className='flex items-center text-sm font-medium text-gray-700 hover:text-red-600'\n                          >\n                            Assgined Orders\n                          </Link>\n                        ) : (\n                          navigation.pages.map((page) => (\n                            <Link\n                              key={page.name}\n                              to={page.href}\n                              className='flex items-center text-sm font-medium text-gray-700 hover:text-red-600'\n                            >\n                              {page.name}\n                            </Link>\n                          ))\n                        )}\n                      </div>\n                    </Popover.Group>\n                  </div>\n\n                  {/* Mobile menu and search (lg-) */}\n                  <div className='flex flex-1 items-center  lg:hidden'>\n                    <button\n                      type='button'\n                      className='-ml-2 rounded-md bg-white p-2 text-gray-700 hover:text-red-500'\n                      onClick={() => {\n                        setMobileMenuOpen(true)\n                      }}\n                    >\n                      <span className='sr-only'>Open menu</span>\n                      <MenuIcon className='h-6 w-6' aria-hidden='true' />\n                    </button>\n\n                    {/* Search */}\n                  </div>\n\n                  {/* Logo (lg-) */}\n                  <Link to='/' className='lg:hidden'>\n                    <span className='sr-only'>Camille Meat Shop</span>\n                    <img src='/images/logo.png' alt='' className='h-8 w-auto' />\n                  </Link>\n\n                  <div className='flex flex-1 items-center justify-end'>\n                    <div className='flex items-center lg:ml-8'>\n                      <div className='flex space-x-8'></div>\n\n                      <div className='flex space-x-6'>\n                        {user?.role === Role.CUSTOMER ? (\n                          <Link to='/cart' className='group  flex items-center'>\n                            <ShoppingCartIcon\n                              className='h-6 w-6 flex-shrink-0 text-gray-700 group-hover:text-red-600'\n                              aria-hidden='true'\n                            />\n                            <span className='ml-2 text-sm font-medium text-gray-700 group-hover:text-red-600'>\n                              {currentOrder?.productIds?.length || 0}\n                            </span>\n                            <span className='sr-only'>\n                              items in cart, view cart\n                            </span>\n                          </Link>\n                        ) : null}\n                      </div>\n\n                      <div className='hidden lg:flex'>\n                        <span\n                          className='mx-4 h-6 w-px bg-gray-200 lg:mx-6'\n                          aria-hidden='true'\n                        />\n\n                        {/* My Account or Sign in */}\n                        {user ? (\n                          <AccountDropdown user={user} />\n                        ) : (\n                          <Link\n                            to='/signin'\n                            className='group -m-2 p-2 text-gray-700 hover:text-red-600'\n                          >\n                            <div className='hidden content-center space-x-2 lg:flex'>\n                              <span className='sr-only'>Sign in</span>\n                              Sign in <ArrowRightIcon className='w-3' />\n                            </div>\n                          </Link>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </header>\n    </>\n  )\n}\n", "import { Menu, Transition } from '@headlessui/react'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\nimport { Role, User } from '@prisma/client'\nimport { Fragment } from 'react'\nimport { Form, Link } from 'remix'\nimport classNames from '~/utils/classNames'\n\ninterface MenuItem {\n  label: string\n  route: string\n}\n\nconst adminMenuItems: MenuItem[] = [\n  {\n    label: 'Manage Users',\n    route: '/manage-users',\n  },\n  {\n    label: 'Manage Products',\n    route: '/manage-products',\n  },\n  {\n    label: 'Manage Orders',\n    route: '/manage-orders',\n  },\n  {\n    label: 'Sales',\n    route: '/sales',\n  },\n]\n\nconst customerMenuItems: MenuItem[] = [\n  {\n    label: 'Order History',\n    route: '/order-history',\n  },\n]\n\nconst riderMenuItems: MenuItem[] = [\n  {\n    label: 'Assigned Orders',\n    route: '/assigned-orders',\n  },\n]\nconst getMenuItems = (role: Role) => {\n  if (role === Role.ADMIN) {\n    return adminMenuItems.map((item) => (\n      <Menu.Item key={item.route}>\n        {({ active }) => (\n          <Link\n            to={item.route}\n            className={classNames(\n              active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n              'block px-4 py-2 text-sm'\n            )}\n          >\n            {item.label}\n          </Link>\n        )}\n      </Menu.Item>\n    ))\n  } else if (role === Role.RIDER) {\n    return riderMenuItems.map((item) => (\n      <Menu.Item key={item.route}>\n        {({ active }) => (\n          <Link\n            to={item.route}\n            className={classNames(\n              active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n              'block px-4 py-2 text-sm'\n            )}\n          >\n            {item.label}\n          </Link>\n        )}\n      </Menu.Item>\n    ))\n  } else if (role === Role.CUSTOMER) {\n    return customerMenuItems.map((item) => (\n      <Menu.Item key={item.route}>\n        {({ active }) => (\n          <Link\n            to={item.route}\n            className={classNames(\n              active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n              'block px-4 py-2 text-sm'\n            )}\n          >\n            {item.label}\n          </Link>\n        )}\n      </Menu.Item>\n    ))\n  }\n}\n\nexport default function AccountDropdown({ user }: { user: User }) {\n  const { role, name, username, email } = user\n  return (\n    <Menu as='div' className='hidden text-left lg:relative lg:inline-block'>\n      <div>\n        <Menu.Button className='inline-flex w-full justify-center rounded-md  text-sm font-medium text-gray-700 hover:text-red-500'>\n          My Account\n          <ChevronDownIcon\n            className='-mr-1 ml-2 mt-0.5 h-4 w-4'\n            aria-hidden='true'\n          />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter='transition ease-out duration-100'\n        enterFrom='transform opacity-0 scale-95'\n        enterTo='transform opacity-100 scale-100'\n        leave='transition ease-in duration-75'\n        leaveFrom='transform opacity-100 scale-100'\n        leaveTo='transform opacity-0 scale-95'\n      >\n        <Menu.Items className='absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>\n          <div className='px-4 py-3'>\n            <p className='text-sm'>Signed in as</p>\n            <p className='mt-0.5 truncate text-sm font-medium text-gray-900'>\n              {name || username || email}\n            </p>\n          </div>\n          <div className='py-1'>{getMenuItems(role)}</div>\n          <div className='py-1'>\n            <Menu.Item>\n              {({ active }) => (\n                <Link\n                  to='/signout'\n                  type='submit'\n                  className={classNames(\n                    active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                    'block w-full px-4 py-2 text-left text-sm'\n                  )}\n                >\n                  Sign out\n                </Link>\n              )}\n            </Menu.Item>\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n", "export default function classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n", "import { Link } from 'remix'\n\nexport default function Error() {\n  return (\n    <>\n      <div className='mt-16 flex min-h-full flex-col bg-white pt-16 pb-12'>\n        <main className='mx-auto flex w-full max-w-7xl flex-grow flex-col justify-center px-4 sm:px-6 lg:px-8'>\n          <div className='flex flex-shrink-0 justify-center'>\n            <Link to='/' className='inline-flex'>\n              <span className='sr-only'>Camille Meat Shop</span>\n              <img\n                className='h-12 w-auto'\n                src='/images/logo.png'\n                alt='Camille Meat Shop Logo'\n              />\n            </Link>\n          </div>\n          <div className='py-16'>\n            <div className='text-center'>\n              <p className='text-sm font-semibold uppercase tracking-wide text-red-600'>\n                error\n              </p>\n              <h1 className='mt-2 text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl'>\n                Page not found.\n              </h1>\n              <p className='mt-2 text-base text-gray-500'>\n                Sorry, we couldn\u2019t find the page you\u2019re looking for.\n              </p>\n              <div className='mt-6'>\n                <Link\n                  to='/'\n                  className='text-base font-medium text-red-600 hover:text-red-500'\n                >\n                  Go back home<span aria-hidden='true'> &rarr;</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </main>\n        <footer className='mx-auto w-full max-w-7xl flex-shrink-0 px-4 sm:px-6 lg:px-8'>\n          <nav className='flex justify-center space-x-4'>\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Contact Support\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Status\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Twitter\n            </a>\n          </nav>\n        </footer>\n      </div>\n    </>\n  )\n}\n", "import { Link } from 'remix'\n\nconst footerNavigation = {\n  products: [\n    { name: 'All Products', href: '/products' },\n    { name: 'Chicken', href: '/chicken' },\n    { name: 'Pork', href: '/pork' },\n    { name: 'Beef', href: '/beef' },\n  ],\n  customerService: [\n    { name: 'Contact', href: '#footer' },\n    { name: 'Shipping', href: '#footer' },\n    { name: 'Returns', href: '#footer' },\n    { name: 'Warranty', href: '#footer' },\n  ],\n  company: [\n    { name: 'Who we are', href: '#footer' },\n    { name: 'Careers', href: '#footer' },\n    { name: 'Terms & Conditions', href: '#footer' },\n    { name: 'Privacy', href: '#footer' },\n  ],\n  legal: [\n    { name: 'Terms of Service', href: '#footer' },\n    { name: 'Return Policy', href: '#footer' },\n    { name: 'Privacy Policy', href: '#footer' },\n    { name: 'Delivery Policy', href: '#footer' },\n  ],\n  bottomLinks: [\n    { name: 'Privacy', href: '#footer' },\n    { name: 'Terms', href: '#footer' },\n  ],\n}\nexport default function Footer() {\n  return (\n    <footer aria-labelledby='footer-heading' className='bg-white'>\n      <h2 id='footer' className='sr-only'>\n        Footer\n      </h2>\n      <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>\n        <div className='border-t border-gray-200'>\n          <div className='pt-16 pb-20'>\n            <div className='md:flex md:justify-center'>\n              <img\n                src='/images/logo.png'\n                alt='Camille Meat Shop Logo'\n                className='h-8 w-auto'\n              />\n            </div>\n            <div className='md:flex md:justify-center'>\n              <h2 className='text-md mt-2 font-bold text-gray-900'>\n                Camille Meat Shop\n              </h2>\n            </div>\n\n            <div className='mx-auto mt-16 max-w-5xl xl:grid xl:grid-cols-2 xl:gap-8'>\n              <div className='grid grid-cols-2 gap-8 xl:col-span-2'>\n                <div className='space-y-12 md:grid md:grid-cols-2 md:gap-8 md:space-y-0'>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>\n                      Products\n                    </h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.products.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <Link\n                            to={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>\n                      Customer Service\n                    </h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.customerService.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <a\n                            href={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n                <div className='space-y-12 md:grid md:grid-cols-2 md:gap-8 md:space-y-0'>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>\n                      Company\n                    </h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.company.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <a\n                            href={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>Legal</h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.legal.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <a\n                            href={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='py-10 md:flex md:items-center md:justify-between'>\n          <div className='text-center md:text-left'>\n            <p className='text-sm text-gray-500'>\n              &copy; {new Date().getFullYear()} All Rights Reserved\n            </p>\n          </div>\n\n          <div className='mt-4 flex items-center justify-center md:mt-0'>\n            <div className='flex space-x-8'>\n              {footerNavigation.bottomLinks.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className='text-sm text-gray-500 hover:text-red-500'\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n", "// app/services/auth.server.ts\nimport { Role, User } from '@prisma/client'\nimport { Authenticator } from 'remix-auth'\nimport { sessionStorage } from '~/services/session.server'\nimport { FormStrategy } from 'remix-auth-form'\nimport invariant from 'tiny-invariant'\nimport bcrypt from 'bcryptjs'\nimport { db } from '~/utils/db.server'\nimport {\n  FacebookStrategy,\n  GoogleStrategy,\n  SocialsProvider,\n} from 'remix-auth-socials'\n\n// Create an instance of the authenticator, pass a generic with what\n// strategies will return and will store in the session\nexport let authenticator = new Authenticator<User>(sessionStorage, {\n  throwOnError: true,\n})\n\n// LOGIN METHOD\n\nauthenticator.use(\n  new FormStrategy(async ({ form }) => {\n    const username = form.get('username')\n    const password = form.get('password')\n\n    invariant(typeof username === 'string', 'username must be a string')\n    invariant(typeof password === 'string', 'password must be a string')\n\n    const user = await db.user.findUnique({ where: { username } })\n    if (!user) throw new Error('Invalid credentials')\n\n    if (!user.password) throw new Error('User does not have a password')\n\n    const isValidPassword = await bcrypt.compare(password, user.password)\n\n    if (!isValidPassword) {\n      throw new Error('Invalid credentials')\n    }\n\n    return user\n  }),\n  'user-pass-signin'\n)\n\n// SIGNUP METHODS\nauthenticator.use(\n  new FormStrategy(async ({ form, context }) => {\n    // Here you can use `form` to access and input values from the form.\n    // and also use `context` to access more things from the server\n    const name = form.get('name')\n    const username = form.get('username')\n    const password = form.get('password')\n\n    // You can validate the inputs however you want\n    invariant(typeof name === 'string', 'name must be a string')\n    invariant(name.length > 0, 'name must not be empty')\n\n    invariant(typeof username === 'string', 'username must be a string')\n    invariant(username.length > 0, 'username must not be empty')\n\n    invariant(typeof password === 'string', 'password must be a string')\n    invariant(password.length > 0, 'password must not be empty')\n\n    const existingUser = await db.user.findUnique({ where: { username } })\n    if (existingUser) throw new Error('Username is already used')\n\n    // And if you have a password you should hash it\n    const hashedPassword = await bcrypt.hash(password, 10)\n\n    // And finally, you can find, or create, the user\n    const user = await db.user.create({\n      data: { username, password: hashedPassword, role: Role.CUSTOMER, name },\n    })\n\n    // And return the user as the Authenticator expects it\n    return user\n  }),\n  'user-pass-signup'\n)\n\ninvariant(process.env.GOOGLE_CLIENT_ID, 'Google OAuth Client ID is invalid')\ninvariant(\n  process.env.GOOGLE_CLIENT_SECRET,\n  'Google OAuth Client Secret is invalid'\n)\ninvariant(process.env.FACEBOOK_CLIENT_ID, 'Facebook OAuth Client ID is invalid')\ninvariant(\n  process.env.FACEBOOK_CLIENT_SECRET,\n  'Facebook OAuth Client Secret is invalid'\n)\n\n// Create an instance of the authenticator, pass a generic <User> type which the\n// strategies will return (this will be stored in the session)\nauthenticator.use(\n  new GoogleStrategy(\n    {\n      clientID: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n      callbackURL: `https://camillemeat.shop/auth/${SocialsProvider.GOOGLE}/callback`,\n    },\n    async ({ profile }) => {\n      const email = profile?.emails?.pop()?.value || ''\n      const name =\n        profile?.displayName ||\n        `${profile?.name?.givenName} ${profile?.name?.familyName}` ||\n        ''\n      const profileIconUrl = profile?.photos?.pop()?.value || ''\n      const provider = profile?.provider || ''\n      const providerId = profile?.id || ''\n      return await db.user.upsert({\n        where: {\n          providerId,\n        },\n        update: {},\n        create: {\n          email,\n          name,\n          profileIconUrl,\n          providerId,\n          provider,\n          role: Role.CUSTOMER,\n        },\n      })\n    }\n  )\n)\n\nauthenticator.use(\n  new FacebookStrategy(\n    {\n      clientID: process.env.FACEBOOK_CLIENT_ID,\n      clientSecret: process.env.FACEBOOK_CLIENT_SECRET,\n      callbackURL: `https://camillemeat.shop/auth/${SocialsProvider.FACEBOOK}/callback`,\n    },\n    async ({ profile }) => {\n      const email = profile?.emails?.pop()?.value || ''\n      const name =\n        profile?.displayName ||\n        `${profile?.name?.givenName} ${profile?.name?.familyName}` ||\n        ''\n      const profileIconUrl = profile?.photos?.pop()?.value || ''\n      const provider = profile?.provider || ''\n      const providerId = profile?.id || ''\n      return await db.user.upsert({\n        where: {\n          providerId,\n        },\n        update: {},\n        create: {\n          email,\n          name,\n          profileIconUrl,\n          providerId,\n          provider,\n          role: Role.CUSTOMER,\n        },\n      })\n    }\n  )\n)\n", "// app/services/session.server.ts\n\nimport { createCookieSessionStorage } from '@remix-run/node'\n\n// export the whole sessionStorage object\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '_session', // use any name you want here\n    sameSite: 'lax', // this helps with CSRF\n    path: '/', // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: ['s3cr3t'], // replace this with an actual secret\n    secure: process.env.NODE_ENV === 'production', // enable this in prod only\n  },\n})\n\n// you can also export the methods individually for your own usage\nexport let { commitSession, destroySession } = sessionStorage\n\nexport function getSession(request: Request) {\n  return sessionStorage.getSession(request.headers.get('Cookie'))\n}\n", "import { PrismaClient } from '@prisma/client'\n\nlet db: PrismaClient\n\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === 'production') {\n  db = new PrismaClient()\n  db.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  db = global.__db\n}\n\nexport { db }\n", "import nProgress from 'nprogress'\nimport { useEffect } from 'react'\nimport { useTransition } from 'remix'\n\nexport function useNProgress() {\n  let transition = useTransition()\n  nProgress.configure({\n    showSpinner: false,\n    easing: 'ease',\n  })\n  useEffect(() => {\n    if (transition.state === 'idle') nProgress.done()\n    else nProgress.start()\n  }, [transition.state])\n}\n", "import {\n  ActionFunction,\n  Form,\n  LoaderFunction,\n  redirect,\n  unstable_parseMultipartFormData,\n  UploadHandler,\n  useLoaderData,\n  useTransition,\n} from 'remix'\nimport { deleteImage, uploadImage } from '~/utils/utils.server'\n\nimport { useState } from 'react'\nimport { FileError, useDropzone } from 'react-dropzone'\nimport { db } from '~/utils/db.server'\nimport invariant from 'tiny-invariant'\nimport { Link } from '@remix-run/react'\n\ninterface CustomFile extends File {\n  preview?: string\n  path?: string\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const uploadHandler: UploadHandler = async ({ name, stream }) => {\n    if (name !== 'image') {\n      stream.resume()\n      return\n    }\n    const uploadedImage: any = await uploadImage(stream)\n    return uploadedImage.secure_url\n  }\n\n  const formData = await unstable_parseMultipartFormData(request, uploadHandler)\n\n  const imageUrl = formData.get('image') as string\n  const id = params?.productId || ''\n\n  invariant(id, 'Product id error')\n  invariant(imageUrl, 'Image upload error')\n\n  const product = await db.product.findFirst({\n    where: { id },\n    select: {\n      imageUrl: true,\n    },\n  })\n\n  if (product?.imageUrl) {\n    await deleteImage(imageUrl)\n  }\n\n  await db.product.update({\n    where: { id },\n    data: {\n      imageUrl,\n    },\n  })\n\n  return redirect('/manage-products')\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const data = db.product.findFirst({\n    where: {\n      id: params.productId,\n    },\n  })\n  return data\n}\n\nexport default function UploadImageRoute() {\n  const transition = useTransition()\n  const product = useLoaderData()\n  const [files, setFiles] = useState<CustomFile[]>([])\n  const { acceptedFiles, fileRejections, getRootProps, getInputProps } =\n    useDropzone({\n      accept: 'image/jpeg,image/png',\n      maxFiles: 1,\n      maxSize: 10000000,\n      onDropAccepted: (acceptedFiles) => {\n        setFiles(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        )\n      },\n    })\n\n  const acceptedFileItems = acceptedFiles.map((file: CustomFile) => {\n    return files.map((file) => (\n      <div key={file.name}>\n        <img\n          src={file.preview}\n          alt={file.name}\n          className='my-2 h-64 w-64 object-cover object-center sm:rounded-lg'\n        />\n        <p>\n          {file.path} ({(file.size / 1000000)?.toFixed(2)} MB)\n        </p>\n      </div>\n    ))\n  })\n\n  const showErrors = (errors: FileError[]) => {\n    return errors.map((error) => {\n      if (error.code === 'file-too-large') {\n        return <p>- File size is larger than 10MB.</p>\n      } else if (error.code === 'file-invapd-type') {\n        return <p>- Vapd file types are .jpeg, .jpg, .png files.</p>\n      } else if (error.code === 'too-many-files') {\n        return <p>- You can only upload a single file.</p>\n      }\n    })\n  }\n\n  const fileRejectionItems = fileRejections.map(\n    ({ file, errors }: { file: CustomFile; errors: FileError[] }) => (\n      <p key={file.path}>\n        {`${file.path} (${(file.size / 1000000)?.toFixed(2)} MB)`}\n        <p>{...showErrors(errors)}</p>\n      </p>\n    )\n  )\n  return (\n    <div className='flex items-center justify-center py-32'>\n      <Form id='imageUpload' encType='multipart/form-data' method='post'>\n        <input type='hidden' name='productId' value={product?.id} />\n\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input\n            id='image-input'\n            type='file'\n            name='image'\n            {...getInputProps({\n              required: true,\n            })}\n          />\n\n          <div>\n            <label className='block text-sm font-medium text-gray-900'>\n              New product image\n            </label>\n            {/* <div\n              className={`mt-1 flex justify-center rounded-md border-2 border-dashed ${\n                error ? 'border-red-500' : 'border-gray-400'\n              } px-6 pt-5 pb-6`}\n            > */}\n            <div\n              className={`mt-1 flex justify-center rounded-md border-2 border-dashed border-gray-400 px-6 pt-5 pb-6`}\n            >\n              <div className='space-y-1 text-center'>\n                <svg\n                  className={`mx-auto h-12 w-12 text-gray-400`}\n                  stroke='currentColor'\n                  fill='none'\n                  viewBox='0 0 48 48'\n                  aria-hidden='true'\n                >\n                  <path\n                    d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\n                    strokeWidth={2}\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                </svg>\n                <div className='flex text-sm text-gray-600'>\n                  <label\n                    htmlFor='file-upload'\n                    className='focus-within:outpne-none relative cursor-pointer rounded-md bg-white font-medium text-red-600 focus-within:ring-2 focus-within:ring-red-500 focus-within:ring-offset-2 hover:text-red-500'\n                  >\n                    <span>Click to select an image</span>\n                  </label>\n                </div>\n                <p className='text-xs text-gray-500'>\n                  PNG, JPG, JPEG up to 10MB\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {acceptedFileItems}\n          {fileRejections.length > 0 ? (\n            <div className='mt-4'>\n              <p className='text-sm text-red-500'>File input errors:</p>\n              <ul className='text-sm text-red-500'>{...fileRejectionItems}</ul>\n            </div>\n          ) : null}\n        </div>\n        <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n          <button\n            type='submit'\n            className='inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm'\n          >\n            {transition.submission ? (\n              <div className='flex w-12 items-stretch justify-center'>\n                <svg\n                  className='w-5 animate-spin text-white'\n                  xmlns='http://www.w3.org/2000/svg'\n                  fill='none'\n                  viewBox='0 0 24 24'\n                >\n                  <circle\n                    className='opacity-25'\n                    cx='12'\n                    cy='12'\n                    r='10'\n                    stroke='currentColor'\n                    strokeWidth='4'\n                  ></circle>\n                  <path\n                    className='opacity-75'\n                    fill='currentColor'\n                    d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                  ></path>\n                </svg>\n              </div>\n            ) : (\n              'Submit'\n            )}\n          </button>\n          <Link\n            to='/manage-products'\n            className='mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm'\n          >\n            Cancel\n          </Link>\n        </div>\n      </Form>\n    </div>\n  )\n}\n", "import cloudinary from 'cloudinary'\nimport { json } from 'remix'\nimport type { Stream } from 'stream'\n\ncloudinary.v2.config({\n  cloud_name: process.env.CLOUD_NAME,\n  api_key: process.env.API_KEY,\n  api_secret: process.env.API_SECRET,\n})\n\nasync function uploadImage(fileStream: Stream) {\n  return new Promise((resolve, reject) => {\n    const uploadStream = cloudinary.v2.uploader.upload_stream(\n      {\n        folder: 'sp-app',\n      },\n      (error, result) => {\n        if (error) {\n          reject(error)\n        }\n        resolve(result)\n      }\n    )\n    fileStream.pipe(uploadStream)\n  })\n}\n\nasync function deleteImage(imageUrl: string) {\n  const publicId = imageUrl.split('/').pop()?.split('.')?.shift() as string\n  return new Promise((resolve, reject) => {\n    const destroyedImageInfo = cloudinary.v2.uploader.destroy(\n      publicId,\n      (error, result) => {\n        if (error) {\n          reject(error)\n        }\n        console.log('image deleted successfully')\n        resolve(result)\n      }\n    )\n    return destroyedImageInfo\n  })\n}\n\nconst badRequest = (data: any) => json(data, { status: 400 })\n\nexport { uploadImage, deleteImage, badRequest }\n", "import { ActionFunction, LoaderFunction } from 'remix'\nimport invariant from 'tiny-invariant'\nimport { authenticator } from '~/services/auth.server'\n\nexport let loader: LoaderFunction = ({ request, params }) => {\n  invariant(params.provider, 'auth provider is undefined')\n\n  return authenticator.authenticate(params.provider, request, {\n    successRedirect: '/',\n    failureRedirect: '/signin',\n  })\n}\n", "import { Product, Role } from '@prisma/client'\nimport { LoaderFunction, redirect } from '@remix-run/node'\nimport { useLoaderData, Link } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\n\nimport { db } from '~/utils/db.server'\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { orderId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n      userId: user?.id,\n    },\n  })\n\n  if (!order) redirect('/cart')\n\n  const products = await db.product.findMany({\n    where: {\n      id: {\n        in: order?.productIds || [],\n      },\n    },\n  })\n  return { order, products }\n}\n\nexport default function OrderDetailsPage() {\n  const { order, products } = useLoaderData()\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-xl'>\n          <h1 className='mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl'>\n            Order details\n          </h1>\n          <p className='mt-2 text-base text-gray-500'>\n            {new Date(order?.paidAt)?.toLocaleDateString('en-us', {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n            }) || ''}\n          </p>\n\n          <dl className='mt-12 text-sm font-medium'>\n            <dt className='text-gray-900'>Order ID</dt>\n            <dd className='mt-2 text-red-500'>{order?.id || ''}</dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order status</dt>\n            <dd className='mt-2 text-red-500'>{order?.status || ''}</dd>\n          </dl>\n        </div>\n\n        <div className='mt-10 border-t border-gray-200'>\n          <h2 className='sr-only'>Your order</h2>\n\n          <h3 className='sr-only'>Items</h3>\n          {products.map((product: Product) => {\n            const quantity = order?.productIds.filter((id: string) => {\n              return product.id?.toString() === id\n            })?.length\n            return (\n              <div\n                key={product.id}\n                className='flex space-x-6 border-b border-gray-200 py-10'\n              >\n                <Link to={`/products/${product?.id}`}>\n                  <div className='h-20 w-20 flex-none rounded-lg bg-gray-100 object-cover object-center sm:h-40 sm:w-40'>\n                    <img loading='lazy' src={product?.imageUrl || ''} />\n                  </div>\n                </Link>\n\n                <div className='flex flex-auto flex-col'>\n                  <div>\n                    <h4 className='font-medium text-gray-900 hover:text-red-500'>\n                      <Link to={`/products/${product?.id}`}>\n                        {product.name}\n                      </Link>\n                    </h4>\n                    <p className='mt-2 text-sm text-gray-600'>\n                      {product.description}\n                    </p>\n                  </div>\n                  <div className='mt-6 flex flex-1 items-end'>\n                    <dl className='flex space-x-4 divide-x divide-gray-200 text-sm sm:space-x-6'>\n                      <div className='flex'>\n                        <dt className='font-medium text-gray-900'>Quantity</dt>\n                        <dd className='ml-2 text-gray-700'>{quantity}</dd>\n                      </div>\n                      <div className='flex pl-4 sm:pl-6'>\n                        <dt className='font-medium text-gray-900'>Price</dt>\n                        <dd className='ml-2 text-gray-700'>\u20B1{product.price}</dd>\n                      </div>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n\n          <div className=''>\n            <h3 className='sr-only'>Your information</h3>\n\n            <h4 className='sr-only'>Addresses</h4>\n            <dl className='grid grid-cols-2 gap-x-6 py-10 text-sm'>\n              <div>\n                <dt className='font-medium text-gray-900'>\n                  Delivery information\n                </dt>\n                <dd className='mt-2 text-gray-700'>\n                  <address className='not-italic'>\n                    <span className='block'>Address</span>\n                    <span className='block'>City, Cavite</span>\n                    <span className='block'>Contact Person</span>\n                    <span className='block'>09121231234</span>\n                  </address>\n                </dd>\n              </div>\n              <div>\n                <dt className='font-medium text-gray-900'>Payment method</dt>\n                <dd className='mt-2 text-gray-700'>\n                  <div className='not-italic'>\n                    <span className='block'>Credit / debit card</span>\n                  </div>\n                </dd>\n              </div>\n            </dl>\n\n            <h3 className='sr-only'>Summary</h3>\n\n            <dl className='space-y-6 border-t border-gray-200 pt-10 text-sm'>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Subtotal</dt>\n                <dd className='text-gray-700'>\u20B1{order.amount}</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='flex font-medium text-gray-900'>\n                  Discount\n                  <span className='ml-2 rounded-full bg-red-500 py-0.5 px-2 text-xs text-white'>\n                    Free Delivery\n                  </span>\n                </dt>\n                <dd className='text-gray-700'>-\u20B150</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Delivery</dt>\n                <dd className='text-gray-700'>$0</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Total</dt>\n                <dd className='text-gray-900'>\u20B1{order.amount}</dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { Order, Product, Role, Status } from '@prisma/client'\nimport { authenticator } from '~/services/auth.server'\nimport { LoaderFunction, redirect } from '@remix-run/node'\n\nimport {\n  createPayment,\n  retrievePaymentIntent,\n  retrieveSource,\n} from '~/services/paymongo.server'\nimport { db } from '~/utils/db.server'\nimport { Link, useLoaderData } from '@remix-run/react'\n\n/* This example requires Tailwind CSS v2.0+ */\nconst products = [\n  {\n    id: 1,\n    name: 'Cold Brew Bottle',\n    description:\n      'This glass bottle comes with a mesh insert for steeping tea or cold-brewing coffee. Pour from any angle and remove the top for easy cleaning.',\n    href: '#',\n    quantity: 1,\n    price: '$32.00',\n    imageSrc:\n      'https://tailwindui.com/img/ecommerce-images/confirmation-page-05-product-01.jpg',\n    imageAlt: 'Glass bottle with black plastic pour top and mesh insert.',\n  },\n  {\n    id: 1,\n    name: 'Cold Brew Bottle',\n    description:\n      'This glass bottle comes with a mesh insert for steeping tea or cold-brewing coffee. Pour from any angle and remove the top for easy cleaning.',\n    href: '#',\n    quantity: 1,\n    price: '$32.00',\n    imageSrc:\n      'https://tailwindui.com/img/ecommerce-images/confirmation-page-05-product-01.jpg',\n    imageAlt: 'Glass bottle with black plastic pour top and mesh insert.',\n  },\n  {\n    id: 1,\n    name: 'Cold Brew Bottle',\n    description:\n      'This glass bottle comes with a mesh insert for steeping tea or cold-brewing coffee. Pour from any angle and remove the top for easy cleaning.',\n    href: '#',\n    quantity: 1,\n    price: '$32.00',\n    imageSrc:\n      'https://tailwindui.com/img/ecommerce-images/confirmation-page-05-product-01.jpg',\n    imageAlt: 'Glass bottle with black plastic pour top and mesh insert.',\n  },\n]\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { orderId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  const currentOrder = await db.order.findFirst({\n    where: {\n      id: orderId,\n      userId: user?.id,\n    },\n  })\n\n  if (!currentOrder) redirect('/cart')\n\n  if (currentOrder?.sourceId && !currentOrder?.paidAt) {\n    const res = await retrieveSource(currentOrder?.sourceId)\n    if (!res.status) {\n      return redirect('/cart')\n    }\n\n    if (res.status === 'pending') {\n      return redirect(res.checkoutUrl)\n    } else if (res.status === 'chargeable') {\n      const paymentReference = await createPayment(\n        currentOrder.sourceId,\n        currentOrder?.amount\n      )\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentReference: paymentReference,\n          paidAt: new Date(),\n        },\n      })\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: currentOrder.productIds || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n      return redirect(`/order-success/${orderId}`)\n    }\n  }\n\n  if (currentOrder?.paymentIntentId && !currentOrder?.paidAt) {\n    const res = await retrievePaymentIntent(currentOrder?.paymentIntentId)\n\n    if (res.status === 'paid') {\n      const updatedOrder = await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentReference: res.paymentReference,\n          paidAt: new Date(),\n        },\n      })\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: updatedOrder.productIds || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n      return redirect(`/order-success/${orderId}`)\n    } else {\n      return redirect('/checkout?paymentFailed=true')\n    }\n  }\n\n  const products = await db.product.findMany({\n    where: {\n      id: {\n        in: currentOrder?.productIds || [],\n      },\n    },\n  })\n  return { currentOrder, products }\n}\n\nexport default function Example() {\n  const { currentOrder, products } = useLoaderData()\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-xl'>\n          <h1 className='text-sm font-semibold uppercase tracking-wide text-red-500'>\n            Order details\n          </h1>\n          <p className='mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl'>\n            It's on the way!\n          </p>\n          <p className='mt-2 text-base text-gray-500'>\n            Your order has been placed and will be delivered to you soon.\n          </p>\n\n          <dl className='mt-12 text-sm font-medium'>\n            <dt className='text-gray-900'>Order ID</dt>\n            <dd className='mt-2 text-red-500'>{currentOrder?.id || ''}</dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order status</dt>\n            <dd className='mt-2 text-red-500'>{currentOrder?.status || ''}</dd>\n          </dl>\n        </div>\n\n        <div className='mt-10 border-t border-gray-200'>\n          <h2 className='sr-only'>Your order</h2>\n\n          <h3 className='sr-only'>Items</h3>\n          {products.map((product: Product) => {\n            const quantity = currentOrder?.productIds.filter((id: string) => {\n              return product.id?.toString() === id\n            })?.length\n            return (\n              <div\n                key={product.id}\n                className='flex space-x-6 border-b border-gray-200 py-10'\n              >\n                <Link to={`/products/${product?.id}`}>\n                  <div className='h-20 w-20 flex-none rounded-lg bg-gray-100 object-cover object-center sm:h-40 sm:w-40'>\n                    <img loading='lazy' src={product?.imageUrl || ''} />\n                  </div>\n                </Link>\n\n                <div className='flex flex-auto flex-col'>\n                  <div>\n                    <h4 className='font-medium text-gray-900 hover:text-red-500'>\n                      <Link to={`/products/${product?.id}`}>\n                        {product.name}\n                      </Link>\n                    </h4>\n                    <p className='mt-2 text-sm text-gray-600'>\n                      {product.description}\n                    </p>\n                  </div>\n                  <div className='mt-6 flex flex-1 items-end'>\n                    <dl className='flex space-x-4 divide-x divide-gray-200 text-sm sm:space-x-6'>\n                      <div className='flex'>\n                        <dt className='font-medium text-gray-900'>Quantity</dt>\n                        <dd className='ml-2 text-gray-700'>{quantity}</dd>\n                      </div>\n                      <div className='flex pl-4 sm:pl-6'>\n                        <dt className='font-medium text-gray-900'>Price</dt>\n                        <dd className='ml-2 text-gray-700'>{product.price}</dd>\n                      </div>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n\n          <div className=''>\n            <h3 className='sr-only'>Your information</h3>\n\n            <h4 className='sr-only'>Addresses</h4>\n            <dl className='grid grid-cols-2 gap-x-6 py-10 text-sm'>\n              <div>\n                <dt className='font-medium text-gray-900'>\n                  Delivery information\n                </dt>\n                <dd className='mt-2 text-gray-700'>\n                  <address className='not-italic'>\n                    <span className='block'>Address</span>\n                    <span className='block'>City, Cavite</span>\n                    <span className='block'>Contact Person</span>\n                    <span className='block'>09121231234</span>\n                  </address>\n                </dd>\n              </div>\n              <div>\n                <dt className='font-medium text-gray-900'>Payment method</dt>\n                <dd className='mt-2 text-gray-700'>\n                  <div className='not-italic'>\n                    <span className='block'>Credit / debit card</span>\n                  </div>\n                </dd>\n              </div>\n            </dl>\n\n            <h3 className='sr-only'>Summary</h3>\n\n            <dl className='space-y-6 border-t border-gray-200 pt-10 text-sm'>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Subtotal</dt>\n                <dd className='text-gray-700'>\u20B150</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='flex font-medium text-gray-900'>\n                  Discount\n                  <span className='ml-2 rounded-full bg-red-500 py-0.5 px-2 text-xs text-white'>\n                    Free Delivery\n                  </span>\n                </dt>\n                <dd className='text-gray-700'>-\u20B150</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Delivery</dt>\n                <dd className='text-gray-700'>$0</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Total</dt>\n                <dd className='text-gray-900'>\u20B150</dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "const createPaymentIntent = async () => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: 10000,\n          payment_method_allowed: ['card'],\n          payment_method_options: { card: { request_three_d_secure: 'any' } },\n          currency: 'PHP',\n          capture_type: 'automatic',\n          statement_descriptor: 'Camille Meat Shop',\n          description: 'Camille Meat Shop',\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_intents',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nconst createPaymentMethod = async ({\n  cardNumber,\n  nameOnCard,\n  expiration,\n  cvc,\n  amount,\n}: PayCardArgs) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          type: 'card',\n          amount: amount * 100,\n          payment_method_allowed: ['card'],\n          payment_method_options: { card: { request_three_d_secure: 'any' } },\n          currency: 'PHP',\n          capture_type: 'automatic',\n          statement_descriptor: 'Camille Meat Shop',\n          description: 'Camille Meat Shop',\n          details: {\n            card_number: cardNumber,\n            exp_month: parseInt(expiration.split('/')[0]) || 12,\n            exp_year: parseInt(expiration.split('/')[1]) || 2022,\n            cvc: cvc,\n          },\n          billing: { name: nameOnCard, email: 'jerichocalibuso@gmail.com' },\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_methods',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nconst attachPaymentIntent = async (\n  paymentIntentId: string,\n  paymentMethodId: string,\n  clientKey: string\n) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          payment_method: `${paymentMethodId}`,\n          client_key: `${clientKey}`,\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    `https://api.paymongo.com/v1/payment_intents/${paymentIntentId}/attach`,\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nexport interface PayCardArgs {\n  cardNumber: string\n  nameOnCard: string\n  expiration: string\n  cvc: string\n  amount: number\n}\n\nexport const payCard = async ({\n  cardNumber,\n  nameOnCard,\n  expiration,\n  cvc,\n  amount,\n}: PayCardArgs) => {\n  const { data: paymentMethodData, errors: paymentMethodErrors } =\n    await createPaymentMethod({\n      cardNumber,\n      nameOnCard,\n      expiration,\n      cvc,\n      amount,\n    })\n\n  const { data: paymentIntentData, errors: paymentIntentErrors } =\n    await createPaymentIntent()\n\n  if (paymentMethodErrors?.length || paymentIntentErrors?.length) {\n    let errors: any[] = []\n    paymentMethodErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    paymentIntentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n\n    return { errors }\n  }\n\n  const clientKey = paymentIntentData.attributes.client_key\n  const paymentMethodId = paymentMethodData.id\n  const paymentIntentId = paymentIntentData.id\n\n  const {\n    data: paymentIntentAttachmentData,\n    errors: paymentIntentAttachmentErrors,\n  } = await attachPaymentIntent(paymentIntentId, paymentMethodId, clientKey)\n\n  if (paymentIntentAttachmentErrors?.length) {\n    let errors: any[] = []\n    paymentIntentAttachmentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  const paymentReference = paymentIntentAttachmentData.attributes.payments[0].id\n  return { paymentReference }\n}\n\nconst createSource = async (type: string, orderId: string, amount: number) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: amount * 100,\n          redirect: {\n            success:\n              process.env.NODE_ENV === 'development'\n                ? `http://localhost:3000/order-success/${orderId}`\n                : `https://www.camillemeat.shop/order-success/${orderId}`,\n            failed:\n              process.env.NODE_ENV === 'development'\n                ? `http://localhost:3000//checkout?paymentFailed=true`\n                : `https://www.camillemeat.shop//checkout?paymentFailed=true`,\n          },\n          type: type,\n          currency: 'PHP',\n        },\n      },\n    }),\n  }\n  const res = await fetch('https://api.paymongo.com/v1/sources', options)\n  const data = await res.json()\n  return data\n}\n\nexport const createPayment = async (\n  sourceId: string,\n  amount: number\n): Promise<string> => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: amount * 100,\n          source: { id: sourceId, type: 'source' },\n          description: 'Camille Meat Shop',\n          currency: 'PHP',\n        },\n      },\n    }),\n  }\n\n  const res = await fetch('https://api.paymongo.com/v1/payments', options)\n  const { data } = await res.json()\n\n  return data.id || ''\n}\n\ninterface CreateSourceArgs {\n  amount: number\n  orderId: string\n}\n\nexport const createGCashSource = async ({\n  orderId,\n  amount,\n}: CreateSourceArgs) => {\n  const { data: sourceData, errors: sourceErrors } = await createSource(\n    'gcash',\n    orderId,\n    amount\n  )\n\n  if (sourceErrors?.length) {\n    let errors: any[] = []\n    sourceErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  return {\n    checkoutUrl: sourceData.attributes.redirect.checkout_url,\n    sourceId: sourceData.id,\n  }\n}\n\nexport const createGrabPaySource = async ({\n  orderId,\n  amount,\n}: CreateSourceArgs) => {\n  const { data: sourceData, errors: sourceErrors } = await createSource(\n    'grab_pay',\n    orderId,\n    amount\n  )\n\n  if (sourceErrors?.length) {\n    let errors: any[] = []\n    sourceErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  return {\n    checkoutUrl: sourceData.attributes.redirect.checkout_url,\n    sourceId: sourceData.id,\n  }\n}\n\nexport const retrieveSource = async (sourceId: string) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n  }\n  const res = await fetch(\n    `https://api.paymongo.com/v1/sources/${sourceId}`,\n    options\n  )\n  const { data: sourceData } = await res.json()\n  return {\n    status: sourceData.attributes.status,\n    checkoutUrl: sourceData.attributes.redirect.checkout_url,\n  }\n}\n\nexport const retrievePaymentIntent = async (paymentIntentId: string) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n  }\n  const res = await fetch(\n    `https://api.paymongo.com/v1/payment_intents/${paymentIntentId}`,\n    options\n  )\n\n  const { data: paymentIntentData } = await res.json()\n  return {\n    status: paymentIntentData.attributes.payments[0].attributes.status,\n    paymentReference: paymentIntentData.attributes.payments[0].id,\n  }\n}\n\nexport const createMayaIntent = async (amount: number) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: 10000,\n          payment_method_allowed: ['paymaya'],\n          payment_method_options: { card: { request_three_d_secure: 'any' } },\n          currency: 'PHP',\n          capture_type: 'automatic',\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_intents',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nconst createMayaMethod = async () => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({ data: { attributes: { type: 'paymaya' } } }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_methods',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\ninterface MayaMethodArgs {\n  paymentIntentId: string\n  paymentMethodId: string\n  orderId: string\n  clientKey: string\n}\nconst attachMayaIntent = async ({\n  paymentIntentId,\n  paymentMethodId,\n  orderId,\n  clientKey,\n}: MayaMethodArgs) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          payment_method: `${paymentMethodId}`,\n          client_key: `${clientKey}`,\n          return_url:\n            process.env.NODE_ENV === 'development'\n              ? `http://localhost:3000/order-success/${orderId}`\n              : `https://www.camillemeat.shop/order-success/${orderId}`,\n        },\n      },\n    }),\n  }\n  const res = await fetch(\n    `https://api.paymongo.com/v1/payment_intents/${paymentIntentId}/attach`,\n    options\n  )\n\n  const data = await res.json()\n  return data\n}\n\nexport const payMaya = async ({ amount, orderId }: CreateSourceArgs) => {\n  const { data: paymentMethodData, errors: paymentMethodErrors } =\n    await createMayaMethod()\n\n  const { data: paymentIntentData, errors: paymentIntentErrors } =\n    await createMayaIntent(amount)\n\n  if (paymentMethodErrors?.length || paymentIntentErrors?.length) {\n    let errors: any[] = []\n    paymentMethodErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    paymentIntentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n\n    return { errors }\n  }\n\n  const clientKey = paymentIntentData.attributes.client_key\n  const paymentMethodId = paymentMethodData.id\n  const paymentIntentId = paymentIntentData.id\n\n  const {\n    data: paymentIntentAttachmentData,\n    errors: paymentIntentAttachmentErrors,\n  } = await attachMayaIntent({\n    paymentIntentId,\n    paymentMethodId,\n    clientKey,\n    orderId,\n  })\n\n  if (paymentIntentAttachmentErrors?.length) {\n    let errors: any[] = []\n    paymentIntentAttachmentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  return {\n    checkoutUrl:\n      paymentIntentAttachmentData.attributes.next_action.redirect.url,\n    paymentIntentId: paymentIntentAttachmentData.id,\n  }\n}\n", "import { Category, Product, Role } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useEffect, useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport AddEditProductForm from '~/components/AddEditProductForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\nimport { deleteImage, uploadImage } from '~/utils/utils.server'\n\nconst baseSchema = z.object({\n  name: zfd.text(z.string().nonempty('Name is required')),\n  category: zfd.text(z.string().nonempty('Name is required')),\n  price: zfd.numeric(\n    z\n      .number()\n      .int('Price must be an integer.')\n      .positive('Price must be greater than 0.')\n  ),\n  stock: zfd.numeric(\n    z\n      .number()\n      .int('Stock must be an integer.')\n      .positive('Stock must be greater than 0.')\n  ),\n  weight: zfd.numeric(\n    z\n      .number()\n      .int('Weight must be an integer.')\n      .positive('Weight must be greater than 0.')\n  ),\n  description: zfd.text(\n    z.string().max(280, { message: 'Must be 280 or fewer characters long.' })\n  ),\n\n  brand: zfd.text(z.string()),\n})\n\nexport const productValidator = withZod(baseSchema)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  if (formData.get('_method') === 'delete') {\n    const productId = formData.get('productId') as string\n    invariant(productId, 'productId is not found.')\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        imageUrl: true,\n      },\n    })\n\n    await deleteImage(product?.imageUrl || '')\n    await db.product.delete({\n      where: { id: productId },\n    })\n    return redirect('/manage-products')\n  }\n\n  const result = await productValidator.validate(formData)\n\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, category, price, stock, weight, description, brand } =\n    result.data\n\n  const productId = formData.get('productId') as string\n  if (productId) {\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        name: true,\n      },\n    })\n    const productName = formData.get('name') as string\n\n    if (product?.name !== productName) {\n      const existingProduct = await db.product.findFirst({\n        where: {\n          name: productName,\n        },\n      })\n\n      if (existingProduct) {\n        return validationError({\n          fieldErrors: {\n            name: 'Product name already exists',\n          },\n        })\n      }\n    }\n\n    try {\n      await db.product.update({\n        where: { id: productId },\n        data: {\n          name,\n          category: category as Category,\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  } else {\n    const productName = formData.get('name') as string\n\n    const existingProduct = await db.product.findFirst({\n      where: {\n        name: productName,\n      },\n    })\n\n    if (existingProduct) {\n      return validationError({\n        fieldErrors: {\n          name: 'Product name already exists',\n        },\n      })\n    }\n\n    try {\n      await db.product.create({\n        data: {\n          name,\n          category: category as Category,\n          imageUrl:\n            'https://res.cloudinary.com/jerichocalibuso/image/upload/v1650783918/sp-app/empty_image_a9urnc.jpg',\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  }\n\n  return redirect('/manage-products')\n}\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const products = await db.product.findMany({\n    take: 10,\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  return json({ products })\n}\n\nexport default function ManageProductsRoute() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null)\n\n  const { products } = useLoaderData()\n\n  useEffect(() => {\n    if (!openSlideOver) {\n      setSelectedProduct(null)\n    }\n  }, [openSlideOver])\n  return (\n    <>\n      <AddEditProductForm\n        {...{\n          openSlideOver,\n          setOpenSlideOver,\n          selectedProduct,\n        }}\n      />\n\n      <div className='bg-white px-4 py-5 pt-24 sm:flex sm:items-center sm:px-6'>\n        <div className='sm:flex-auto'>\n          <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n            Manage Products\n          </h3>\n          <p className='mt-3 text-sm text-gray-500'>\n            View, add, edit, or delete products.\n          </p>\n        </div>\n        <div className='mt-4 sm:mt-0 sm:ml-16 sm:flex-none'>\n          <button\n            type='button'\n            className='inline-flex items-center justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto'\n            onClick={() => setOpenSlideOver(true)}\n          >\n            Add product\n          </button>\n        </div>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Product\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Category\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Description\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Price\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Weight\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Stock\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Brand\n                    </th>\n\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {products.map((product: Product) => (\n                    <tr\n                      className='hover:cursor-pointer hover:bg-red-50'\n                      key={product.id}\n                      onClick={() => {\n                        setSelectedProduct(product)\n                        setOpenSlideOver(true)\n                      }}\n                    >\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='flex items-center'>\n                          <div className='h-10 w-10 flex-shrink-0'>\n                            {product.imageUrl ? (\n                              <img\n                                className='h-10 w-10 rounded-md'\n                                src={product.imageUrl}\n                                alt={product.name}\n                                loading='lazy'\n                              />\n                            ) : (\n                              <div className='h-10 w-10 rounded-md bg-gray-500' />\n                            )}\n                          </div>\n                          <div className='ml-4'>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {product.name}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.category}\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.description}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.price}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.weight}\n                        </div>\n                      </td>\n\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>999</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {product.brand}\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                        <a href='#' className='text-red-500 hover:text-red-600'>\n                          Edit\n                        </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { TrashIcon, XIcon } from '@heroicons/react/outline'\n\nimport { Product } from '@prisma/client'\nimport { Link, useLoaderData, useTransition } from 'remix'\nimport { ValidatedForm } from 'remix-validated-form'\nimport { productValidator } from '~/routes/manage-products'\nimport { Input } from '../Input'\nimport { CategorySelect } from '../CategorySelect'\nimport { Fieldset } from '../Fieldset'\nimport ConfirmDeleteModal from './ConfirmDeleteModal'\n\ninterface AddEditProductForm {\n  openSlideOver: boolean\n  setOpenSlideOver: React.Dispatch<React.SetStateAction<boolean>>\n  selectedProduct: Product | null\n}\n\nexport default function AddEditProductForm({\n  openSlideOver,\n  setOpenSlideOver,\n  selectedProduct,\n}: AddEditProductForm) {\n  const loaderData = useLoaderData()\n  const transition = useTransition()\n\n  const [confirmingDeletion, setConfirmingDeletion] = useState(false)\n  const productId = selectedProduct?.id || ''\n\n  return (\n    <>\n      <ConfirmDeleteModal\n        {...{\n          confirmingDeletion,\n          setConfirmingDeletion,\n          productId,\n          setOpenSlideOver,\n        }}\n      />\n      <Transition.Root show={openSlideOver} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-40 overflow-hidden'\n          onClose={() => {\n            if (!confirmingDeletion) setOpenSlideOver(false)\n          }}\n        >\n          <div className='absolute inset-0 overflow-hidden'>\n            <Dialog.Overlay className='absolute inset-0' />\n            <Transition.Child\n              as={Fragment}\n              enter='ease-in-out duration-300'\n              enterFrom='opacity-0'\n              enterTo='opacity-100'\n              leave='ease-in-out duration-300'\n              leaveFrom='opacity-100'\n              leaveTo='opacity-0'\n            >\n              <Dialog.Overlay className='absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n            </Transition.Child>\n            <div className='pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16'>\n              <Transition.Child\n                as={Fragment}\n                enter='transform transition ease-in-out duration-300 sm:duration-300'\n                enterFrom='translate-x-full'\n                enterTo='translate-x-0'\n                leave='transform transition ease-in-out duration-300 sm:duration-300'\n                leaveFrom='translate-x-0'\n                leaveTo='translate-x-full'\n              >\n                <div className='pointer-events-auto w-screen max-w-md'>\n                  <ValidatedForm\n                    method='post'\n                    className='flex h-full flex-col divide-y divide-gray-200 bg-white shadow-xl'\n                    validator={productValidator}\n                  >\n                    <div className='h-0 flex-1 overflow-y-auto'>\n                      <div className='border-b py-6 px-4 sm:px-6'>\n                        <div className='flex items-center justify-between'>\n                          <Dialog.Title className='text-lg font-medium text-black'>\n                            {`${selectedProduct ? 'Edit' : 'Add'} Product`}\n                          </Dialog.Title>\n                          <div className='ml-3 flex h-7 items-center'>\n                            <button\n                              type='button'\n                              className='rounded-md  text-gray-900 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-white'\n                              onClick={() => setOpenSlideOver(false)}\n                            >\n                              <span className='sr-only'>Close panel</span>\n                              <XIcon className='h-6 w-6' aria-hidden='true' />\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='flex flex-1 flex-col justify-between'>\n                        <div className='px-4 sm:px-6'>\n                          <div className='space-y-6 pt-6 pb-5'>\n                            {productId ? (\n                              <input\n                                type='hidden'\n                                name='productId'\n                                value={productId}\n                              />\n                            ) : null}\n                            <Input\n                              name='name'\n                              label='Name'\n                              type='text'\n                              value={selectedProduct?.name || ''}\n                              autoComplete='name'\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            <CategorySelect\n                              name='category'\n                              label='Category'\n                              value={'PORK'}\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            {/* price, stock, weight, description, brand, */}\n                            <Input\n                              name='price'\n                              label='Price'\n                              type='text'\n                              value={selectedProduct?.price?.toString() || ''}\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            <Input\n                              name='stock'\n                              label='Stock'\n                              type='text'\n                              value={selectedProduct?.stock?.toString() || ''}\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            <Input\n                              name='weight'\n                              label='Weight per Qty'\n                              type='text'\n                              value={selectedProduct?.weight?.toString() || ''}\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            <Fieldset\n                              name='description'\n                              label='Description'\n                              value={\n                                selectedProduct?.description ||\n                                'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus.'\n                              }\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            <Input\n                              name='brand'\n                              label='Brand'\n                              type='text'\n                              value={selectedProduct?.brand || 'Camille'}\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            {/* <ProductImageDropzone\n                              imageUrl={selectedProduct?.imageUrl || ''}\n                              name={selectedProduct?.name || ''}\n                            /> */}\n                            <label className='block text-sm font-medium text-gray-900'>\n                              Product image\n                            </label>\n\n                            {selectedProduct?.imageUrl ? (\n                              <>\n                                <Link\n                                  to={`/manage-products/${selectedProduct.id}/upload-image`}\n                                  className='inline-flex justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:cursor-pointer hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto'\n                                >\n                                  Upload new image\n                                </Link>\n                                <div key={selectedProduct?.name}>\n                                  <img\n                                    src={selectedProduct?.imageUrl}\n                                    alt={selectedProduct?.name}\n                                    className='my-2 h-full w-full object-cover object-center sm:rounded-lg'\n                                  />\n                                </div>\n                              </>\n                            ) : (\n                              <>\n                                <div className=' inline-flex justify-center rounded-md border border-transparent bg-gray-400 px-4 py-2 text-sm font-medium text-white shadow-sm  focus:outline-none  sm:w-auto'>\n                                  Upload*\n                                </div>\n                                <p className='text-sm text-gray-400'>\n                                  *Product image can only be uploaded when\n                                  editing the product\n                                </p>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='flex flex-shrink-0 content-center justify-between px-4 py-4'>\n                      {selectedProduct ? (\n                        <button\n                          type='button'\n                          onClick={() => setConfirmingDeletion(true)}\n                          className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n                        >\n                          <TrashIcon className='h-6 w-6' aria-hidden='true' />\n                        </button>\n                      ) : (\n                        <div></div>\n                      )}\n                      <div className='flex content-center'>\n                        <button\n                          type='button'\n                          className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n                          onClick={() => setOpenSlideOver(false)}\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          disabled={transition.state === 'submitting'}\n                          type='submit'\n                          className={`${\n                            transition.submission && 'cursor-progress'\n                          } ml-4 inline-flex  justify-center rounded-md border border-transparent bg-red-600 py-2.5 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                        >\n                          {transition.submission ? (\n                            <div className='flex w-12 items-stretch justify-center'>\n                              <svg\n                                className='w-5 animate-spin text-white'\n                                xmlns='http://www.w3.org/2000/svg'\n                                fill='none'\n                                viewBox='0 0 24 24'\n                              >\n                                <circle\n                                  className='opacity-25'\n                                  cx='12'\n                                  cy='12'\n                                  r='10'\n                                  stroke='currentColor'\n                                  strokeWidth='4'\n                                ></circle>\n                                <path\n                                  className='opacity-75'\n                                  fill='currentColor'\n                                  d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                                ></path>\n                              </svg>\n                            </div>\n                          ) : (\n                            'Submit'\n                          )}\n                        </button>\n                      </div>\n                    </div>\n                  </ValidatedForm>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </>\n  )\n}\n", "import { Category, Product, Role } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useEffect, useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport AddEditProductForm from '~/components/AddEditProductForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\nimport { deleteImage, uploadImage } from '~/utils/utils.server'\n\nconst baseSchema = z.object({\n  name: zfd.text(z.string().nonempty('Name is required')),\n  category: zfd.text(z.string().nonempty('Name is required')),\n  price: zfd.numeric(\n    z\n      .number()\n      .int('Price must be an integer.')\n      .positive('Price must be greater than 0.')\n  ),\n  stock: zfd.numeric(\n    z\n      .number()\n      .int('Stock must be an integer.')\n      .positive('Stock must be greater than 0.')\n  ),\n  weight: zfd.numeric(\n    z\n      .number()\n      .int('Weight must be an integer.')\n      .positive('Weight must be greater than 0.')\n  ),\n  description: zfd.text(\n    z.string().max(280, { message: 'Must be 280 or fewer characters long.' })\n  ),\n\n  brand: zfd.text(z.string()),\n})\n\nexport const productValidator = withZod(baseSchema)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  if (formData.get('_method') === 'delete') {\n    const productId = formData.get('productId') as string\n    invariant(productId, 'productId is not found.')\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        imageUrl: true,\n      },\n    })\n\n    await deleteImage(product?.imageUrl || '')\n    await db.product.delete({\n      where: { id: productId },\n    })\n    return redirect('/manage-products')\n  }\n\n  const result = await productValidator.validate(formData)\n\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, category, price, stock, weight, description, brand } =\n    result.data\n\n  const productId = formData.get('productId') as string\n  if (productId) {\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        name: true,\n      },\n    })\n    const productName = formData.get('name') as string\n\n    if (product?.name !== productName) {\n      const existingProduct = await db.product.findFirst({\n        where: {\n          name: productName,\n        },\n      })\n\n      if (existingProduct) {\n        return validationError({\n          fieldErrors: {\n            name: 'Product name already exists',\n          },\n        })\n      }\n    }\n\n    try {\n      await db.product.update({\n        where: { id: productId },\n        data: {\n          name,\n          category: category as Category,\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  } else {\n    const productName = formData.get('name') as string\n\n    const existingProduct = await db.product.findFirst({\n      where: {\n        name: productName,\n      },\n    })\n\n    if (existingProduct) {\n      return validationError({\n        fieldErrors: {\n          name: 'Product name already exists',\n        },\n      })\n    }\n\n    try {\n      await db.product.create({\n        data: {\n          name,\n          category: category as Category,\n          imageUrl:\n            'https://res.cloudinary.com/jerichocalibuso/image/upload/v1650783918/sp-app/empty_image_a9urnc.jpg',\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  }\n\n  return redirect('/manage-products')\n}\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const products = await db.product.findMany({\n    take: 10,\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  return json({ products })\n}\n\nexport default function ManageProductsRoute() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null)\n\n  const { products } = useLoaderData()\n\n  useEffect(() => {\n    if (!openSlideOver) {\n      setSelectedProduct(null)\n    }\n  }, [openSlideOver])\n  return (\n    <>\n      <AddEditProductForm\n        {...{\n          openSlideOver,\n          setOpenSlideOver,\n          selectedProduct,\n        }}\n      />\n\n      <div className='bg-white px-4 py-5 pt-24 sm:flex sm:items-center sm:px-6'>\n        <div className='sm:flex-auto'>\n          <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n            Manage Products\n          </h3>\n          <p className='mt-3 text-sm text-gray-500'>\n            View, add, edit, or delete products.\n          </p>\n        </div>\n        <div className='mt-4 sm:mt-0 sm:ml-16 sm:flex-none'>\n          <button\n            type='button'\n            className='inline-flex items-center justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto'\n            onClick={() => setOpenSlideOver(true)}\n          >\n            Add product\n          </button>\n        </div>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Product\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Category\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Description\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Price\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Weight\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Stock\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Brand\n                    </th>\n\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {products.map((product: Product) => (\n                    <tr\n                      className='hover:cursor-pointer hover:bg-red-50'\n                      key={product.id}\n                      onClick={() => {\n                        setSelectedProduct(product)\n                        setOpenSlideOver(true)\n                      }}\n                    >\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='flex items-center'>\n                          <div className='h-10 w-10 flex-shrink-0'>\n                            {product.imageUrl ? (\n                              <img\n                                className='h-10 w-10 rounded-md'\n                                src={product.imageUrl}\n                                alt={product.name}\n                                loading='lazy'\n                              />\n                            ) : (\n                              <div className='h-10 w-10 rounded-md bg-gray-500' />\n                            )}\n                          </div>\n                          <div className='ml-4'>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {product.name}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.category}\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.description}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.price}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.weight}\n                        </div>\n                      </td>\n\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>999</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {product.brand}\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                        <a href='#' className='text-red-500 hover:text-red-600'>\n                          Edit\n                        </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import React, { forwardRef } from 'react'\nimport { useField, useFormContext } from 'remix-validated-form'\n\ntype InputProps = {\n  name: string\n  label: string\n  type?: string\n  autoComplete?: string\n  value?: string\n  hideErrors?: boolean\n  'data-testid'?: string\n  form?: string\n  className?: string\n  placeholder?: string\n}\n\nexport const Input = forwardRef(\n  (\n    {\n      name,\n      label,\n      type = 'text',\n      value,\n      autoComplete,\n      hideErrors: noErrors,\n      'data-testid': dataTestId,\n      form,\n      className,\n      placeholder,\n    }: InputProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const { getInputProps, error } = useField(name, {\n      formId: form,\n    })\n\n    return (\n      <div>\n        <label\n          htmlFor={name}\n          className='block text-sm font-medium text-gray-700'\n        >\n          {label}\n        </label>\n        <div className='mt-1'>\n          <input\n            value={value}\n            data-testid={dataTestId}\n            className={`block w-full appearance-none rounded-md border ${\n              error ? 'border-red-500' : 'border-gray-300'\n            } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n            {...getInputProps({\n              form,\n              type,\n              ref,\n              id: name,\n              autoComplete,\n              placeholder,\n            })}\n          />\n        </div>\n        {error && !noErrors && <p className='text-sm text-red-500'>{error}</p>}\n      </div>\n    )\n  }\n)\n", "import { Category } from '@prisma/client'\nimport { useField } from 'remix-validated-form'\n\ntype SelectProps = {\n  name: string\n  label: string\n  value: Category | string\n  className?: string\n}\n\nexport const CategorySelect = ({\n  name,\n  label,\n  value,\n  className,\n}: SelectProps) => {\n  const { error, getInputProps } = useField(name)\n\n  return (\n    <div>\n      <label htmlFor={name} className='block text-sm font-medium text-gray-900'>\n        {label}\n      </label>\n      <select\n        {...getInputProps({ id: name })}\n        defaultValue={value}\n        className={`mt-1 block w-full appearance-none rounded-md border ${\n          error ? 'border-red-500' : 'border-gray-300'\n        } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n      >\n        {Object.values(Category).map((category) => (\n          <option key={category} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n      {error && <span className='text-sm text-red-500'>{error}</span>}\n    </div>\n  )\n}\n", "import React, { forwardRef, useState } from 'react'\nimport { useField } from 'remix-validated-form'\n\ntype FieldsetProps = {\n  name: string\n  label: string\n  type?: string\n  autoComplete?: string\n  value?: string\n  hideErrors?: boolean\n  'data-testid'?: string\n  form?: string\n  className?: string\n  placeholder?: string\n}\n\nexport const Fieldset = forwardRef(\n  (\n    {\n      name,\n      label,\n      value,\n      autoComplete,\n      hideErrors: noErrors,\n      'data-testid': dataTestId,\n      form,\n      className,\n      placeholder,\n    }: FieldsetProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const { getInputProps, error } = useField(name, {\n      formId: form,\n    })\n\n    const [inputValue, setInputValue] = useState(value || '')\n    return (\n      <div>\n        <label\n          htmlFor={name}\n          className='block text-sm font-medium text-gray-700'\n        >\n          {label}\n        </label>\n        <div className='mt-1'>\n          <textarea\n            {...getInputProps({\n              form,\n              id: name,\n              autoComplete,\n              placeholder,\n            })}\n            className={`block w-full appearance-none rounded-md border ${\n              error ? 'border-red-500' : 'border-gray-300'\n            } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n            data-testid={dataTestId}\n            value={inputValue}\n            onChange={(e) => {\n              setInputValue(e.target.value)\n            }}\n          />\n          <p className='text-xs text-gray-500'>{inputValue.length}/280</p>\n        </div>\n        {error && !noErrors && <p className='text-sm text-red-500'>{error}</p>}\n      </div>\n    )\n  }\n)\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon } from '@heroicons/react/outline'\nimport { Form, useFetcher, useTransition } from 'remix'\n\ninterface Props {\n  productId: string\n  confirmingDeletion: boolean\n  setConfirmingDeletion: React.Dispatch<React.SetStateAction<boolean>>\n  setOpenSlideOver: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function ConfirmDeleteModal({\n  productId,\n  confirmingDeletion,\n  setConfirmingDeletion,\n  setOpenSlideOver,\n}: Props) {\n  const cancelButtonRef = useRef(null)\n  const fetcher = useFetcher()\n\n  useEffect(() => {\n    if (fetcher.type === 'done') {\n      setConfirmingDeletion(false)\n      setOpenSlideOver(false)\n    }\n  }, [fetcher])\n\n  return (\n    <Transition.Root show={confirmingDeletion} as={Fragment}>\n      <Dialog\n        as='div'\n        className='fixed inset-0 z-50 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        onClose={setConfirmingDeletion}\n      >\n        <div className='flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:h-screen sm:align-middle'\n            aria-hidden='true'\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='relative inline-block transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6 sm:align-middle'>\n              <div className='sm:flex sm:items-start'>\n                <div className='mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon\n                    className='h-6 w-6 text-red-600'\n                    aria-hidden='true'\n                  />\n                </div>\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg font-medium leading-6 text-gray-900'\n                  >\n                    Delete product\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      Are you sure you want to delete this product? All of the\n                      product's data will be permanently removed from our\n                      servers forever. This action cannot be undone.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                <fetcher.Form method='post'>\n                  <input type='hidden' name='_method' value='delete' />\n                  <input type='hidden' name='productId' value={productId} />\n                  <button\n                    type='submit'\n                    className='inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm'\n                  >\n                    {fetcher.state === 'submitting' ? (\n                      <svg\n                        className='ml-3 mr-3 h-5 w-5 animate-spin text-white'\n                        xmlns='http://www.w3.org/2000/svg'\n                        fill='none'\n                        viewBox='0 0 24 24'\n                      >\n                        <circle\n                          className='opacity-25'\n                          cx='12'\n                          cy='12'\n                          r='10'\n                          stroke='currentColor'\n                          strokeWidth='4'\n                        ></circle>\n                        <path\n                          className='opacity-75'\n                          fill='currentColor'\n                          d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                        ></path>\n                      </svg>\n                    ) : (\n                      'Delete'\n                    )}\n                  </button>\n                </fetcher.Form>\n                <button\n                  type='button'\n                  className='mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm'\n                  onClick={() => setConfirmingDeletion(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n", "import { Order, Product, Role } from '@prisma/client'\nimport { LoaderFunction, redirect } from '@remix-run/node'\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { useNavigate } from 'react-router'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\ninterface LoaderData {\n  orders: Order[]\n  products: Product[]\n}\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  const orders = await db.order.findMany({\n    where: {\n      userId: user?.id,\n      paidAt: {\n        not: null,\n      },\n    },\n  })\n\n  if (!orders) return null\n\n  const productIds: string[] = []\n\n  orders.forEach((order) =>\n    order.productIds.forEach((productId) => productIds.push(productId))\n  )\n\n  const uniqueProductIds = [...new Set(productIds)]\n  const products = await db.product.findMany({\n    where: {\n      id: {\n        in: uniqueProductIds,\n      },\n    },\n  })\n\n  return { orders, products }\n}\n\nexport default function Example() {\n  const { orders, products } = useLoaderData()\n  const navigate = useNavigate()\n\n  return (\n    <>\n      <div className='bg-white px-4 py-5 pt-24 sm:flex sm:items-center sm:px-6'>\n        <div className='sm:flex-auto'>\n          <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n            Order history\n          </h3>\n          <p className='mt-3 text-sm text-gray-500'>\n            View your previous orders.\n          </p>\n        </div>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order ID\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Status\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Products\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Amount\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Paid at\n                    </th>\n\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>View details</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {orders.map((order: Order) => {\n                    const uniqueProductIds = [...new Set(order.productIds)]\n                    return (\n                      <tr\n                        className='hover:cursor-pointer hover:bg-red-50'\n                        key={order.id}\n                        onClick={() => {\n                          navigate(`/order-history/${order.id}`)\n                        }}\n                      >\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className=''>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {order.id}\n                            </div>\n                          </div>\n                        </td>\n                        <td className='wrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {order.status}\n                          </div>\n                        </td>\n                        <td className='wrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {uniqueProductIds.map((productId: string) => {\n                              const quantity = order?.productIds.filter(\n                                (id: string) => {\n                                  return productId?.toString() === id\n                                }\n                              )?.length\n                              const product = products?.find(\n                                (p: Product) => p.id === productId\n                              )\n                              return (\n                                <div key={product.id}>\n                                  {quantity}x {product.name}\n                                </div>\n                              )\n                            })}\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {order.amount}\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {new Date(order?.paidAt || '').toLocaleDateString()}\n                          </div>\n                        </td>\n\n                        <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                          <a\n                            href='#'\n                            className='text-red-500 hover:text-red-600'\n                          >\n                            View details\n                          </a>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import type { UploadHandler } from '@remix-run/node'\nimport { unstable_parseMultipartFormData } from '@remix-run/node'\nimport { Form, useActionData } from '@remix-run/react'\nimport { ActionFunction, json } from 'remix'\n\nimport { uploadImage } from '~/utils/utils.server'\n\ntype ActionData = {\n  errorMsg?: string\n  imgSrc?: string\n  imgDesc?: string\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const uploadHandler: UploadHandler = async ({ name, stream }) => {\n    if (name !== 'img') {\n      stream.resume()\n      return\n    }\n    const uploadedImage: any = await uploadImage(stream)\n    return uploadedImage.secure_url\n  }\n\n  const formData = await unstable_parseMultipartFormData(request, uploadHandler)\n  const imgSrc = formData.get('img')\n  const imgDesc = formData.get('desc')\n  if (!imgSrc) {\n    return json({\n      error: 'something wrong',\n    })\n  }\n  return json({\n    imgSrc,\n    imgDesc,\n  })\n}\n\nexport default function Index() {\n  const data = useActionData<ActionData>()\n  return (\n    <>\n      <Form method='post' encType='multipart/form-data' className='mt-32'>\n        <label htmlFor='img-field'>Image to upload</label>\n        <input id='img-field' type='file' name='img' accept='image/*' />\n        <label htmlFor='img-desc'>Image description</label>\n        <input id='img-desc' type='text' name='desc' />\n        <button type='submit'>upload to cloudinary</button>\n      </Form>\n      {data?.errorMsg && <h2>{data.errorMsg}</h2>}\n      {data?.imgSrc && (\n        <>\n          <h2>uploaded image</h2>\n          <img src={data.imgSrc} alt={data.imgDesc || 'Upload result'} />\n        </>\n      )}\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport {\n  CalendarIcon,\n  LocationMarkerIcon,\n  UsersIcon,\n} from '@heroicons/react/solid'\n\nconst positions = [\n  {\n    id: 1,\n    title: 'Order 123-456',\n    type: 'Packaging',\n    location: 'Phase 1 Block 2 Lot 3, Parklane Country Homes',\n    department: 'Evan Monreal',\n    closeDate: '2022-01-07',\n    closeDateFull: 'January 7, 2022',\n  },\n  {\n    id: 2,\n    title: 'Order 123-457',\n    type: 'For Delivery',\n    location: 'House #12, Sapphire Street, Camella Lessandra',\n    department: 'Samantha Lugtu',\n    closeDate: '2022-01-07',\n    closeDateFull: 'January 7, 2022',\n  },\n  {\n    id: 3,\n    title: 'Order 123-459',\n    type: 'Completed',\n    location: 'Block 76 Lot 5, Lumina Homes',\n    department: 'Joshua Lopez',\n    closeDate: '2022-01-14',\n    closeDateFull: 'January 14, 2022',\n  },\n  {\n    id: 3,\n    title: 'Order 123-005',\n    type: 'Completed',\n    location: 'Block 76 Lot 5, Lumina Homes',\n    department: 'Joshua Lopez',\n    closeDate: '2022-01-14',\n    closeDateFull: 'January 14, 2022',\n  },\n  {\n    id: 3,\n    title: 'Order 123-004',\n    type: 'Completed',\n    location: 'Block 76 Lot 5, Lumina Homes',\n    department: 'Joshua Lopez',\n    closeDate: '2022-01-14',\n    closeDateFull: 'January 14, 2022',\n  },\n  {\n    id: 3,\n    title: 'Order 123-003',\n    type: 'Completed',\n    location: 'Block 76 Lot 5, Lumina Homes',\n    department: 'Joshua Lopez',\n    closeDate: '2022-01-14',\n    closeDateFull: 'January 14, 2022',\n  },\n  {\n    id: 3,\n    title: 'Order 123-002',\n    type: 'Completed',\n    location: 'Block 76 Lot 5, Lumina Homes',\n    department: 'Joshua Lopez',\n    closeDate: '2022-01-14',\n    closeDateFull: 'January 14, 2022',\n  },\n]\n\nexport default function Example() {\n  return (\n    <>\n      <div className='border-b border-gray-200 bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Assgined Orders\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          List of all assgined orders to you.\n        </p>\n      </div>\n      <div className='overflow-hidden bg-white shadow sm:rounded-md'>\n        <ul role='list' className='divide-y divide-gray-200'>\n          {positions.map((position) => (\n            <li key={position.id}>\n              <a href='#' className='block hover:bg-gray-50'>\n                <div className='px-4 py-4 sm:px-6'>\n                  <div className='flex items-center justify-between'>\n                    <p className='truncate text-xl font-medium text-red-500 hover:text-red-600'>\n                      {position.title}\n                    </p>\n                    <div className='ml-2 flex flex-shrink-0'>\n                      <p\n                        className={`inline-flex rounded-full ${\n                          position.type === 'Packaging' && 'bg-red-100'\n                        } ${\n                          position.type === 'For Delivery' && 'bg-yellow-100'\n                        } ${position.type === 'Completed' && 'bg-green-100'} \n                        \n                        px-2 text-xs font-semibold leading-5 \n                        \n                        ${position.type === 'Packaging' && 'text-red-900'}\n                        \n                        ${position.type === 'For Delivery' && 'text-yellow-900'}\n                        \n                        ${position.type === 'Completed' && 'text-green-900'}\n                        \n                        `}\n                      >\n                        {position.type}\n                      </p>\n                    </div>\n                  </div>\n                  <div className='mt-2 sm:flex sm:justify-between'>\n                    <div className='sm:flex'>\n                      <p className='flex items-center text-sm text-gray-500'>\n                        <UsersIcon\n                          className='mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400'\n                          aria-hidden='true'\n                        />\n                        {position.department}\n                      </p>\n                      <p className='mt-2 flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-3'>\n                        <LocationMarkerIcon\n                          className='mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400'\n                          aria-hidden='true'\n                        />\n                        {position.location}\n                      </p>\n                    </div>\n                    <div className='mt-2 flex items-center text-sm text-gray-500 sm:mt-0'>\n                      <CalendarIcon\n                        className='mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400'\n                        aria-hidden='true'\n                      />\n                      <p>\n                        {position.type === 'Completed'\n                          ? 'Delivered on'\n                          : 'Placed on'}{' '}\n                        <time dateTime={position.closeDate}>\n                          {position.closeDateFull}\n                        </time>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  )\n}\n", "import { ActionFunction, redirect } from '@remix-run/node'\nimport { LoaderFunction } from '@remix-run/node'\nimport invariant from 'tiny-invariant'\nimport { authenticator } from '~/services/auth.server'\n\nexport let loader: LoaderFunction = () => redirect('/signin')\n\nexport let action: ActionFunction = ({ request, params }) => {\n  invariant(params.provider, 'auth provider is undefined')\n\n  return authenticator.authenticate(params.provider, request)\n}\n", "import { Role, Status } from '@prisma/client'\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { validationError } from 'remix-validated-form'\nimport { ProductsPage } from '~/components/ProductsPage'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\nexport enum Brand {\n  CAMILLE = 'Camille',\n  BOUNTY_FRESH = 'Bounty Fresh',\n}\n\nexport enum Category {\n  CHICKEN = 'Chicken',\n  PORK = 'Pork',\n  BEEF = 'Beef',\n  ALL = 'All',\n}\n\nexport type Product = {\n  id: number\n  name: string\n  brand: Brand\n  category: Category\n  imageUrl: string\n  imageAlt: string\n  price: number\n  weight: string\n  description: string\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  try {\n    const chickenProducts = await db.product.findMany({\n      where: { category: 'CHICKEN' },\n    })\n    const porkProducts = await db.product.findMany({\n      where: { category: 'PORK' },\n    })\n    const beefProducts = await db.product.findMany({\n      where: { category: 'BEEF' },\n    })\n    const productsCount = await db.product.count()\n    let currentCategory = Category.CHICKEN\n    const sortedProducts = []\n    for (let i = 0; i < productsCount; i++) {\n      if (currentCategory === Category.CHICKEN) {\n        const chickenProduct = chickenProducts.pop()\n        if (chickenProduct?.id) {\n          sortedProducts.push(chickenProduct)\n        }\n        currentCategory = Category.PORK\n      } else if (currentCategory === Category.PORK) {\n        const porkProduct = porkProducts.pop()\n        if (porkProduct?.id) {\n          sortedProducts.push(porkProduct)\n        }\n        currentCategory = Category.BEEF\n      } else if (currentCategory === Category.BEEF) {\n        const beefProduct = beefProducts.pop()\n        if (beefProduct?.id) {\n          sortedProducts.push(beefProduct)\n        }\n        currentCategory = Category.CHICKEN\n      }\n    }\n    return sortedProducts\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return validationError({\n      fieldErrors: {\n        name: 'Product does not exist',\n      },\n    })\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n    })\n\n    if (currentOrder) {\n      const res = await db.order.update({\n        where: {\n          id: currentOrder?.id,\n        },\n        data: {\n          amount: currentOrder.amount + product.price,\n          productIds: {\n            push: [productId],\n          },\n        },\n      })\n      return res\n    } else {\n      return await db.order.create({\n        data: {\n          amount: product.price,\n          productIds: [product.id],\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n    }\n  }\n}\n\nexport default function AllProductsPage() {\n  const category = Category.ALL\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "import { ActionFunction, Form } from 'remix'\nimport { Category, Product } from '~/routes/products'\nimport { authenticator } from '~/services/auth.server'\n\ninterface Props {\n  products: Product[]\n  category: string\n}\n\nconst returnTitle = (category: string): string => {\n  if (category === Category.CHICKEN) {\n    return 'Chicken Products'\n  } else if (category === Category.PORK) {\n    return 'Pork Products'\n  } else if (category === Category.BEEF) {\n    return 'Beef Products'\n  } else {\n    return 'All Products'\n  }\n}\n\nexport function ProductsPage({ products, category }: Props) {\n  return (\n    <main className='bg-white'>\n      <div className='mx-auto max-w-2xl py-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8'>\n        <h1 className='text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl'>\n          {category && returnTitle(category)}\n        </h1>\n\n        <div className='mt-8 grid grid-cols-1 gap-y-12 sm:grid-cols-2 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8'>\n          {products.map((product) => {\n            return (\n              <div key={product.id}>\n                <div className='relative'>\n                  <div className='relative h-72 w-full overflow-hidden rounded-lg'>\n                    <img\n                      loading='lazy'\n                      src={product.imageUrl}\n                      className='h-full w-full object-cover object-center'\n                    />\n                  </div>\n                  <div className='relative mt-4 h-16'>\n                    <div className='flex justify-between '>\n                      <h3 className='text-md font-medium text-gray-900 hover:text-red-500'>\n                        <a href={`/products/${product.id}`}>{product.name}</a>\n                      </h3>\n                      <div className='ml-2'>\n                        <p className='relative text-lg font-semibold text-red-500'>\n                          \u20B1{product.price}\n                        </p>\n                      </div>\n                    </div>\n                    <p className='relative text-sm font-semibold text-gray-500'>\n                      {product.brand}\n                    </p>\n                  </div>\n                  <a href={`/products/${product.id}`}>\n                    <div className='absolute inset-x-0 top-0  flex h-72 cursor-pointer items-end justify-end overflow-hidden rounded-lg p-4'>\n                      <div\n                        aria-hidden='true'\n                        className='absolute inset-x-0 bottom-0 h-36  bg-gradient-to-t from-neutral-500 to-white opacity-10  hover:opacity-5'\n                      />\n                    </div>\n                  </a>\n                </div>\n                {/* ADD KILOS INPUT */}\n                <Form method='post'>\n                  <input type='hidden' name='productId' value={product.id} />\n\n                  <div className='w mt-6'>\n                    <button\n                      type='submit'\n                      className='block w-full items-center justify-center rounded-md border border-transparent bg-red-500 py-2 px-8 text-sm font-medium text-white hover:bg-red-400'\n                    >\n                      Add to cart<span className='sr-only'></span>\n                    </button>\n                  </div>\n                </Form>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </main>\n  )\n}\n", "export {}", "/* This example requires Tailwind CSS v2.0+ */\nconst people = [\n  {\n    name: 'Lorem Ipsum',\n    id: '123-456',\n    title: 'Beef Cubes',\n    department: 'Optimization',\n    role: '01-12-2022',\n    email: 'lorem.ipsum@example.com',\n    number: '0912-123-1234',\n    address: 'House #123, Sample Subdivision',\n  },\n  {\n    name: 'Lorem Ipsum',\n    id: '123-456',\n    title: 'Beef Cubes',\n    department: 'Optimization',\n    role: '01-12-2022',\n    email: 'lorem.ipsum@example.com',\n    number: '0912-123-1234',\n    address: 'House #123, Sample Subdivision',\n  },\n  {\n    name: 'Lorem Ipsum',\n    id: '123-456',\n    title: 'Beef Cubes',\n    department: 'Optimization',\n    role: '01-12-2022',\n    email: 'lorem.ipsum@example.com',\n    number: '0912-123-1234',\n    address: 'House #123, Sample Subdivision',\n  },\n  {\n    name: 'Lorem Ipsum',\n    id: '123-456',\n    title: 'Beef Cubes',\n    department: 'Optimization',\n    role: '01-12-2022',\n    email: 'lorem.ipsum@example.com',\n    number: '0912-123-1234',\n    address: 'House #123, Sample Subdivision',\n  },\n  {\n    name: 'Lorem Ipsum',\n    id: '123-456',\n    title: 'Beef Cubes',\n    department: 'Optimization',\n    role: '01-12-2022',\n    email: 'lorem.ipsum@example.com',\n    number: '0912-123-1234',\n    address: 'House #123, Sample Subdivision',\n  },\n  {\n    name: 'Lorem Ipsum',\n    id: '123-456',\n    title: 'Beef Cubes',\n    department: 'Optimization',\n    role: '01-12-2022',\n    email: 'lorem.ipsum@example.com',\n    number: '0912-123-1234',\n    address: 'House #123, Sample Subdivision',\n  },\n  // More people...\n]\n\nexport default function Example() {\n  return (\n    <>\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Manage Orders\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete orders.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order Id\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Customer\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Address\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order Items\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Status\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Date\n                    </th>\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {people.map((person) => (\n                    <tr key={person.email}>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='flex '>\n                          <div className='text-sm font-medium text-gray-900'>\n                            {person.id}\n                          </div>\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='flex items-center'>\n                          <div className=''>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {person.name}\n                            </div>\n                            <div className='text-sm text-gray-500'>\n                              {person.email}\n                            </div>\n                            <div className='text-sm text-gray-500'>\n                              {person.number}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='flex '>\n                          <div className='text-sm font-medium text-gray-900'>\n                            {person.address}\n                          </div>\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          1x {person.title}\n                        </div>\n                        <div className='text-sm text-gray-900'>\n                          2x {person.title}\n                        </div>\n                        <div className='text-sm text-gray-900'>\n                          3x {person.title}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <span className='inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800'>\n                          Completed\n                        </span>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-500'>\n                        {person.role}\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                        <a href='#' className='text-red-500 hover:text-red-600'>\n                          Edit\n                        </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\n\nimport { Role, User } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport ManageUsersForm from '~/components/ManageUserForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const users = await db.user.findMany({\n    take: 10,\n    select: {\n      id: true,\n      name: true,\n      role: true,\n      username: true,\n      provider: true,\n      email: true,\n    },\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  const usersWithoutCurrentUser = users.filter((user) => user?.id !== id)\n\n  return json({ users: usersWithoutCurrentUser })\n}\n\nexport const validator = withZod(\n  z.object({\n    name: zfd.text(\n      z.string({\n        required_error: 'Name is required',\n      })\n    ),\n    role: zfd.text(\n      z.string({\n        required_error: 'Role is required',\n      })\n    ),\n    userId: zfd.text(\n      z.string({\n        required_error: 'User id is invalid',\n      })\n    ),\n  })\n)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n\n  if (formData.get('_method') === 'delete') {\n    const userId = formData.get('userId') as string\n    invariant(userId, 'userId is not found.')\n    const user = await db.user.delete({\n      where: { id: userId },\n    })\n    return redirect('/manage-users')\n  }\n\n  const result = await validator.validate(formData)\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, role, userId } = result.data\n\n  await db.user.update({\n    where: {\n      id: userId,\n    },\n    data: {\n      name,\n      role: role as Role,\n    },\n  })\n\n  return redirect('/manage-users')\n}\nexport default function Example() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedUser, setSelectedUser] = useState<User | null>(null)\n\n  const { users } = useLoaderData()\n  return (\n    <>\n      <ManageUsersForm\n        openSlideOver={openSlideOver}\n        setOpenSlideOver={setOpenSlideOver}\n        selectedUser={selectedUser}\n      />\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Manage Users\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete users.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Name\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Role\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Username\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      OAuth Provider\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Email\n                    </th>\n                    {/* <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th> */}\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {users.map((user: User) => (\n                    <tr\n                      onClick={() => {\n                        setOpenSlideOver(true)\n                        setSelectedUser(user)\n                      }}\n                      key={user.id}\n                      className='hover:cursor-pointer hover:bg-red-50'\n                    >\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.name}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.role}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.username}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.provider}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.email}\n                        </div>\n                      </td>\n\n                      {/* <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>999</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {user.brand}\n                      </td> */}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { TrashIcon, XIcon } from '@heroicons/react/outline'\n\nimport { User } from '@prisma/client'\nimport { useLoaderData, useTransition } from 'remix'\nimport { ValidatedForm } from 'remix-validated-form'\nimport { validator } from '~/routes/manage-users'\nimport { Input } from '../Input'\nimport { RoleSelect } from '../RoleSelect'\nimport ConfirmDeleteModal from './ConfirmDeleteModal'\n\ninterface ManageUsersForm {\n  openSlideOver: boolean\n  setOpenSlideOver: React.Dispatch<React.SetStateAction<boolean>>\n  selectedUser: User | null\n}\n\nexport default function ManageUsersForm({\n  openSlideOver,\n  setOpenSlideOver,\n  selectedUser,\n}: ManageUsersForm) {\n  const loaderData = useLoaderData()\n  const transition = useTransition()\n  const [confirmingDeletion, setConfirmingDeletion] = useState(false)\n  return (\n    <>\n      <ConfirmDeleteModal\n        {...{ confirmingDeletion, setConfirmingDeletion }}\n        userId={selectedUser?.id || ''}\n      />\n      <Transition.Root show={openSlideOver} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-40 overflow-hidden'\n          onClose={() => {\n            if (!confirmingDeletion) setOpenSlideOver(false)\n          }}\n        >\n          <div className='absolute inset-0 overflow-hidden'>\n            <Dialog.Overlay className='absolute inset-0' />\n            <Transition.Child\n              as={Fragment}\n              enter='ease-in-out duration-300'\n              enterFrom='opacity-0'\n              enterTo='opacity-100'\n              leave='ease-in-out duration-300'\n              leaveFrom='opacity-100'\n              leaveTo='opacity-0'\n            >\n              <Dialog.Overlay className='absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n            </Transition.Child>\n            <div className='pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16'>\n              <Transition.Child\n                as={Fragment}\n                enter='transform transition ease-in-out duration-300 sm:duration-300'\n                enterFrom='translate-x-full'\n                enterTo='translate-x-0'\n                leave='transform transition ease-in-out duration-300 sm:duration-300'\n                leaveFrom='translate-x-0'\n                leaveTo='translate-x-full'\n              >\n                <div className='pointer-events-auto w-screen max-w-md'>\n                  <ValidatedForm\n                    method='post'\n                    className='flex h-full flex-col divide-y divide-gray-200 bg-white shadow-xl'\n                    {...{ validator }}\n                  >\n                    <div className='h-0 flex-1 overflow-y-auto'>\n                      <div className='border-b py-6 px-4 sm:px-6'>\n                        <div className='flex items-center justify-between'>\n                          <Dialog.Title className='text-lg font-medium text-black'>\n                            {' '}\n                            Edit User{' '}\n                          </Dialog.Title>\n                          <div className='ml-3 flex h-7 items-center'>\n                            <button\n                              type='button'\n                              className='rounded-md  text-gray-900 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-white'\n                              onClick={() => setOpenSlideOver(false)}\n                            >\n                              <span className='sr-only'>Close panel</span>\n                              <XIcon className='h-6 w-6' aria-hidden='true' />\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='flex flex-1 flex-col justify-between'>\n                        <div className='px-4 sm:px-6'>\n                          <div className='space-y-6 pt-6 pb-5'>\n                            <Input\n                              name='name'\n                              label='Name'\n                              type='text'\n                              value={selectedUser?.name || ''}\n                              autoComplete='name'\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            <RoleSelect\n                              name='role'\n                              label='Role'\n                              value={selectedUser?.role || ''}\n                            />\n\n                            <div>\n                              <label className='block text-sm font-medium text-gray-900'>\n                                {' '}\n                                Username{' '}\n                              </label>\n                              <div className='mt-1'>\n                                <span className='block w-full rounded-md  border border-gray-300 bg-gray-50 p-3 text-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'>\n                                  {selectedUser?.username || 'N/A'}\n                                </span>\n                              </div>\n                            </div>\n                            <div>\n                              <label className='block text-sm font-medium text-gray-900'>\n                                {' '}\n                                Provider{' '}\n                              </label>\n                              <div className='mt-1'>\n                                <span className='block w-full rounded-md  border border-gray-300 bg-gray-50 p-3 text-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'>\n                                  {selectedUser?.provider || 'N/A'}\n                                </span>\n                              </div>\n                            </div>\n                            <div>\n                              <label className='block text-sm font-medium text-gray-900'>\n                                {' '}\n                                Email{' '}\n                              </label>\n                              <div className='mt-1'>\n                                <span className='block w-full rounded-md  border border-gray-300 bg-gray-50 p-3 text-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'>\n                                  {selectedUser?.email || 'N/A'}\n                                </span>\n                              </div>\n\n                              <input\n                                type='hidden'\n                                name='userId'\n                                value={selectedUser?.id || ''}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='flex flex-shrink-0 content-center justify-between px-4 py-4'>\n                      <button\n                        type='button'\n                        onClick={() => setConfirmingDeletion(true)}\n                        className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n                      >\n                        <TrashIcon className='h-6 w-6' aria-hidden='true' />\n                      </button>\n                      <div className='flex content-center'>\n                        <button\n                          type='button'\n                          className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n                          onClick={() => setOpenSlideOver(false)}\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          disabled={transition.state === 'submitting'}\n                          type='submit'\n                          className={`${\n                            transition.submission && 'cursor-progress'\n                          } ml-4 inline-flex justify-center rounded-md border border-transparent bg-red-600 py-2.5 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                          // onClick={() => { // undecided for this\n                          //   if (transition.state !== 'submitting') {\n                          //     setOpenSlideOver(false)\n                          //   }\n                          // }}\n                        >\n                          {transition.submission ? (\n                            <div className='flex w-8 items-stretch justify-center'>\n                              <svg\n                                className='w-5 animate-spin text-white'\n                                xmlns='http://www.w3.org/2000/svg'\n                                fill='none'\n                                viewBox='0 0 24 24'\n                              >\n                                <circle\n                                  className='opacity-25'\n                                  cx='12'\n                                  cy='12'\n                                  r='10'\n                                  stroke='currentColor'\n                                  strokeWidth='4'\n                                ></circle>\n                                <path\n                                  className='opacity-75'\n                                  fill='currentColor'\n                                  d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                                ></path>\n                              </svg>\n                            </div>\n                          ) : (\n                            'Save'\n                          )}\n                        </button>\n                      </div>\n                    </div>\n                  </ValidatedForm>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\n\nimport { Role, User } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport ManageUsersForm from '~/components/ManageUserForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const users = await db.user.findMany({\n    take: 10,\n    select: {\n      id: true,\n      name: true,\n      role: true,\n      username: true,\n      provider: true,\n      email: true,\n    },\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  const usersWithoutCurrentUser = users.filter((user) => user?.id !== id)\n\n  return json({ users: usersWithoutCurrentUser })\n}\n\nexport const validator = withZod(\n  z.object({\n    name: zfd.text(\n      z.string({\n        required_error: 'Name is required',\n      })\n    ),\n    role: zfd.text(\n      z.string({\n        required_error: 'Role is required',\n      })\n    ),\n    userId: zfd.text(\n      z.string({\n        required_error: 'User id is invalid',\n      })\n    ),\n  })\n)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n\n  if (formData.get('_method') === 'delete') {\n    const userId = formData.get('userId') as string\n    invariant(userId, 'userId is not found.')\n    const user = await db.user.delete({\n      where: { id: userId },\n    })\n    return redirect('/manage-users')\n  }\n\n  const result = await validator.validate(formData)\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, role, userId } = result.data\n\n  await db.user.update({\n    where: {\n      id: userId,\n    },\n    data: {\n      name,\n      role: role as Role,\n    },\n  })\n\n  return redirect('/manage-users')\n}\nexport default function Example() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedUser, setSelectedUser] = useState<User | null>(null)\n\n  const { users } = useLoaderData()\n  return (\n    <>\n      <ManageUsersForm\n        openSlideOver={openSlideOver}\n        setOpenSlideOver={setOpenSlideOver}\n        selectedUser={selectedUser}\n      />\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Manage Users\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete users.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Name\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Role\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Username\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      OAuth Provider\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Email\n                    </th>\n                    {/* <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th> */}\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {users.map((user: User) => (\n                    <tr\n                      onClick={() => {\n                        setOpenSlideOver(true)\n                        setSelectedUser(user)\n                      }}\n                      key={user.id}\n                      className='hover:cursor-pointer hover:bg-red-50'\n                    >\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.name}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.role}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.username}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.provider}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.email}\n                        </div>\n                      </td>\n\n                      {/* <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>999</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {user.brand}\n                      </td> */}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { Role } from '@prisma/client'\nimport { useField } from 'remix-validated-form'\n\ntype SelectProps = {\n  name: string\n  label: string\n  value: Role | string\n  className?: string\n}\n\nexport const RoleSelect = ({ name, label, value, className }: SelectProps) => {\n  const { error, getInputProps } = useField(name)\n\n  return (\n    <div>\n      <label htmlFor={name} className='block text-sm font-medium text-gray-900'>\n        {label}\n      </label>\n      <select\n        {...getInputProps({ id: name })}\n        defaultValue={value}\n        className={`mt-1 block w-full appearance-none rounded-md border ${\n          error ? 'border-red-500' : 'border-gray-300'\n        } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n      >\n        {Object.values(Role).map((role) => (\n          <option key={role} value={role}>\n            {role}\n          </option>\n        ))}\n      </select>\n      {error && <span className='text-sm text-red-500'>{error}</span>}\n    </div>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon } from '@heroicons/react/outline'\nimport { Form, useFetcher, useTransition } from 'remix'\n\ninterface Props {\n  userId: string\n  confirmingDeletion: boolean\n  setConfirmingDeletion: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function ConfirmDeleteModal({\n  userId,\n  confirmingDeletion,\n  setConfirmingDeletion,\n}: Props) {\n  const cancelButtonRef = useRef(null)\n  const fetcher = useFetcher()\n\n  useEffect(() => {\n    if (fetcher.type === 'done') setConfirmingDeletion(false)\n  }, [fetcher])\n\n  return (\n    <Transition.Root show={confirmingDeletion} as={Fragment}>\n      <Dialog\n        as='div'\n        className='fixed inset-0 z-50 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        onClose={setConfirmingDeletion}\n      >\n        <div className='flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:h-screen sm:align-middle'\n            aria-hidden='true'\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='relative inline-block transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6 sm:align-middle'>\n              <div className='sm:flex sm:items-start'>\n                <div className='mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon\n                    className='h-6 w-6 text-red-600'\n                    aria-hidden='true'\n                  />\n                </div>\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg font-medium leading-6 text-gray-900'\n                  >\n                    Delete user\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      Are you sure you want to delete this user? All of the\n                      user's data will be permanently removed from our servers\n                      forever. This action cannot be undone.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                <fetcher.Form method='post'>\n                  <input type='hidden' name='_method' value='delete' />\n                  <input type='hidden' name='userId' value={userId} />\n                  <button\n                    type='submit'\n                    className='inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm'\n                  >\n                    {fetcher.state === 'submitting' ? (\n                      <svg\n                        className='ml-3 mr-3 h-5 w-5 animate-spin text-white'\n                        xmlns='http://www.w3.org/2000/svg'\n                        fill='none'\n                        viewBox='0 0 24 24'\n                      >\n                        <circle\n                          className='opacity-25'\n                          cx='12'\n                          cy='12'\n                          r='10'\n                          stroke='currentColor'\n                          strokeWidth='4'\n                        ></circle>\n                        <path\n                          className='opacity-75'\n                          fill='currentColor'\n                          d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                        ></path>\n                      </svg>\n                    ) : (\n                      'Delete'\n                    )}\n                  </button>\n                </fetcher.Form>\n                <button\n                  type='button'\n                  className='mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm'\n                  onClick={() => setConfirmingDeletion(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n", "/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/typography'),\n      require('@tailwindcss/aspect-ratio'),\n    ],\n  }\n  ```\n*/\nimport { useState } from 'react'\nimport { Disclosure, RadioGroup, Tab } from '@headlessui/react'\nimport { MinusIcon, StarIcon } from '@heroicons/react/solid'\nimport { MinusSmIcon, PlusIcon, PlusSmIcon } from '@heroicons/react/outline'\nimport {\n  ActionFunction,\n  Form,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n  useParams,\n} from 'remix'\nimport invariant from 'tiny-invariant'\nimport { Quantity } from '~/components/Quantity'\nimport { db } from '~/utils/db.server'\nimport { validationError } from 'remix-validated-form'\nimport { authenticator } from '~/services/auth.server'\nimport { Role, Status } from '@prisma/client'\n\nexport type Breadcrumb = {\n  label: string\n  route?: string\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  const { id: productId } = params\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return null\n  }\n  console.log(`product: ${JSON.stringify(product, null, 2)}`)\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n    })\n\n    if (currentOrder) {\n      const res = await db.order.update({\n        where: {\n          id: currentOrder?.id,\n        },\n        data: {\n          amount: currentOrder.amount + product.price,\n          productIds: {\n            push: [productId ? productId : ''],\n          },\n        },\n      })\n      return res\n    } else {\n      return await db.order.create({\n        data: {\n          amount: product.price,\n          productIds: [product.id],\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n    }\n  }\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const { id: productId } = params\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n  return product\n}\n\nexport default function Example() {\n  const product = useLoaderData()\n  const breads: Breadcrumb[] = [\n    { label: 'All Products', route: '/products' },\n    {\n      label: `${product.category[0]}${product.category.toLowerCase().slice(1)}`,\n      route: `/${product.category.toLowerCase()}`,\n    },\n  ]\n\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-2xl py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8'>\n        <nav\n          aria-label='Breadcrumb'\n          className='mx-auto mt-8 mb-8 max-w-7xl lg:mt-0'\n        >\n          <ol role='list' className='flex items-center'>\n            {breads.map((breadcrumb) => (\n              <li key={breadcrumb.label}>\n                <div className='flex items-center'>\n                  <a\n                    href={breadcrumb.route}\n                    className=' text-sm font-medium text-gray-900 hover:text-red-600'\n                  >\n                    {breadcrumb.label}\n                  </a>\n                  <svg\n                    aria-hidden='true'\n                    width='24'\n                    height='24'\n                    fill='none'\n                    className='mx-2 flex-none text-gray-300'\n                  >\n                    <path\n                      d='M10.75 8.75l3.5 3.25-3.5 3.25'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    ></path>\n                  </svg>\n                </div>\n              </li>\n            ))}\n            <li className='text-sm'>\n              <a\n                href='#'\n                aria-current='page'\n                className='font-medium text-red-400 hover:text-red-600'\n              >\n                {product.name}\n              </a>\n            </li>\n          </ol>\n        </nav>\n        <div className='lg:grid lg:grid-cols-2 lg:items-start lg:gap-x-8'>\n          {/* Image gallery */}\n          {/* <Tab.Group as='div' className='flex flex-col-reverse'> */}\n          {/* Image selector */}\n          {/* <div className='mx-auto mt-6 hidden w-full max-w-2xl sm:block lg:max-w-none'>\n              <Tab.List className='grid grid-cols-4 gap-6'>\n                {product.images.map((image) => (\n                  <Tab\n                    key={image.id}\n                    className='relative flex h-24 cursor-pointer items-center justify-center rounded-md bg-white text-sm font-medium uppercase text-gray-900 hover:bg-gray-50 focus:outline-none focus:ring focus:ring-opacity-50 focus:ring-offset-4'\n                  >\n                    {({ selected }) => (\n                      <>\n                        <span className='sr-only'>{image.name}</span>\n                        <span className='absolute inset-0 overflow-hidden rounded-md'>\n                          <img\n                            src={image.src}\n                            alt=''\n                            className='h-full w-full object-cover object-center'\n                          />\n                        </span>\n                        <span\n                          className={classNames(\n                            selected ? 'ring-indigo-500' : 'ring-transparent',\n                            'pointer-events-none absolute inset-0 rounded-md ring-2 ring-offset-2'\n                          )}\n                          aria-hidden='true'\n                        />\n                      </>\n                    )}\n                  </Tab>\n                ))}\n              </Tab.List>\n            </div> */}\n\n          {/* <Tab.Panels className='aspect-w-1 aspect-h-1 w-full'></Tab.Panels>\n          </Tab.Group> */}\n\n          <div className='flex flex-col-reverse'>\n            <img\n              src={product.imageUrl}\n              className='h-full w-full object-cover object-center sm:rounded-lg'\n            />\n          </div>\n\n          {/* Product info */}\n          <div className='mt-10 px-4 sm:mt-16 sm:px-0 lg:mt-0'>\n            <h1 className='text-4xl font-extrabold tracking-tight text-gray-900'>\n              {product.name}\n            </h1>\n\n            <div className='mt-3'>\n              <h2 className='sr-only'>Product information</h2>\n              <p className='text-3xl font-semibold text-red-500'>\n                \u20B1{product.price}{' '}\n              </p>\n            </div>\n\n            <div className='mt-6'>\n              <h3 className='sr-only'>Description</h3>\n\n              <p className='mb-2 text-base font-medium text-gray-900'>\n                {product.weight ? `${product.weight} per quantity` : null}\n              </p>\n              <p className='space-y-6 text-base text-gray-700'>\n                {product.description}\n              </p>\n            </div>\n\n            <Form method='post' className='mt-6'>\n              <div className='sm:flex-col1 mt-10 flex'>\n                <button\n                  type='submit'\n                  className='flex max-w-xs flex-1 items-center justify-center rounded-md border border-transparent bg-red-500 py-3 px-8 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-offset-2 focus:ring-offset-gray-50 sm:w-full'\n                >\n                  Add to cart\n                </button>\n              </div>\n            </Form>\n\n            <section aria-labelledby='details-heading' className='mt-12'>\n              <h2 id='details-heading' className='sr-only'>\n                Additional details\n              </h2>\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { Link } from 'remix'\n\nexport default function Unauthorized() {\n  return (\n    <>\n      <div className='mt-16 flex min-h-full flex-col bg-white pt-16 pb-12'>\n        <main className='mx-auto flex w-full max-w-7xl flex-grow flex-col justify-center px-4 sm:px-6 lg:px-8'>\n          <div className='flex flex-shrink-0 justify-center'>\n            <Link to='/' className='inline-flex'>\n              <span className='sr-only'>Camille Meat Shop</span>\n              <img\n                className='h-12 w-auto'\n                src='/images/logo.png'\n                alt='Camille Meat Shop Logo'\n              />\n            </Link>\n          </div>\n          <div className='py-16'>\n            <div className='text-center'>\n              <p className='text-sm font-semibold uppercase tracking-wide text-red-600'>\n                Unauthorized\n              </p>\n              <h1 className='mt-2 text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl'>\n                Lost?\n              </h1>\n              <p className='mt-2 text-base text-gray-500'>\n                You're not supposed to be in this page\n              </p>\n              <div className='mt-6'>\n                <Link\n                  to='/'\n                  className='text-base font-medium text-red-600 hover:text-red-500'\n                >\n                  Go back home<span aria-hidden='true'> &rarr;</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </main>\n        <footer className='mx-auto w-full max-w-7xl flex-shrink-0 px-4 sm:px-6 lg:px-8'>\n          <nav className='flex justify-center space-x-4'>\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Contact Support\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Status\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Twitter\n            </a>\n          </nav>\n        </footer>\n      </div>\n    </>\n  )\n}\n", "import { Fragment, useEffect, useState } from 'react'\nimport { Listbox, RadioGroup, Transition } from '@headlessui/react'\nimport {\n  CheckCircleIcon,\n  CheckIcon,\n  CreditCardIcon,\n  SelectorIcon,\n  TrashIcon,\n} from '@heroicons/react/solid'\nimport { CashIcon } from '@heroicons/react/outline'\nimport {\n  ActionFunction,\n  Form,\n  json,\n  LoaderFunction,\n  redirect,\n  useActionData,\n  useLoaderData,\n} from 'remix'\nimport { authenticator } from '~/services/auth.server'\nimport { Address, Role, Status } from '@prisma/client'\nimport { db } from '~/utils/db.server'\nimport { Product } from './products'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useField, ValidatedForm, validationError } from 'remix-validated-form'\nimport { Input } from '~/components/Input'\nimport {\n  payCard,\n  createGCashSource,\n  createGrabPaySource,\n  payMaya,\n} from '~/services/paymongo.server'\n\nconst baseSchema = z.object({\n  contactPerson: zfd.text(z.string().nonempty()),\n  phoneNumber: zfd.text(z.string().nonempty()),\n  address: zfd.text(z.string().nonempty()),\n  city: zfd.text(z.string().nonempty()),\n  cardNumber: zfd.text(z.string().optional()),\n})\n\nexport const addressValidator = withZod(baseSchema)\n\nconst paymentMethods = [\n  { id: 'cod', title: 'Cash on delivery' },\n  { id: 'card', title: 'Credit or debit card' },\n  { id: 'gcash', title: 'GCash', imageSrc: '/images/gcash-logo.png' },\n  { id: 'paymaya', title: 'PayMaya', imageSrc: '/images/paymaya-logo.png' },\n  { id: 'grabpay', title: 'GrabPay', imageSrc: '/images/grabpay-logo.png' },\n]\n\nenum PaymentMethod {\n  CARD = 'card',\n  COD = 'cod',\n  GCASH = 'gcash',\n  GRABPAY = 'grabpay',\n  PAYMAYA = 'paymaya',\n}\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.id) {\n    return redirect('/signin')\n  }\n\n  const formData = await request.formData()\n  const newAddress = formData.get('newAddress')\n  const orderId = formData.get('orderId')?.toString() || ''\n  const paymentMethod = formData.get('paymentMethod[id]')?.toString() || ''\n\n  if (!orderId) {\n    return redirect('/cart')\n  }\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n      status: 'IN_CART',\n    },\n  })\n\n  if (!order) {\n    return redirect('/cart')\n  }\n\n  if (!order?.id) {\n    return redirect('/cart')\n  }\n\n  let orderAddress: Address | null = null\n  if (newAddress) {\n    const nickname = formData.get('addressNickname')?.toString() || 'Home'\n    if (!nickname)\n      return validationError({\n        fieldErrors: {\n          nickname: 'Required',\n        },\n      })\n    const phoneNumber = formData.get('phoneNumber')?.toString() || ''\n    const city = formData.get('city')?.toString() || ''\n    const address = formData.get('address')?.toString() || ''\n    const contactPerson = formData.get('contactPerson')?.toString() || ''\n\n    orderAddress = await db.address.create({\n      data: {\n        nickname,\n        phoneNumber,\n        city,\n        address,\n        contactPerson,\n        userId: user.id,\n      },\n    })\n  } else {\n    const addressId = formData.get('selectedAddressId')?.toString()\n    if (addressId) {\n      orderAddress = await db.address.findFirst({\n        where: {\n          id: addressId,\n        },\n      })\n    }\n  }\n\n  if (paymentMethod === PaymentMethod.CARD) {\n    const cardNumber = formData.get('cardNumber')?.toString() || ''\n    const nameOnCard = formData.get('nameOnCard')?.toString() || ''\n    const expiration = formData.get('expiration')?.toString() || ''\n    const cvc = formData.get('cvc')?.toString() || ''\n\n    if (!cardNumber || !nameOnCard || !expiration || !cvc) {\n      return validationError({\n        fieldErrors: {\n          cardNumber: !cardNumber ? 'Required' : '',\n          nameOnCard: !nameOnCard ? 'Required' : '',\n          expiration: !expiration ? 'Required' : '',\n          cvc: !cvc ? 'Required' : '',\n        },\n      })\n    }\n\n    const res = await payCard({\n      cardNumber,\n      nameOnCard,\n      expiration,\n      cvc,\n      amount: order.amount,\n    })\n\n    if (res.errors) {\n      return json({\n        paymentErrors: res.errors,\n      })\n    }\n\n    await db.order.update({\n      where: {\n        id: orderId,\n      },\n      data: {\n        status: Status.PACKAGING,\n        paymentOption: 'CARD',\n        addressId: orderAddress?.id,\n        paymentReference: res.paymentReference,\n        paidAt: new Date(),\n      },\n    })\n\n    await db.product.updateMany({\n      where: {\n        id: {\n          in: order.productIds || [],\n        },\n      },\n      data: {\n        stock: { decrement: 1 },\n      },\n    })\n\n    return redirect(`order-success/${orderId}`)\n  } else if (paymentMethod === PaymentMethod.GCASH) {\n    const res = await createGCashSource({\n      orderId,\n      amount: order?.amount || 0,\n    })\n    if (res.errors) {\n      return json({\n        paymentErrors: res.errors,\n      })\n    }\n\n    const { sourceId, checkoutUrl } = res\n    await db.order.update({\n      where: {\n        id: orderId,\n      },\n      data: {\n        paymentOption: 'GCASH',\n        addressId: orderAddress?.id,\n        sourceId: sourceId,\n      },\n    })\n\n    return redirect(checkoutUrl)\n  } else if (paymentMethod === PaymentMethod.GRABPAY) {\n    const res = await createGrabPaySource({\n      orderId,\n      amount: order?.amount || 0,\n    })\n    if (res.errors) {\n      return json({\n        paymentErrors: res.errors,\n      })\n    }\n\n    const { sourceId, checkoutUrl } = res\n    await db.order.update({\n      where: {\n        id: orderId,\n      },\n      data: {\n        paymentOption: 'GRABPAY',\n        addressId: orderAddress?.id,\n        sourceId: sourceId,\n      },\n    })\n\n    return redirect(checkoutUrl)\n  } else if (paymentMethod === PaymentMethod.PAYMAYA) {\n    const res = await payMaya({\n      orderId,\n      amount: order?.amount || 0,\n    })\n\n    if (res.errors) {\n      return json({\n        paymentErrors: res.errors,\n      })\n    }\n\n    const { paymentIntentId, checkoutUrl } = res\n    await db.order.update({\n      where: {\n        id: orderId,\n      },\n      data: {\n        paymentOption: 'PAYMAYA',\n        addressId: orderAddress?.id,\n        paymentIntentId: paymentIntentId,\n      },\n    })\n    return redirect(checkoutUrl)\n  } else {\n    //COD\n    await db.order.update({\n      where: {\n        id: orderId,\n      },\n      data: {\n        status: Status.PACKAGING,\n        paymentOption: 'COD',\n        addressId: orderAddress?.id,\n        paidAt: new Date(),\n      },\n    })\n\n    await db.product.updateMany({\n      where: {\n        id: {\n          in: order.productIds || [],\n        },\n      },\n      data: {\n        stock: { decrement: 1 },\n      },\n    })\n    return redirect(`order-success/${orderId}`)\n  }\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  const currentOrder = await db.order.findFirst({\n    where: {\n      userId: user?.id,\n      status: 'IN_CART',\n    },\n  })\n\n  if (!currentOrder) redirect('/')\n\n  const products = await db.product.findMany({\n    where: {\n      id: {\n        in: currentOrder?.productIds || [],\n      },\n    },\n  })\n\n  const savedAddresses = await db.address.findMany({\n    where: {\n      userId: user.id,\n    },\n  })\n\n  const url = new URL(request.url)\n  const paymentFailed = url.searchParams.get('paymentFailed')\n\n  const data = { products, currentOrder, savedAddresses, paymentError: false }\n  if (paymentFailed) data.paymentError = true\n\n  return data\n}\n\nexport default function Example() {\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(\n    paymentMethods[0]\n  )\n\n  const { currentOrder, products, savedAddresses } = useLoaderData()\n\n  const [selected, setSelected] = useState<Address | null>(\n    savedAddresses[0] || null\n  )\n  const [newAddress, setNewAddress] = useState(!savedAddresses?.length)\n\n  const loaderData = useLoaderData()\n  const actionData = useActionData()\n\n  return (\n    <div className='bg-gray-50'>\n      <ValidatedForm\n        validator={addressValidator}\n        method='post'\n        className='mx-auto max-w-2xl px-4 pt-24 pb-24 sm:px-6 lg:max-w-7xl lg:px-8'\n      >\n        <input\n          type='hidden'\n          value={newAddress ? 'true' : ''}\n          name='newAddress'\n        />\n\n        <input type='hidden' value={currentOrder?.id || ''} name='orderId' />\n        <h1 className='mb-6 text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl'>\n          Checkout\n        </h1>\n        <h2 className='sr-only'>Checkout</h2>\n\n        <div className='lg:grid lg:grid-cols-2 lg:gap-x-12 xl:gap-x-16'>\n          <div>\n            <div>\n              {savedAddresses?.length ? (\n                <div className=' lg:max-w-[36rem] '>\n                  <input\n                    type='hidden'\n                    value={selected?.id || ''}\n                    name='selectedAddressId'\n                  />\n                  <Listbox\n                    disabled={newAddress}\n                    value={selected}\n                    onChange={setSelected}\n                  >\n                    {({ open }) => (\n                      <>\n                        <Listbox.Label className='block text-xl font-medium text-gray-900'>\n                          Saved addresses\n                        </Listbox.Label>\n                        <div className='relative mt-4 mb-4'>\n                          <Listbox.Button className=' relative w-full cursor-default rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-left shadow-sm focus:border-red-500 focus:outline-none focus:ring-1 focus:ring-red-500 disabled:cursor-not-allowed disabled:text-gray-400 sm:text-sm'>\n                            <span className='block truncate py-1'>\n                              {newAddress && savedAddresses?.length > 0\n                                ? 'Saving the following information as a new address...'\n                                : selected?.nickname || 'Select an address'}\n                            </span>\n                            <span className='pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2'>\n                              <SelectorIcon\n                                className='h-5 w-5 text-gray-400'\n                                aria-hidden='true'\n                              />\n                            </span>\n                          </Listbox.Button>\n\n                          <Transition\n                            show={open}\n                            as={Fragment}\n                            leave='transition ease-in duration-100'\n                            leaveFrom='opacity-100'\n                            leaveTo='opacity-0'\n                          >\n                            <Listbox.Options className='absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm'>\n                              {savedAddresses?.length > 0 &&\n                                savedAddresses.map((address: Address) => (\n                                  <Listbox.Option\n                                    key={address.id}\n                                    className={({ active }) =>\n                                      classNames(\n                                        active\n                                          ? 'bg-red-500 text-white'\n                                          : 'text-gray-900',\n                                        'relative cursor-default select-none py-2 pl-3 pr-9'\n                                      )\n                                    }\n                                    value={address}\n                                  >\n                                    {({ selected, active }) => (\n                                      <>\n                                        <span\n                                          className={classNames(\n                                            selected\n                                              ? 'font-semibold'\n                                              : 'font-normal',\n                                            'block truncate'\n                                          )}\n                                        >\n                                          {address.nickname}\n                                        </span>\n\n                                        {selected ? (\n                                          <span\n                                            className={classNames(\n                                              active\n                                                ? 'text-white'\n                                                : 'text-red-600',\n                                              'absolute inset-y-0 right-0 flex items-center pr-4'\n                                            )}\n                                          >\n                                            <CheckIcon\n                                              className='h-5 w-5'\n                                              aria-hidden='true'\n                                            />\n                                          </span>\n                                        ) : null}\n                                      </>\n                                    )}\n                                  </Listbox.Option>\n                                ))}\n                            </Listbox.Options>\n                          </Transition>\n                        </div>\n                      </>\n                    )}\n                  </Listbox>\n                  <div className='my-4 flex items-center'>\n                    <input\n                      checked={newAddress}\n                      onChange={() => setNewAddress(!newAddress)}\n                      type='checkbox'\n                      name='newAddress'\n                      id='new-address'\n                      className='h-4 w-4 rounded border-gray-300 text-red-600 focus:ring-red-500'\n                    />\n                    <label\n                      htmlFor='new-address'\n                      className='ml-2 text-sm text-gray-900'\n                    >\n                      Save the following address as a new address\n                    </label>\n                  </div>\n                  {newAddress ? (\n                    <div className='my-4'>\n                      <Input\n                        name='addressNickname'\n                        label='Address nickname'\n                        type='text'\n                        className={`${\n                          loaderData?.error?.message && 'border-red-500'\n                        }`}\n                      />\n                    </div>\n                  ) : null}\n                </div>\n              ) : (\n                <>\n                  <div className='my-4 flex items-center'>\n                    <input\n                      checked={newAddress}\n                      onChange={() => setNewAddress(!newAddress)}\n                      type='checkbox'\n                      name='newAddress'\n                      id='new-address'\n                      className='h-4 w-4 rounded border-gray-300 text-red-600 focus:ring-red-500'\n                    />\n                    <label\n                      htmlFor='new-address'\n                      className='ml-2 text-sm text-gray-900'\n                    >\n                      Save the following address as a new address\n                    </label>\n                  </div>\n                  {newAddress ? (\n                    <div className='my-4'>\n                      <Input\n                        name='addressNickname'\n                        label='Address nickname'\n                        type='text'\n                        className={`${\n                          loaderData?.error?.message && 'border-red-500'\n                        }`}\n                      />\n                    </div>\n                  ) : null}\n                </>\n              )}\n              <div className='mt-5 border-t border-gray-200 pt-5'>\n                <h2 className='text-xl font-medium text-gray-900'>\n                  Contact information\n                </h2>\n                <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                  <div>\n                    <Input\n                      name='contactPerson'\n                      label='Contact person'\n                      type='text'\n                      value={selected?.contactPerson || undefined}\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div>\n                    <Input\n                      name='phoneNumber'\n                      label='Phone number'\n                      type='text'\n                      value={selected?.phoneNumber || undefined}\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='mt-5 border-t border-gray-200 pt-5'>\n              <h2 className='text-lg font-medium text-gray-900'>\n                Delivery information\n              </h2>\n\n              <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                <div className='sm:col-span-2'>\n                  <Input\n                    name='address'\n                    label='Address'\n                    type='text'\n                    value={selected?.address || undefined}\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                </div>\n\n                <div>\n                  <Input\n                    name='city'\n                    label='City / Municipality'\n                    type='text'\n                    value={selected?.city || undefined}\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                </div>\n\n                <div>\n                  <label\n                    htmlFor='province'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    Province\n                  </label>\n                  <div className='mt-1'>\n                    <input\n                      type='text'\n                      name='province'\n                      id='province'\n                      value='Cavite'\n                      disabled\n                      autoComplete='address-level1'\n                      className='block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-red-500 focus:ring-red-500 disabled:border disabled:text-gray-500  sm:text-sm'\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='mt-5 border-t border-gray-200 pt-5'>\n              <RadioGroup\n                name='paymentMethod'\n                value={selectedPaymentMethod}\n                onChange={setSelectedPaymentMethod}\n              >\n                <RadioGroup.Label className='text-lg font-medium text-gray-900'>\n                  Payment method\n                </RadioGroup.Label>\n\n                <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                  {paymentMethods.map((paymentMethod) => (\n                    <RadioGroup.Option\n                      key={paymentMethod.id}\n                      value={paymentMethod}\n                      className={({ checked, active }) =>\n                        classNames(\n                          checked ? 'border-transparent' : 'border-gray-300',\n                          active ? 'ring-2 ring-green-500' : '',\n                          'relative flex cursor-pointer rounded-lg border bg-white p-4 shadow-sm focus:outline-none'\n                        )\n                      }\n                    >\n                      {({ checked, active }) => (\n                        <>\n                          <div className='flex-4 flex max-h-8 items-center justify-between'>\n                            <div className='flex items-center '>\n                              {paymentMethod.id === 'card' && (\n                                <CreditCardIcon className=' mr-2 w-10 text-green-500' />\n                              )}\n                              {paymentMethod.id === 'cod' && (\n                                <CashIcon className=' mr-2 w-8 text-green-500' />\n                              )}\n                              <RadioGroup.Label\n                                as='span'\n                                className='flex text-base font-medium text-gray-900'\n                              >\n                                {paymentMethod?.imageSrc ? (\n                                  <img\n                                    src={paymentMethod.imageSrc}\n                                    alt={paymentMethod.id}\n                                    className='w-24'\n                                  />\n                                ) : (\n                                  paymentMethod.title\n                                )}\n                              </RadioGroup.Label>\n                              {/* <RadioGroup.Description\n                                as='span'\n                                className='mt-1 flex items-center text-sm text-gray-500'\n                              >\n                                {paymentMethod.turnaround}\n                              </RadioGroup.Description> */}\n                              {/* <RadioGroup.Description\n                                as='span'\n                                className='mt-6 text-sm font-medium text-gray-900'\n                              >\n                                {paymentMethod.price}\n                              </RadioGroup.Description> */}\n                            </div>\n                            {checked ? (\n                              <div>\n                                <CheckCircleIcon\n                                  className=' ml-3 h-5 w-5 text-green-500'\n                                  aria-hidden='true'\n                                />\n                              </div>\n                            ) : null}\n                          </div>\n\n                          <div\n                            className={classNames(\n                              active ? 'border' : 'border-2',\n                              checked\n                                ? 'border-green-500'\n                                : 'border-transparent',\n                              'pointer-events-none absolute -inset-px rounded-lg'\n                            )}\n                            aria-hidden='true'\n                          />\n                        </>\n                      )}\n                    </RadioGroup.Option>\n                  ))}\n                </div>\n              </RadioGroup>\n              {selectedPaymentMethod.id === PaymentMethod.CARD ? (\n                <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                  <div className='sm:col-span-2'>\n                    <Input\n                      name='cardNumber'\n                      label='Credit / debit card number'\n                      value='4343434343434345'\n                      type='text'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div className='sm:col-span-2'>\n                    <Input\n                      name='nameOnCard'\n                      label='Name on card'\n                      value='Cardholder Name'\n                      type='text'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div>\n                    <Input\n                      name='expiration'\n                      label='Expiration date (MM/YY)'\n                      type='text'\n                      value='09/22'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div>\n                    <Input\n                      name='cvc'\n                      label='CVC'\n                      type='text'\n                      value='123'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n                </div>\n              ) : null}\n            </div>\n\n            {/* Payment */}\n          </div>\n\n          {/* Order summary */}\n          <div className='mt-5 lg:mt-0'>\n            <h2 className='text-xl font-medium text-gray-900'>Order summary</h2>\n\n            <div className='mt-6 rounded-lg border border-gray-200 bg-white shadow-sm'>\n              <h3 className='sr-only'>Items in your cart</h3>\n              <ul role='list' className='divide-y divide-gray-200'>\n                {products.map((product: Product) => {\n                  const quantity = currentOrder?.productIds.filter(\n                    (id: string) => {\n                      return product.id?.toString() === id\n                    }\n                  )?.length\n                  return (\n                    <li key={product.id} className='flex py-6 px-4 sm:px-6'>\n                      <div className='flex-shrink-0'>\n                        <img\n                          src={product.imageUrl}\n                          alt={product.imageAlt}\n                          className='w-40 rounded-md'\n                        />\n                      </div>\n\n                      <div className='ml-6 flex flex-1 flex-col pt-4'>\n                        <div className='flex'>\n                          <div className='min-w-0 flex-1'>\n                            <h4 className='text-lg'>\n                              <a\n                                href={`/products/${product.id}`}\n                                className='font-medium text-gray-700 hover:text-red-800'\n                              >\n                                {product.name}\n                              </a>\n                            </h4>\n                            <p className='text-md mt-1 text-red-500'>\n                              \u20B1{product.price}\n                            </p>\n                            <div className='mt-2 '>\n                              <p>Quantity: {quantity}</p>\n                            </div>\n                          </div>\n\n                          {/* <div className='ml-4 flow-root flex-shrink-0'>\n                            <button\n                              type='button'\n                              className='-m-2.5 flex items-center justify-center bg-white p-2.5 text-gray-400 hover:text-red-500'\n                            >\n                              <span className='sr-only'>Remove</span>\n                              <TrashIcon\n                                className='h-5 w-5'\n                                aria-hidden='true'\n                              />\n                            </button>\n                          </div> */}\n                        </div>\n\n                        <div className='flex flex-1 items-end justify-between pt-2'></div>\n                      </div>\n                    </li>\n                  )\n                })}\n              </ul>\n              <dl className='space-y-6 border-t border-gray-200 py-6 px-4 sm:px-6'>\n                <div className='flex items-center justify-between'>\n                  <dt className='text-sm'>Subtotal</dt>\n                  <dd className='text-sm font-medium text-gray-900'>\n                    \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                  </dd>\n                </div>\n                <div className='flex items-center justify-between'>\n                  <dt className='text-sm'>Delivery fee</dt>\n                  <dd className='text-right text-sm font-medium text-gray-900'>\n                    {currentOrder?.amount ? (\n                      <>\n                        <p className='line-through'>\u20B150</p>\n                      </>\n                    ) : (\n                      <>\n                        <p>\u20B10</p>\n                      </>\n                    )}\n                    {currentOrder?.amount && (\n                      <div className='mt-2 flex justify-end space-x-2'>\n                        <p className='text-right text-sm font-medium text-gray-900'>\n                          Free delivery promo applied\n                        </p>\n                        <CheckCircleIcon className='w-5 text-green-500' />\n                      </div>\n                    )}\n                  </dd>\n                </div>\n\n                <div className='flex items-center justify-between border-t border-gray-200 pt-6'>\n                  <dt className='text-base font-medium'>Total amount</dt>\n                  <dd className='text-base font-medium text-red-500'>\n                    {' '}\n                    \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                  </dd>\n                </div>\n              </dl>\n\n              <div className='border-t border-gray-200 py-6 px-4 sm:px-6'>\n                <div>\n                  {loaderData?.paymentError ? (\n                    <>\n                      <p className='mb-4 font-semibold text-red-600'>\n                        Payment Errors\n                      </p>\n                      <p className='mb-4 font-medium text-red-600'>\n                        Payment failed. Please try again.\n                      </p>\n                    </>\n                  ) : null}\n                  {actionData?.paymentErrors ? (\n                    <>\n                      <p className='mb-4 font-semibold text-red-600'>\n                        Payment Errors\n                      </p>\n                      {actionData.paymentErrors.map((e: string) => (\n                        <p key={e} className='mb-4 font-medium text-red-600'>\n                          {e}\n                        </p>\n                      ))}\n                    </>\n                  ) : null}\n                </div>\n                <button\n                  type='submit'\n                  className='w-full rounded-md border border-transparent bg-red-500 py-3 px-4 text-base font-medium text-white shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-50'\n                >\n                  Confirm order\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ValidatedForm>\n    </div>\n  )\n}\n", "import { Role, Status } from '@prisma/client'\nimport { LoaderFunction } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { ProductsPage } from '~/components/ProductsPage'\nimport { db } from '~/utils/db.server'\nimport { Category, Product } from './products'\nimport { ActionFunction, redirect } from '@remix-run/node'\nimport { authenticator } from '~/services/auth.server'\nimport { validationError } from 'remix-validated-form'\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const products = await db.product.findMany({\n    where: {\n      category: 'CHICKEN',\n    },\n  })\n  return products\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return validationError({\n      fieldErrors: {\n        name: 'Product does not exist',\n      },\n    })\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n    })\n\n    if (currentOrder) {\n      const res = await db.order.update({\n        where: {\n          id: currentOrder?.id,\n        },\n        data: {\n          amount: currentOrder.amount + product.price,\n          productIds: {\n            push: [productId],\n          },\n        },\n      })\n      return res\n    } else {\n      return await db.order.create({\n        data: {\n          amount: product.price,\n          productIds: [product.id],\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n    }\n  }\n}\n\nexport default function ChickenPage() {\n  const category = Category.CHICKEN\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "import { ActionFunction, json, LoaderFunction } from 'remix'\nimport { authenticator } from '~/services/auth.server'\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  await authenticator.logout(request, { redirectTo: '/' })\n}\n", "import { Form, Link, useLoaderData, useTransition } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\n\nimport { SocialsProvider } from 'remix-auth-socials'\nimport {\n  commitSession,\n  destroySession,\n  getSession,\n} from '~/services/session.server'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { ValidatedForm, validationError } from 'remix-validated-form'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { Input } from '~/components/Input'\nimport { ActionFunction, LoaderFunction, json } from '@remix-run/node'\n\ninterface SocialsButtonProps {\n  provider: SocialsProvider\n  label: string\n}\n\nexport const validator = withZod(\n  z.object({\n    username: zfd.text(\n      z.string({\n        required_error: 'Username is required',\n      })\n    ),\n    password: zfd.text(\n      z.string({\n        required_error: 'Password is required',\n      })\n    ),\n  })\n)\n\n// // Second, we need to export an action function, here we will use the\n// // `authenticator.authenticate method`\nexport let action: ActionFunction = async ({ request }) => {\n  // we call the method with the name of the strategy we want to use and the\n  // request object, optionally we pass an object with the URLs we want the user\n  // to be redirected to after a success or a failure\n\n  const requestClone = request.clone() // if not cloned, authenticator cannot use the request\n\n  // form validation\n  const formData = await request.formData()\n  const result = await validator.validate(formData)\n  if (result.error) {\n    return validationError(result.error)\n  }\n\n  return await authenticator.authenticate('user-pass-signin', requestClone, {\n    successRedirect: '/',\n    failureRedirect: '/signin',\n  })\n}\n\n// Finally, we can export a loader function where we check if the user is\n// authenticated with `authenticator.isAuthenticated` and redirect to the\n// dashboard if it is or return null if it's not\nexport let loader: LoaderFunction = async ({ request }) => {\n  await authenticator.isAuthenticated(request, { successRedirect: '/' })\n  let session = await getSession(request)\n  let error = session.get('auth:error') as string | null\n\n  return json(\n    { error },\n    {\n      headers: {\n        'Set-Cookie': await destroySession(session),\n      },\n    }\n  )\n}\n\nconst FacebookIcon = () => (\n  <svg\n    className='h-5 w-5'\n    aria-hidden='true'\n    fill='currentColor'\n    viewBox='0 0 20 20'\n  >\n    <path\n      fillRule='evenodd'\n      d='M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z'\n      clipRule='evenodd'\n    />\n  </svg>\n)\n\nconst GoogleIcon = () => (\n  <svg\n    className='h-5 w-5'\n    aria-hidden='true'\n    fill='currentColor'\n    viewBox='0 0 24 24'\n  >\n    <path\n      xmlns='http://www.w3.org/2000/svg'\n      d='M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032 s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2 C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z'\n    />{' '}\n  </svg>\n)\n\nconst SocialsButton: React.FC<SocialsButtonProps> = ({ provider, label }) => (\n  <Form action={`/auth/${provider}`} method='post'>\n    <button className='inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'>\n      <span className='sr-only'>{label}</span>\n      {provider === SocialsProvider.FACEBOOK ? (\n        <FacebookIcon />\n      ) : (\n        <GoogleIcon />\n      )}\n    </button>\n  </Form>\n)\n\nexport default function Example() {\n  const loaderData = useLoaderData()\n  const transition = useTransition()\n\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-white\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className='flex min-h-full pt-16'>\n        <div className='flex flex-1 flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24'>\n          <div className='mx-auto w-full max-w-sm lg:w-96'>\n            <div>\n              <h2 className='mt-6 text-3xl font-extrabold text-gray-900'>\n                Sign in to your account\n              </h2>\n              <p className='mt-2 text-sm text-gray-600'>\n                Or{' '}\n                <Link\n                  to='/signup'\n                  className='font-medium text-red-600 hover:text-red-500'\n                >\n                  sign up for an account\n                </Link>\n              </p>\n            </div>\n\n            <div className='mt-8'>\n              <div>\n                <div>\n                  <p className='text-sm font-medium text-gray-700'>\n                    Sign in with\n                  </p>\n\n                  <div className='mt-1 grid grid-cols-2 gap-3'>\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.FACEBOOK}\n                        label='Login with Facebook'\n                      />\n                    </div>\n\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.GOOGLE}\n                        label='Login with Google'\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='relative mt-6'>\n                  <div\n                    className='absolute inset-0 flex items-center'\n                    aria-hidden='true'\n                  >\n                    <div className='w-full border-t border-gray-300' />\n                  </div>\n                  <div className='relative flex justify-center text-sm'>\n                    <span className='bg-white px-2 text-gray-500'>\n                      Or continue with\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-6'>\n                <ValidatedForm\n                  validator={validator}\n                  method='post'\n                  className='space-y-6'\n                >\n                  <Input\n                    name='username'\n                    label='Username'\n                    type='username'\n                    autoComplete='username'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                  <Input\n                    name='password'\n                    label='Password'\n                    type='password'\n                    autoComplete='current-password'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n\n                  <div className='flex items-center justify-between space-x-8'>\n                    <div>\n                      {loaderData?.error?.message ? (\n                        <p className='text-sm font-medium text-red-600'>\n                          {loaderData?.error?.message}\n                        </p>\n                      ) : null}\n                    </div>\n\n                    <div className='text-sm'>\n                      <a\n                        href='#'\n                        className='font-medium text-red-600 hover:text-red-500'\n                      >\n                        Forgot your password?\n                      </a>\n                    </div>\n                  </div>\n\n                  <div>\n                    <button\n                      disabled={transition.state === 'submitting'}\n                      type='submit'\n                      className={`${\n                        transition.submission && 'cursor-progress'\n                      } flex w-full justify-center rounded-md border border-transparent bg-red-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                    >\n                      {transition.submission ? (\n                        <svg\n                          className='-ml-1 mr-3 h-5 w-5 animate-spin text-white'\n                          xmlns='http://www.w3.org/2000/svg'\n                          fill='none'\n                          viewBox='0 0 24 24'\n                        >\n                          <circle\n                            className='opacity-25'\n                            cx='12'\n                            cy='12'\n                            r='10'\n                            stroke='currentColor'\n                            strokeWidth='4'\n                          ></circle>\n                          <path\n                            className='opacity-75'\n                            fill='currentColor'\n                            d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                          ></path>\n                        </svg>\n                      ) : (\n                        'Sign in'\n                      )}\n                    </button>\n                  </div>\n                </ValidatedForm>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='relative hidden w-0 flex-1 lg:block'>\n          <img\n            className='absolute inset-0 h-full w-full object-cover'\n            src='/images/hero-fresh-meat2.jpg'\n            alt='fresh chicken pork meat and beef'\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { useTransition, useLoaderData } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { ValidatedForm, validationError } from 'remix-validated-form'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { Input } from '~/components/Input'\nimport { destroySession, getSession } from '~/services/session.server'\nimport { ActionFunction, json, LoaderFunction } from '@remix-run/node'\n\nexport const validator = withZod(\n  z.object({\n    name: zfd.text(\n      z\n        .string({\n          required_error: 'Name is required',\n        })\n        .regex(/^[a-zA-Z ]*$/, 'Name should only include alphabet characters')\n    ),\n    username: zfd.text(\n      z\n        .string({\n          required_error: 'Username is required',\n        })\n        .min(6, 'Username should at least have 6 characters')\n        .max(32, 'Username is too long')\n        .regex(\n          /^[a-zA-Z0-9_]*$/,\n          'Username should only include alphanumeric characters and underscore'\n        )\n    ),\n    password: zfd.text(\n      z\n        .string({\n          required_error: 'Password is required',\n        })\n        .min(8, 'Password should at least have 8 characters')\n        .max(32, 'Password is too long')\n        .regex(\n          /^[a-zA-Z0-9_@^$!#?]*$/,\n          'Password should only include alphanumeric characters and symbols (_@^$!#?)'\n        )\n    ),\n  })\n)\n\n// // Second, we need to export an action function, here we will use the\n// // `authenticator.authenticate method`\nexport let action: ActionFunction = async ({ request }) => {\n  // we call the method with the name of the strategy we want to use and the\n  // request object, optionally we pass an object with the URLs we want the user\n  // to be redirected to after a success or a failure\n\n  const requestClone = request.clone() // if not cloned, authenticator cannot use the request\n\n  const formData = await request.formData()\n  const result = await validator.validate(formData)\n  if (result.error) return validationError(result.error)\n\n  return await authenticator.authenticate('user-pass-signup', requestClone, {\n    successRedirect: '/',\n    failureRedirect: '/signup',\n  })\n}\n\n// Finally, we can export a loader function where we check if the user is\n// authenticated with `authenticator.isAuthenticated` and redirect to the\n// dashboard if it is or return null if it's not\nexport let loader: LoaderFunction = async ({ request }) => {\n  // If the user is already authenticated redirect to /dashboard directly\n  await authenticator.isAuthenticated(request, { successRedirect: '/' })\n  let session = await getSession(request)\n  let error = session.get('auth:error') as string | null\n  return json(\n    { error },\n    {\n      headers: {\n        'Set-Cookie': await destroySession(session),\n      },\n    }\n  )\n}\n\nexport default function Example() {\n  const transition = useTransition()\n  const loaderData = useLoaderData()\n\n  return (\n    <>\n      <div className='flex min-h-full pt-16'>\n        <div className='flex flex-1 flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24'>\n          <div className='mx-auto w-full max-w-sm lg:w-96'>\n            <div>\n              <h2 className='mt-6 text-3xl font-extrabold text-gray-900'>\n                Create your account\n              </h2>\n            </div>\n\n            <div className='mt-6'>\n              <div>\n                <div>\n                  <p className='text-sm font-medium text-gray-700'>\n                    Sign up with\n                  </p>\n\n                  <div className='mt-1 grid grid-cols-2 gap-3'>\n                    <div>\n                      <a\n                        href='#'\n                        className='inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'\n                      >\n                        <span className='sr-only'>Sign in with Facebook</span>\n                        <svg\n                          className='h-5 w-5'\n                          aria-hidden='true'\n                          fill='currentColor'\n                          viewBox='0 0 20 20'\n                        >\n                          <path\n                            fillRule='evenodd'\n                            d='M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z'\n                            clipRule='evenodd'\n                          />\n                        </svg>\n                      </a>\n                    </div>\n\n                    <div>\n                      <a\n                        href='#'\n                        className='inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'\n                      >\n                        <span className='sr-only'>Sign in with Google</span>\n                        <svg\n                          className='h-5 w-5'\n                          aria-hidden='true'\n                          fill='currentColor'\n                          viewBox='0 0 24 24'\n                        >\n                          <path\n                            xmlns='http://www.w3.org/2000/svg'\n                            d='M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032 s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2 C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z'\n                          />{' '}\n                        </svg>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='relative mt-6'>\n                  <div\n                    className='absolute inset-0 flex items-center'\n                    aria-hidden='true'\n                  >\n                    <div className='w-full border-t border-gray-300' />\n                  </div>\n                  <div className='relative flex justify-center text-sm'>\n                    <span className='bg-white px-2 text-gray-500'>\n                      Or continue with\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-6'>\n                <ValidatedForm\n                  validator={validator}\n                  method='post'\n                  className='space-y-6'\n                >\n                  <Input\n                    name='name'\n                    label='Full Name'\n                    type='name'\n                    placeholder='Juan Dela Cruz'\n                    autoComplete='name'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                  <Input\n                    name='username'\n                    label='Username'\n                    type='username'\n                    autoComplete='username'\n                    placeholder='juandelacruz123'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                  <Input\n                    name='password'\n                    label='Password'\n                    type='password'\n                    autoComplete='current-password'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n\n                  <div>\n                    <p className='text-sm font-medium text-red-600'>\n                      {loaderData?.error?.message}\n                    </p>\n                  </div>\n\n                  <div>\n                    <button\n                      disabled={transition.state === 'submitting'}\n                      type='submit'\n                      className={`${\n                        transition.submission && 'cursor-progress'\n                      } flex w-full justify-center rounded-md border border-transparent bg-red-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                    >\n                      {transition.submission ? (\n                        <svg\n                          className='-ml-1 mr-3 h-5 w-5 animate-spin text-white'\n                          xmlns='http://www.w3.org/2000/svg'\n                          fill='none'\n                          viewBox='0 0 24 24'\n                        >\n                          <circle\n                            className='opacity-25'\n                            cx='12'\n                            cy='12'\n                            r='10'\n                            stroke='currentColor'\n                            strokeWidth='4'\n                          ></circle>\n                          <path\n                            className='opacity-75'\n                            fill='currentColor'\n                            d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                          ></path>\n                        </svg>\n                      ) : (\n                        'Sign up'\n                      )}\n                    </button>\n                  </div>\n                </ValidatedForm>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='relative hidden w-0 flex-1 lg:block'>\n          <img\n            className='absolute inset-0 h-full w-full object-cover'\n            src='/images/sign-up.jpg'\n            alt='fresh chicken pork meat and beef'\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n", "export {}", "/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n      require('@tailwindcss/aspect-ratio'),\n    ],\n  }\n  ```\n*/\nimport { Fragment, useState } from 'react'\nimport { Dialog, Popover, Tab, Transition } from '@headlessui/react'\nimport {\n  MenuIcon,\n  SearchIcon,\n  ShoppingCartIcon,\n  UserIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { Brand, Category, Product } from './products'\nimport { Link } from 'remix'\n\nconst navigation = {\n  categories: [\n    {\n      name: 'Pork',\n      featured: [\n        { name: 'Sleep', href: '#' },\n        { name: 'Swimwear', href: '#' },\n        { name: 'Underwear', href: '#' },\n      ],\n      collection: [\n        { name: 'Everything', href: '#' },\n        { name: 'Core', href: '#' },\n        { name: 'New Arrivals', href: '#' },\n        { name: 'Sale', href: '#' },\n      ],\n      brands: [\n        { name: 'Full Nelson', href: '#' },\n        { name: 'My Way', href: '#' },\n        { name: 'Re-Arranged', href: '#' },\n        { name: 'Counterfeit', href: '#' },\n        { name: 'Significant Other', href: '#' },\n      ],\n    },\n    {\n      name: 'Chicken',\n      featured: [\n        { name: 'Casual', href: '#' },\n        { name: 'Boxers', href: '#' },\n        { name: 'Outdoor', href: '#' },\n      ],\n      collection: [\n        { name: 'Everything', href: '#' },\n        { name: 'Core', href: '#' },\n        { name: 'New Arrivals', href: '#' },\n        { name: 'Sale', href: '#' },\n      ],\n      categories: [\n        { name: 'Artwork Tees', href: '#' },\n        { name: 'Pants', href: '#' },\n        { name: 'Accessories', href: '#' },\n        { name: 'Boxers', href: '#' },\n        { name: 'Basic Tees', href: '#' },\n      ],\n      brands: [\n        { name: 'Significant Other', href: '#' },\n        { name: 'My Way', href: '#' },\n        { name: 'Counterfeit', href: '#' },\n        { name: 'Re-Arranged', href: '#' },\n        { name: 'Full Nelson', href: '#' },\n      ],\n    },\n  ],\n  pages: [{ name: 'Beef', href: '#' }],\n}\n\nconst trendingProducts: Product[] = [\n  {\n    id: 2,\n    imageUrl: '/images/BF-chicken-breast-fillets-860g.jpeg',\n    imageAlt: 'BF-chicken-breast-fillets-860g',\n    name: 'Chicken Breasts Fillets',\n    weight: '860g',\n    brand: Brand.BOUNTY_FRESH,\n    category: Category.CHICKEN,\n    price: 100,\n    description:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!',\n  },\n  {\n    id: 3,\n    imageUrl: '/images/BF-chicken-breasts-860g.jpeg',\n    imageAlt: 'BF-chicken-breasts-860g',\n    name: 'Chicken Breasts',\n    weight: '860g',\n    brand: Brand.BOUNTY_FRESH,\n    category: Category.CHICKEN,\n    price: 180,\n    description:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!',\n  },\n  {\n    id: 4,\n    imageUrl: '/images/BF-chicken-leg-quarters-860g.jpeg',\n    imageAlt: 'BF-chicken-leg-quarters-860g',\n    name: 'Chicken Leg Quarters',\n    weight: '860g',\n    brand: Brand.BOUNTY_FRESH,\n    category: Category.CHICKEN,\n    price: 180,\n    description:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!',\n  },\n  {\n    id: 5,\n    imageUrl: '/images/BF-chicken-nuggets-200g.jpeg',\n    imageAlt: 'BF-chicken-nuggets-200g',\n    name: 'Chicken Nuggets',\n    weight: '200g',\n    brand: Brand.BOUNTY_FRESH,\n    category: Category.CHICKEN,\n    price: 100,\n    description:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!',\n  },\n]\nconst categories = [\n  {\n    name: 'Chicken',\n    imageUrl: '/images/category-chicken2.jpg',\n    imageAlt: 'category-chicken',\n    href: '/chicken',\n  },\n  {\n    name: 'Pork',\n    imageUrl: '/images/category-pork2.jpg',\n    imageAlt: 'category-pork',\n    href: '/pork',\n  },\n  {\n    name: 'Beef',\n    imageUrl: '/images/category-beef2.jpg',\n    imageAlt: 'category-beef',\n    href: '/beef',\n  },\n]\nconst testimonials = [\n  {\n    id: 1,\n    quote:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.',\n    attribution: 'Sherrilyn Reyes, Camella Lessandra',\n  },\n  {\n    id: 2,\n    quote:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.',\n    attribution: 'Jason Orqueza, Parklane Country Homes',\n  },\n  {\n    id: 3,\n    quote:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.',\n    attribution: 'Evan Angelo Monreal, Lumina Homes',\n  },\n]\n\nexport default function IndexPage() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\n\n  return (\n    <div className='bg-white'>\n      <main>\n        {/* Hero */}\n        <div className='flex flex-col border-b border-gray-200 lg:border-0'>\n          <div className='relative'>\n            <div\n              aria-hidden='true'\n              className='absolute hidden h-full w-1/2 bg-gray-50 lg:block'\n            />\n            <div className='relative bg-gray-50 lg:bg-transparent'>\n              <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:grid lg:grid-cols-2 lg:px-8'>\n                <div className='mx-auto max-w-2xl py-24 md:pt-40 lg:max-w-none lg:py-64'>\n                  <div className='lg:pr-16'>\n                    <h1 className='text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl lg:text-6xl'>\n                      Affordable meat at your fingertips\n                    </h1>\n                    <p className='mt-4 text-xl text-gray-600'>\n                      Choose from our wide selection of freshly prepared meats\n                      straight to your door.\n                    </p>\n                    <div className='mt-6'>\n                      <Link\n                        to='/products'\n                        className='inline-block rounded-md border border-transparent bg-red-600 py-3 px-8 font-medium text-white hover:bg-red-700 '\n                      >\n                        Start shopping\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='flex h-48 w-full justify-center sm:h-80 lg:absolute lg:top-0 lg:right-0 lg:h-full lg:w-1/2'>\n              <img\n                src={'images/hero-fresh-meat.jpg'}\n                alt='hero-fresh-meat'\n                className='h-full w-full object-cover object-center'\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Bestsellers */}\n        <section aria-labelledby='trending-heading' className='bg-white'>\n          <div className='py-16 sm:py-24 lg:mx-auto lg:max-w-7xl lg:py-32 lg:px-8'>\n            <div className='flex items-center justify-between px-4 sm:px-6 lg:px-0'>\n              <h2\n                id='trending-heading'\n                className='text-3xl font-extrabold tracking-tight text-gray-900'\n              >\n                Bestsellers\n              </h2>\n              <Link\n                to='/products'\n                className='hidden text-sm font-semibold text-red-600 hover:text-red-500 sm:block'\n              >\n                See all products<span aria-hidden='true'> &rarr;</span>\n              </Link>\n            </div>\n\n            <div className='relative mt-8'>\n              <div className='relative w-full overflow-x-auto'>\n                <ul\n                  role='list'\n                  className='mx-4 inline-flex space-x-8 sm:mx-6 lg:mx-0 lg:grid lg:grid-cols-4 lg:gap-x-8 lg:space-x-0'\n                >\n                  {trendingProducts.map((product) => (\n                    <li\n                      key={product.id}\n                      className='inline-flex w-64 flex-col text-center lg:w-auto '\n                    >\n                      <div className='group relative'>\n                        <div className='aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-md bg-gray-200'>\n                          <img\n                            src={product.imageUrl}\n                            alt={product.imageAlt}\n                            className='h-full w-full object-cover object-center group-hover:opacity-75'\n                          />\n                        </div>\n                        <div className='mt-6'>\n                          <h3 className='mt-1 font-semibold text-gray-900 hover:text-red-600'>\n                            <Link to={`/products/${product.id}`}>\n                              <span className='absolute inset-0 ' />\n                              {product.name}\n                            </Link>\n                          </h3>\n                          <p className='mt-1 text-red-500 hover:text-red-400'>\n                            \u20B1{product.price}\n                          </p>\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n\n            <div className='mt-12 px-4 sm:hidden'>\n              <Link\n                to='#'\n                className='text-sm font-semibold text-red-600 hover:text-red-500'\n              >\n                See all products<span aria-hidden='true'> &rarr;</span>\n              </Link>\n            </div>\n          </div>\n        </section>\n\n        {/* Categories */}\n        <section aria-labelledby='categories-heading' className='bg-gray-50'>\n          <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>\n            <div className='mx-auto max-w-2xl py-16 sm:py-24 lg:max-w-none lg:py-32'>\n              <h2\n                id='categories-heading'\n                className='text-3xl font-extrabold text-gray-900'\n              >\n                Categories\n              </h2>\n\n              <div className='mt-6 space-y-12 lg:grid lg:grid-cols-3 lg:gap-x-6 lg:space-y-0'>\n                {categories.map((category) => (\n                  <div key={category.name} className='group relative'>\n                    <div className='sm:aspect-w-2 sm:aspect-h-1 lg:aspect-w-1 lg:aspect-h-1 relative h-80 w-full overflow-hidden rounded-lg bg-white group-hover:opacity-75 sm:h-64'>\n                      <img\n                        src={category.imageUrl}\n                        alt={category.imageAlt}\n                        className='h-full w-full object-cover object-center'\n                      />\n                    </div>\n                    <h3 className='mt-6 text-lg font-semibold text-gray-900 hover:text-red-600'>\n                      <Link to={category.href}>\n                        <span className='absolute inset-0' />\n                        {category.name}\n                      </Link>\n                    </h3>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Sale and testimonials */}\n        <div className='relative overflow-hidden'>\n          {/* Decorative background image and gradient */}\n          <div aria-hidden='true' className='absolute inset-0'>\n            <div className='absolute inset-0 mx-auto max-w-full overflow-hidden'>\n              <img\n                src='images/sale-delivery.jpeg'\n                alt=''\n                className='h-full w-full object-cover object-center'\n              />\n            </div>\n            <div className='absolute inset-0 bg-white bg-opacity-60' />\n            <div className='absolute inset-0 bg-gradient-to-t from-white via-white' />\n          </div>\n\n          {/* Sale */}\n          <section\n            aria-labelledby='sale-heading'\n            className='relative mx-auto flex max-w-7xl flex-col items-center px-4 pt-32 text-center sm:px-6 lg:px-32'\n          >\n            <div className='mx-auto max-w-2xl lg:max-w-none'>\n              <h2\n                id='sale-heading'\n                className='text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl lg:text-6xl'\n              >\n                Free delivery for orders worth{' '}\n                <span className='text-red-600'>\u20B1500</span> and above*\n              </h2>\n              <p className='mx-auto mt-4 max-w-xl text-xl text-gray-600'>\n                *within the 3.3 km radius of Parklane Country Homes\n              </p>\n              <Link\n                to='/products'\n                className='hover:pointer mt-6 inline-block w-full rounded-md border border-transparent bg-red-600 py-3 px-8 font-medium text-white hover:bg-red-700 sm:w-auto'\n              >\n                Start shopping\n              </Link>\n            </div>\n          </section>\n\n          {/* Testimonials */}\n          <section\n            aria-labelledby='testimonial-heading'\n            className='relative mx-auto max-w-7xl py-24 px-4 sm:px-6 lg:py-32 lg:px-8'\n          >\n            <div className='mx-auto max-w-2xl lg:max-w-none'>\n              <h2\n                id='testimonial-heading'\n                className='mt-2 text-3xl font-extrabold tracking-tight text-gray-900'\n              >\n                What are people saying?\n              </h2>\n\n              <div className='mt-16 space-y-16 lg:grid lg:grid-cols-3 lg:gap-x-8 lg:space-y-0'>\n                {testimonials.map((testimonial) => (\n                  <blockquote key={testimonial.id} className='sm:flex lg:block'>\n                    <svg\n                      width={24}\n                      height={18}\n                      viewBox='0 0 24 18'\n                      xmlns='http://www.w3.org/2000/svg'\n                      aria-hidden='true'\n                      className='flex-shrink-0 text-red-600'\n                    >\n                      <path\n                        d='M0 18h8.7v-5.555c-.024-3.906 1.113-6.841 2.892-9.68L6.452 0C3.188 2.644-.026 7.86 0 12.469V18zm12.408 0h8.7v-5.555C21.083 8.539 22.22 5.604 24 2.765L18.859 0c-3.263 2.644-6.476 7.86-6.451 12.469V18z'\n                        fill='currentColor'\n                      />\n                    </svg>\n                    <div className='mt-8 sm:mt-0 sm:ml-6 lg:mt-10 lg:ml-0'>\n                      <p className='text-lg text-gray-600'>\n                        {testimonial.quote}\n                      </p>\n                      <cite className='mt-4 block font-semibold not-italic text-gray-900'>\n                        {testimonial.attribution}\n                      </cite>\n                    </div>\n                  </blockquote>\n                ))}\n              </div>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  )\n}\n", "/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  const colors = require('tailwindcss/colors')\n  \n  module.exports = {\n    // ...\n    theme: {\n      extend: {\n        colors: {\n          cyan: colors.cyan,\n        },\n      },\n    },\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nimport { Fragment, useState } from 'react'\nimport { Dialog, Menu, Transition } from '@headlessui/react'\nimport {\n  ArrowSmUpIcon,\n  BellIcon,\n  ClockIcon,\n  CogIcon,\n  CreditCardIcon,\n  DocumentReportIcon,\n  HomeIcon,\n  MenuAlt1Icon,\n  QuestionMarkCircleIcon,\n  ScaleIcon,\n  ShieldCheckIcon,\n  UserGroupIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport {\n  ArrowSmDownIcon,\n  CashIcon,\n  CheckCircleIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  OfficeBuildingIcon,\n  SearchIcon,\n} from '@heroicons/react/solid'\n\nconst navigation = [\n  { name: 'Home', href: '#', icon: HomeIcon, current: true },\n  { name: 'History', href: '#', icon: ClockIcon, current: false },\n  { name: 'Balances', href: '#', icon: ScaleIcon, current: false },\n  { name: 'Cards', href: '#', icon: CreditCardIcon, current: false },\n  { name: 'Recipients', href: '#', icon: UserGroupIcon, current: false },\n  { name: 'Reports', href: '#', icon: DocumentReportIcon, current: false },\n]\nconst secondaryNavigation = [\n  { name: 'Settings', href: '#', icon: CogIcon },\n  { name: 'Help', href: '#', icon: QuestionMarkCircleIcon },\n  { name: 'Privacy', href: '#', icon: ShieldCheckIcon },\n]\nconst cards = [\n  {\n    name: 'Total Gross Sales',\n    stat: '71,897',\n    previousStat: '70,946',\n    change: '12%',\n    changeType: 'increase',\n  },\n  {\n    name: 'Average Order Amount',\n    stat: '1123',\n    previousStat: '774',\n    change: '145%',\n    changeType: 'increase',\n  },\n  {\n    name: 'Average Order Completion Rate',\n    stat: '90%',\n    previousStat: '95%',\n    change: '5%',\n    changeType: 'decrease',\n  },\n]\nconst transactions = [\n  {\n    id: 1,\n    name: '123-456',\n    href: '#',\n    amount: '\u20B11,000',\n    status: 'Completed',\n    date: 'January 11, 2022',\n    datetime: '2022-01-11',\n  },\n  {\n    id: 1,\n    name: '123-456',\n    href: '#',\n    amount: '\u20B11,000',\n    status: 'Completed',\n    date: 'January 11, 2022',\n    datetime: '2022-01-11',\n  },\n  {\n    id: 1,\n    name: '123-456',\n    href: '#',\n    amount: '\u20B11,000',\n    status: 'Completed',\n    date: 'January 11, 2022',\n    datetime: '2022-01-11',\n  },\n  {\n    id: 1,\n    name: '123-456',\n    href: '#',\n    amount: '\u20B11,000',\n    status: 'Completed',\n    date: 'January 11, 2022',\n    datetime: '2022-01-11',\n  },\n  {\n    id: 1,\n    name: '123-456',\n    href: '#',\n    amount: '\u20B11,000',\n    status: 'Completed',\n    date: 'January 11, 2022',\n    datetime: '2022-01-11',\n  },\n  {\n    id: 1,\n    name: '123-456',\n    href: '#',\n    amount: '\u20B11,000',\n    status: 'Completed',\n    date: 'January 11, 2022',\n    datetime: '2022-01-11',\n  },\n  {\n    id: 1,\n    name: '123-456',\n    href: '#',\n    amount: '\u20B11,000',\n    status: 'Completed',\n    date: 'January 11, 2022',\n    datetime: '2022-01-11',\n  },\n  // More transactions...\n]\nconst statusStyles = {\n  success: 'bg-green-100 text-green-800',\n  processing: 'bg-yellow-100 text-yellow-800',\n  failed: 'bg-gray-100 text-gray-800',\n}\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Example() {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-gray-100\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Sales Dashboard\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          Analyze sales from completed orders.\n        </p>\n      </div>\n      <div className='min-h-full'>\n        <main className='flex-1 pb-8'>\n          <div className=''>\n            <div className='px-4 sm:px-6 lg:px-8'>\n              <h2 className='text-xl font-bold leading-6 text-gray-900'>\n                Overview\n              </h2>\n              <div className='mt-4 flex justify-between'>\n                <div className='h-52 w-full'>{/* <Graph /> */}</div>\n              </div>\n              <div className='mt-5 grid grid-cols-1 divide-y divide-gray-200 overflow-hidden rounded-lg bg-white shadow md:grid-cols-3 md:divide-y-0 md:divide-x'>\n                {/* Card */}\n                {cards.map((card) => (\n                  <div key={card.name} className=' px-4 py-5 sm:p-6'>\n                    <dt className='text-base font-normal text-gray-900'>\n                      {card.name}\n                    </dt>\n                    <dd className='mt-1 flex items-baseline justify-between md:block lg:flex'>\n                      <div className='flex items-baseline text-2xl font-semibold text-gray-900'>\n                        {card.stat}\n                        <span className='ml-2 text-sm font-medium text-gray-500'>\n                          from {card.previousStat}\n                        </span>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          card.changeType === 'increase'\n                            ? 'bg-green-100 text-green-800'\n                            : 'bg-red-100 text-red-800',\n                          'inline-flex items-baseline rounded-full px-2.5 py-0.5 text-sm font-medium md:mt-2 lg:mt-0'\n                        )}\n                      >\n                        {card.changeType === 'increase' ? (\n                          <ArrowSmUpIcon\n                            className='-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-green-500'\n                            aria-hidden='true'\n                          />\n                        ) : (\n                          <ArrowSmDownIcon\n                            className='-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-red-500'\n                            aria-hidden='true'\n                          />\n                        )}\n\n                        <span className='sr-only'>\n                          {card.changeType === 'increase'\n                            ? 'Increased'\n                            : 'Decreased'}{' '}\n                          by\n                        </span>\n                        {card.change}\n                      </div>\n                    </dd>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <h2 className='mt-8 px-4 text-xl font-bold leading-6 text-gray-900 sm:px-6 lg:px-8'>\n              Completed orders\n            </h2>\n\n            {/* Activity list (smallest breakpoint only) */}\n            <div className='shadow sm:hidden'>\n              <ul\n                role='list'\n                className='mt-2 divide-y divide-gray-200 overflow-hidden shadow sm:hidden'\n              >\n                {transactions.map((transaction) => (\n                  <li key={transaction.id}>\n                    <a\n                      href={transaction.href}\n                      className='block bg-white px-4 py-4 hover:bg-gray-50'\n                    >\n                      <span className='flex items-center space-x-4'>\n                        <span className='flex flex-1 space-x-2 truncate'>\n                          <span className='flex flex-col truncate text-sm text-gray-500'>\n                            <span className='truncate'>{transaction.name}</span>\n                            <span>\n                              <span className='font-medium text-gray-900'>\n                                {transaction.amount}\n                              </span>{' '}\n                            </span>\n                            <time dateTime={transaction.datetime}>\n                              {transaction.date}\n                            </time>\n                          </span>\n                        </span>\n                      </span>\n                    </a>\n                  </li>\n                ))}\n              </ul>\n\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3'\n                aria-label='Pagination'\n              >\n                <div className='flex flex-1 justify-between'>\n                  <a\n                    href='#'\n                    className='relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500'\n                  >\n                    Previous\n                  </a>\n                  <a\n                    href='#'\n                    className='relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500'\n                  >\n                    Next\n                  </a>\n                </div>\n              </nav>\n            </div>\n\n            {/* Activity table (small breakpoint and up) */}\n            <div className='hidden sm:block'>\n              <div className='px-4 sm:px-6 lg:px-8'>\n                <div className='mt-2 flex flex-col'>\n                  <div className='min-w-full overflow-hidden overflow-x-auto align-middle shadow sm:rounded-lg'>\n                    <table className='min-w-full divide-y divide-gray-200'>\n                      <thead>\n                        <tr>\n                          <th className='bg-gray-50 px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'>\n                            Order Id\n                          </th>\n                          <th className='bg-gray-50 px-6 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500'>\n                            Amount\n                          </th>\n                          <th className='hidden bg-gray-50 px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 md:block'>\n                            Status\n                          </th>\n                          <th className='bg-gray-50 px-6 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500'>\n                            Date\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className='divide-y divide-gray-200 bg-white'>\n                        {transactions.map((transaction) => (\n                          <tr key={transaction.id} className='bg-white'>\n                            <td className='w-full max-w-0 whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                              <div className='flex'>\n                                <a\n                                  href={transaction.href}\n                                  className='group inline-flex space-x-2 truncate text-sm'\n                                >\n                                  <CashIcon\n                                    className='h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500'\n                                    aria-hidden='true'\n                                  />\n                                  <p className='truncate text-gray-500 group-hover:text-gray-900'>\n                                    {transaction.name}\n                                  </p>\n                                </a>\n                              </div>\n                            </td>\n                            <td className='whitespace-nowrap px-6 py-4 text-right text-sm text-gray-500'>\n                              <span className='font-medium text-gray-900'>\n                                {transaction.amount}{' '}\n                              </span>\n                            </td>\n                            <td className='hidden whitespace-nowrap px-6 py-4 text-sm text-gray-500 md:block'>\n                              <span\n                                className={classNames(\n                                  'inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium capitalize'\n                                )}\n                              >\n                                {transaction.status}\n                              </span>\n                            </td>\n                            <td className='whitespace-nowrap px-6 py-4 text-right text-sm text-gray-500'>\n                              <time dateTime={transaction.datetime}>\n                                {transaction.date}\n                              </time>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                    {/* Pagination */}\n                    <nav\n                      className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                      aria-label='Pagination'\n                    >\n                      <div className='hidden sm:block'>\n                        <p className='text-sm text-gray-700'>\n                          Showing <span className='font-medium'>1</span> to{' '}\n                          <span className='font-medium'>10</span> of{' '}\n                          <span className='font-medium'>20</span> results\n                        </p>\n                      </div>\n                      <div className='flex flex-1 justify-between sm:justify-end'>\n                        <a\n                          href='#'\n                          className='relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50'\n                        >\n                          Previous\n                        </a>\n                        <a\n                          href='#'\n                          className='relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50'\n                        >\n                          Next\n                        </a>\n                      </div>\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </>\n  )\n}\n", "import { ProductsPage } from '~/components/ProductsPage'\nimport { db } from '~/utils/db.server'\nimport { Category, Product } from './products'\nimport { useLoaderData } from '@remix-run/react'\nimport { LoaderFunction, ActionFunction, redirect } from '@remix-run/node'\nimport { authenticator } from '~/services/auth.server'\nimport { validationError } from 'remix-validated-form'\nimport { Role, Status } from '@prisma/client'\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const products = await db.product.findMany({\n    where: {\n      category: 'BEEF',\n    },\n  })\n  return products\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return validationError({\n      fieldErrors: {\n        name: 'Product does not exist',\n      },\n    })\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n    })\n\n    if (currentOrder) {\n      const res = await db.order.update({\n        where: {\n          id: currentOrder?.id,\n        },\n        data: {\n          amount: currentOrder.amount + product.price,\n          productIds: {\n            push: [productId],\n          },\n        },\n      })\n      return res\n    } else {\n      return await db.order.create({\n        data: {\n          amount: product.price,\n          productIds: [product.id],\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n    }\n  }\n}\n\nexport default function BeefPage() {\n  const category = Category.BEEF\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nimport { CheckCircleIcon, QuestionMarkCircleIcon } from '@heroicons/react/solid'\nimport { Role, Status } from '@prisma/client'\nimport {\n  ActionFunction,\n  Link,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { Quantity } from '~/components/Quantity'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\nimport { Product } from './products'\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const _method = formData.get('_method') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return validationError({\n      fieldErrors: {\n        name: 'Product does not exist',\n      },\n    })\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n    })\n    const currentProductIds = currentOrder?.productIds\n\n    if (currentOrder) {\n      if (_method === 'ADD') {\n        const updatedOrder = await db.order.update({\n          where: {\n            id: currentOrder?.id,\n          },\n          data: {\n            amount: currentOrder.amount + product.price,\n            productIds: {\n              push: [productId],\n            },\n          },\n        })\n        return updatedOrder\n      } else {\n        const productIndex = currentProductIds?.indexOf(productId) || 0\n        currentProductIds?.splice(productIndex, 1)\n\n        const updatedOrder = await db.order.update({\n          where: {\n            id: currentOrder?.id,\n          },\n          data: {\n            amount: currentOrder.amount - product.price,\n            productIds: {\n              set: currentProductIds,\n            },\n          },\n        })\n        if (updatedOrder.productIds.length === 0) {\n          const deletedOrder = await db.order.delete({\n            where: {\n              id: currentOrder?.id,\n            },\n          })\n          return null\n        } else {\n          return updatedOrder\n        }\n      }\n    } else {\n      return await db.order.create({\n        data: {\n          amount: product.price,\n          productIds: [product.id],\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n    }\n  }\n}\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n  if (user?.role !== Role.CUSTOMER) {\n    redirect('/unauthorized')\n  }\n\n  if (user?.id) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user.id,\n        status: 'IN_CART',\n      },\n    })\n    const products = await db.product.findMany({\n      where: {\n        id: {\n          in: currentOrder?.productIds || [],\n        },\n      },\n    })\n    return { currentOrder, products }\n  }\n  return null\n}\n\nexport default function CartPage() {\n  const { currentOrder, products } = useLoaderData()\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-2xl px-4 pt-24 pb-24 sm:px-6 lg:max-w-7xl lg:px-8'>\n        <h1 className='text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl'>\n          Shopping Cart\n        </h1>\n        <div className='mt-12 lg:grid lg:grid-cols-12 lg:items-start lg:gap-x-12 xl:gap-x-16'>\n          <section aria-labelledby='cart-heading' className='lg:col-span-7'>\n            <h2 id='cart-heading' className='sr-only'>\n              Items in your shopping cart\n            </h2>\n\n            <ul\n              role='list'\n              className='divide-y divide-gray-200 border-t border-b border-gray-200'\n            >\n              {products.map((product: Product) => {\n                const quantity = currentOrder?.productIds.filter(\n                  (id: string) => {\n                    return product.id?.toString() === id\n                  }\n                )?.length\n                return (\n                  <li\n                    key={product.id}\n                    className='flex pt-6 pb-3 sm:pt-10 sm:pb-5'\n                  >\n                    <div className='flex-shrink-0'>\n                      <img\n                        src={product.imageUrl}\n                        alt={product.imageAlt}\n                        className='h-24 w-24 rounded-md object-cover object-center sm:h-48 sm:w-48'\n                      />\n                    </div>\n\n                    <div className='justify-betweensm:ml-6 ml-4 flex flex-1 flex-col'>\n                      <div className='relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0'>\n                        <div>\n                          <div className='flex justify-between'>\n                            <h3 className='text-lg sm:text-xl'>\n                              <a\n                                href={`products/${product.id}`}\n                                className='font-medium text-gray-900 hover:text-red-500'\n                              >\n                                {product.name}\n                              </a>\n                            </h3>\n                          </div>\n\n                          <p className='mt-1 text-base font-medium text-red-500 sm:text-lg'>\n                            \u20B1{product.price}\n                          </p>\n                          <div className='mt-4'>\n                            <Quantity\n                              quantity={quantity}\n                              productId={product.id?.toString()}\n                            />\n                          </div>\n                        </div>\n\n                        <div className='mt-4 sm:mt-0 sm:pr-9'>\n                          <div className='absolute top-0 right-0'>\n                            <button\n                              type='button'\n                              className='-m-2 inline-flex p-2 pt-2.5 text-gray-400 hover:text-red-500'\n                            >\n                              <span className='sr-only'>Remove</span>\n                              {/* <TrashIcon\n                                className='h-5 w-5'\n                                aria-hidden='true'\n                              /> */}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n            {products?.length === 0 && (\n              <h2 className='mt-2 text-xl font-semibold'>Your cart is empty</h2>\n            )}\n          </section>\n\n          {/* Order summary */}\n          <section\n            aria-labelledby='summary-heading'\n            className='mt-16 rounded-lg bg-gray-50 px-4 py-6 sm:p-6 lg:col-span-5 lg:mt-0 lg:p-8'\n          >\n            <h2\n              id='summary-heading'\n              className='text-lg font-medium text-gray-900'\n            >\n              Order summary\n            </h2>\n\n            <dl className='mt-6 space-y-4'>\n              <div className='flex items-center justify-between'>\n                <dt className='text-sm text-gray-600'>Subtotal</dt>\n                <dd className='text-sm font-medium text-gray-900'>\n                  \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                </dd>\n              </div>\n              <div className='flex items-center justify-between border-t border-gray-200 pt-4'>\n                <dt className='flex items-center text-sm text-gray-600'>\n                  <span>Delivery fee</span>\n                  <a\n                    href='#'\n                    className='ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500'\n                  >\n                    {currentOrder?.amount ? (\n                      <>\n                        <span className='sr-only'>Delivery fee</span>\n                        <QuestionMarkCircleIcon\n                          className='h-5 w-5'\n                          aria-hidden='true'\n                        />\n                      </>\n                    ) : null}\n                  </a>\n                </dt>\n                <dd className='text-right text-sm font-medium text-gray-900 '>\n                  {currentOrder?.amount ? (\n                    <>\n                      <p className='line-through'>\u20B150</p>\n                    </>\n                  ) : (\n                    <>\n                      <p>\u20B10</p>\n                    </>\n                  )}\n                </dd>\n              </div>\n              {currentOrder?.amount && (\n                <div className='flex justify-end space-x-2'>\n                  <p className='text-right text-sm font-medium text-gray-900'>\n                    Free delivery promo applied\n                  </p>\n                  <CheckCircleIcon className='w-5 text-green-500' />\n                </div>\n              )}\n\n              <div className='flex items-center justify-between border-t border-gray-200 pt-4'>\n                <dt className='text-base font-medium text-gray-900'>\n                  Total amount\n                </dt>\n                <dd className='text-base font-medium text-red-500'>\n                  \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                </dd>\n              </div>\n            </dl>\n\n            <div className='mt-6'>\n              {currentOrder ? (\n                <Link to='/checkout'>\n                  <button className='w-full rounded-md border border-transparent bg-red-500 py-3 px-4 text-base font-medium text-white shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-50'>\n                    Checkout\n                  </button>\n                </Link>\n              ) : (\n                <button\n                  disabled\n                  className='w-full rounded-md border border-transparent bg-red-200 py-3 px-4 text-base font-medium text-white shadow-sm hover:cursor-not-allowed hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-red-100 focus:ring-offset-2 focus:ring-offset-gray-50'\n                >\n                  Checkout\n                </button>\n              )}\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { MinusSmIcon, PlusSmIcon } from '@heroicons/react/solid'\nimport { Form } from 'remix'\n\ninterface Props {\n  quantity: number\n  productId: string\n}\nexport function Quantity({ quantity, productId }: Props) {\n  return (\n    <div className='relative inline-flex rounded-md shadow-sm'>\n      <Form method='post' id='minus'>\n        <input type='hidden' name='_method' value='MINUS' />\n        <input type='hidden' name='productId' value={productId} />\n        <button\n          type='submit'\n          className='relative inline-flex items-center rounded-l-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500'\n        >\n          <span className='sr-only'>Minus</span>\n          <MinusSmIcon className='h-5 w-5' aria-hidden='true' />\n        </button>\n      </Form>\n\n      <label htmlFor='quantity' className='sr-only'>\n        Quantity\n      </label>\n      <input\n        disabled\n        name='quantity'\n        id='quantity'\n        className='flex w-16 border border-gray-300  px-2  text-center shadow-sm disabled:bg-white  sm:text-sm'\n        value={quantity}\n      />\n\n      <Form method='post' id='add'>\n        <input type='hidden' name='_method' value='ADD' />\n        <input type='hidden' name='productId' value={productId} />\n        <button\n          type='submit'\n          className='relative -ml-px inline-flex items-center rounded-r-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500'\n        >\n          <span className='sr-only'>Add</span>\n          <PlusSmIcon className='h-5 w-5' aria-hidden='true' />\n        </button>\n      </Form>\n    </div>\n  )\n}\n", "import { Category, Role, Status } from '@prisma/client'\nimport { LoaderFunction } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { ProductsPage } from '~/components/ProductsPage'\nimport { db } from '~/utils/db.server'\nimport { Product } from './products'\n\nimport { ActionFunction, redirect } from '@remix-run/node'\nimport { authenticator } from '~/services/auth.server'\nimport { validationError } from 'remix-validated-form'\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const products = await db.product.findMany({\n    where: {\n      category: 'PORK',\n    },\n  })\n  return products\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return validationError({\n      fieldErrors: {\n        name: 'Product does not exist',\n      },\n    })\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n    })\n\n    if (currentOrder) {\n      const res = await db.order.update({\n        where: {\n          id: currentOrder?.id,\n        },\n        data: {\n          amount: currentOrder.amount + product.price,\n          productIds: {\n            push: [productId],\n          },\n        },\n      })\n      return res\n    } else {\n      return await db.order.create({\n        data: {\n          amount: product.price,\n          productIds: [product.id],\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n    }\n  }\n}\n\nexport default function PorkPage() {\n  const category = Category.PORK\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "export default {'version':'9087cbf2','entry':{'module':'/build/entry.client-KGIXMF4W.js','imports':['/build/_shared/chunk-7CZMI56X.js','/build/_shared/chunk-ZXK6MQMA.js','/build/_shared/chunk-LHZWUJB6.js','/build/_shared/chunk-VXS3STFE.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-7YIKBCUO.js','imports':['/build/_shared/chunk-WTNGNGJG.js','/build/_shared/chunk-Q2RA6ZID.js','/build/_shared/chunk-7MGP5CG6.js','/build/_shared/chunk-2NE3OJQR.js','/build/_shared/chunk-EMOJR56O.js','/build/_shared/chunk-MUYDNBIT.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/assigned-orders':{'id':'routes/assigned-orders','parentId':'root','path':'assigned-orders','index':undefined,'caseSensitive':undefined,'module':'/build/routes/assigned-orders-5E7YOVSR.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/$provider':{'id':'routes/auth/$provider','parentId':'root','path':'auth/:provider','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/$provider-UASBXOJN.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/$provider.callback':{'id':'routes/auth/$provider.callback','parentId':'root','path':'auth/:provider/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/$provider.callback-YBLCUYP3.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/beef':{'id':'routes/beef','parentId':'root','path':'beef','index':undefined,'caseSensitive':undefined,'module':'/build/routes/beef-3AP76VCU.js','imports':['/build/_shared/chunk-5II3HBXD.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cart':{'id':'routes/cart','parentId':'root','path':'cart','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cart-A3FSVGNF.js','imports':['/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/checkout':{'id':'routes/checkout','parentId':'root','path':'checkout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout-SKXXYF2S.js','imports':['/build/_shared/chunk-RMZ3Z6XD.js','/build/_shared/chunk-VWAQ3QVY.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/chicken':{'id':'routes/chicken','parentId':'root','path':'chicken','index':undefined,'caseSensitive':undefined,'module':'/build/routes/chicken-LI6KXDAA.js','imports':['/build/_shared/chunk-5II3HBXD.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cloudinary-upload':{'id':'routes/cloudinary-upload','parentId':'root','path':'cloudinary-upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cloudinary-upload-QZZRY5MR.js','imports':['/build/_shared/chunk-BHBFOKDU.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/create-orders':{'id':'routes/create-orders','parentId':'root','path':'create-orders','index':undefined,'caseSensitive':undefined,'module':'/build/routes/create-orders-PI7RGUHD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/error':{'id':'routes/error','parentId':'root','path':'error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/error-EZFRD2JO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-KMMXYUQH.js','imports':['/build/_shared/chunk-5II3HBXD.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-orders':{'id':'routes/manage-orders','parentId':'root','path':'manage-orders','index':undefined,'caseSensitive':undefined,'module':'/build/routes/manage-orders-MQZMXLZQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-products/$productId.upload-image':{'id':'routes/manage-products/$productId.upload-image','parentId':'root','path':'manage-products/:productId/upload-image','index':undefined,'caseSensitive':undefined,'module':'/build/routes/manage-products/$productId.upload-image-NLOOQ764.js','imports':['/build/_shared/chunk-BHBFOKDU.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-products/index':{'id':'routes/manage-products/index','parentId':'root','path':'manage-products','index':true,'caseSensitive':undefined,'module':'/build/routes/manage-products/index-E7NF57O3.js','imports':['/build/_shared/chunk-VWAQ3QVY.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-BHBFOKDU.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-users':{'id':'routes/manage-users','parentId':'root','path':'manage-users','index':undefined,'caseSensitive':undefined,'module':'/build/routes/manage-users-3GBV6XN3.js','imports':['/build/_shared/chunk-VWAQ3QVY.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/order-history/$orderId':{'id':'routes/order-history/$orderId','parentId':'root','path':'order-history/:orderId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/order-history/$orderId-RTUVCMC2.js','imports':['/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/order-history/index':{'id':'routes/order-history/index','parentId':'root','path':'order-history','index':true,'caseSensitive':undefined,'module':'/build/routes/order-history/index-6LYVGY6Z.js','imports':['/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/order-success.$orderId':{'id':'routes/order-success.$orderId','parentId':'root','path':'order-success/:orderId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/order-success.$orderId-KYWMX7XM.js','imports':['/build/_shared/chunk-RMZ3Z6XD.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pork':{'id':'routes/pork','parentId':'root','path':'pork','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pork-ZFX4BACJ.js','imports':['/build/_shared/chunk-5II3HBXD.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/products/$id':{'id':'routes/products/$id','parentId':'root','path':'products/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/products/$id-3PKY7R7E.js','imports':['/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/products/index':{'id':'routes/products/index','parentId':'root','path':'products','index':true,'caseSensitive':undefined,'module':'/build/routes/products/index-LIW6X7BG.js','imports':['/build/_shared/chunk-5II3HBXD.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js','/build/_shared/chunk-WGWRPYFE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sales':{'id':'routes/sales','parentId':'root','path':'sales','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sales-G2QKZZC3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signin':{'id':'routes/signin','parentId':'root','path':'signin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signin-FB4FF5HR.js','imports':['/build/_shared/chunk-FL4QXY5U.js','/build/_shared/chunk-VWAQ3QVY.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signout':{'id':'routes/signout','parentId':'root','path':'signout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signout-NRRQZVAO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-4SLG4RH3.js','imports':['/build/_shared/chunk-FL4QXY5U.js','/build/_shared/chunk-VWAQ3QVY.js','/build/_shared/chunk-MOU6XS7Y.js','/build/_shared/chunk-VURS4OIO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/unauthorized':{'id':'routes/unauthorized','parentId':'root','path':'unauthorized','index':undefined,'caseSensitive':undefined,'module':'/build/routes/unauthorized-USGKDGJW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-9087CBF2.js'};"],
  "mappings": "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",
  "names": []
}
