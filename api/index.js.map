{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "../node_modules/remix/index.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "/Users/jerichocalibuso/sp-app/app/root.tsx", "../app/components/Navbar.tsx", "../app/components/AccountDropdown.tsx", "../app/utils/classNames.ts", "../app/components/Error.tsx", "../app/components/Footer.tsx", "../app/services/auth.server.ts", "../app/services/session.server.ts", "../app/utils/db.server.ts", "../app/hooks/useNProgress.tsx", "../app/services/guest.server.ts", "/Users/jerichocalibuso/sp-app/app/routes/manage-products/$productId.upload-image.tsx", "../app/utils/utils.server.ts", "/Users/jerichocalibuso/sp-app/app/routes/customer-feedback/$feedbackId.tsx", "/Users/jerichocalibuso/sp-app/app/routes/assigned-orders/$orderId.tsx", "../app/components/DeleteOrderModal.tsx", "../app/components/RiderStatusSelect.tsx", "/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.callback.tsx", "/Users/jerichocalibuso/sp-app/app/routes/customer-feedback/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/submit-feedback/success.tsx", "/Users/jerichocalibuso/sp-app/app/routes/manage-orders/$orderId.tsx", "../app/components/Input.tsx", "../app/components/StatusSelect.tsx", "../app/components/RiderAutocomplete.tsx", "/Users/jerichocalibuso/sp-app/app/routes/order-history/$orderId.tsx", "/Users/jerichocalibuso/sp-app/app/routes/order-success.$orderId.tsx", "../app/services/paymongo.server.ts", "/Users/jerichocalibuso/sp-app/app/routes/assigned-orders/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/manage-products/index.tsx", "../app/components/AddEditProductForm/index.tsx", "../app/routes/manage-products/index.tsx", "../app/components/CategorySelect.tsx", "../app/components/Fieldset.tsx", "../app/components/AddEditProductForm/ConfirmDeleteModal.tsx", "/Users/jerichocalibuso/sp-app/app/routes/submit-feedback/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/manage-orders/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/order-history/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/cloudinary-upload.tsx", "/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.tsx", "/Users/jerichocalibuso/sp-app/app/routes/products/index.tsx", "../app/components/ProductsPage.tsx", "/Users/jerichocalibuso/sp-app/app/routes/create-orders.tsx", "/Users/jerichocalibuso/sp-app/app/routes/manage-users.tsx", "../app/components/ManageUserForm/index.tsx", "../app/routes/manage-users.tsx", "../app/components/RoleSelect.tsx", "../app/components/ManageUserForm/ConfirmDeleteModal.tsx", "/Users/jerichocalibuso/sp-app/app/routes/products/$id.tsx", "/Users/jerichocalibuso/sp-app/app/routes/unauthorized.tsx", "/Users/jerichocalibuso/sp-app/app/routes/checkout.tsx", "/Users/jerichocalibuso/sp-app/app/routes/chicken.tsx", "/Users/jerichocalibuso/sp-app/app/routes/signout.tsx", "/Users/jerichocalibuso/sp-app/app/routes/signin.tsx", "/Users/jerichocalibuso/sp-app/app/routes/signup.tsx", "../app/routes/signin.tsx", "/Users/jerichocalibuso/sp-app/app/routes/error.tsx", "/Users/jerichocalibuso/sp-app/app/routes/index.tsx", "/Users/jerichocalibuso/sp-app/app/routes/sales.tsx", "/Users/jerichocalibuso/sp-app/app/routes/beef.tsx", "/Users/jerichocalibuso/sp-app/app/routes/cart.tsx", "../app/components/Quantity.tsx", "/Users/jerichocalibuso/sp-app/app/routes/pork.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "/**\n * @remix-run/node v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar node = require('@remix-run/node');\n\n\n\nObject.defineProperty(exports, 'createCookie', {\n  enumerable: true,\n  get: function () { return node.createCookie; }\n});\nObject.defineProperty(exports, 'createCookieSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createCookieSessionStorage; }\n});\nObject.defineProperty(exports, 'createFileSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createFileSessionStorage; }\n});\nObject.defineProperty(exports, 'createMemorySessionStorage', {\n  enumerable: true,\n  get: function () { return node.createMemorySessionStorage; }\n});\nObject.defineProperty(exports, 'createSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createSessionStorage; }\n});\nObject.defineProperty(exports, 'unstable_createFileUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createFileUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_createMemoryUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createMemoryUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_parseMultipartFormData', {\n  enumerable: true,\n  get: function () { return node.unstable_parseMultipartFormData; }\n});\n\n/**\n * @remix-run/server-runtime v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar serverRuntime = require('@remix-run/server-runtime');\n\n\n\nObject.defineProperty(exports, 'createSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.createSession; }\n});\nObject.defineProperty(exports, 'isCookie', {\n  enumerable: true,\n  get: function () { return serverRuntime.isCookie; }\n});\nObject.defineProperty(exports, 'isSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.isSession; }\n});\nObject.defineProperty(exports, 'json', {\n  enumerable: true,\n  get: function () { return serverRuntime.json; }\n});\nObject.defineProperty(exports, 'redirect', {\n  enumerable: true,\n  get: function () { return serverRuntime.redirect; }\n});\n\n/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar react = require('@remix-run/react');\n\n\n\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function () { return react.Form; }\n});\nObject.defineProperty(exports, 'Link', {\n  enumerable: true,\n  get: function () { return react.Link; }\n});\nObject.defineProperty(exports, 'Links', {\n  enumerable: true,\n  get: function () { return react.Links; }\n});\nObject.defineProperty(exports, 'LiveReload', {\n  enumerable: true,\n  get: function () { return react.LiveReload; }\n});\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function () { return react.Meta; }\n});\nObject.defineProperty(exports, 'NavLink', {\n  enumerable: true,\n  get: function () { return react.NavLink; }\n});\nObject.defineProperty(exports, 'Outlet', {\n  enumerable: true,\n  get: function () { return react.Outlet; }\n});\nObject.defineProperty(exports, 'PrefetchPageLinks', {\n  enumerable: true,\n  get: function () { return react.PrefetchPageLinks; }\n});\nObject.defineProperty(exports, 'RemixBrowser', {\n  enumerable: true,\n  get: function () { return react.RemixBrowser; }\n});\nObject.defineProperty(exports, 'RemixServer', {\n  enumerable: true,\n  get: function () { return react.RemixServer; }\n});\nObject.defineProperty(exports, 'Scripts', {\n  enumerable: true,\n  get: function () { return react.Scripts; }\n});\nObject.defineProperty(exports, 'ScrollRestoration', {\n  enumerable: true,\n  get: function () { return react.ScrollRestoration; }\n});\nObject.defineProperty(exports, 'useActionData', {\n  enumerable: true,\n  get: function () { return react.useActionData; }\n});\nObject.defineProperty(exports, 'useBeforeUnload', {\n  enumerable: true,\n  get: function () { return react.useBeforeUnload; }\n});\nObject.defineProperty(exports, 'useCatch', {\n  enumerable: true,\n  get: function () { return react.useCatch; }\n});\nObject.defineProperty(exports, 'useFetcher', {\n  enumerable: true,\n  get: function () { return react.useFetcher; }\n});\nObject.defineProperty(exports, 'useFetchers', {\n  enumerable: true,\n  get: function () { return react.useFetchers; }\n});\nObject.defineProperty(exports, 'useFormAction', {\n  enumerable: true,\n  get: function () { return react.useFormAction; }\n});\nObject.defineProperty(exports, 'useHref', {\n  enumerable: true,\n  get: function () { return react.useHref; }\n});\nObject.defineProperty(exports, 'useLoaderData', {\n  enumerable: true,\n  get: function () { return react.useLoaderData; }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function () { return react.useLocation; }\n});\nObject.defineProperty(exports, 'useMatches', {\n  enumerable: true,\n  get: function () { return react.useMatches; }\n});\nObject.defineProperty(exports, 'useNavigate', {\n  enumerable: true,\n  get: function () { return react.useNavigate; }\n});\nObject.defineProperty(exports, 'useNavigationType', {\n  enumerable: true,\n  get: function () { return react.useNavigationType; }\n});\nObject.defineProperty(exports, 'useOutlet', {\n  enumerable: true,\n  get: function () { return react.useOutlet; }\n});\nObject.defineProperty(exports, 'useOutletContext', {\n  enumerable: true,\n  get: function () { return react.useOutletContext; }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function () { return react.useParams; }\n});\nObject.defineProperty(exports, 'useResolvedPath', {\n  enumerable: true,\n  get: function () { return react.useResolvedPath; }\n});\nObject.defineProperty(exports, 'useSearchParams', {\n  enumerable: true,\n  get: function () { return react.useSearchParams; }\n});\nObject.defineProperty(exports, 'useSubmit', {\n  enumerable: true,\n  get: function () { return react.useSubmit; }\n});\nObject.defineProperty(exports, 'useTransition', {\n  enumerable: true,\n  get: function () { return react.useTransition; }\n});\n\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/Users/jerichocalibuso/sp-app/app/entry.server.tsx\";\nimport * as route0 from \"/Users/jerichocalibuso/sp-app/app/root.tsx\";\nimport * as route1 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-products/$productId.upload-image.tsx\";\nimport * as route2 from \"/Users/jerichocalibuso/sp-app/app/routes/customer-feedback/$feedbackId.tsx\";\nimport * as route3 from \"/Users/jerichocalibuso/sp-app/app/routes/assigned-orders/$orderId.tsx\";\nimport * as route4 from \"/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.callback.tsx\";\nimport * as route5 from \"/Users/jerichocalibuso/sp-app/app/routes/customer-feedback/index.tsx\";\nimport * as route6 from \"/Users/jerichocalibuso/sp-app/app/routes/submit-feedback/success.tsx\";\nimport * as route7 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-orders/$orderId.tsx\";\nimport * as route8 from \"/Users/jerichocalibuso/sp-app/app/routes/order-history/$orderId.tsx\";\nimport * as route9 from \"/Users/jerichocalibuso/sp-app/app/routes/order-success.$orderId.tsx\";\nimport * as route10 from \"/Users/jerichocalibuso/sp-app/app/routes/assigned-orders/index.tsx\";\nimport * as route11 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-products/index.tsx\";\nimport * as route12 from \"/Users/jerichocalibuso/sp-app/app/routes/submit-feedback/index.tsx\";\nimport * as route13 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-orders/index.tsx\";\nimport * as route14 from \"/Users/jerichocalibuso/sp-app/app/routes/order-history/index.tsx\";\nimport * as route15 from \"/Users/jerichocalibuso/sp-app/app/routes/cloudinary-upload.tsx\";\nimport * as route16 from \"/Users/jerichocalibuso/sp-app/app/routes/auth/$provider.tsx\";\nimport * as route17 from \"/Users/jerichocalibuso/sp-app/app/routes/products/index.tsx\";\nimport * as route18 from \"/Users/jerichocalibuso/sp-app/app/routes/create-orders.tsx\";\nimport * as route19 from \"/Users/jerichocalibuso/sp-app/app/routes/manage-users.tsx\";\nimport * as route20 from \"/Users/jerichocalibuso/sp-app/app/routes/products/$id.tsx\";\nimport * as route21 from \"/Users/jerichocalibuso/sp-app/app/routes/unauthorized.tsx\";\nimport * as route22 from \"/Users/jerichocalibuso/sp-app/app/routes/checkout.tsx\";\nimport * as route23 from \"/Users/jerichocalibuso/sp-app/app/routes/chicken.tsx\";\nimport * as route24 from \"/Users/jerichocalibuso/sp-app/app/routes/signout.tsx\";\nimport * as route25 from \"/Users/jerichocalibuso/sp-app/app/routes/signin.tsx\";\nimport * as route26 from \"/Users/jerichocalibuso/sp-app/app/routes/signup.tsx\";\nimport * as route27 from \"/Users/jerichocalibuso/sp-app/app/routes/error.tsx\";\nimport * as route28 from \"/Users/jerichocalibuso/sp-app/app/routes/index.tsx\";\nimport * as route29 from \"/Users/jerichocalibuso/sp-app/app/routes/sales.tsx\";\nimport * as route30 from \"/Users/jerichocalibuso/sp-app/app/routes/beef.tsx\";\nimport * as route31 from \"/Users/jerichocalibuso/sp-app/app/routes/cart.tsx\";\nimport * as route32 from \"/Users/jerichocalibuso/sp-app/app/routes/pork.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/manage-products/$productId.upload-image\": {\n      id: \"routes/manage-products/$productId.upload-image\",\n      parentId: \"root\",\n      path: \"manage-products/:productId/upload-image\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/customer-feedback/$feedbackId\": {\n      id: \"routes/customer-feedback/$feedbackId\",\n      parentId: \"root\",\n      path: \"customer-feedback/:feedbackId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/assigned-orders/$orderId\": {\n      id: \"routes/assigned-orders/$orderId\",\n      parentId: \"root\",\n      path: \"assigned-orders/:orderId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/auth/$provider.callback\": {\n      id: \"routes/auth/$provider.callback\",\n      parentId: \"root\",\n      path: \"auth/:provider/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/customer-feedback/index\": {\n      id: \"routes/customer-feedback/index\",\n      parentId: \"root\",\n      path: \"customer-feedback\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/submit-feedback/success\": {\n      id: \"routes/submit-feedback/success\",\n      parentId: \"root\",\n      path: \"submit-feedback/success\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/manage-orders/$orderId\": {\n      id: \"routes/manage-orders/$orderId\",\n      parentId: \"root\",\n      path: \"manage-orders/:orderId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/order-history/$orderId\": {\n      id: \"routes/order-history/$orderId\",\n      parentId: \"root\",\n      path: \"order-history/:orderId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/order-success.$orderId\": {\n      id: \"routes/order-success.$orderId\",\n      parentId: \"root\",\n      path: \"order-success/:orderId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/assigned-orders/index\": {\n      id: \"routes/assigned-orders/index\",\n      parentId: \"root\",\n      path: \"assigned-orders\",\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/manage-products/index\": {\n      id: \"routes/manage-products/index\",\n      parentId: \"root\",\n      path: \"manage-products\",\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/submit-feedback/index\": {\n      id: \"routes/submit-feedback/index\",\n      parentId: \"root\",\n      path: \"submit-feedback\",\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/manage-orders/index\": {\n      id: \"routes/manage-orders/index\",\n      parentId: \"root\",\n      path: \"manage-orders\",\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/order-history/index\": {\n      id: \"routes/order-history/index\",\n      parentId: \"root\",\n      path: \"order-history\",\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/cloudinary-upload\": {\n      id: \"routes/cloudinary-upload\",\n      parentId: \"root\",\n      path: \"cloudinary-upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/auth/$provider\": {\n      id: \"routes/auth/$provider\",\n      parentId: \"root\",\n      path: \"auth/:provider\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/products/index\": {\n      id: \"routes/products/index\",\n      parentId: \"root\",\n      path: \"products\",\n      index: true,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/create-orders\": {\n      id: \"routes/create-orders\",\n      parentId: \"root\",\n      path: \"create-orders\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/manage-users\": {\n      id: \"routes/manage-users\",\n      parentId: \"root\",\n      path: \"manage-users\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/products/$id\": {\n      id: \"routes/products/$id\",\n      parentId: \"root\",\n      path: \"products/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/unauthorized\": {\n      id: \"routes/unauthorized\",\n      parentId: \"root\",\n      path: \"unauthorized\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/checkout\": {\n      id: \"routes/checkout\",\n      parentId: \"root\",\n      path: \"checkout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/chicken\": {\n      id: \"routes/chicken\",\n      parentId: \"root\",\n      path: \"chicken\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/signout\": {\n      id: \"routes/signout\",\n      parentId: \"root\",\n      path: \"signout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/signin\": {\n      id: \"routes/signin\",\n      parentId: \"root\",\n      path: \"signin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/error\": {\n      id: \"routes/error\",\n      parentId: \"root\",\n      path: \"error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/sales\": {\n      id: \"routes/sales\",\n      parentId: \"root\",\n      path: \"sales\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/beef\": {\n      id: \"routes/beef\",\n      parentId: \"root\",\n      path: \"beef\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/cart\": {\n      id: \"routes/cart\",\n      parentId: \"root\",\n      path: \"cart\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/pork\": {\n      id: \"routes/pork\",\n      parentId: \"root\",\n      path: \"pork\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    }\n  };", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  json,\n  Links,\n  LiveReload,\n  LoaderFunction,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from 'remix'\nimport type { MetaFunction } from 'remix'\nimport styles from './tailwind.css'\nimport nprogress from './styles/nprogress.css'\nimport Navbar from './components/Navbar'\nimport Error from './components/Error'\nimport Footer from './components/Footer'\nimport { authenticator } from './services/auth.server'\n\nimport nProgressStyles from 'nprogress/nprogress.css'\nimport { useNProgress } from './hooks/useNProgress'\nimport { Role } from '@prisma/client'\nimport { db } from './utils/db.server'\nimport { commitSession, getSession } from './services/guest.server'\n\nexport function links() {\n  return [\n    { rel: 'stylesheet', href: styles },\n    { rel: 'icon', type: 'image/svg', href: '/images/logo.png' },\n    { rel: 'stylesheet', href: nProgressStyles },\n    { rel: 'stylesheet', href: nprogress },\n  ]\n}\n\nexport const meta: MetaFunction = () => {\n  return { title: 'Camille Meat Shop' }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // If the user is already authenticated redirect to /dashboard directly\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.id && user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: {\n          include: {\n            product: true,\n          },\n        },\n      },\n    })\n    return json({ user, currentOrder })\n  }\n\n  if (!user?.id) {\n    const session = await getSession(request)\n    const localOrderItems = session.get('orderItems')\n    return { localOrderItems }\n  }\n\n  return json({ user })\n}\n\nexport default function App() {\n  const { user, currentOrder, localOrderItems } = useLoaderData()\n\n  useNProgress()\n\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width,initial-scale=1' />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div>\n          <Navbar {...{ user, currentOrder, localOrderItems }} />\n          <Outlet />\n          <Footer />\n        </div>\n\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  )\n}\n\nexport function ErrorBoundary() {\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <Links />\n      </head>\n      <body>\n        <Error />\n        {process.env.NODE_ENV === 'development' ? <LiveReload /> : null}\n      </body>\n    </html>\n  )\n}\n", "import { Fragment, useState } from 'react'\nimport { Dialog, Menu, Popover, Tab, Transition } from '@headlessui/react'\nimport {\n  ChevronDownIcon,\n  MenuIcon,\n  SearchIcon,\n  ShoppingCartIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { Link, LoaderFunction } from 'remix'\nimport { Order, Role, User, OrderItem } from '@prisma/client'\nimport { ArrowRightIcon } from '@heroicons/react/solid'\nimport AccountDropdown, { adminMenuItems } from './AccountDropdown'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\nimport { getSession } from '~/services/session.server'\n\nconst navigation = {\n  pages: [\n    { name: 'All Products', href: '/products' },\n    { name: 'Chicken', href: '/chicken' },\n    { name: 'Pork', href: '/pork' },\n    { name: 'Beef', href: '/beef' },\n  ],\n}\n\ninterface OrderData extends Order {\n  orderItems: OrderItem[]\n}\n\ntype NavbarProps = {\n  user: User | null\n  currentOrder: OrderData | null\n  localOrderItems: any[] | []\n}\n\nexport default function Navbar({\n  user,\n  currentOrder,\n  localOrderItems,\n}: NavbarProps) {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\n  let orderItemCount = 0\n  currentOrder?.orderItems.forEach((o) => (orderItemCount += o.quantity))\n  let localOrderItemCount = 0\n  localOrderItems?.forEach((o) => (localOrderItemCount += o.quantity))\n  return (\n    <>\n      <Transition.Root show={mobileMenuOpen} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-50 flex lg:hidden'\n          onClose={setMobileMenuOpen}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter='transition-opacity ease-linear duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='transition-opacity ease-linear duration-300'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-black bg-opacity-25' />\n          </Transition.Child>\n\n          <Transition.Child\n            as={Fragment}\n            enter='transition ease-in-out duration-300 transform'\n            enterFrom='-translate-x-full'\n            enterTo='translate-x-0'\n            leave='transition ease-in-out duration-300 transform'\n            leaveFrom='translate-x-0'\n            leaveTo='-translate-x-full'\n          >\n            <div className='relative flex w-full max-w-xs flex-col overflow-y-auto bg-white pb-12 shadow-xl'>\n              <div className='flex px-4 pt-5 pb-2.5'>\n                <button\n                  type='button'\n                  className='-m-2 inline-flex items-center justify-center rounded-md p-2 text-gray-700 hover:text-red-500'\n                  onClick={() => setMobileMenuOpen(false)}\n                >\n                  <span className='sr-only'>Close menu</span>\n                  <XIcon className='h-6 w-6' aria-hidden='true' />\n                </button>\n              </div>\n\n              {/* Links */}\n              <Tab.Group as='div' className='mt-2'>\n                <div className='border-b border-gray-200'></div>\n                <Tab.Panels as={Fragment}></Tab.Panels>\n              </Tab.Group>\n\n              <div className='space-y-6 border-t border-gray-200 py-6 px-4'>\n                {user?.role === Role.RIDER && (\n                  <Link\n                    to={'/assigned-orders'}\n                    className='-m-2 block p-2 font-medium text-gray-900'\n                  >\n                    Assgined Orders\n                  </Link>\n                )}\n                {(user?.role === Role.CUSTOMER || !user?.role) &&\n                  navigation.pages.map((page) => (\n                    <div key={page.name} className='flow-root'>\n                      <Link\n                        to={page.href}\n                        className='-m-2 block p-2 font-medium text-gray-900'\n                      >\n                        {page.name}\n                      </Link>\n                    </div>\n                  ))}\n                {user?.role === Role.ADMIN &&\n                  adminMenuItems.map((a) => (\n                    <Link\n                      to={a.route}\n                      className='-m-2 block p-2 font-medium text-gray-900'\n                    >\n                      {a.label}\n                    </Link>\n                  ))}\n              </div>\n\n              {!user?.id ? (\n                <div className='space-y-6 border-t border-gray-200 py-6 px-4'>\n                  <div className='flow-root'>\n                    <Link\n                      to='/signin'\n                      className='-m-2 block p-2 font-medium text-gray-900'\n                    >\n                      Sign in\n                    </Link>\n                  </div>\n                  <div className='flow-root'>\n                    <Link\n                      to='signup'\n                      className='-m-2 block p-2 font-medium text-gray-900'\n                    >\n                      Sign Up\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <div className='space-y-6 border-t border-gray-200 py-6 px-4'>\n                  <div className='flow-root'>\n                    <Link\n                      to='/signout'\n                      className='-m-2 block p-2 font-medium text-gray-900'\n                    >\n                      Sign out\n                    </Link>\n                  </div>\n                </div>\n              )}\n\n              <div className='space-y-6 border-t border-gray-200 py-6 px-4'></div>\n            </div>\n          </Transition.Child>\n        </Dialog>\n      </Transition.Root>\n\n      <header className='relative'>\n        <nav aria-label='Top'>\n          {/* Secondary navigation */}\n          <div className='fixed top-0 left-0 right-0 z-40 border-b border-gray-200 bg-white'>\n            <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>\n              <div className=''>\n                <div className='flex h-16 items-center justify-between'>\n                  {/* Logo (lg+) */}\n                  <div className='hidden lg:flex lg:items-center'>\n                    <Link to='/'>\n                      <span className='sr-only'>Camille Meat Shop</span>\n                      <img\n                        className='h-8 w-auto'\n                        src='/images/logo.png'\n                        alt='Camille Meat Shop Logo'\n                      />\n                    </Link>\n                  </div>\n\n                  <div className='hidden h-full lg:flex'>\n                    {/* Mega menus */}\n                    <Popover.Group className='ml-8'>\n                      <div className='flex h-full justify-center space-x-8'>\n                        {user?.role === Role.RIDER ? (\n                          <Link\n                            to={'/assigned-orders'}\n                            className='flex items-center text-sm font-medium text-gray-700 hover:text-red-600'\n                          >\n                            Assgined Orders\n                          </Link>\n                        ) : (\n                          navigation.pages.map((page) => (\n                            <Link\n                              key={page.name}\n                              to={page.href}\n                              className='flex items-center text-sm font-medium text-gray-700 hover:text-red-600'\n                            >\n                              {page.name}\n                            </Link>\n                          ))\n                        )}\n                      </div>\n                    </Popover.Group>\n                  </div>\n\n                  {/* Mobile menu and search (lg-) */}\n                  <div className='flex flex-1 items-center  lg:hidden'>\n                    <button\n                      type='button'\n                      className='-ml-2 rounded-md bg-white p-2 text-gray-700 hover:text-red-500'\n                      onClick={() => {\n                        setMobileMenuOpen(true)\n                      }}\n                    >\n                      <span className='sr-only'>Open menu</span>\n                      <MenuIcon className='h-6 w-6' aria-hidden='true' />\n                    </button>\n\n                    {/* Search */}\n                  </div>\n\n                  {/* Logo (lg-) */}\n                  <Link to='/' className='lg:hidden'>\n                    <span className='sr-only'>Camille Meat Shop</span>\n                    <img src='/images/logo.png' alt='' className='h-8 w-auto' />\n                  </Link>\n\n                  <div className='flex flex-1 items-center justify-end'>\n                    <div className='flex items-center lg:ml-8'>\n                      <div className='flex space-x-8'></div>\n\n                      <div className='flex space-x-6'>\n                        {user?.role === Role.CUSTOMER ? (\n                          <Link to='/cart' className='group  flex items-center'>\n                            <ShoppingCartIcon\n                              className='h-6 w-6 flex-shrink-0 text-gray-700 group-hover:text-red-600'\n                              aria-hidden='true'\n                            />\n                            <span className='ml-2 text-sm font-medium text-gray-700 group-hover:text-red-600'>\n                              {orderItemCount}\n                            </span>\n                            <span className='sr-only'>\n                              items in cart, view cart\n                            </span>\n                          </Link>\n                        ) : null}\n                        {!user?.role ? (\n                          <Link to='/cart' className='group  flex items-center'>\n                            <ShoppingCartIcon\n                              className='h-6 w-6 flex-shrink-0 text-gray-700 group-hover:text-red-600'\n                              aria-hidden='true'\n                            />\n                            <span className='ml-2 text-sm font-medium text-gray-700 group-hover:text-red-600'>\n                              {localOrderItemCount || 0}\n                            </span>\n                            <span className='sr-only'>\n                              items in cart, view cart\n                            </span>\n                          </Link>\n                        ) : null}\n                      </div>\n\n                      <div className='hidden lg:flex'>\n                        <span\n                          className='mx-4 h-6 w-px bg-gray-200 lg:mx-6'\n                          aria-hidden='true'\n                        />\n\n                        {/* My Account or Sign in */}\n                        {user ? (\n                          <AccountDropdown user={user} />\n                        ) : (\n                          <Link\n                            to='/signin'\n                            className='group -m-2 p-2 text-gray-700 hover:text-red-600'\n                          >\n                            <div className='hidden content-center space-x-2 lg:flex'>\n                              <span className='sr-only'>Sign in</span>\n                              Sign in <ArrowRightIcon className='w-3' />\n                            </div>\n                          </Link>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </header>\n    </>\n  )\n}\n", "import { Menu, Transition } from '@headlessui/react'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\nimport { Role, User } from '@prisma/client'\nimport { Fragment } from 'react'\nimport { Form, Link } from 'remix'\nimport classNames from '~/utils/classNames'\n\ninterface MenuItem {\n  label: string\n  route: string\n}\n\nexport const adminMenuItems: MenuItem[] = [\n  {\n    label: 'Manage Users',\n    route: '/manage-users',\n  },\n  {\n    label: 'Manage Products',\n    route: '/manage-products',\n  },\n  {\n    label: 'Manage Orders',\n    route: '/manage-orders',\n  },\n  {\n    label: 'Sales',\n    route: '/sales',\n  },\n  {\n    label: 'Customer Feedbacks',\n    route: '/customer-feedback',\n  },\n]\n\nexport const customerMenuItems: MenuItem[] = [\n  {\n    label: 'Order History',\n    route: '/order-history',\n  },\n  {\n    label: 'Submit Feedback',\n    route: '/submit-feedback',\n  },\n]\n\nexport const riderMenuItems: MenuItem[] = [\n  {\n    label: 'Assigned Orders',\n    route: '/assigned-orders',\n  },\n]\nconst getMenuItems = (role: Role) => {\n  if (role === Role.ADMIN) {\n    return adminMenuItems.map((item) => (\n      <Menu.Item key={item.route}>\n        {({ active }) => (\n          <Link\n            to={item.route}\n            className={classNames(\n              active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n              'block px-4 py-2 text-sm'\n            )}\n          >\n            {item.label}\n          </Link>\n        )}\n      </Menu.Item>\n    ))\n  } else if (role === Role.RIDER) {\n    return riderMenuItems.map((item) => (\n      <Menu.Item key={item.route}>\n        {({ active }) => (\n          <Link\n            to={item.route}\n            className={classNames(\n              active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n              'block px-4 py-2 text-sm'\n            )}\n          >\n            {item.label}\n          </Link>\n        )}\n      </Menu.Item>\n    ))\n  } else if (role === Role.CUSTOMER) {\n    return customerMenuItems.map((item) => (\n      <Menu.Item key={item.route}>\n        {({ active }) => (\n          <Link\n            to={item.route}\n            className={classNames(\n              active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n              'block px-4 py-2 text-sm'\n            )}\n          >\n            {item.label}\n          </Link>\n        )}\n      </Menu.Item>\n    ))\n  }\n}\n\nexport default function AccountDropdown({ user }: { user: User }) {\n  const { role, name, username, email } = user\n  return (\n    <Menu as='div' className='hidden text-left lg:relative lg:inline-block'>\n      <div>\n        <Menu.Button className='inline-flex w-full justify-center rounded-md  text-sm font-medium text-gray-700 hover:text-red-500'>\n          My Account\n          <ChevronDownIcon\n            className='-mr-1 ml-2 mt-0.5 h-4 w-4'\n            aria-hidden='true'\n          />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter='transition ease-out duration-100'\n        enterFrom='transform opacity-0 scale-95'\n        enterTo='transform opacity-100 scale-100'\n        leave='transition ease-in duration-75'\n        leaveFrom='transform opacity-100 scale-100'\n        leaveTo='transform opacity-0 scale-95'\n      >\n        <Menu.Items className='absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>\n          <div className='px-4 py-3'>\n            <p className='text-sm'>Signed in as</p>\n            <p className='mt-0.5 truncate text-sm font-medium text-gray-900'>\n              {name || username || email}\n            </p>\n          </div>\n          <div className='py-1'>{getMenuItems(role)}</div>\n          <div className='py-1'>\n            <Menu.Item>\n              {({ active }) => (\n                <Link\n                  to='/signout'\n                  type='submit'\n                  className={classNames(\n                    active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                    'block w-full px-4 py-2 text-left text-sm'\n                  )}\n                >\n                  Sign out\n                </Link>\n              )}\n            </Menu.Item>\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}\n", "export default function classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n", "import { Link } from 'remix'\n\nexport default function Error() {\n  return (\n    <>\n      <div className='mt-16 flex min-h-full flex-col bg-white pt-16 pb-12'>\n        <main className='mx-auto flex w-full max-w-7xl flex-grow flex-col justify-center px-4 sm:px-6 lg:px-8'>\n          <div className='flex flex-shrink-0 justify-center'>\n            <Link to='/' className='inline-flex'>\n              <span className='sr-only'>Camille Meat Shop</span>\n              <img\n                className='h-12 w-auto'\n                src='/images/logo.png'\n                alt='Camille Meat Shop Logo'\n              />\n            </Link>\n          </div>\n          <div className='py-16'>\n            <div className='text-center'>\n              <p className='text-sm font-semibold uppercase tracking-wide text-red-600'>\n                error\n              </p>\n              <h1 className='mt-2 text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl'>\n                Page not found.\n              </h1>\n              <p className='mt-2 text-base text-gray-500'>\n                Sorry, we couldn\u2019t find the page you\u2019re looking for.\n              </p>\n              <div className='mt-6'>\n                <Link\n                  to='/'\n                  className='text-base font-medium text-red-600 hover:text-red-500'\n                >\n                  Go back home<span aria-hidden='true'> &rarr;</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </main>\n        <footer className='mx-auto w-full max-w-7xl flex-shrink-0 px-4 sm:px-6 lg:px-8'>\n          <nav className='flex justify-center space-x-4'>\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Contact Support\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Status\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Twitter\n            </a>\n          </nav>\n        </footer>\n      </div>\n    </>\n  )\n}\n", "import { Link } from 'remix'\n\nconst footerNavigation = {\n  products: [\n    { name: 'All Products', href: '/products' },\n    { name: 'Chicken', href: '/chicken' },\n    { name: 'Pork', href: '/pork' },\n    { name: 'Beef', href: '/beef' },\n  ],\n  customerService: [\n    { name: 'Contact', href: '#footer' },\n    { name: 'Shipping', href: '#footer' },\n    { name: 'Returns', href: '#footer' },\n    { name: 'Warranty', href: '#footer' },\n  ],\n  company: [\n    { name: 'Who we are', href: '#footer' },\n    { name: 'Careers', href: '#footer' },\n    { name: 'Terms & Conditions', href: '#footer' },\n    { name: 'Privacy', href: '#footer' },\n  ],\n  legal: [\n    { name: 'Terms of Service', href: '#footer' },\n    { name: 'Return Policy', href: '#footer' },\n    { name: 'Privacy Policy', href: '#footer' },\n    { name: 'Delivery Policy', href: '#footer' },\n  ],\n  bottomLinks: [\n    { name: 'Privacy', href: '#footer' },\n    { name: 'Terms', href: '#footer' },\n  ],\n}\nexport default function Footer() {\n  return (\n    <footer aria-labelledby='footer-heading' className='bg-white'>\n      <h2 id='footer' className='sr-only'>\n        Footer\n      </h2>\n      <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>\n        <div className='border-t border-gray-200'>\n          <div className='pt-16 pb-20'>\n            <div className='md:flex md:justify-center'>\n              <img\n                src='/images/logo.png'\n                alt='Camille Meat Shop Logo'\n                className='h-8 w-auto'\n              />\n            </div>\n            <div className='md:flex md:justify-center'>\n              <h2 className='text-md mt-2 font-bold text-gray-900'>\n                Camille Meat Shop\n              </h2>\n            </div>\n\n            <div className='mx-auto mt-16 max-w-5xl xl:grid xl:grid-cols-2 xl:gap-8'>\n              <div className='grid grid-cols-2 gap-8 xl:col-span-2'>\n                <div className='space-y-12 md:grid md:grid-cols-2 md:gap-8 md:space-y-0'>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>\n                      Products\n                    </h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.products.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <Link\n                            to={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>\n                      Customer Service\n                    </h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.customerService.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <a\n                            href={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n                <div className='space-y-12 md:grid md:grid-cols-2 md:gap-8 md:space-y-0'>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>\n                      Company\n                    </h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.company.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <a\n                            href={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h3 className='text-sm font-medium text-gray-900'>Legal</h3>\n                    <ul role='list' className='mt-6 space-y-6'>\n                      {footerNavigation.legal.map((item) => (\n                        <li key={item.name} className='text-sm'>\n                          <a\n                            href={item.href}\n                            className='text-gray-500 hover:text-red-500'\n                          >\n                            {item.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='py-10 md:flex md:items-center md:justify-between'>\n          <div className='text-center md:text-left'>\n            <p className='text-sm text-gray-500'>\n              &copy; {new Date().getFullYear()} All Rights Reserved\n            </p>\n          </div>\n\n          <div className='mt-4 flex items-center justify-center md:mt-0'>\n            <div className='flex space-x-8'>\n              {footerNavigation.bottomLinks.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className='text-sm text-gray-500 hover:text-red-500'\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n", "// app/services/auth.server.ts\nimport { Role, User } from '@prisma/client'\nimport { Authenticator } from 'remix-auth'\nimport { sessionStorage } from '~/services/session.server'\nimport { FormStrategy } from 'remix-auth-form'\nimport invariant from 'tiny-invariant'\nimport bcrypt from 'bcryptjs'\nimport { db } from '~/utils/db.server'\nimport {\n  FacebookStrategy,\n  GoogleStrategy,\n  SocialsProvider,\n} from 'remix-auth-socials'\n\n// // Create an instance of the authenticator, pass a generic with what\n// // strategies will return and will store in the session\nexport let authenticator = new Authenticator<User>(sessionStorage, {\n  throwOnError: true,\n})\n\n// // LOGIN METHOD\n\nauthenticator.use(\n  new FormStrategy(async ({ form }) => {\n    const username = form.get('username')\n    const password = form.get('password')\n\n    invariant(typeof username === 'string', 'username must be a string')\n    invariant(typeof password === 'string', 'password must be a string')\n\n    const user = await db.user.findUnique({ where: { username } })\n    if (!user) throw new Error('Invalid credentials')\n\n    if (!user.password) throw new Error('User does not have a password')\n\n    const isValidPassword = await bcrypt.compare(password, user.password)\n\n    if (!isValidPassword) {\n      throw new Error('Invalid credentials')\n    }\n\n    return user\n  }),\n  'user-pass-signin'\n)\n\n// SIGNUP METHODS\nauthenticator.use(\n  new FormStrategy(async ({ form, context }) => {\n    // Here you can use `form` to access and input values from the form.\n    // and also use `context` to access more things from the server\n    const name = form.get('name')\n    const username = form.get('username')\n    const password = form.get('password')\n\n    // You can validate the inputs however you want\n    invariant(typeof name === 'string', 'name must be a string')\n    invariant(name.length > 0, 'name must not be empty')\n\n    invariant(typeof username === 'string', 'username must be a string')\n    invariant(username.length > 0, 'username must not be empty')\n\n    invariant(typeof password === 'string', 'password must be a string')\n    invariant(password.length > 0, 'password must not be empty')\n\n    const existingUser = await db.user.findUnique({ where: { username } })\n    if (existingUser) throw new Error('Username is already used')\n\n    // And if you have a password you should hash it\n    const hashedPassword = await bcrypt.hash(password, 10)\n\n    // And finally, you can find, or create, the user\n    const user = await db.user.create({\n      data: { username, password: hashedPassword, role: Role.CUSTOMER, name },\n    })\n\n    // And return the user as the Authenticator expects it\n    return user\n  }),\n  'user-pass-signup'\n)\n\n// invariant(process.env.GOOGLE_CLIENT_ID, 'Google OAuth Client ID is invalid')\n// invariant(\n//   process.env.GOOGLE_CLIENT_SECRET,\n//   'Google OAuth Client Secret is invalid'\n// )\n// invariant(process.env.FACEBOOK_CLIENT_ID, 'Facebook OAuth Client ID is invalid')\n// invariant(\n//   process.env.FACEBOOK_CLIENT_SECRET,\n//   'Facebook OAuth Client Secret is invalid'\n// )\n\n// // Create an instance of the authenticator, pass a generic <User> type which the\n// // strategies will return (this will be stored in the session)\n// authenticator.use(\n//   new GoogleStrategy(\n//     {\n//       clientID: process.env.GOOGLE_CLIENT_ID,\n//       clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n//       callbackURL: `https://camillemeat.shop/auth/${SocialsProvider.GOOGLE}/callback`,\n//     },\n//     async ({ profile }) => {\n//       const email = profile?.emails?.pop()?.value || ''\n//       const name =\n//         profile?.displayName ||\n//         `${profile?.name?.givenName} ${profile?.name?.familyName}` ||\n//         ''\n//       const profileIconUrl = profile?.photos?.pop()?.value || ''\n//       const provider = profile?.provider || ''\n//       const providerId = profile?.id || ''\n//       return await db.user.upsert({\n//         where: {\n//           providerId,\n//         },\n//         update: {},\n//         create: {\n//           email,\n//           name,\n//           profileIconUrl,\n//           providerId,\n//           provider,\n//           role: Role.CUSTOMER,\n//         },\n//       })\n//     }\n//   )\n// )\n\n// authenticator.use(\n//   new FacebookStrategy(\n//     {\n//       clientID: process.env.FACEBOOK_CLIENT_ID,\n//       clientSecret: process.env.FACEBOOK_CLIENT_SECRET,\n//       callbackURL: `https://camillemeat.shop/auth/${SocialsProvider.FACEBOOK}/callback`,\n//     },\n//     async ({ profile }) => {\n//       const email = profile?.emails?.pop()?.value || ''\n//       const name =\n//         profile?.displayName ||\n//         `${profile?.name?.givenName} ${profile?.name?.familyName}` ||\n//         ''\n//       const profileIconUrl = profile?.photos?.pop()?.value || ''\n//       const provider = profile?.provider || ''\n//       const providerId = profile?.id || ''\n//       return await db.user.upsert({\n//         where: {\n//           providerId,\n//         },\n//         update: {},\n//         create: {\n//           email,\n//           name,\n//           profileIconUrl,\n//           providerId,\n//           provider,\n//           role: Role.CUSTOMER,\n//         },\n//       })\n//     }\n//   )\n// )\n", "// app/services/session.server.ts\n\nimport { createCookieSessionStorage } from '@remix-run/node'\n\n// export the whole sessionStorage object\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '_session', // use any name you want here\n    sameSite: 'lax', // this helps with CSRF\n    path: '/', // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: ['s3cr3t'], // replace this with an actual secret\n    secure: process.env.NODE_ENV === 'production', // enable this in prod only\n  },\n})\n\n// you can also export the methods individually for your own usage\nexport let { commitSession, destroySession } = sessionStorage\n\nexport function getSession(request: Request) {\n  return sessionStorage.getSession(request.headers.get('Cookie'))\n}\n", "import { PrismaClient } from '@prisma/client'\n\nlet db: PrismaClient\n\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === 'production') {\n  db = new PrismaClient()\n  db.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  db = global.__db\n}\n\nexport { db }\n", "import nProgress from 'nprogress'\nimport { useEffect } from 'react'\nimport { useTransition } from 'remix'\n\nexport function useNProgress() {\n  let transition = useTransition()\n  nProgress.configure({\n    showSpinner: false,\n    easing: 'ease',\n  })\n  useEffect(() => {\n    if (transition.state === 'idle') nProgress.done()\n    else nProgress.start()\n  }, [transition.state])\n}\n", "import { createCookieSessionStorage } from '@remix-run/node'\n\n// export the whole sessionStorage object\nexport let guestSessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: 'guestData', // use any name you want here\n    sameSite: 'lax', // this helps with CSRF\n    path: '/', // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: ['s3cr3t'], // replace this with an actual secret\n    secure: process.env.NODE_ENV === 'production', // enable this in prod only\n  },\n})\n\n// you can also export the methods individually for your own usage\nexport let { commitSession, destroySession } = guestSessionStorage\n\nexport function getSession(request: Request) {\n  return guestSessionStorage.getSession(request.headers.get('Cookie'))\n}\n", "import {\n  ActionFunction,\n  Form,\n  LoaderFunction,\n  redirect,\n  unstable_parseMultipartFormData,\n  UploadHandler,\n  useLoaderData,\n  useTransition,\n} from 'remix'\nimport { deleteImage, uploadImage } from '~/utils/utils.server'\n\nimport { useState } from 'react'\nimport { FileError, useDropzone } from 'react-dropzone'\nimport { db } from '~/utils/db.server'\nimport invariant from 'tiny-invariant'\nimport { Link } from '@remix-run/react'\n\ninterface CustomFile extends File {\n  preview?: string\n  path?: string\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const uploadHandler: UploadHandler = async ({ name, data }) => {\n    if (name !== 'image') {\n      return undefined\n    }\n    const uploadedImage: any = await uploadImage(data)\n    return uploadedImage.secure_url\n  }\n\n  const formData = await unstable_parseMultipartFormData(request, uploadHandler)\n\n  const imageUrl = formData.get('image') as string\n  const id = params?.productId || ''\n\n  invariant(id, 'Product id error')\n  invariant(imageUrl, 'Image upload error')\n\n  const product = await db.product.findFirst({\n    where: { id },\n    select: {\n      imageUrl: true,\n    },\n  })\n\n  if (product?.imageUrl) {\n    await deleteImage(imageUrl)\n  }\n\n  await db.product.update({\n    where: { id },\n    data: {\n      imageUrl,\n    },\n  })\n\n  return redirect('/manage-products')\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const data = db.product.findFirst({\n    where: {\n      id: params.productId,\n    },\n  })\n  return data\n}\n\nexport default function UploadImageRoute() {\n  const transition = useTransition()\n  const product = useLoaderData()\n  const [files, setFiles] = useState<CustomFile[]>([])\n  const { acceptedFiles, fileRejections, getRootProps, getInputProps } =\n    useDropzone({\n      accept: 'image/jpeg,image/png',\n      maxFiles: 1,\n      maxSize: 10000000,\n      onDropAccepted: (acceptedFiles) => {\n        setFiles(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        )\n      },\n    })\n\n  const acceptedFileItems = acceptedFiles.map((file: CustomFile) => {\n    return files.map((file) => (\n      <div key={file.name}>\n        <img\n          src={file.preview}\n          alt={file.name}\n          className='my-2 h-64 w-64 object-cover object-center sm:rounded-lg'\n        />\n        <p>\n          {file.path} ({(file.size / 1000000)?.toFixed(2)} MB)\n        </p>\n      </div>\n    ))\n  })\n\n  const showErrors = (errors: FileError[]) => {\n    return errors.map((error) => {\n      if (error.code === 'file-too-large') {\n        return <p>- File size is larger than 10MB.</p>\n      } else if (error.code === 'file-invapd-type') {\n        return <p>- Vapd file types are .jpeg, .jpg, .png files.</p>\n      } else if (error.code === 'too-many-files') {\n        return <p>- You can only upload a single file.</p>\n      }\n    })\n  }\n\n  const fileRejectionItems = fileRejections.map(\n    ({ file, errors }: { file: CustomFile; errors: FileError[] }) => (\n      <p key={file.path}>\n        {`${file.path} (${(file.size / 1000000)?.toFixed(2)} MB)`}\n        <p>{...showErrors(errors)}</p>\n      </p>\n    )\n  )\n  return (\n    <div className='flex items-center justify-center py-32'>\n      <Form id='imageUpload' encType='multipart/form-data' method='post'>\n        <input type='hidden' name='productId' value={product?.id} />\n\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input\n            id='image-input'\n            type='file'\n            name='image'\n            {...getInputProps({\n              required: true,\n            })}\n          />\n\n          <div>\n            <label className='block text-sm font-medium text-gray-900'>\n              New product image\n            </label>\n            {/* <div\n              className={`mt-1 flex justify-center rounded-md border-2 border-dashed ${\n                error ? 'border-red-500' : 'border-gray-400'\n              } px-6 pt-5 pb-6`}\n            > */}\n            <div\n              className={`mt-1 flex justify-center rounded-md border-2 border-dashed border-gray-400 px-6 pt-5 pb-6`}\n            >\n              <div className='space-y-1 text-center'>\n                <svg\n                  className={`mx-auto h-12 w-12 text-gray-400`}\n                  stroke='currentColor'\n                  fill='none'\n                  viewBox='0 0 48 48'\n                  aria-hidden='true'\n                >\n                  <path\n                    d='M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02'\n                    strokeWidth={2}\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                  />\n                </svg>\n                <div className='flex text-sm text-gray-600'>\n                  <label\n                    htmlFor='file-upload'\n                    className='focus-within:outpne-none relative cursor-pointer rounded-md bg-white font-medium text-red-600 focus-within:ring-2 focus-within:ring-red-500 focus-within:ring-offset-2 hover:text-red-500'\n                  >\n                    <span>Click to select an image</span>\n                  </label>\n                </div>\n                <p className='text-xs text-gray-500'>\n                  PNG, JPG, JPEG up to 10MB\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {acceptedFileItems}\n          {fileRejections.length > 0 ? (\n            <div className='mt-4'>\n              <p className='text-sm text-red-500'>File input errors:</p>\n              <ul className='text-sm text-red-500'>{...fileRejectionItems}</ul>\n            </div>\n          ) : null}\n        </div>\n        <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n          <button\n            type='submit'\n            className='inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm'\n          >\n            {transition.submission ? (\n              <div className='flex w-12 items-stretch justify-center'>\n                <svg\n                  className='w-5 animate-spin text-white'\n                  xmlns='http://www.w3.org/2000/svg'\n                  fill='none'\n                  viewBox='0 0 24 24'\n                >\n                  <circle\n                    className='opacity-25'\n                    cx='12'\n                    cy='12'\n                    r='10'\n                    stroke='currentColor'\n                    strokeWidth='4'\n                  ></circle>\n                  <path\n                    className='opacity-75'\n                    fill='currentColor'\n                    d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                  ></path>\n                </svg>\n              </div>\n            ) : (\n              'Submit'\n            )}\n          </button>\n          <Link\n            to='/manage-products'\n            className='mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm'\n          >\n            Cancel\n          </Link>\n        </div>\n      </Form>\n    </div>\n  )\n}\n", "import { writeAsyncIterableToWritable } from '@remix-run/node'\nimport cloudinary from 'cloudinary'\nimport { json } from 'remix'\nimport type { Stream } from 'stream'\n\ncloudinary.v2.config({\n  cloud_name: process.env.CLOUD_NAME,\n  api_key: process.env.API_KEY,\n  api_secret: process.env.API_SECRET,\n})\n\nasync function uploadImage(data: any) {\n  return new Promise(async (resolve, reject) => {\n    const uploadStream = cloudinary.v2.uploader.upload_stream(\n      {\n        folder: 'sp-app',\n      },\n      (error, result) => {\n        if (error) {\n          reject(error)\n        }\n        resolve(result)\n      }\n    )\n    await writeAsyncIterableToWritable(data, uploadStream)\n  })\n}\n\nasync function deleteImage(imageUrl: string) {\n  const publicId = imageUrl.split('/').pop()?.split('.')?.shift() as string\n  return new Promise((resolve, reject) => {\n    const destroyedImageInfo = cloudinary.v2.uploader.destroy(\n      publicId,\n      (error, result) => {\n        if (error) {\n          reject(error)\n        }\n        console.log('image deleted successfully')\n        resolve(result)\n      }\n    )\n    return destroyedImageInfo\n  })\n}\n\nconst badRequest = (data: any) => json(data, { status: 400 })\n\nexport { uploadImage, deleteImage, badRequest }\n", "import { useLoaderData } from '@remix-run/react'\nimport { LoaderFunction, redirect } from '@remix-run/node'\nimport { Feedback, Role, User } from '@prisma/client'\nimport { db } from '~/utils/db.server'\n\nimport { authenticator } from '~/services/auth.server'\n\ninterface FeedbackData extends Feedback {\n  User: User\n}\n\ntype LoaderData = {\n  feedback: FeedbackData\n}\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { feedbackId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const feedback = await db.feedback.findFirst({\n    where: {\n      id: feedbackId,\n    },\n    include: {\n      User: true,\n    },\n  })\n\n  if (!feedback) redirect('/customer-feedback')\n\n  return { feedback }\n}\n\nexport default function Example() {\n  const { feedback } = useLoaderData<LoaderData>()\n\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-20'>\n          <h1 className='mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl'>\n            View feedback\n          </h1>\n\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Feedback ID</dt>\n            <dd className='mt-2 text-red-500'>{feedback?.id || ''}</dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Created at</dt>\n            <dd className='mt-2 text-red-500'>\n              {new Date(feedback?.createdAt || '')?.toLocaleDateString(\n                'en-us',\n                {\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                }\n              ) || ''}\n            </dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='font-medium text-gray-900'>User information</dt>\n            <dd className='mt-2 text-gray-700'>\n              <div className='not-italic'>\n                <span className='block'>{feedback.User.name}</span>\n                <span className='block'>{feedback.User.username}</span>\n                <span className='block'>{feedback.User.email}</span>\n              </div>\n            </dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='font-medium text-gray-900'>Feedback</dt>\n            <dd className='mt-2 text-gray-700'>\n              <div className='not-italic'>\n                <span className='block'>{feedback.feedback}</span>\n              </div>\n            </dd>\n          </dl>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { useLoaderData, Link, useActionData } from '@remix-run/react'\nimport { LoaderFunction, ActionFunction, redirect } from '@remix-run/node'\nimport {\n  Address,\n  Order,\n  OrderItem,\n  Product,\n  Role,\n  Status,\n  User,\n} from '@prisma/client'\nimport { db } from '~/utils/db.server'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport {\n  FieldErrors,\n  ValidatedForm,\n  validationError,\n} from 'remix-validated-form'\nimport { Input } from '~/components/Input'\nimport { authenticator } from '~/services/auth.server'\nimport { StatusSelect } from '~/components/StatusSelect'\nimport Autocomplete from '~/components/Autocomplete'\nimport { RiderAutocomplete } from '~/components/RiderAutocomplete'\nimport { useState } from 'react'\nimport DeleteOrderModal from '~/components/DeleteOrderModal'\nimport { RiderStatusSelect } from '~/components/RiderStatusSelect'\n\nconst baseSchema = z.object({\n  status: zfd.text(z.string()),\n})\n\nexport const orderValidator = withZod(baseSchema)\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\ninterface OrderData extends Order {\n  Address: Address\n  orderItems: OrderItemData[]\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n  const { role } = user\n  if (role !== Role.RIDER) {\n    return redirect('/unauthorized')\n  }\n\n  const { orderId } = params\n  const formData = await request.formData()\n\n  const status = formData.get('status') as string\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n    },\n  })\n  await db.order.update({\n    where: {\n      id: orderId,\n    },\n    data: {\n      status: (status as Status) || order?.status,\n    },\n  })\n\n  return null\n}\n\ntype LoaderData = {\n  error: FieldErrors | null\n  order: OrderData\n}\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { orderId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.RIDER) {\n    return redirect('/unauthorized')\n  }\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n    },\n    include: {\n      Address: true,\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n  })\n\n  if (!order) redirect('/manage-orders')\n\n  return { order }\n}\n\nexport default function Example() {\n  const loaderData = useLoaderData<LoaderData>()\n  const { order } = loaderData\n  const [confirmingDeletion, setConfirmingDeletion] = useState(false)\n\n  return (\n    <div className='bg-white'>\n      <DeleteOrderModal\n        {...{ confirmingDeletion, setConfirmingDeletion }}\n        orderId={order?.id || ''}\n      />\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-20 '>\n          <h1 className='mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl'>\n            Edit order\n          </h1>\n          <dl className='mt-6 mb-4 text-sm font-medium'>\n            <h2 className='text-lg text-gray-900'>Editable details</h2>\n          </dl>\n          <ValidatedForm\n            method='post'\n            validator={orderValidator}\n            className='space-y-4'\n          >\n            <RiderStatusSelect\n              name='status'\n              label='Status'\n              value={order.status}\n              className={`${loaderData?.error?.message && 'border-red-500'}`}\n            />\n            <div className=' flex justify-end border-b border-gray-200 pb-4'>\n              <button\n                type='submit'\n                className='inline-flex w-auto justify-end rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto sm:text-sm'\n              >\n                Submit\n              </button>\n            </div>\n          </ValidatedForm>\n          <dl className='mt-6 text-sm font-medium'>\n            <h2 className='text-lg text-gray-900'>Other details</h2>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order ID</dt>\n            <dd className='mt-2 text-red-500'>{order?.id || ''}</dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Paid at</dt>\n            <dd className='mt-2 text-red-500'>\n              {new Date(order?.paidAt || '')?.toLocaleDateString('en-us', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n              }) || ''}\n            </dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order status</dt>\n            <dd className='mt-2 text-red-500'>\n              {order?.status?.replace(/_/g, ' ') || ''}\n            </dd>\n          </dl>\n        </div>\n\n        <div className='mt-10 border-t border-gray-200'>\n          <h2 className='sr-only'>Your order</h2>\n\n          <h3 className='sr-only'>Items</h3>\n          {order.orderItems.map((orderItem) => {\n            const quantity = orderItem.quantity\n            const product = orderItem.product\n            return (\n              <div\n                key={product.id}\n                className='flex space-x-6 border-b border-gray-200 py-10'\n              >\n                <Link to={`/products/${product?.id}`}>\n                  <div className='h-20 w-20 flex-none rounded-lg bg-gray-100 object-cover object-center sm:h-40 sm:w-40'>\n                    <img loading='lazy' src={product?.imageUrl || ''} />\n                  </div>\n                </Link>\n\n                <div className='flex flex-auto flex-col'>\n                  <div>\n                    <h4 className='font-medium text-gray-900 hover:text-red-500'>\n                      <Link to={`/products/${product?.id}`}>\n                        {product.name}\n                      </Link>\n                    </h4>\n                    <p className='mt-2 text-sm text-gray-600'>\n                      {product.description}\n                    </p>\n                  </div>\n                  <div className='mt-6 flex flex-1 items-end'>\n                    <dl className='flex space-x-4 divide-x divide-gray-200 text-sm sm:space-x-6'>\n                      <div className='flex'>\n                        <dt className='font-medium text-gray-900'>Quantity</dt>\n                        <dd className='ml-2 text-gray-700'>{quantity}</dd>\n                      </div>\n                      <div className='flex pl-4 sm:pl-6'>\n                        <dt className='font-medium text-gray-900'>Price</dt>\n                        <dd className='ml-2 text-gray-700'>\u20B1{product.price}</dd>\n                      </div>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n\n          <div className=''>\n            <h3 className='sr-only'>Your information</h3>\n\n            <h4 className='sr-only'>Addresses</h4>\n            <dl className='grid grid-cols-2 gap-x-6 py-10 text-sm'>\n              <div>\n                <dt className='font-medium text-gray-900'>\n                  Delivery information\n                </dt>\n                <dd className='mt-2 text-gray-700'>\n                  <address className='not-italic'>\n                    <span className='block'>{order.Address.address}</span>\n                    <span className='block'>{order.Address.city}, Cavite</span>\n                    <span className='block'>{order.Address.contactPerson}</span>\n                    <span className='block'>{order.Address.phoneNumber}</span>\n                  </address>\n                </dd>\n              </div>\n              <div>\n                <dt className='font-medium text-gray-900'>Payment method</dt>\n                <dd className='mt-2 text-gray-700'>\n                  <div className='not-italic'>\n                    <span className='block'>{order.paymentOption}</span>\n                  </div>\n                </dd>\n              </div>\n            </dl>\n\n            <h3 className='sr-only'>Summary</h3>\n\n            <dl className='space-y-6 border-t border-gray-200 pt-10 text-sm'>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Subtotal</dt>\n                <dd className='text-gray-700'>\u20B1{order.amount}</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='flex font-medium text-gray-900'>\n                  Discount\n                  <span className='ml-2 rounded-full bg-red-500 py-0.5 px-2 text-xs text-white'>\n                    Free Delivery\n                  </span>\n                </dt>\n                <dd className='text-gray-700'>-\u20B150</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Delivery</dt>\n                <dd className='text-gray-700'>$0</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Total</dt>\n                <dd className='text-gray-900'>\u20B1{order.amount}</dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon } from '@heroicons/react/outline'\nimport { Form, useFetcher, useTransition } from 'remix'\n\ninterface Props {\n  orderId: string\n  confirmingDeletion: boolean\n  setConfirmingDeletion: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function DeleteOrderModal({\n  orderId,\n  confirmingDeletion,\n  setConfirmingDeletion,\n}: Props) {\n  const cancelButtonRef = useRef(null)\n  const fetcher = useFetcher()\n\n  useEffect(() => {\n    if (fetcher.type === 'done') {\n      setConfirmingDeletion(false)\n    }\n  }, [fetcher])\n\n  return (\n    <Transition.Root show={confirmingDeletion} as={Fragment}>\n      <Dialog\n        as='div'\n        className='fixed inset-0 z-50 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        onClose={setConfirmingDeletion}\n      >\n        <div className='flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:h-screen sm:align-middle'\n            aria-hidden='true'\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='relative inline-block transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6 sm:align-middle'>\n              <div className='sm:flex sm:items-start'>\n                <div className='mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon\n                    className='h-6 w-6 text-red-600'\n                    aria-hidden='true'\n                  />\n                </div>\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg font-medium leading-6 text-gray-900'\n                  >\n                    Delete order\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      Are you sure you want to delete this order? All of the\n                      order's data will be permanently removed from our servers\n                      forever. This action cannot be undone.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                <fetcher.Form method='post'>\n                  <input type='hidden' name='_method' value='delete' />\n                  <input type='hidden' name='orderId' value={orderId} />\n                  <button\n                    type='submit'\n                    className='inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm'\n                  >\n                    {fetcher.state === 'submitting' ? (\n                      <svg\n                        className='ml-3 mr-3 h-5 w-5 animate-spin text-white'\n                        xmlns='http://www.w3.org/2000/svg'\n                        fill='none'\n                        viewBox='0 0 24 24'\n                      >\n                        <circle\n                          className='opacity-25'\n                          cx='12'\n                          cy='12'\n                          r='10'\n                          stroke='currentColor'\n                          strokeWidth='4'\n                        ></circle>\n                        <path\n                          className='opacity-75'\n                          fill='currentColor'\n                          d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                        ></path>\n                      </svg>\n                    ) : (\n                      'Delete'\n                    )}\n                  </button>\n                </fetcher.Form>\n                <button\n                  type='button'\n                  className='mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm'\n                  onClick={() => setConfirmingDeletion(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n", "import { Status } from '@prisma/client'\nimport { useField } from 'remix-validated-form'\n\ntype SelectProps = {\n  name: string\n  label: string\n  value: Status | string\n  className?: string\n}\n\nexport const RiderStatusSelect = ({\n  name,\n  label,\n  value,\n  className,\n}: SelectProps) => {\n  const { error, getInputProps } = useField(name)\n\n  const statuses = {\n    OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',\n    COMPLETED: 'COMPLETED',\n    CANCELLED: 'CANCELLED',\n  }\n  return (\n    <div>\n      <label htmlFor={name} className='block text-sm font-medium text-gray-900'>\n        {label}\n      </label>\n      <select\n        {...getInputProps({ id: name })}\n        defaultValue={value}\n        className={`mt-1 block w-full appearance-none rounded-md border ${\n          error ? 'border-red-500' : 'border-gray-300'\n        } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n      >\n        {Object.values(statuses).map((status) => (\n          <option key={status} value={status}>\n            {status.replace(/_/g, ' ')}\n          </option>\n        ))}\n      </select>\n      {error && <span className='text-sm text-red-500'>{error}</span>}\n    </div>\n  )\n}\n", "import { ActionFunction, LoaderFunction } from 'remix'\nimport invariant from 'tiny-invariant'\nimport { authenticator } from '~/services/auth.server'\n\nexport let loader: LoaderFunction = ({ request, params }) => {\n  invariant(params.provider, 'auth provider is undefined')\n\n  return authenticator.authenticate(params.provider, request, {\n    successRedirect: '/',\n    failureRedirect: '/signin',\n  })\n}\n", "import { Feedback, Status, User } from '@prisma/client'\nimport { LoaderFunction } from '@remix-run/node'\nimport { db } from '~/utils/db.server'\nimport { useNavigate } from 'react-router'\nimport { useLoaderData, useSearchParams, Link } from '@remix-run/react'\n\ninterface FeedbackData extends Feedback {\n  User: User\n}\n\ninterface LoaderData {\n  feedbacks: FeedbackData[]\n  feedbacksCount: number\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n  const feedbacks = await db.feedback.findMany({\n    skip: page * 10,\n    take: 10,\n    include: {\n      User: true,\n    },\n  })\n  const feedbacksCount = await db.feedback.count()\n\n  return { feedbacks, feedbacksCount }\n}\n\nexport default function ManageFeedbacksPage() {\n  const { feedbacks, feedbacksCount } = useLoaderData<LoaderData>()\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n  const navigate = useNavigate()\n\n  return (\n    <>\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Manage Feedbacks\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete feedbacks.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Feedback Id\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Customer\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Created at\n                    </th>\n\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {feedbacks.map((feedback) => {\n                    return (\n                      <tr\n                        className='hover:cursor-pointer hover:bg-red-50'\n                        key={feedback.id}\n                        onClick={() => {\n                          navigate(`/customer-feedback/${feedback.id}`)\n                        }}\n                      >\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex '>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {feedback.id}\n                            </div>\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex items-center'>\n                            <div className=''>\n                              <div className='text-sm font-medium text-gray-900'>\n                                {feedback?.User?.name || 'GUEST'}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {feedback?.User?.email || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {feedback?.User?.username || ''}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n\n                        <td className='whitespace-nowrap px-6 py-4 font-medium text-gray-900'>\n                          {new Date(\n                            feedback?.createdAt || ''\n                          ).toLocaleDateString()}\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                          <a\n                            href='#'\n                            className='text-red-500 hover:text-red-600'\n                          >\n                            View\n                          </a>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                aria-label='Pagination'\n              >\n                <div className='hidden sm:block'>\n                  <p className='text-sm text-gray-700'>\n                    Showing{' '}\n                    <span className='font-medium'>{(page + 1) * 10 - 9}</span>{' '}\n                    to{' '}\n                    <span className='font-medium'>\n                      {(page + 1) * 10 > feedbacksCount\n                        ? feedbacksCount\n                        : (page + 1) * 10}\n                    </span>{' '}\n                    of <span className='font-medium'>{feedbacksCount}</span>{' '}\n                    results\n                  </p>\n                </div>\n                <div className='flex flex-1 justify-between sm:justify-end'>\n                  <Link\n                    to={`?page=${page - 1}`}\n                    className={\n                      page < 1\n                        ? `hidden`\n                        : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Previous\n                  </Link>\n\n                  <Link\n                    to={`?page=${page + 1}`}\n                    className={\n                      page + 1 >= feedbacksCount / 10\n                        ? 'hidden'\n                        : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Next\n                  </Link>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { Address, Order, OrderItem, Product, Role } from '@prisma/client'\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/node'\nimport { useLoaderData, Link, Form } from '@remix-run/react'\nimport { Fieldset } from '~/components/Fieldset'\nimport { authenticator } from '~/services/auth.server'\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  return null\n}\n\nexport default function OrderDetailsPage() {\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-xl'>\n          <h1 className='mt-2 text-2xl font-extrabold tracking-tight sm:text-4xl'>\n            Your feedback has been submitted!\n          </h1>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { useLoaderData, Link, useActionData } from '@remix-run/react'\nimport { LoaderFunction, ActionFunction, redirect } from '@remix-run/node'\nimport {\n  Address,\n  Order,\n  OrderItem,\n  Product,\n  Role,\n  Status,\n  User,\n} from '@prisma/client'\nimport { db } from '~/utils/db.server'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport {\n  FieldErrors,\n  ValidatedForm,\n  validationError,\n} from 'remix-validated-form'\nimport { Input } from '~/components/Input'\nimport { authenticator } from '~/services/auth.server'\nimport { StatusSelect } from '~/components/StatusSelect'\nimport Autocomplete from '~/components/Autocomplete'\nimport { RiderAutocomplete } from '~/components/RiderAutocomplete'\nimport { useState } from 'react'\nimport DeleteOrderModal from '~/components/DeleteOrderModal'\n\nconst baseSchema = z.object({\n  amount: zfd.text(z.string()),\n  status: zfd.text(z.string()),\n})\n\nexport const orderValidator = withZod(baseSchema)\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\ninterface OrderData extends Order {\n  Address: Address\n  orderItems: OrderItemData[]\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n  const { role } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const { orderId } = params\n  const formData = await request.formData()\n\n  if (formData.get('_method') === 'delete') {\n    const orderId = formData.get('orderId') as string\n\n    await db.order.delete({\n      where: { id: orderId },\n    })\n    return redirect('/manage-orders')\n  }\n\n  const riderId = formData.get('riderId') as string\n  const amount = formData.get('amount') as string\n  const status = formData.get('status') as string\n  if (!riderId) {\n    return {\n      error: 'Rider is required',\n    }\n  }\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n    },\n  })\n  await db.order.update({\n    where: {\n      id: orderId,\n    },\n    data: {\n      riderId: riderId || order?.riderId,\n      amount: parseInt(amount) || order?.amount,\n      status: (status as Status) || order?.status,\n    },\n  })\n\n  return null\n}\n\ntype LoaderData = {\n  order: OrderData\n  error: FieldErrors | null\n  riders: User[] | []\n}\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { orderId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n    },\n    include: {\n      Address: true,\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n  })\n\n  const riders = await db.user.findMany({\n    where: {\n      role: Role.RIDER,\n    },\n  })\n\n  if (!order) redirect('/manage-orders')\n\n  return { order, riders }\n}\n\nexport default function Example() {\n  const loaderData = useLoaderData<LoaderData>()\n  const { order, riders } = loaderData\n  const actionData = useActionData()\n  const [confirmingDeletion, setConfirmingDeletion] = useState(false)\n\n  return (\n    <div className='bg-white'>\n      <DeleteOrderModal\n        {...{ confirmingDeletion, setConfirmingDeletion }}\n        orderId={order?.id || ''}\n      />\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-20'>\n          <h1 className='mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl'>\n            Edit order\n          </h1>\n          <dl className='mt-6 mb-4 text-sm font-medium'>\n            <h2 className='text-lg text-gray-900'>Editable details</h2>\n          </dl>\n          <ValidatedForm\n            method='post'\n            validator={orderValidator}\n            className='space-y-4'\n          >\n            <RiderAutocomplete\n              riderId={order.riderId}\n              riders={riders}\n              name='riderId'\n              label='Rider name'\n              error={actionData?.error || ''}\n              className={`w-full ${\n                loaderData?.error?.message && 'border-red-500'\n              }`}\n            />\n            <Input\n              name='amount'\n              label='Amount'\n              type='text'\n              defaultValue={order.amount?.toString()}\n              className={`w-full ${\n                loaderData?.error?.message && 'border-red-500'\n              }`}\n            />\n            <StatusSelect\n              name='status'\n              label='Status'\n              value={order.status}\n              className={`${loaderData?.error?.message && 'border-red-500'}`}\n            />\n            <div className='flex justify-end border-b border-gray-200 pb-4'>\n              <button\n                onClick={() => setConfirmingDeletion(true)}\n                className='mr-2 inline-flex w-auto justify-end rounded-md border border-transparent border-red-600 px-4 py-2 text-base font-medium text-red-500 shadow-sm hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto sm:text-sm  '\n              >\n                Delete\n              </button>\n              <button\n                type='submit'\n                className='inline-flex w-auto justify-end rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto sm:text-sm'\n              >\n                Submit\n              </button>\n            </div>\n          </ValidatedForm>\n          <dl className='mt-6 text-sm font-medium'>\n            <h2 className='text-lg text-gray-900'>Other details</h2>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order ID</dt>\n            <dd className='mt-2 text-red-500'>{order?.id || ''}</dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Paid at</dt>\n            <dd className='mt-2 text-red-500'>\n              {new Date(order?.paidAt || '')?.toLocaleDateString('en-us', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n              }) || ''}\n            </dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order status</dt>\n            <dd className='mt-2 text-red-500'>\n              {order?.status?.replace(/_/g, ' ') || ''}\n            </dd>\n          </dl>\n        </div>\n\n        <div className='mt-10 border-t border-gray-200'>\n          <h2 className='sr-only'>Your order</h2>\n\n          <h3 className='sr-only'>Items</h3>\n          {order.orderItems.map((orderItem) => {\n            const quantity = orderItem.quantity\n            const product = orderItem.product\n            return (\n              <div\n                key={product.id}\n                className='flex space-x-6 border-b border-gray-200 py-10'\n              >\n                <Link to={`/products/${product?.id}`}>\n                  <div className='h-20 w-20 flex-none rounded-lg bg-gray-100 object-cover object-center sm:h-40 sm:w-40'>\n                    <img loading='lazy' src={product?.imageUrl || ''} />\n                  </div>\n                </Link>\n\n                <div className='flex flex-auto flex-col'>\n                  <div>\n                    <h4 className='font-medium text-gray-900 hover:text-red-500'>\n                      <Link to={`/products/${product?.id}`}>\n                        {product.name}\n                      </Link>\n                    </h4>\n                    <p className='mt-2 text-sm text-gray-600'>\n                      {product.description}\n                    </p>\n                  </div>\n                  <div className='mt-6 flex flex-1 items-end'>\n                    <dl className='flex space-x-4 divide-x divide-gray-200 text-sm sm:space-x-6'>\n                      <div className='flex'>\n                        <dt className='font-medium text-gray-900'>Quantity</dt>\n                        <dd className='ml-2 text-gray-700'>{quantity}</dd>\n                      </div>\n                      <div className='flex pl-4 sm:pl-6'>\n                        <dt className='font-medium text-gray-900'>Price</dt>\n                        <dd className='ml-2 text-gray-700'>\u20B1{product.price}</dd>\n                      </div>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n\n          <div className=''>\n            <h3 className='sr-only'>Your information</h3>\n\n            <h4 className='sr-only'>Addresses</h4>\n            <dl className='grid grid-cols-2 gap-x-6 py-10 text-sm'>\n              <div>\n                <dt className='font-medium text-gray-900'>\n                  Delivery information\n                </dt>\n                <dd className='mt-2 text-gray-700'>\n                  <address className='not-italic'>\n                    <span className='block'>{order.Address.address}</span>\n                    <span className='block'>{order.Address.city}, Cavite</span>\n                    <span className='block'>{order.Address.contactPerson}</span>\n                    <span className='block'>{order.Address.phoneNumber}</span>\n                  </address>\n                </dd>\n              </div>\n              <div>\n                <dt className='font-medium text-gray-900'>Payment method</dt>\n                <dd className='mt-2 text-gray-700'>\n                  <div className='not-italic'>\n                    <span className='block'>{order.paymentOption}</span>\n                  </div>\n                </dd>\n              </div>\n            </dl>\n\n            <h3 className='sr-only'>Summary</h3>\n\n            <dl className='space-y-6 border-t border-gray-200 pt-10 text-sm'>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Subtotal</dt>\n                <dd className='text-gray-700'>\u20B1{order.amount}</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='flex font-medium text-gray-900'>\n                  Discount\n                  <span className='ml-2 rounded-full bg-red-500 py-0.5 px-2 text-xs text-white'>\n                    Free Delivery\n                  </span>\n                </dt>\n                <dd className='text-gray-700'>-\u20B150</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Delivery</dt>\n                <dd className='text-gray-700'>$0</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Total</dt>\n                <dd className='text-gray-900'>\u20B1{order.amount}</dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import React, { forwardRef } from 'react'\nimport { useField, useFormContext } from 'remix-validated-form'\n\ntype InputProps = {\n  name: string\n  label: string\n  type?: string\n  autoComplete?: string\n  value?: string\n  defaultValue?: string\n  hideErrors?: boolean\n  'data-testid'?: string\n  form?: string\n  className?: string\n  placeholder?: string\n}\n\nexport const Input = forwardRef(\n  (\n    {\n      name,\n      label,\n      type = 'text',\n      value,\n      autoComplete,\n      hideErrors: noErrors,\n      'data-testid': dataTestId,\n      form,\n      className,\n      placeholder,\n      defaultValue,\n    }: InputProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const { getInputProps, error } = useField(name, {\n      formId: form,\n    })\n\n    return (\n      <div>\n        <label\n          htmlFor={name}\n          className='block text-sm font-medium text-gray-700'\n        >\n          {label}\n        </label>\n        <div className='mt-1'>\n          <input\n            value={value}\n            defaultValue={defaultValue}\n            data-testid={dataTestId}\n            className={`block w-full appearance-none rounded-md border ${\n              error ? 'border-red-500' : 'border-gray-300'\n            } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n            {...getInputProps({\n              form,\n              type,\n              ref,\n              id: name,\n              autoComplete,\n              placeholder,\n            })}\n          />\n        </div>\n        {error && !noErrors && <p className='text-sm text-red-500'>{error}</p>}\n      </div>\n    )\n  }\n)\n", "import { Status } from '@prisma/client'\nimport { useField } from 'remix-validated-form'\n\ntype SelectProps = {\n  name: string\n  label: string\n  value: Status | string\n  className?: string\n}\n\nexport const StatusSelect = ({\n  name,\n  label,\n  value,\n  className,\n}: SelectProps) => {\n  const { error, getInputProps } = useField(name)\n\n  return (\n    <div>\n      <label htmlFor={name} className='block text-sm font-medium text-gray-900'>\n        {label}\n      </label>\n      <select\n        {...getInputProps({ id: name })}\n        defaultValue={value}\n        className={`mt-1 block w-full appearance-none rounded-md border ${\n          error ? 'border-red-500' : 'border-gray-300'\n        } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n      >\n        {Object.values(Status).map((status) => (\n          <option key={status} value={status}>\n            {status.replace(/_/g, ' ')}\n          </option>\n        ))}\n      </select>\n      {error && <span className='text-sm text-red-500'>{error}</span>}\n    </div>\n  )\n}\n", "import { Combobox } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { Status, User } from '@prisma/client'\nimport { useState } from 'react'\nimport { useField } from 'remix-validated-form'\n\ntype SelectProps = {\n  name: string\n  label: string\n  className?: string\n  riderId: string | null\n  riders: User[] | []\n  error: string\n}\n\nfunction classNames(...classes: any) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport const RiderAutocomplete = ({\n  error,\n  label,\n  riders,\n  riderId,\n}: SelectProps) => {\n  const [selectedRider, setSelectedRider] = useState<User | null>(\n    riders?.find((rider) => rider.id === riderId) || null\n  )\n  const [input, setInput] = useState('')\n  const filteredRider =\n    input === ''\n      ? riders\n      : riders?.filter((rider) => {\n          return (\n            rider?.name?.toLowerCase().includes(input.toLowerCase()) || null\n          )\n        })\n\n  return (\n    <div>\n      <input type='hidden' name='riderId' value={selectedRider?.id || ''} />\n      <Combobox as='div' value={selectedRider} onChange={setSelectedRider}>\n        <Combobox.Label className='block text-sm font-medium text-gray-700'>\n          {label}\n        </Combobox.Label>\n        <div className='relative mt-1'>\n          <Combobox.Input\n            placeholder='Start typing to search for riders'\n            className={`${\n              error ? 'border-red-500' : 'border-gray-300'\n            } w-full rounded-md border border-gray-300 bg-white p-3 pr-10 shadow-sm focus:border-red-500 focus:outline-none focus:ring-1 focus:ring-red-500 sm:text-sm`}\n            onChange={(event) => setInput(event.target.value)}\n            displayValue={(rider: User) => rider?.name || ''}\n          />\n          <Combobox.Button className='absolute inset-y-0 right-0 flex items-center rounded-r-md px-2 focus:outline-none'>\n            <SelectorIcon\n              className='h-5 w-5 text-gray-400'\n              aria-hidden='true'\n            />\n          </Combobox.Button>\n\n          {filteredRider.length > 0 && (\n            <Combobox.Options className='absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm'>\n              {filteredRider.map((rider) => (\n                <Combobox.Option\n                  key={rider.id}\n                  value={rider}\n                  className={({ active }) =>\n                    classNames(\n                      'relative cursor-default select-none py-2 pl-3 pr-9',\n                      active ? 'bg-red-600 text-white' : 'text-gray-900'\n                    )\n                  }\n                >\n                  {({ active, selected }) => (\n                    <>\n                      <span\n                        className={classNames(\n                          'block truncate',\n                          selected && 'font-semibold'\n                        )}\n                      >\n                        {rider.name}\n                      </span>\n\n                      {selected && (\n                        <span\n                          className={classNames(\n                            'absolute inset-y-0 right-0 flex items-center pr-4',\n                            active ? 'text-white' : 'text-red-600'\n                          )}\n                        >\n                          <CheckIcon className='h-5 w-5' aria-hidden='true' />\n                        </span>\n                      )}\n                    </>\n                  )}\n                </Combobox.Option>\n              ))}\n            </Combobox.Options>\n          )}\n        </div>\n      </Combobox>\n      {error && <span className='text-sm text-red-500'>{error}</span>}\n    </div>\n  )\n}\n", "import { Address, Order, OrderItem, Product, Role } from '@prisma/client'\nimport { LoaderFunction, redirect } from '@remix-run/node'\nimport { useLoaderData, Link } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\n\nimport { db } from '~/utils/db.server'\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { orderId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n      userId: user?.id,\n    },\n    include: {\n      Address: true,\n\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n  })\n\n  if (!order) redirect('/cart')\n\n  return { order }\n}\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\ninterface OrderData extends Order {\n  orderItems: OrderItemData[]\n  Address: Address\n}\ninterface LoaderData {\n  order: OrderData\n}\n\nexport default function OrderDetailsPage() {\n  const { order } = useLoaderData<LoaderData>()\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-xl'>\n          <h1 className='mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl'>\n            Order details\n          </h1>\n          <p className='mt-2 text-base text-gray-500'>\n            {new Date(order?.paidAt || '')?.toLocaleDateString('en-us', {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n            }) || ''}\n          </p>\n\n          <dl className='mt-12 text-sm font-medium'>\n            <dt className='text-gray-900'>Order ID</dt>\n            <dd className='mt-2 text-red-500'>{order?.id || ''}</dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order status</dt>\n            <dd className='mt-2 text-red-500'>\n              {order?.status?.replace(/_/g, ' ') || ''}\n            </dd>\n          </dl>\n        </div>\n\n        <div className='mt-10 border-t border-gray-200'>\n          <h2 className='sr-only'>Your order</h2>\n\n          <h3 className='sr-only'>Items</h3>\n          {order.orderItems.map((orderItem) => {\n            const quantity = orderItem.quantity\n            const product = orderItem.product\n            return (\n              <div\n                key={product.id}\n                className='flex space-x-6 border-b border-gray-200 py-10'\n              >\n                <Link to={`/products/${product?.id}`}>\n                  <div className='h-20 w-20 flex-none rounded-lg bg-gray-100 object-cover object-center sm:h-40 sm:w-40'>\n                    <img loading='lazy' src={product?.imageUrl || ''} />\n                  </div>\n                </Link>\n\n                <div className='flex flex-auto flex-col'>\n                  <div>\n                    <h4 className='font-medium text-gray-900 hover:text-red-500'>\n                      <Link to={`/products/${product?.id}`}>\n                        {product.name}\n                      </Link>\n                    </h4>\n                    <p className='mt-2 text-sm text-gray-600'>\n                      {product.description}\n                    </p>\n                  </div>\n                  <div className='mt-6 flex flex-1 items-end'>\n                    <dl className='flex space-x-4 divide-x divide-gray-200 text-sm sm:space-x-6'>\n                      <div className='flex'>\n                        <dt className='font-medium text-gray-900'>Quantity</dt>\n                        <dd className='ml-2 text-gray-700'>{quantity}</dd>\n                      </div>\n                      <div className='flex pl-4 sm:pl-6'>\n                        <dt className='font-medium text-gray-900'>Price</dt>\n                        <dd className='ml-2 text-gray-700'>\u20B1{product.price}</dd>\n                      </div>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n\n          <div className=''>\n            <h3 className='sr-only'>Your information</h3>\n\n            <h4 className='sr-only'>Addresses</h4>\n            <dl className='grid grid-cols-2 gap-x-6 py-10 text-sm'>\n              <div>\n                <dt className='font-medium text-gray-900'>\n                  Delivery information\n                </dt>\n                <dd className='mt-2 text-gray-700'>\n                  <address className='not-italic'>\n                    <span className='block'>{order.Address.address}</span>\n                    <span className='block'>{order.Address.city}, Cavite</span>\n                    <span className='block'>{order.Address.contactPerson}</span>\n                    <span className='block'>{order.Address.phoneNumber}</span>\n                  </address>\n                </dd>\n              </div>\n              <div>\n                <dt className='font-medium text-gray-900'>Payment method</dt>\n                <dd className='mt-2 text-gray-700'>\n                  <div className='not-italic'>\n                    <span className='block'>{order.paymentOption}</span>\n                  </div>\n                </dd>\n              </div>\n            </dl>\n\n            <h3 className='sr-only'>Summary</h3>\n\n            <dl className='space-y-6 border-t border-gray-200 pt-10 text-sm'>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Subtotal</dt>\n                <dd className='text-gray-700'>\u20B1{order.amount}</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='flex font-medium text-gray-900'>\n                  Discount\n                  <span className='ml-2 rounded-full bg-red-500 py-0.5 px-2 text-xs text-white'>\n                    Free Delivery\n                  </span>\n                </dt>\n                <dd className='text-gray-700'>-\u20B150</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Delivery</dt>\n                <dd className='text-gray-700'>$0</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Total</dt>\n                <dd className='text-gray-900'>\u20B1{order.amount}</dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import {\n  Address,\n  Order,\n  OrderItem,\n  Product,\n  Role,\n  Status,\n} from '@prisma/client'\nimport { authenticator } from '~/services/auth.server'\nimport { LoaderFunction, redirect } from '@remix-run/node'\n\nimport {\n  createPayment,\n  retrievePaymentIntent,\n  retrieveSource,\n} from '~/services/paymongo.server'\nimport { db } from '~/utils/db.server'\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { destroySession, getSession } from '~/services/guest.server'\n\n/* This example requires Tailwind CSS v2.0+ */\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\ninterface OrderData extends Order {\n  Address: Address\n  orderItems: OrderItemData[]\n}\ninterface LoaderData {\n  order: OrderData\n}\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { orderId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.ADMIN || user?.role === Role.RIDER) {\n    return redirect('/unauthorized')\n  }\n\n  const order = await db.order.findFirst({\n    where: {\n      id: orderId,\n      userId: user?.id,\n    },\n    include: {\n      Address: true,\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n  })\n\n  if (!order) redirect('/cart')\n\n  const productIds = order?.orderItems.map((orderItem) => orderItem.productId)\n\n  const session = await getSession(request)\n  if (order?.sourceId && !order?.paidAt) {\n    const res = await retrieveSource(order?.sourceId)\n    if (!res.status) {\n      return redirect('/cart')\n    }\n\n    if (res.status === 'pending') {\n      return redirect(res.checkoutUrl)\n    } else if (res.status === 'chargeable') {\n      const paymentReference = await createPayment(\n        order.sourceId,\n        order?.amount\n      )\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentReference: paymentReference,\n          paidAt: new Date(),\n        },\n      })\n\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: productIds || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n      return redirect(`/order-success/${orderId}`, {\n        headers: {\n          'Set-Cookie': await destroySession(session),\n        },\n      })\n    }\n  }\n\n  if (order?.paymentIntentId && !order?.paidAt) {\n    const res = await retrievePaymentIntent(order?.paymentIntentId)\n\n    if (res.status === 'paid') {\n      const updatedOrder = await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentReference: res.paymentReference,\n          paidAt: new Date(),\n        },\n      })\n\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: productIds || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n      return redirect(`/order-success/${orderId}`, {\n        headers: {\n          'Set-Cookie': await destroySession(session),\n        },\n      })\n    } else {\n      return redirect('/checkout?paymentFailed=true')\n    }\n  }\n\n  return { order }\n}\n\nexport default function Example() {\n  const { order } = useLoaderData<LoaderData>()\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-xl'>\n          <h1 className='text-sm font-semibold uppercase tracking-wide text-red-500'>\n            Order details\n          </h1>\n          <p className='mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl'>\n            It's on the way!\n          </p>\n          <p className='mt-2 text-base text-gray-500'>\n            Your order has been placed and will be delivered to you soon.\n          </p>\n\n          <dl className='mt-12 text-sm font-medium'>\n            <dt className='text-gray-900'>Order ID</dt>\n            <dd className='mt-2 text-red-500'>{order?.id || ''}</dd>\n          </dl>\n          <dl className='mt-6 text-sm font-medium'>\n            <dt className='text-gray-900'>Order status</dt>\n            <dd className='mt-2 text-red-500'>\n              {order?.status?.replace(/_/g, ' ') || ''}\n            </dd>\n          </dl>\n        </div>\n\n        <div className='mt-10 border-t border-gray-200'>\n          <h2 className='sr-only'>Your order</h2>\n\n          <h3 className='sr-only'>Items</h3>\n          {order.orderItems.map((orderItem: OrderItemData) => {\n            const { product } = orderItem\n            return (\n              <div\n                key={orderItem.id}\n                className='flex space-x-6 border-b border-gray-200 py-10'\n              >\n                <Link to={`/products/${orderItem?.productId}`}>\n                  <div className='h-20 w-20 flex-none rounded-lg bg-gray-100 object-cover object-center sm:h-40 sm:w-40'>\n                    <img loading='lazy' src={product?.imageUrl || ''} />\n                  </div>\n                </Link>\n\n                <div className='flex flex-auto flex-col'>\n                  <div>\n                    <h4 className='font-medium text-gray-900 hover:text-red-500'>\n                      <Link to={`/products/${product?.id}`}>\n                        {product.name}\n                      </Link>\n                    </h4>\n                    <p className='mt-2 text-sm text-gray-600'>\n                      {product.description}\n                    </p>\n                  </div>\n                  <div className='mt-6 flex flex-1 items-end'>\n                    <dl className='flex space-x-4 divide-x divide-gray-200 text-sm sm:space-x-6'>\n                      <div className='flex'>\n                        <dt className='font-medium text-gray-900'>Quantity</dt>\n                        <dd className='ml-2 text-gray-700'>\n                          {orderItem.quantity}\n                        </dd>\n                      </div>\n                      <div className='flex pl-4 sm:pl-6'>\n                        <dt className='font-medium text-gray-900'>Price</dt>\n                        <dd className='ml-2 text-gray-700'>{product.price}</dd>\n                      </div>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n\n          <div className=''>\n            <h3 className='sr-only'>Your information</h3>\n\n            <h4 className='sr-only'>Addresses</h4>\n            <dl className='grid grid-cols-2 gap-x-6 py-10 text-sm'>\n              <div>\n                <dt className='font-medium text-gray-900'>\n                  Delivery information\n                </dt>\n                <dd className='mt-2 text-gray-700'>\n                  <address className='not-italic'>\n                    <span className='block'>{order.Address.address}</span>\n                    <span className='block'>{order.Address.city}, Cavite</span>\n                    <span className='block'>{order.Address.contactPerson}</span>\n                    <span className='block'>{order.Address.phoneNumber}</span>\n                  </address>\n                </dd>\n              </div>\n              <div>\n                <dt className='font-medium text-gray-900'>Payment method</dt>\n                <dd className='mt-2 text-gray-700'>\n                  <div className='not-italic'>\n                    <span className='block'>{order.paymentOption}</span>\n                  </div>\n                </dd>\n              </div>\n            </dl>\n\n            <h3 className='sr-only'>Summary</h3>\n\n            <dl className='space-y-6 border-t border-gray-200 pt-10 text-sm'>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Subtotal</dt>\n                <dd className='text-gray-700'>\u20B1{order.amount}</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Delivery</dt>\n                <dd className='text-gray-700'>\u20B150</dd>\n              </div>\n              <div className='flex justify-between'>\n                <dt className='flex font-medium text-gray-900'>\n                  Discount\n                  <span className='ml-2 rounded-full bg-red-500 py-0.5 px-2 text-xs text-white'>\n                    Free Delivery\n                  </span>\n                </dt>\n                <dd className='text-gray-700'>-\u20B150</dd>\n              </div>\n\n              <div className='flex justify-between'>\n                <dt className='font-medium text-gray-900'>Total</dt>\n                <dd className='text-gray-900'>\u20B1{order.amount}</dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "const createPaymentIntent = async () => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: 10000,\n          payment_method_allowed: ['card'],\n          payment_method_options: { card: { request_three_d_secure: 'any' } },\n          currency: 'PHP',\n          capture_type: 'automatic',\n          statement_descriptor: 'Camille Meat Shop',\n          description: 'Camille Meat Shop',\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_intents',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nconst createPaymentMethod = async ({\n  cardNumber,\n  nameOnCard,\n  expiration,\n  cvc,\n  amount,\n}: PayCardArgs) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          type: 'card',\n          amount: amount * 100,\n          payment_method_allowed: ['card'],\n          payment_method_options: { card: { request_three_d_secure: 'any' } },\n          currency: 'PHP',\n          capture_type: 'automatic',\n          statement_descriptor: 'Camille Meat Shop',\n          description: 'Camille Meat Shop',\n          details: {\n            card_number: cardNumber,\n            exp_month: parseInt(expiration.split('/')[0]) || 12,\n            exp_year: parseInt(expiration.split('/')[1]) || 2022,\n            cvc: cvc,\n          },\n          billing: { name: nameOnCard, email: 'jerichocalibuso@gmail.com' },\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_methods',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nconst attachPaymentIntent = async (\n  paymentIntentId: string,\n  paymentMethodId: string,\n  clientKey: string\n) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          payment_method: `${paymentMethodId}`,\n          client_key: `${clientKey}`,\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    `https://api.paymongo.com/v1/payment_intents/${paymentIntentId}/attach`,\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nexport interface PayCardArgs {\n  cardNumber: string\n  nameOnCard: string\n  expiration: string\n  cvc: string\n  amount: number\n}\n\nexport const payCard = async ({\n  cardNumber,\n  nameOnCard,\n  expiration,\n  cvc,\n  amount,\n}: PayCardArgs) => {\n  const { data: paymentMethodData, errors: paymentMethodErrors } =\n    await createPaymentMethod({\n      cardNumber,\n      nameOnCard,\n      expiration,\n      cvc,\n      amount,\n    })\n\n  const { data: paymentIntentData, errors: paymentIntentErrors } =\n    await createPaymentIntent()\n\n  if (paymentMethodErrors?.length || paymentIntentErrors?.length) {\n    let errors: any[] = []\n    paymentMethodErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    paymentIntentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n\n    return { errors }\n  }\n\n  const clientKey = paymentIntentData.attributes.client_key\n  const paymentMethodId = paymentMethodData.id\n  const paymentIntentId = paymentIntentData.id\n\n  const {\n    data: paymentIntentAttachmentData,\n    errors: paymentIntentAttachmentErrors,\n  } = await attachPaymentIntent(paymentIntentId, paymentMethodId, clientKey)\n\n  if (paymentIntentAttachmentErrors?.length) {\n    let errors: any[] = []\n    paymentIntentAttachmentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  const paymentReference = paymentIntentAttachmentData.attributes.payments[0].id\n  return { paymentReference }\n}\n\nconst createSource = async (type: string, orderId: string, amount: number) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: amount * 100,\n          redirect: {\n            success:\n              process.env.NODE_ENV === 'development'\n                ? `http://localhost:3000/order-success/${orderId}`\n                : `https://www.camillemeat.shop/order-success/${orderId}`,\n            failed:\n              process.env.NODE_ENV === 'development'\n                ? `http://localhost:3000/checkout?paymentFailed=true`\n                : `https://www.camillemeat.shop/checkout?paymentFailed=true`,\n          },\n          type: type,\n          currency: 'PHP',\n        },\n      },\n    }),\n  }\n  const res = await fetch('https://api.paymongo.com/v1/sources', options)\n  const data = await res.json()\n  return data\n}\n\nexport const createPayment = async (\n  sourceId: string,\n  amount: number\n): Promise<string> => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: amount * 100,\n          source: { id: sourceId, type: 'source' },\n          description: 'Camille Meat Shop',\n          currency: 'PHP',\n        },\n      },\n    }),\n  }\n\n  const res = await fetch('https://api.paymongo.com/v1/payments', options)\n  const { data } = await res.json()\n\n  return data.id || ''\n}\n\ninterface CreateSourceArgs {\n  amount: number\n  orderId: string\n}\n\nexport const createGCashSource = async ({\n  orderId,\n  amount,\n}: CreateSourceArgs) => {\n  const { data: sourceData, errors: sourceErrors } = await createSource(\n    'gcash',\n    orderId,\n    amount\n  )\n\n  if (sourceErrors?.length) {\n    let errors: any[] = []\n    sourceErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  return {\n    checkoutUrl: sourceData.attributes.redirect.checkout_url,\n    sourceId: sourceData.id,\n  }\n}\n\nexport const createGrabPaySource = async ({\n  orderId,\n  amount,\n}: CreateSourceArgs) => {\n  const { data: sourceData, errors: sourceErrors } = await createSource(\n    'grab_pay',\n    orderId,\n    amount\n  )\n\n  if (sourceErrors?.length) {\n    let errors: any[] = []\n    sourceErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  return {\n    checkoutUrl: sourceData.attributes.redirect.checkout_url,\n    sourceId: sourceData.id,\n  }\n}\n\nexport const retrieveSource = async (sourceId: string) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n  }\n  const res = await fetch(\n    `https://api.paymongo.com/v1/sources/${sourceId}`,\n    options\n  )\n  const { data: sourceData } = await res.json()\n  return {\n    status: sourceData.attributes.status,\n    checkoutUrl: sourceData.attributes.redirect.checkout_url,\n  }\n}\n\nexport const retrievePaymentIntent = async (paymentIntentId: string) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n  }\n  const res = await fetch(\n    `https://api.paymongo.com/v1/payment_intents/${paymentIntentId}`,\n    options\n  )\n\n  const { data: paymentIntentData } = await res.json()\n  return {\n    status: paymentIntentData.attributes.payments[0].attributes.status,\n    paymentReference: paymentIntentData.attributes.payments[0].id,\n  }\n}\n\nexport const createMayaIntent = async (amount: number) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          amount: 10000,\n          payment_method_allowed: ['paymaya'],\n          payment_method_options: { card: { request_three_d_secure: 'any' } },\n          currency: 'PHP',\n          capture_type: 'automatic',\n        },\n      },\n    }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_intents',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\nconst createMayaMethod = async () => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({ data: { attributes: { type: 'paymaya' } } }),\n  }\n\n  const res = await fetch(\n    'https://api.paymongo.com/v1/payment_methods',\n    options\n  )\n  const data = await res.json()\n  return data\n}\n\ninterface MayaMethodArgs {\n  paymentIntentId: string\n  paymentMethodId: string\n  orderId: string\n  clientKey: string\n}\nconst attachMayaIntent = async ({\n  paymentIntentId,\n  paymentMethodId,\n  orderId,\n  clientKey,\n}: MayaMethodArgs) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Basic ${process.env.PAYMONGO_SECRET_KEY_BASE64}`,\n    },\n    body: JSON.stringify({\n      data: {\n        attributes: {\n          payment_method: `${paymentMethodId}`,\n          client_key: `${clientKey}`,\n          return_url:\n            process.env.NODE_ENV === 'development'\n              ? `http://localhost:3000/order-success/${orderId}`\n              : `https://www.camillemeat.shop/order-success/${orderId}`,\n        },\n      },\n    }),\n  }\n  const res = await fetch(\n    `https://api.paymongo.com/v1/payment_intents/${paymentIntentId}/attach`,\n    options\n  )\n\n  const data = await res.json()\n  return data\n}\n\nexport const payMaya = async ({ amount, orderId }: CreateSourceArgs) => {\n  const { data: paymentMethodData, errors: paymentMethodErrors } =\n    await createMayaMethod()\n\n  const { data: paymentIntentData, errors: paymentIntentErrors } =\n    await createMayaIntent(amount)\n\n  if (paymentMethodErrors?.length || paymentIntentErrors?.length) {\n    let errors: any[] = []\n    paymentMethodErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    paymentIntentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n\n    return { errors }\n  }\n\n  const clientKey = paymentIntentData.attributes.client_key\n  const paymentMethodId = paymentMethodData.id\n  const paymentIntentId = paymentIntentData.id\n\n  const {\n    data: paymentIntentAttachmentData,\n    errors: paymentIntentAttachmentErrors,\n  } = await attachMayaIntent({\n    paymentIntentId,\n    paymentMethodId,\n    clientKey,\n    orderId,\n  })\n\n  if (paymentIntentAttachmentErrors?.length) {\n    let errors: any[] = []\n    paymentIntentAttachmentErrors.forEach(\n      (error: any) => error?.detail && errors.push(error.detail)\n    )\n    return { errors }\n  }\n\n  return {\n    checkoutUrl:\n      paymentIntentAttachmentData.attributes.next_action.redirect.url,\n    paymentIntentId: paymentIntentAttachmentData.id,\n  }\n}\n", "import {\n  Address,\n  Order,\n  OrderItem,\n  Product,\n  Role,\n  Status,\n  User,\n} from '@prisma/client'\nimport { LoaderFunction, redirect } from '@remix-run/node'\nimport { db } from '~/utils/db.server'\nimport { useNavigate } from 'react-router'\nimport { useLoaderData, useSearchParams, Link } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\nexport interface OrderData extends Order {\n  orderItems: OrderItemData[]\n  User: User | null\n  Address: Address | null\n}\ninterface LoaderData {\n  orders: OrderData[]\n  ordersCount: number\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n  if (user?.role !== Role.RIDER) return redirect('/unauthorized')\n\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n  const orders = await db.order.findMany({\n    skip: page * 10,\n    take: 10,\n    where: {\n      status: {\n        not: Status.IN_CART,\n      },\n      riderId: {\n        equals: user.id,\n      },\n    },\n    include: {\n      Product: true,\n      User: true,\n      Address: true,\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n    orderBy: {\n      updatedAt: 'desc',\n    },\n  })\n  const ordersCount = await db.order.count({\n    where: {\n      status: {\n        not: Status.IN_CART,\n      },\n      riderId: {\n        equals: user.id,\n      },\n    },\n  })\n\n  return { orders, ordersCount }\n}\n\nexport default function AssignedOrdersPage() {\n  const { orders, ordersCount } = useLoaderData<LoaderData>()\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n  const navigate = useNavigate()\n\n  return (\n    <>\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Assigned Orders\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete orders.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order Id\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Customer\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Address\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order Items\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Status\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Date\n                    </th>\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {orders.map((order) => {\n                    return (\n                      <tr\n                        className='hover:cursor-pointer hover:bg-red-50'\n                        key={order.id}\n                        onClick={() => {\n                          navigate(`/assigned-orders/${order.id}`)\n                        }}\n                      >\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex '>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {order.id}\n                            </div>\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex items-center'>\n                            <div className=''>\n                              <div className='text-sm font-medium text-gray-900'>\n                                {order?.User?.name || 'GUEST'}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.User?.email || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.User?.username || ''}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex items-center '>\n                            <div className=''>\n                              <div className='text-sm font-medium text-gray-900'>\n                                {order?.Address?.address || 'No address'}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.city || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.province || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.contactPerson || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.phoneNumber || ''}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          {order?.orderItems?.map((orderItem) => {\n                            return (\n                              <div\n                                key={orderItem.id}\n                                className='text-sm font-medium text-gray-900'\n                              >\n                                {orderItem.quantity || ''}x{' '}\n                                {orderItem.product.name}\n                              </div>\n                            )\n                          })}\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4 font-medium text-gray-900'>\n                          {order.status.replace(/_/g, ' ')}\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4 font-medium text-gray-900'>\n                          {new Date(order?.paidAt || '').toLocaleDateString()}\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                          <a\n                            href='#'\n                            className='text-red-500 hover:text-red-600'\n                          >\n                            Edit\n                          </a>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                aria-label='Pagination'\n              >\n                <div className='hidden sm:block'>\n                  <p className='text-sm text-gray-700'>\n                    Showing{' '}\n                    <span className='font-medium'>{(page + 1) * 10 - 9}</span>{' '}\n                    to{' '}\n                    <span className='font-medium'>\n                      {(page + 1) * 10 > ordersCount\n                        ? ordersCount\n                        : (page + 1) * 10}\n                    </span>{' '}\n                    of <span className='font-medium'>{ordersCount}</span>{' '}\n                    results\n                  </p>\n                </div>\n                <div className='flex flex-1 justify-between sm:justify-end'>\n                  <Link\n                    to={`?page=${page - 1}`}\n                    className={\n                      page < 1\n                        ? `hidden`\n                        : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Previous\n                  </Link>\n                  <Link\n                    to={`?page=${page + 1}`}\n                    className={\n                      page + 1 >= ordersCount / 10\n                        ? 'hidden'\n                        : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Next\n                  </Link>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { Category, Product, Role } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useEffect, useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  Link,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n  useSearchParams,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport AddEditProductForm from '~/components/AddEditProductForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\nimport { deleteImage, uploadImage } from '~/utils/utils.server'\n\nconst baseSchema = z.object({\n  name: zfd.text(z.string().nonempty('Name is required')),\n  category: zfd.text(z.string().nonempty('Name is required')),\n  price: zfd.numeric(\n    z\n      .number()\n      .int('Price must be an integer.')\n      .positive('Price must be greater than 0.')\n  ),\n  stock: zfd.numeric(\n    z\n      .number()\n      .int('Stock must be an integer.')\n      .positive('Stock must be greater than 0.')\n  ),\n  weight: zfd.numeric(\n    z\n      .number()\n      .int('Weight must be an integer.')\n      .positive('Weight must be greater than 0.')\n  ),\n  description: zfd.text(\n    z.string().max(280, { message: 'Must be 280 or fewer characters long.' })\n  ),\n\n  brand: zfd.text(z.string()),\n})\n\nexport const productValidator = withZod(baseSchema)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  if (formData.get('_method') === 'delete') {\n    const productId = formData.get('productId') as string\n    invariant(productId, 'productId is not found.')\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        imageUrl: true,\n      },\n    })\n\n    await deleteImage(product?.imageUrl || '')\n    await db.product.delete({\n      where: { id: productId },\n    })\n    return redirect('/manage-products')\n  }\n\n  const result = await productValidator.validate(formData)\n\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, category, price, stock, weight, description, brand } =\n    result.data\n\n  const productId = formData.get('productId') as string\n  if (productId) {\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        name: true,\n      },\n    })\n    const productName = formData.get('name') as string\n\n    if (product?.name !== productName) {\n      const existingProduct = await db.product.findFirst({\n        where: {\n          name: productName,\n        },\n      })\n\n      if (existingProduct) {\n        return validationError({\n          fieldErrors: {\n            name: 'Product name already exists',\n          },\n        })\n      }\n    }\n\n    try {\n      await db.product.update({\n        where: { id: productId },\n        data: {\n          name,\n          category: category as Category,\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  } else {\n    const productName = formData.get('name') as string\n\n    const existingProduct = await db.product.findFirst({\n      where: {\n        name: productName,\n      },\n    })\n\n    if (existingProduct) {\n      return validationError({\n        fieldErrors: {\n          name: 'Product name already exists',\n        },\n      })\n    }\n\n    try {\n      await db.product.create({\n        data: {\n          name,\n          category: category as Category,\n          imageUrl:\n            'https://res.cloudinary.com/jerichocalibuso/image/upload/v1650783918/sp-app/empty_image_a9urnc.jpg',\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  }\n\n  return redirect('/manage-products')\n}\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n\n  const productsCount = await db.product.count()\n  const products = await db.product.findMany({\n    take: 10,\n    skip: page * 10,\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  return json({ products, productsCount })\n}\n\nexport default function ManageProductsRoute() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null)\n\n  const { products, productsCount } = useLoaderData()\n\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n\n  useEffect(() => {\n    if (!openSlideOver) {\n      setSelectedProduct(null)\n    }\n  }, [openSlideOver])\n  return (\n    <>\n      <AddEditProductForm\n        {...{\n          openSlideOver,\n          setOpenSlideOver,\n          selectedProduct,\n        }}\n      />\n\n      <div className='bg-white px-4 py-5 pt-24 sm:flex sm:items-center sm:px-6'>\n        <div className='sm:flex-auto'>\n          <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n            Manage Products\n          </h3>\n          <p className='mt-3 text-sm text-gray-500'>\n            View, add, edit, or delete products.\n          </p>\n        </div>\n        <div className='mt-4 sm:mt-0 sm:ml-16 sm:flex-none'>\n          <button\n            type='button'\n            className='inline-flex items-center justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto'\n            onClick={() => setOpenSlideOver(true)}\n          >\n            Add product\n          </button>\n        </div>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Product\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Category\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Description\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Price\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Weight\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Stock\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Brand\n                    </th>\n\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {products.map((product: Product) => (\n                    <tr\n                      className='hover:cursor-pointer hover:bg-red-50'\n                      key={product.id}\n                      onClick={() => {\n                        setSelectedProduct(product)\n                        setOpenSlideOver(true)\n                      }}\n                    >\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='flex items-center'>\n                          <div className='h-10 w-10 flex-shrink-0'>\n                            {product.imageUrl ? (\n                              <img\n                                className='h-10 w-10 rounded-md'\n                                src={product.imageUrl}\n                                alt={product.name}\n                                loading='lazy'\n                              />\n                            ) : (\n                              <div className='h-10 w-10 rounded-md bg-gray-500' />\n                            )}\n                          </div>\n                          <div className='ml-4'>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {product.name}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.category}\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.description}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.price}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.weight}\n                        </div>\n                      </td>\n\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.stock}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {product.brand}\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                        <a href='#' className='text-red-500 hover:text-red-600'>\n                          Edit\n                        </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                aria-label='Pagination'\n              >\n                <div className='hidden sm:block'>\n                  <p className='text-sm text-gray-700'>\n                    Showing{' '}\n                    <span className='font-medium'>{(page + 1) * 10 - 9}</span>{' '}\n                    to{' '}\n                    <span className='font-medium'>\n                      {(page + 1) * 10 > productsCount\n                        ? productsCount\n                        : (page + 1) * 10}\n                    </span>{' '}\n                    of <span className='font-medium'>{productsCount}</span>{' '}\n                    results\n                  </p>\n                </div>\n                <div className='flex flex-1 justify-between sm:justify-end'>\n                  <Link\n                    to={`?page=${page - 1}`}\n                    className={\n                      page < 1\n                        ? `hidden`\n                        : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Previous\n                  </Link>\n                  <Link\n                    to={`?page=${page + 1}`}\n                    className={\n                      page + 1 >= productsCount / 10\n                        ? 'hidden'\n                        : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Next\n                  </Link>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { TrashIcon, XIcon } from '@heroicons/react/outline'\n\nimport { Product } from '@prisma/client'\nimport { Link, useLoaderData, useTransition } from 'remix'\nimport { ValidatedForm } from 'remix-validated-form'\nimport { productValidator } from '~/routes/manage-products'\nimport { Input } from '../Input'\nimport { CategorySelect } from '../CategorySelect'\nimport { Fieldset } from '../Fieldset'\nimport ConfirmDeleteModal from './ConfirmDeleteModal'\n\ninterface AddEditProductForm {\n  openSlideOver: boolean\n  setOpenSlideOver: React.Dispatch<React.SetStateAction<boolean>>\n  selectedProduct: Product | null\n}\n\nexport default function AddEditProductForm({\n  openSlideOver,\n  setOpenSlideOver,\n  selectedProduct,\n}: AddEditProductForm) {\n  const loaderData = useLoaderData()\n  const transition = useTransition()\n\n  const [confirmingDeletion, setConfirmingDeletion] = useState(false)\n  const productId = selectedProduct?.id || ''\n\n  return (\n    <>\n      <ConfirmDeleteModal\n        {...{\n          confirmingDeletion,\n          setConfirmingDeletion,\n          productId,\n          setOpenSlideOver,\n        }}\n      />\n      <Transition.Root show={openSlideOver} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-40 overflow-hidden'\n          onClose={() => {\n            if (!confirmingDeletion) setOpenSlideOver(false)\n          }}\n        >\n          <div className='absolute inset-0 overflow-hidden'>\n            <Dialog.Overlay className='absolute inset-0' />\n            <Transition.Child\n              as={Fragment}\n              enter='ease-in-out duration-300'\n              enterFrom='opacity-0'\n              enterTo='opacity-100'\n              leave='ease-in-out duration-300'\n              leaveFrom='opacity-100'\n              leaveTo='opacity-0'\n            >\n              <Dialog.Overlay className='absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n            </Transition.Child>\n            <div className='pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16'>\n              <Transition.Child\n                as={Fragment}\n                enter='transform transition ease-in-out duration-300 sm:duration-300'\n                enterFrom='translate-x-full'\n                enterTo='translate-x-0'\n                leave='transform transition ease-in-out duration-300 sm:duration-300'\n                leaveFrom='translate-x-0'\n                leaveTo='translate-x-full'\n              >\n                <div className='pointer-events-auto w-screen max-w-md'>\n                  <ValidatedForm\n                    method='post'\n                    className='flex h-full flex-col divide-y divide-gray-200 bg-white shadow-xl'\n                    validator={productValidator}\n                  >\n                    <div className='h-0 flex-1 overflow-y-auto'>\n                      <div className='border-b py-6 px-4 sm:px-6'>\n                        <div className='flex items-center justify-between'>\n                          <Dialog.Title className='text-lg font-medium text-black'>\n                            {`${selectedProduct ? 'Edit' : 'Add'} Product`}\n                          </Dialog.Title>\n                          <div className='ml-3 flex h-7 items-center'>\n                            <button\n                              type='button'\n                              className='rounded-md  text-gray-900 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-white'\n                              onClick={() => setOpenSlideOver(false)}\n                            >\n                              <span className='sr-only'>Close panel</span>\n                              <XIcon className='h-6 w-6' aria-hidden='true' />\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='flex flex-1 flex-col justify-between'>\n                        <div className='px-4 sm:px-6'>\n                          <div className='space-y-6 pt-6 pb-5'>\n                            {productId ? (\n                              <input\n                                type='hidden'\n                                name='productId'\n                                value={productId}\n                              />\n                            ) : null}\n                            <Input\n                              name='name'\n                              label='Name'\n                              type='text'\n                              defaultValue={selectedProduct?.name || ''}\n                              autoComplete='name'\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            <CategorySelect\n                              name='category'\n                              label='Category'\n                              value={'PORK'}\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            {/* price, stock, weight, description, brand, */}\n                            <Input\n                              name='price'\n                              label='Price'\n                              type='text'\n                              defaultValue={\n                                selectedProduct?.price?.toString() || ''\n                              }\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            <Input\n                              name='stock'\n                              label='Stock'\n                              type='text'\n                              defaultValue={\n                                selectedProduct?.stock?.toString() || ''\n                              }\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n                            <Input\n                              name='weight'\n                              label='Weight per Qty'\n                              type='text'\n                              defaultValue={\n                                selectedProduct?.weight?.toString() || ''\n                              }\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            <Fieldset\n                              name='description'\n                              label='Description'\n                              value={\n                                selectedProduct?.description ||\n                                'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus.'\n                              }\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            <Input\n                              name='brand'\n                              label='Brand'\n                              type='text'\n                              defaultValue={selectedProduct?.brand || 'Camille'}\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            {/* <ProductImageDropzone\n                              imageUrl={selectedProduct?.imageUrl || ''}\n                              name={selectedProduct?.name || ''}\n                            /> */}\n                            <label className='block text-sm font-medium text-gray-900'>\n                              Product image\n                            </label>\n\n                            {selectedProduct?.imageUrl ? (\n                              <>\n                                <Link\n                                  to={`/manage-products/${selectedProduct.id}/upload-image`}\n                                  className='inline-flex justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:cursor-pointer hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto'\n                                >\n                                  Upload new image\n                                </Link>\n                                <div key={selectedProduct?.name}>\n                                  <img\n                                    src={selectedProduct?.imageUrl}\n                                    alt={selectedProduct?.name}\n                                    className='my-2 h-full w-full object-cover object-center sm:rounded-lg'\n                                  />\n                                </div>\n                              </>\n                            ) : (\n                              <>\n                                <div className=' inline-flex justify-center rounded-md border border-transparent bg-gray-400 px-4 py-2 text-sm font-medium text-white shadow-sm  focus:outline-none  sm:w-auto'>\n                                  Upload*\n                                </div>\n                                <p className='text-sm text-gray-400'>\n                                  *Product image can only be uploaded when\n                                  editing the product\n                                </p>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='flex flex-shrink-0 content-center justify-between px-4 py-4'>\n                      {selectedProduct ? (\n                        <button\n                          type='button'\n                          onClick={() => setConfirmingDeletion(true)}\n                          className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n                        >\n                          <TrashIcon className='h-6 w-6' aria-hidden='true' />\n                        </button>\n                      ) : (\n                        <div></div>\n                      )}\n                      <div className='flex content-center'>\n                        <button\n                          type='button'\n                          className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'\n                          onClick={() => setOpenSlideOver(false)}\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          disabled={transition.state === 'submitting'}\n                          type='submit'\n                          className={`${\n                            transition.submission && 'cursor-progress'\n                          } ml-4 inline-flex  justify-center rounded-md border border-transparent bg-red-600 py-2.5 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                        >\n                          {transition.submission ? (\n                            <div className='flex w-12 items-stretch justify-center'>\n                              <svg\n                                className='w-5 animate-spin text-white'\n                                xmlns='http://www.w3.org/2000/svg'\n                                fill='none'\n                                viewBox='0 0 24 24'\n                              >\n                                <circle\n                                  className='opacity-25'\n                                  cx='12'\n                                  cy='12'\n                                  r='10'\n                                  stroke='currentColor'\n                                  strokeWidth='4'\n                                ></circle>\n                                <path\n                                  className='opacity-75'\n                                  fill='currentColor'\n                                  d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                                ></path>\n                              </svg>\n                            </div>\n                          ) : (\n                            'Submit'\n                          )}\n                        </button>\n                      </div>\n                    </div>\n                  </ValidatedForm>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </>\n  )\n}\n", "import { Category, Product, Role } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useEffect, useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  Link,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n  useSearchParams,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport AddEditProductForm from '~/components/AddEditProductForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\nimport { deleteImage, uploadImage } from '~/utils/utils.server'\n\nconst baseSchema = z.object({\n  name: zfd.text(z.string().nonempty('Name is required')),\n  category: zfd.text(z.string().nonempty('Name is required')),\n  price: zfd.numeric(\n    z\n      .number()\n      .int('Price must be an integer.')\n      .positive('Price must be greater than 0.')\n  ),\n  stock: zfd.numeric(\n    z\n      .number()\n      .int('Stock must be an integer.')\n      .positive('Stock must be greater than 0.')\n  ),\n  weight: zfd.numeric(\n    z\n      .number()\n      .int('Weight must be an integer.')\n      .positive('Weight must be greater than 0.')\n  ),\n  description: zfd.text(\n    z.string().max(280, { message: 'Must be 280 or fewer characters long.' })\n  ),\n\n  brand: zfd.text(z.string()),\n})\n\nexport const productValidator = withZod(baseSchema)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  if (formData.get('_method') === 'delete') {\n    const productId = formData.get('productId') as string\n    invariant(productId, 'productId is not found.')\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        imageUrl: true,\n      },\n    })\n\n    await deleteImage(product?.imageUrl || '')\n    await db.product.delete({\n      where: { id: productId },\n    })\n    return redirect('/manage-products')\n  }\n\n  const result = await productValidator.validate(formData)\n\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, category, price, stock, weight, description, brand } =\n    result.data\n\n  const productId = formData.get('productId') as string\n  if (productId) {\n    const product = await db.product.findFirst({\n      where: { id: productId },\n      select: {\n        name: true,\n      },\n    })\n    const productName = formData.get('name') as string\n\n    if (product?.name !== productName) {\n      const existingProduct = await db.product.findFirst({\n        where: {\n          name: productName,\n        },\n      })\n\n      if (existingProduct) {\n        return validationError({\n          fieldErrors: {\n            name: 'Product name already exists',\n          },\n        })\n      }\n    }\n\n    try {\n      await db.product.update({\n        where: { id: productId },\n        data: {\n          name,\n          category: category as Category,\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  } else {\n    const productName = formData.get('name') as string\n\n    const existingProduct = await db.product.findFirst({\n      where: {\n        name: productName,\n      },\n    })\n\n    if (existingProduct) {\n      return validationError({\n        fieldErrors: {\n          name: 'Product name already exists',\n        },\n      })\n    }\n\n    try {\n      await db.product.create({\n        data: {\n          name,\n          category: category as Category,\n          imageUrl:\n            'https://res.cloudinary.com/jerichocalibuso/image/upload/v1650783918/sp-app/empty_image_a9urnc.jpg',\n          price,\n          stock,\n          weight,\n          description,\n          brand,\n        },\n      })\n    } catch (error) {\n      throw new Response('Unable to create the product', { status: 500 })\n    }\n  }\n\n  return redirect('/manage-products')\n}\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n\n  const productsCount = await db.product.count()\n  const products = await db.product.findMany({\n    take: 10,\n    skip: page * 10,\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  return json({ products, productsCount })\n}\n\nexport default function ManageProductsRoute() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null)\n\n  const { products, productsCount } = useLoaderData()\n\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n\n  useEffect(() => {\n    if (!openSlideOver) {\n      setSelectedProduct(null)\n    }\n  }, [openSlideOver])\n  return (\n    <>\n      <AddEditProductForm\n        {...{\n          openSlideOver,\n          setOpenSlideOver,\n          selectedProduct,\n        }}\n      />\n\n      <div className='bg-white px-4 py-5 pt-24 sm:flex sm:items-center sm:px-6'>\n        <div className='sm:flex-auto'>\n          <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n            Manage Products\n          </h3>\n          <p className='mt-3 text-sm text-gray-500'>\n            View, add, edit, or delete products.\n          </p>\n        </div>\n        <div className='mt-4 sm:mt-0 sm:ml-16 sm:flex-none'>\n          <button\n            type='button'\n            className='inline-flex items-center justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto'\n            onClick={() => setOpenSlideOver(true)}\n          >\n            Add product\n          </button>\n        </div>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Product\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Category\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Description\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Price\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Weight\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Stock\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Brand\n                    </th>\n\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {products.map((product: Product) => (\n                    <tr\n                      className='hover:cursor-pointer hover:bg-red-50'\n                      key={product.id}\n                      onClick={() => {\n                        setSelectedProduct(product)\n                        setOpenSlideOver(true)\n                      }}\n                    >\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='flex items-center'>\n                          <div className='h-10 w-10 flex-shrink-0'>\n                            {product.imageUrl ? (\n                              <img\n                                className='h-10 w-10 rounded-md'\n                                src={product.imageUrl}\n                                alt={product.name}\n                                loading='lazy'\n                              />\n                            ) : (\n                              <div className='h-10 w-10 rounded-md bg-gray-500' />\n                            )}\n                          </div>\n                          <div className='ml-4'>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {product.name}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.category}\n                        </div>\n                      </td>\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.description}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.price}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.weight}\n                        </div>\n                      </td>\n\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {product.stock}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {product.brand}\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                        <a href='#' className='text-red-500 hover:text-red-600'>\n                          Edit\n                        </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                aria-label='Pagination'\n              >\n                <div className='hidden sm:block'>\n                  <p className='text-sm text-gray-700'>\n                    Showing{' '}\n                    <span className='font-medium'>{(page + 1) * 10 - 9}</span>{' '}\n                    to{' '}\n                    <span className='font-medium'>\n                      {(page + 1) * 10 > productsCount\n                        ? productsCount\n                        : (page + 1) * 10}\n                    </span>{' '}\n                    of <span className='font-medium'>{productsCount}</span>{' '}\n                    results\n                  </p>\n                </div>\n                <div className='flex flex-1 justify-between sm:justify-end'>\n                  <Link\n                    to={`?page=${page - 1}`}\n                    className={\n                      page < 1\n                        ? `hidden`\n                        : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Previous\n                  </Link>\n                  <Link\n                    to={`?page=${page + 1}`}\n                    className={\n                      page + 1 >= productsCount / 10\n                        ? 'hidden'\n                        : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Next\n                  </Link>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { Category } from '@prisma/client'\nimport { useField } from 'remix-validated-form'\n\ntype SelectProps = {\n  name: string\n  label: string\n  value: Category | string\n  className?: string\n}\n\nexport const CategorySelect = ({\n  name,\n  label,\n  value,\n  className,\n}: SelectProps) => {\n  const { error, getInputProps } = useField(name)\n\n  return (\n    <div>\n      <label htmlFor={name} className='block text-sm font-medium text-gray-900'>\n        {label}\n      </label>\n      <select\n        {...getInputProps({ id: name })}\n        defaultValue={value}\n        className={`mt-1 block w-full appearance-none rounded-md border ${\n          error ? 'border-red-500' : 'border-gray-300'\n        } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n      >\n        {Object.values(Category).map((category) => (\n          <option key={category} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n      {error && <span className='text-sm text-red-500'>{error}</span>}\n    </div>\n  )\n}\n", "import React, { forwardRef, useState } from 'react'\nimport { useField } from 'remix-validated-form'\n\ntype FieldsetProps = {\n  name: string\n  label: string\n  type?: string\n  autoComplete?: string\n  value?: string\n  hideErrors?: boolean\n  'data-testid'?: string\n  form?: string\n  className?: string\n  placeholder?: string\n  required?: boolean\n}\n\nexport const Fieldset = forwardRef(\n  (\n    {\n      name,\n      label,\n      value,\n      autoComplete,\n      hideErrors: noErrors,\n      'data-testid': dataTestId,\n      form,\n      className,\n      placeholder,\n      required,\n    }: FieldsetProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const { getInputProps, error } = useField(name, {\n      formId: form,\n    })\n\n    const [inputValue, setInputValue] = useState(value || '')\n    return (\n      <div>\n        <label\n          htmlFor={name}\n          className='block text-sm font-medium text-gray-700'\n        >\n          {label}\n        </label>\n        <div className='mt-1'>\n          <textarea\n            {...getInputProps({\n              form,\n              id: name,\n              autoComplete,\n              placeholder,\n              required,\n            })}\n            className={`block w-full appearance-none rounded-md border ${\n              error ? 'border-red-500' : 'border-gray-300'\n            } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n            data-testid={dataTestId}\n            value={inputValue}\n            onChange={(e) => {\n              setInputValue(e.target.value)\n            }}\n          />\n          <p className='text-xs text-gray-500'>{inputValue.length}/280</p>\n        </div>\n        {error && !noErrors && <p className='text-sm text-red-500'>{error}</p>}\n      </div>\n    )\n  }\n)\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon } from '@heroicons/react/outline'\nimport { Form, useFetcher, useTransition } from 'remix'\n\ninterface Props {\n  productId: string\n  confirmingDeletion: boolean\n  setConfirmingDeletion: React.Dispatch<React.SetStateAction<boolean>>\n  setOpenSlideOver: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function ConfirmDeleteModal({\n  productId,\n  confirmingDeletion,\n  setConfirmingDeletion,\n  setOpenSlideOver,\n}: Props) {\n  const cancelButtonRef = useRef(null)\n  const fetcher = useFetcher()\n\n  useEffect(() => {\n    if (fetcher.type === 'done') {\n      setConfirmingDeletion(false)\n      setOpenSlideOver(false)\n    }\n  }, [fetcher])\n\n  return (\n    <Transition.Root show={confirmingDeletion} as={Fragment}>\n      <Dialog\n        as='div'\n        className='fixed inset-0 z-50 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        onClose={setConfirmingDeletion}\n      >\n        <div className='flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:h-screen sm:align-middle'\n            aria-hidden='true'\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='relative inline-block transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6 sm:align-middle'>\n              <div className='sm:flex sm:items-start'>\n                <div className='mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon\n                    className='h-6 w-6 text-red-600'\n                    aria-hidden='true'\n                  />\n                </div>\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg font-medium leading-6 text-gray-900'\n                  >\n                    Delete product\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      Are you sure you want to delete this product? All of the\n                      product's data will be permanently removed from our\n                      servers forever. This action cannot be undone.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                <fetcher.Form method='post'>\n                  <input type='hidden' name='_method' value='delete' />\n                  <input type='hidden' name='productId' value={productId} />\n                  <button\n                    type='submit'\n                    className='inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm'\n                  >\n                    {fetcher.state === 'submitting' ? (\n                      <svg\n                        className='ml-3 mr-3 h-5 w-5 animate-spin text-white'\n                        xmlns='http://www.w3.org/2000/svg'\n                        fill='none'\n                        viewBox='0 0 24 24'\n                      >\n                        <circle\n                          className='opacity-25'\n                          cx='12'\n                          cy='12'\n                          r='10'\n                          stroke='currentColor'\n                          strokeWidth='4'\n                        ></circle>\n                        <path\n                          className='opacity-75'\n                          fill='currentColor'\n                          d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                        ></path>\n                      </svg>\n                    ) : (\n                      'Delete'\n                    )}\n                  </button>\n                </fetcher.Form>\n                <button\n                  type='button'\n                  className='mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm'\n                  onClick={() => setConfirmingDeletion(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n", "import { Address, Order, OrderItem, Product, Role } from '@prisma/client'\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/node'\nimport { useLoaderData, Link, Form } from '@remix-run/react'\nimport { Fieldset } from '~/components/Fieldset'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  return null\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  const formData = await request.formData()\n  const feedback = (formData.get('feedback') as string) || ''\n\n  if (feedback) {\n    await db.feedback.create({\n      data: {\n        feedback,\n        userId: user?.id || '',\n      },\n    })\n  }\n\n  return redirect('/submit-feedback/success')\n}\n\nexport default function OrderDetailsPage() {\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-3xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>\n        <div className='max-w-xl'>\n          <h1 className='mt-2 text-2xl font-extrabold tracking-tight sm:text-4xl'>\n            Submit a feedback\n          </h1>\n          <Form method='post' className='mt-10'>\n            <label\n              htmlFor={'feedback'}\n              className='block text-sm font-medium text-gray-700'\n            >\n              {'Feedback form'}\n            </label>\n            <div className='mt-1'>\n              <textarea\n                className={`border'border-gray-300' block h-32 w-full appearance-none rounded-md p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm`}\n                placeholder='Please describe your feedback...'\n                name='feedback'\n                required\n              />\n            </div>\n            <div className='flex justify-end py-4'>\n              <button\n                type='submit'\n                className='inline-flex w-auto justify-end rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:w-auto sm:text-sm'\n              >\n                Submit\n              </button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import {\n  Address,\n  Order,\n  OrderItem,\n  Product,\n  Status,\n  User,\n} from '@prisma/client'\nimport { LoaderFunction } from '@remix-run/node'\nimport { db } from '~/utils/db.server'\nimport { useNavigate } from 'react-router'\nimport { Outlet, useLoaderData, useSearchParams, Link } from '@remix-run/react'\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\nexport interface OrderData extends Order {\n  orderItems: OrderItemData[]\n  User: User | null\n  Address: Address | null\n}\ninterface LoaderData {\n  orders: OrderData[]\n  ordersCount: number\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n  const orders = await db.order.findMany({\n    skip: page * 10,\n    take: 10,\n    where: {\n      status: {\n        not: Status.IN_CART,\n      },\n    },\n    include: {\n      Product: true,\n      User: true,\n      Address: true,\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n    orderBy: {\n      updatedAt: 'desc',\n    },\n  })\n  const ordersCount = await db.order.count({\n    where: {\n      status: {\n        not: Status.IN_CART,\n      },\n    },\n  })\n\n  return { orders, ordersCount }\n}\n\nexport default function ManageOrdersPage() {\n  const { orders, ordersCount } = useLoaderData<LoaderData>()\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n  const navigate = useNavigate()\n\n  return (\n    <>\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Manage Orders\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete orders.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order Id\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Customer\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Address\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order Items\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Status\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Date\n                    </th>\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {orders.map((order) => {\n                    return (\n                      <tr\n                        className='hover:cursor-pointer hover:bg-red-50'\n                        key={order.id}\n                        onClick={() => {\n                          navigate(`/manage-orders/${order.id}`)\n                        }}\n                      >\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex '>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {order.id}\n                            </div>\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex items-center'>\n                            <div className=''>\n                              <div className='text-sm font-medium text-gray-900'>\n                                {order?.User?.name || 'GUEST'}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.User?.email || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.User?.username || ''}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='flex items-center '>\n                            <div className=''>\n                              <div className='text-sm font-medium text-gray-900'>\n                                {order?.Address?.address || 'No address'}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.city || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.province || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.contactPerson || ''}\n                              </div>\n                              <div className='text-sm text-gray-500'>\n                                {order?.Address?.phoneNumber || ''}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          {order?.orderItems?.map((orderItem) => {\n                            return (\n                              <div\n                                key={orderItem.id}\n                                className='text-sm font-medium text-gray-900'\n                              >\n                                {orderItem.quantity || ''}x{' '}\n                                {orderItem.product.name}\n                              </div>\n                            )\n                          })}\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4 font-medium text-gray-900'>\n                          {order.status.replace(/_/g, ' ')}\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4 font-medium text-gray-900'>\n                          {new Date(order?.paidAt || '').toLocaleDateString()}\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                          <a\n                            href='#'\n                            className='text-red-500 hover:text-red-600'\n                          >\n                            Edit\n                          </a>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                aria-label='Pagination'\n              >\n                <div className='hidden sm:block'>\n                  <p className='text-sm text-gray-700'>\n                    Showing{' '}\n                    <span className='font-medium'>{(page + 1) * 10 - 9}</span>{' '}\n                    to{' '}\n                    <span className='font-medium'>\n                      {(page + 1) * 10 > ordersCount\n                        ? ordersCount\n                        : (page + 1) * 10}\n                    </span>{' '}\n                    of <span className='font-medium'>{ordersCount}</span>{' '}\n                    results\n                  </p>\n                </div>\n                <div className='flex flex-1 justify-between sm:justify-end'>\n                  <Link\n                    to={`?page=${page - 1}`}\n                    className={\n                      page < 1\n                        ? `hidden`\n                        : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Previous\n                  </Link>\n                  <Link\n                    to={`?page=${page + 1}`}\n                    className={\n                      page + 1 >= ordersCount / 10\n                        ? 'hidden'\n                        : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Next\n                  </Link>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { Order, OrderItem, Product, Role } from '@prisma/client'\nimport { LoaderFunction, redirect } from '@remix-run/node'\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { useNavigate } from 'react-router'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\nexport interface OrderData extends Order {\n  orderItems: OrderItemData[]\n}\ninterface LoaderData {\n  orders: OrderData[]\n}\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n\n  if (!user?.role) {\n    return redirect('/signin')\n  }\n\n  if (user?.role !== Role.CUSTOMER) {\n    return redirect('/unauthorized')\n  }\n\n  const orders = await db.order.findMany({\n    skip: page * 10,\n    take: 10,\n    where: {\n      userId: user?.id,\n      paidAt: {\n        not: null,\n      },\n    },\n    include: {\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n    orderBy: {\n      updatedAt: 'desc',\n    },\n  })\n\n  if (!orders) return null\n\n  return { orders }\n}\n\nexport default function Example() {\n  const { orders } = useLoaderData<LoaderData>()\n  const navigate = useNavigate()\n\n  return (\n    <>\n      <div className='bg-white px-4 py-5 pt-24 sm:flex sm:items-center sm:px-6'>\n        <div className='sm:flex-auto'>\n          <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n            Order history\n          </h3>\n          <p className='mt-3 text-sm text-gray-500'>\n            View your previous orders.\n          </p>\n        </div>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Order ID\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Status\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Products\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Amount\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Paid at\n                    </th>\n\n                    <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>View details</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {orders?.map((order) => {\n                    return (\n                      <tr\n                        className='hover:cursor-pointer hover:bg-red-50'\n                        key={order.id}\n                        onClick={() => {\n                          navigate(`/order-history/${order.id}`)\n                        }}\n                      >\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className=''>\n                            <div className='text-sm font-medium text-gray-900'>\n                              {order.id}\n                            </div>\n                          </div>\n                        </td>\n                        <td className='wrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {order.status.replace(/_/g, ' ')}\n                          </div>\n                        </td>\n                        <td className='wrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {order.orderItems.map((orderItem) => {\n                              const quantity = orderItem.quantity\n                              const product = orderItem.product\n                              return (\n                                <div key={product.id}>\n                                  {quantity}x {product.name}\n                                </div>\n                              )\n                            })}\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {order.amount}\n                          </div>\n                        </td>\n                        <td className='whitespace-nowrap px-6 py-4'>\n                          <div className='text-sm text-gray-900'>\n                            {new Date(order?.paidAt || '').toLocaleDateString()}\n                          </div>\n                        </td>\n\n                        <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                          <a\n                            href='#'\n                            className='text-red-500 hover:text-red-600'\n                          >\n                            View details\n                          </a>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import type { UploadHandler } from '@remix-run/node'\nimport { unstable_parseMultipartFormData } from '@remix-run/node'\nimport { Form, useActionData } from '@remix-run/react'\nimport { ActionFunction, json } from 'remix'\n\nimport { uploadImage } from '~/utils/utils.server'\n\ntype ActionData = {\n  errorMsg?: string\n  imgSrc?: string\n  imgDesc?: string\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const uploadHandler: UploadHandler = async ({ name, stream }) => {\n    if (name !== 'img') {\n      stream.resume()\n      return\n    }\n    const uploadedImage: any = await uploadImage(stream)\n    return uploadedImage.secure_url\n  }\n\n  const formData = await unstable_parseMultipartFormData(request, uploadHandler)\n  const imgSrc = formData.get('img')\n  const imgDesc = formData.get('desc')\n  if (!imgSrc) {\n    return json({\n      error: 'something wrong',\n    })\n  }\n  return json({\n    imgSrc,\n    imgDesc,\n  })\n}\n\nexport default function Index() {\n  const data = useActionData<ActionData>()\n  return (\n    <>\n      <Form method='post' encType='multipart/form-data' className='mt-32'>\n        <label htmlFor='img-field'>Image to upload</label>\n        <input id='img-field' type='file' name='img' accept='image/*' />\n        <label htmlFor='img-desc'>Image description</label>\n        <input id='img-desc' type='text' name='desc' />\n        <button type='submit'>upload to cloudinary</button>\n      </Form>\n      {data?.errorMsg && <h2>{data.errorMsg}</h2>}\n      {data?.imgSrc && (\n        <>\n          <h2>uploaded image</h2>\n          <img src={data.imgSrc} alt={data.imgDesc || 'Upload result'} />\n        </>\n      )}\n    </>\n  )\n}\n", "import { ActionFunction, redirect } from '@remix-run/node'\nimport { LoaderFunction } from '@remix-run/node'\nimport invariant from 'tiny-invariant'\nimport { authenticator } from '~/services/auth.server'\n\nexport let loader: LoaderFunction = () => redirect('/signin')\n\nexport let action: ActionFunction = ({ request, params }) => {\n  invariant(params.provider, 'auth provider is undefined')\n\n  return authenticator.authenticate(params.provider, request)\n}\n", "import { OrderItem, Role, Status } from '@prisma/client'\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { validationError } from 'remix-validated-form'\nimport { ProductsPage } from '~/components/ProductsPage'\nimport { authenticator } from '~/services/auth.server'\nimport { commitSession, getSession } from '~/services/guest.server'\nimport { db } from '~/utils/db.server'\n\nexport enum Brand {\n  CAMILLE = 'Camille',\n  BOUNTY_FRESH = 'Bounty Fresh',\n}\n\nexport enum Category {\n  CHICKEN = 'Chicken',\n  PORK = 'Pork',\n  BEEF = 'Beef',\n  ALL = 'All',\n}\n\nexport type Product = {\n  id: number\n  name: string\n  brand: Brand\n  category: Category\n  imageUrl: string\n  price: number\n  weight: string\n  description: string\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  try {\n    const chickenProducts = await db.product.findMany({\n      where: { category: 'CHICKEN' },\n    })\n    const porkProducts = await db.product.findMany({\n      where: { category: 'PORK' },\n    })\n    const beefProducts = await db.product.findMany({\n      where: { category: 'BEEF' },\n    })\n    const productsCount = await db.product.count()\n    let currentCategory = Category.CHICKEN\n    const sortedProducts = []\n    for (let i = 0; i < productsCount; i++) {\n      if (currentCategory === Category.CHICKEN) {\n        const chickenProduct = chickenProducts.pop()\n        if (chickenProduct?.id) {\n          sortedProducts.push(chickenProduct)\n        }\n        currentCategory = Category.PORK\n      } else if (currentCategory === Category.PORK) {\n        const porkProduct = porkProducts.pop()\n        if (porkProduct?.id) {\n          sortedProducts.push(porkProduct)\n        }\n        currentCategory = Category.BEEF\n      } else if (currentCategory === Category.BEEF) {\n        const beefProduct = beefProducts.pop()\n        if (beefProduct?.id) {\n          sortedProducts.push(beefProduct)\n        }\n        currentCategory = Category.CHICKEN\n      }\n    }\n    return sortedProducts\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return null\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: true,\n      },\n    })\n\n    if (currentOrder) {\n      const existingProduct = currentOrder.orderItems.find(\n        (p) => p.productId === product.id\n      )\n      if (existingProduct) {\n        await db.orderItem.update({\n          where: {\n            id: existingProduct.id,\n          },\n          data: {\n            quantity: {\n              increment: 1,\n            },\n          },\n        })\n      } else {\n        await db.orderItem.create({\n          data: {\n            productId: product.id,\n            quantity: 1,\n            orderId: currentOrder.id,\n          },\n        })\n      }\n      const updatedOrder = await db.order.update({\n        where: { id: currentOrder.id },\n        data: {\n          amount: { increment: product.price },\n        },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    } else {\n      const order = await db.order.create({\n        data: {\n          amount: product.price,\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n\n      await db.orderItem.create({\n        data: {\n          orderId: order.id,\n          productId: product.id,\n          quantity: 1,\n        },\n      })\n\n      const updatedOrder = await db.order.findFirst({\n        where: { id: order.id },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    }\n  } else {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    const existingProduct = orderItems.find(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    const existingProductIndex = orderItems.findIndex(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    if (existingProduct) {\n      orderItems[existingProductIndex] = {\n        productId: product.id,\n        quantity: existingProduct.quantity + 1,\n      }\n    } else {\n      orderItems.push({\n        productId: product.id,\n        quantity: 1,\n      })\n    }\n    session.set('orderItems', orderItems)\n    return redirect('/products', {\n      headers: {\n        'Set-Cookie': await commitSession(session),\n      },\n    })\n  }\n}\n\nexport default function AllProductsPage() {\n  const category = Category.ALL\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "import { ActionFunction, Form } from 'remix'\nimport { Category, Product } from '~/routes/products'\nimport { authenticator } from '~/services/auth.server'\n\ninterface Props {\n  products: Product[]\n  category: string\n}\n\nconst returnTitle = (category: string): string => {\n  if (category === Category.CHICKEN) {\n    return 'Chicken Products'\n  } else if (category === Category.PORK) {\n    return 'Pork Products'\n  } else if (category === Category.BEEF) {\n    return 'Beef Products'\n  } else {\n    return 'All Products'\n  }\n}\n\nexport function ProductsPage({ products, category }: Props) {\n  return (\n    <main className='bg-white'>\n      <div className='mx-auto max-w-2xl py-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8'>\n        <h1 className='text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl'>\n          {category && returnTitle(category)}\n        </h1>\n\n        <div className='mt-8 grid grid-cols-1 gap-y-12 sm:grid-cols-2 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8'>\n          {products.map((product) => {\n            return (\n              <div key={product.id}>\n                <div className='relative'>\n                  <div className='relative h-72 w-full overflow-hidden rounded-lg'>\n                    <img\n                      loading='lazy'\n                      src={product.imageUrl}\n                      className='h-full w-full object-cover object-center'\n                    />\n                  </div>\n                  <div className='relative mt-4 h-16'>\n                    <div className='flex justify-between '>\n                      <h3 className='text-md font-medium text-gray-900 hover:text-red-500'>\n                        <a href={`/products/${product.id}`}>{product.name}</a>\n                      </h3>\n                      <div className='ml-2'>\n                        <p className='relative text-lg font-semibold text-red-500'>\n                          \u20B1{product.price}\n                        </p>\n                      </div>\n                    </div>\n                    <p className='relative text-sm font-semibold text-gray-500'>\n                      {product.brand}\n                    </p>\n                  </div>\n                  <a href={`/products/${product.id}`}>\n                    <div className='absolute inset-x-0 top-0  flex h-72 cursor-pointer items-end justify-end overflow-hidden rounded-lg p-4'>\n                      <div\n                        aria-hidden='true'\n                        className='absolute inset-x-0 bottom-0 h-36  bg-gradient-to-t from-neutral-500 to-white opacity-10  hover:opacity-5'\n                      />\n                    </div>\n                  </a>\n                </div>\n                {/* ADD KILOS INPUT */}\n                <Form method='post'>\n                  <input type='hidden' name='productId' value={product.id} />\n\n                  <div className='w mt-6'>\n                    <button\n                      type='submit'\n                      className='block w-full items-center justify-center rounded-md border border-transparent bg-red-500 py-2 px-8 text-sm font-medium text-white hover:bg-red-400'\n                    >\n                      Add to cart<span className='sr-only'></span>\n                    </button>\n                  </div>\n                </Form>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </main>\n  )\n}\n", "export {}", "/* This example requires Tailwind CSS v2.0+ */\n\nimport { Role, User } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  Link,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n  useSearchParams,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport ManageUsersForm from '~/components/ManageUserForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n  const users = await db.user.findMany({\n    skip: page * 10,\n    take: 10,\n    select: {\n      id: true,\n      name: true,\n      role: true,\n      username: true,\n      provider: true,\n      email: true,\n    },\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  const usersCount = await db.user.count()\n\n  const usersWithoutCurrentUser = users.filter((user) => user?.id !== id)\n\n  return json({ users: usersWithoutCurrentUser, usersCount })\n}\n\nexport const validator = withZod(\n  z.object({\n    name: zfd.text(\n      z.string({\n        required_error: 'Name is required',\n      })\n    ),\n    role: zfd.text(\n      z.string({\n        required_error: 'Role is required',\n      })\n    ),\n    userId: zfd.text(\n      z.string({\n        required_error: 'User id is invalid',\n      })\n    ),\n  })\n)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n\n  if (formData.get('_method') === 'delete') {\n    const userId = formData.get('userId') as string\n    invariant(userId, 'userId is not found.')\n    const user = await db.user.delete({\n      where: { id: userId },\n    })\n    return redirect('/manage-users')\n  }\n\n  const result = await validator.validate(formData)\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, role, userId } = result.data\n\n  await db.user.update({\n    where: {\n      id: userId,\n    },\n    data: {\n      name,\n      role: role as Role,\n    },\n  })\n\n  return redirect('/manage-users')\n}\nexport default function Example() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedUser, setSelectedUser] = useState<User | null>(null)\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n\n  const { users, usersCount } = useLoaderData()\n  return (\n    <>\n      <ManageUsersForm\n        openSlideOver={openSlideOver}\n        setOpenSlideOver={setOpenSlideOver}\n        selectedUser={selectedUser}\n      />\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Manage Users\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete users.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Name\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Role\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Username\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      OAuth Provider\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Email\n                    </th>\n                    {/* <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th> */}\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {users.map((user: User) => (\n                    <tr\n                      onClick={() => {\n                        setOpenSlideOver(true)\n                        setSelectedUser(user)\n                      }}\n                      key={user.id}\n                      className='hover:cursor-pointer hover:bg-red-50'\n                    >\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.name}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.role}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.username}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.provider}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.email}\n                        </div>\n                      </td>\n\n                      {/* <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>999</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {user.brand}\n                      </td> */}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                aria-label='Pagination'\n              >\n                <div className='hidden sm:block'>\n                  <p className='text-sm text-gray-700'>\n                    Showing{' '}\n                    <span className='font-medium'>{(page + 1) * 10 - 9}</span>{' '}\n                    to{' '}\n                    <span className='font-medium'>\n                      {(page + 1) * 10 > usersCount\n                        ? usersCount\n                        : (page + 1) * 10}\n                    </span>{' '}\n                    of <span className='font-medium'>{usersCount}</span> results\n                  </p>\n                </div>\n                <div className='flex flex-1 justify-between sm:justify-end'>\n                  <Link\n                    to={`?page=${page - 1}`}\n                    className={\n                      page < 1\n                        ? `hidden`\n                        : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Previous\n                  </Link>\n                  <Link\n                    to={`?page=${page + 1}`}\n                    className={\n                      page + 1 >= usersCount / 10\n                        ? 'hidden'\n                        : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Next\n                  </Link>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { TrashIcon, XIcon } from '@heroicons/react/outline'\n\nimport { User } from '@prisma/client'\nimport { useLoaderData, useTransition } from 'remix'\nimport { ValidatedForm } from 'remix-validated-form'\nimport { validator } from '~/routes/manage-users'\nimport { Input } from '../Input'\nimport { RoleSelect } from '../RoleSelect'\nimport ConfirmDeleteModal from './ConfirmDeleteModal'\n\ninterface ManageUsersForm {\n  openSlideOver: boolean\n  setOpenSlideOver: React.Dispatch<React.SetStateAction<boolean>>\n  selectedUser: User | null\n}\n\nexport default function ManageUsersForm({\n  openSlideOver,\n  setOpenSlideOver,\n  selectedUser,\n}: ManageUsersForm) {\n  const loaderData = useLoaderData()\n  const transition = useTransition()\n  const [confirmingDeletion, setConfirmingDeletion] = useState(false)\n  return (\n    <>\n      <ConfirmDeleteModal\n        {...{ confirmingDeletion, setConfirmingDeletion }}\n        userId={selectedUser?.id || ''}\n      />\n      <Transition.Root show={openSlideOver} as={Fragment}>\n        <Dialog\n          as='div'\n          className='fixed inset-0 z-40 overflow-hidden'\n          onClose={() => {\n            if (!confirmingDeletion) setOpenSlideOver(false)\n          }}\n        >\n          <div className='absolute inset-0 overflow-hidden'>\n            <Dialog.Overlay className='absolute inset-0' />\n            <Transition.Child\n              as={Fragment}\n              enter='ease-in-out duration-300'\n              enterFrom='opacity-0'\n              enterTo='opacity-100'\n              leave='ease-in-out duration-300'\n              leaveFrom='opacity-100'\n              leaveTo='opacity-0'\n            >\n              <Dialog.Overlay className='absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n            </Transition.Child>\n            <div className='pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16'>\n              <Transition.Child\n                as={Fragment}\n                enter='transform transition ease-in-out duration-300 sm:duration-300'\n                enterFrom='translate-x-full'\n                enterTo='translate-x-0'\n                leave='transform transition ease-in-out duration-300 sm:duration-300'\n                leaveFrom='translate-x-0'\n                leaveTo='translate-x-full'\n              >\n                <div className='pointer-events-auto w-screen max-w-md'>\n                  <ValidatedForm\n                    method='post'\n                    className='flex h-full flex-col divide-y divide-gray-200 bg-white shadow-xl'\n                    {...{ validator }}\n                  >\n                    <div className='h-0 flex-1 overflow-y-auto'>\n                      <div className='border-b py-6 px-4 sm:px-6'>\n                        <div className='flex items-center justify-between'>\n                          <Dialog.Title className='text-lg font-medium text-black'>\n                            {' '}\n                            Edit User{' '}\n                          </Dialog.Title>\n                          <div className='ml-3 flex h-7 items-center'>\n                            <button\n                              type='button'\n                              className='rounded-md  text-gray-900 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-white'\n                              onClick={() => setOpenSlideOver(false)}\n                            >\n                              <span className='sr-only'>Close panel</span>\n                              <XIcon className='h-6 w-6' aria-hidden='true' />\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='flex flex-1 flex-col justify-between'>\n                        <div className='px-4 sm:px-6'>\n                          <div className='space-y-6 pt-6 pb-5'>\n                            <Input\n                              name='name'\n                              label='Name'\n                              type='text'\n                              defaultValue={selectedUser?.name || ''}\n                              autoComplete='name'\n                              className={`${\n                                loaderData?.error?.message && 'border-red-500'\n                              }`}\n                            />\n\n                            <RoleSelect\n                              name='role'\n                              label='Role'\n                              value={selectedUser?.role || ''}\n                            />\n\n                            <div>\n                              <label className='block text-sm font-medium text-gray-900'>\n                                {' '}\n                                Username{' '}\n                              </label>\n                              <div className='mt-1'>\n                                <span className='block w-full rounded-md  border border-gray-300 bg-gray-50 p-3 text-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'>\n                                  {selectedUser?.username || 'N/A'}\n                                </span>\n                              </div>\n                            </div>\n                            <div>\n                              <label className='block text-sm font-medium text-gray-900'>\n                                {' '}\n                                Provider{' '}\n                              </label>\n                              <div className='mt-1'>\n                                <span className='block w-full rounded-md  border border-gray-300 bg-gray-50 p-3 text-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'>\n                                  {selectedUser?.provider || 'N/A'}\n                                </span>\n                              </div>\n                            </div>\n                            <div>\n                              <label className='block text-sm font-medium text-gray-900'>\n                                {' '}\n                                Email{' '}\n                              </label>\n                              <div className='mt-1'>\n                                <span className='block w-full rounded-md  border border-gray-300 bg-gray-50 p-3 text-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'>\n                                  {selectedUser?.email || 'N/A'}\n                                </span>\n                              </div>\n\n                              <input\n                                type='hidden'\n                                name='userId'\n                                value={selectedUser?.id || ''}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='flex flex-shrink-0 content-center justify-between px-4 py-4'>\n                      <button\n                        type='button'\n                        onClick={() => setConfirmingDeletion(true)}\n                        className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n                      >\n                        <TrashIcon className='h-6 w-6' aria-hidden='true' />\n                      </button>\n                      <div className='flex content-center'>\n                        <button\n                          type='button'\n                          className='rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n                          onClick={() => setOpenSlideOver(false)}\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          disabled={transition.state === 'submitting'}\n                          type='submit'\n                          className={`${\n                            transition.submission && 'cursor-progress'\n                          } ml-4 inline-flex justify-center rounded-md border border-transparent bg-red-600 py-2.5 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                          // onClick={() => { // undecided for this\n                          //   if (transition.state !== 'submitting') {\n                          //     setOpenSlideOver(false)\n                          //   }\n                          // }}\n                        >\n                          {transition.submission ? (\n                            <div className='flex w-8 items-stretch justify-center'>\n                              <svg\n                                className='w-5 animate-spin text-white'\n                                xmlns='http://www.w3.org/2000/svg'\n                                fill='none'\n                                viewBox='0 0 24 24'\n                              >\n                                <circle\n                                  className='opacity-25'\n                                  cx='12'\n                                  cy='12'\n                                  r='10'\n                                  stroke='currentColor'\n                                  strokeWidth='4'\n                                ></circle>\n                                <path\n                                  className='opacity-75'\n                                  fill='currentColor'\n                                  d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                                ></path>\n                              </svg>\n                            </div>\n                          ) : (\n                            'Save'\n                          )}\n                        </button>\n                      </div>\n                    </div>\n                  </ValidatedForm>\n                </div>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\n\nimport { Role, User } from '@prisma/client'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { useState } from 'react'\nimport {\n  ActionFunction,\n  json,\n  Link,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n  useSearchParams,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport ManageUsersForm from '~/components/ManageUserForm'\nimport { authenticator } from '~/services/auth.server'\nimport { db } from '~/utils/db.server'\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: '/signin',\n  })\n\n  const { role, id } = user\n  if (role !== Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n  const users = await db.user.findMany({\n    skip: page * 10,\n    take: 10,\n    select: {\n      id: true,\n      name: true,\n      role: true,\n      username: true,\n      provider: true,\n      email: true,\n    },\n    orderBy: { updatedAt: 'desc' },\n  })\n\n  const usersCount = await db.user.count()\n\n  const usersWithoutCurrentUser = users.filter((user) => user?.id !== id)\n\n  return json({ users: usersWithoutCurrentUser, usersCount })\n}\n\nexport const validator = withZod(\n  z.object({\n    name: zfd.text(\n      z.string({\n        required_error: 'Name is required',\n      })\n    ),\n    role: zfd.text(\n      z.string({\n        required_error: 'Role is required',\n      })\n    ),\n    userId: zfd.text(\n      z.string({\n        required_error: 'User id is invalid',\n      })\n    ),\n  })\n)\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n\n  if (formData.get('_method') === 'delete') {\n    const userId = formData.get('userId') as string\n    invariant(userId, 'userId is not found.')\n    const user = await db.user.delete({\n      where: { id: userId },\n    })\n    return redirect('/manage-users')\n  }\n\n  const result = await validator.validate(formData)\n  if (result.error) {\n    // validationError comes from `remix-validated-form`\n    return validationError(result.error)\n  }\n\n  const { name, role, userId } = result.data\n\n  await db.user.update({\n    where: {\n      id: userId,\n    },\n    data: {\n      name,\n      role: role as Role,\n    },\n  })\n\n  return redirect('/manage-users')\n}\nexport default function Example() {\n  const [openSlideOver, setOpenSlideOver] = useState(false)\n  const [selectedUser, setSelectedUser] = useState<User | null>(null)\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n\n  const { users, usersCount } = useLoaderData()\n  return (\n    <>\n      <ManageUsersForm\n        openSlideOver={openSlideOver}\n        setOpenSlideOver={setOpenSlideOver}\n        selectedUser={selectedUser}\n      />\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Manage Users\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          View, edit, or delete users.\n        </p>\n      </div>\n      <div className='flex flex-col px-4'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n            <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n              <table className='min-w-full divide-y divide-gray-200'>\n                <thead className='bg-gray-50'>\n                  <tr>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Name\n                    </th>\n\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Role\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Username\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      OAuth Provider\n                    </th>\n                    <th\n                      scope='col'\n                      className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                    >\n                      Email\n                    </th>\n                    {/* <th scope='col' className='relative px-6 py-3'>\n                      <span className='sr-only'>Action</span>\n                    </th> */}\n                  </tr>\n                </thead>\n                <tbody className='divide-y divide-gray-200 bg-white'>\n                  {users.map((user: User) => (\n                    <tr\n                      onClick={() => {\n                        setOpenSlideOver(true)\n                        setSelectedUser(user)\n                      }}\n                      key={user.id}\n                      className='hover:cursor-pointer hover:bg-red-50'\n                    >\n                      <td className='wrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.name}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>{user.role}</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.username}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.provider}\n                        </div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>\n                          {user.email}\n                        </div>\n                      </td>\n\n                      {/* <td className='whitespace-nowrap px-6 py-4'>\n                        <div className='text-sm text-gray-900'>999</div>\n                      </td>\n                      <td className='whitespace-nowrap px-6 py-4 text-sm text-gray-900'>\n                        {user.brand}\n                      </td> */}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <nav\n                className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                aria-label='Pagination'\n              >\n                <div className='hidden sm:block'>\n                  <p className='text-sm text-gray-700'>\n                    Showing{' '}\n                    <span className='font-medium'>{(page + 1) * 10 - 9}</span>{' '}\n                    to{' '}\n                    <span className='font-medium'>\n                      {(page + 1) * 10 > usersCount\n                        ? usersCount\n                        : (page + 1) * 10}\n                    </span>{' '}\n                    of <span className='font-medium'>{usersCount}</span> results\n                  </p>\n                </div>\n                <div className='flex flex-1 justify-between sm:justify-end'>\n                  <Link\n                    to={`?page=${page - 1}`}\n                    className={\n                      page < 1\n                        ? `hidden`\n                        : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Previous\n                  </Link>\n                  <Link\n                    to={`?page=${page + 1}`}\n                    className={\n                      page + 1 >= usersCount / 10\n                        ? 'hidden'\n                        : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                    }\n                  >\n                    Next\n                  </Link>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { Role } from '@prisma/client'\nimport { useField } from 'remix-validated-form'\n\ntype SelectProps = {\n  name: string\n  label: string\n  value: Role | string\n  className?: string\n}\n\nexport const RoleSelect = ({ name, label, value, className }: SelectProps) => {\n  const { error, getInputProps } = useField(name)\n\n  return (\n    <div>\n      <label htmlFor={name} className='block text-sm font-medium text-gray-900'>\n        {label}\n      </label>\n      <select\n        {...getInputProps({ id: name })}\n        defaultValue={value}\n        className={`mt-1 block w-full appearance-none rounded-md border ${\n          error ? 'border-red-500' : 'border-gray-300'\n        } p-3 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm ${className}`}\n      >\n        {Object.values(Role).map((role) => (\n          <option key={role} value={role}>\n            {role}\n          </option>\n        ))}\n      </select>\n      {error && <span className='text-sm text-red-500'>{error}</span>}\n    </div>\n  )\n}\n", "/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon } from '@heroicons/react/outline'\nimport { Form, useFetcher, useTransition } from 'remix'\n\ninterface Props {\n  userId: string\n  confirmingDeletion: boolean\n  setConfirmingDeletion: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function ConfirmDeleteModal({\n  userId,\n  confirmingDeletion,\n  setConfirmingDeletion,\n}: Props) {\n  const cancelButtonRef = useRef(null)\n  const fetcher = useFetcher()\n\n  useEffect(() => {\n    if (fetcher.type === 'done') setConfirmingDeletion(false)\n  }, [fetcher])\n\n  return (\n    <Transition.Root show={confirmingDeletion} as={Fragment}>\n      <Dialog\n        as='div'\n        className='fixed inset-0 z-50 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        onClose={setConfirmingDeletion}\n      >\n        <div className='flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:h-screen sm:align-middle'\n            aria-hidden='true'\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='relative inline-block transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6 sm:align-middle'>\n              <div className='sm:flex sm:items-start'>\n                <div className='mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon\n                    className='h-6 w-6 text-red-600'\n                    aria-hidden='true'\n                  />\n                </div>\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg font-medium leading-6 text-gray-900'\n                  >\n                    Delete user\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      Are you sure you want to delete this user? All of the\n                      user's data will be permanently removed from our servers\n                      forever. This action cannot be undone.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                <fetcher.Form method='post'>\n                  <input type='hidden' name='_method' value='delete' />\n                  <input type='hidden' name='userId' value={userId} />\n                  <button\n                    type='submit'\n                    className='inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm'\n                  >\n                    {fetcher.state === 'submitting' ? (\n                      <svg\n                        className='ml-3 mr-3 h-5 w-5 animate-spin text-white'\n                        xmlns='http://www.w3.org/2000/svg'\n                        fill='none'\n                        viewBox='0 0 24 24'\n                      >\n                        <circle\n                          className='opacity-25'\n                          cx='12'\n                          cy='12'\n                          r='10'\n                          stroke='currentColor'\n                          strokeWidth='4'\n                        ></circle>\n                        <path\n                          className='opacity-75'\n                          fill='currentColor'\n                          d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                        ></path>\n                      </svg>\n                    ) : (\n                      'Delete'\n                    )}\n                  </button>\n                </fetcher.Form>\n                <button\n                  type='button'\n                  className='mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm'\n                  onClick={() => setConfirmingDeletion(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n", "/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/typography'),\n      require('@tailwindcss/aspect-ratio'),\n    ],\n  }\n  ```\n*/\nimport { useState } from 'react'\nimport { Disclosure, RadioGroup, Tab } from '@headlessui/react'\nimport { MinusIcon, StarIcon } from '@heroicons/react/solid'\nimport { MinusSmIcon, PlusIcon, PlusSmIcon } from '@heroicons/react/outline'\nimport {\n  ActionFunction,\n  Form,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n  useParams,\n} from 'remix'\nimport invariant from 'tiny-invariant'\nimport { Quantity } from '~/components/Quantity'\nimport { db } from '~/utils/db.server'\nimport { validationError } from 'remix-validated-form'\nimport { authenticator } from '~/services/auth.server'\nimport { OrderItem, Role, Status } from '@prisma/client'\nimport { commitSession, getSession } from '~/services/guest.server'\n\nexport type Breadcrumb = {\n  label: string\n  route?: string\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const { id: productId } = params\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return null\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: true,\n      },\n    })\n\n    if (currentOrder) {\n      const existingProduct = currentOrder.orderItems.find(\n        (p) => p.productId === product.id\n      )\n      if (existingProduct) {\n        await db.orderItem.update({\n          where: {\n            id: existingProduct.id,\n          },\n          data: {\n            quantity: {\n              increment: 1,\n            },\n          },\n        })\n      } else {\n        await db.orderItem.create({\n          data: {\n            productId: product.id,\n            quantity: 1,\n            orderId: currentOrder.id,\n          },\n        })\n      }\n      const updatedOrder = await db.order.update({\n        where: { id: currentOrder.id },\n        data: {\n          amount: { increment: product.price },\n        },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    } else {\n      const order = await db.order.create({\n        data: {\n          amount: product.price,\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n\n      await db.orderItem.create({\n        data: {\n          orderId: order.id,\n          productId: product.id,\n          quantity: 1,\n        },\n      })\n\n      const updatedOrder = await db.order.findFirst({\n        where: { id: order.id },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    }\n  } else {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    const existingProduct = orderItems.find(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    const existingProductIndex = orderItems.findIndex(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    if (existingProduct) {\n      orderItems[existingProductIndex] = {\n        productId: product.id,\n        quantity: existingProduct.quantity + 1,\n      }\n    } else {\n      orderItems.push({\n        productId: product.id,\n        quantity: 1,\n      })\n    }\n    session.set('orderItems', orderItems)\n    return redirect(`/products/${productId}`, {\n      headers: {\n        'Set-Cookie': await commitSession(session),\n      },\n    })\n  }\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const { id: productId } = params\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n  return product\n}\n\nexport default function Example() {\n  const product = useLoaderData()\n  const breads: Breadcrumb[] = [\n    { label: 'All Products', route: '/products' },\n    {\n      label: `${product.category[0]}${product.category.toLowerCase().slice(1)}`,\n      route: `/${product.category.toLowerCase()}`,\n    },\n  ]\n\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-2xl py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8'>\n        <nav\n          aria-label='Breadcrumb'\n          className='mx-auto mt-8 mb-8 max-w-7xl lg:mt-0'\n        >\n          <ol role='list' className='flex items-center'>\n            {breads.map((breadcrumb) => (\n              <li key={breadcrumb.label}>\n                <div className='flex items-center'>\n                  <a\n                    href={breadcrumb.route}\n                    className=' text-sm font-medium text-gray-900 hover:text-red-600'\n                  >\n                    {breadcrumb.label}\n                  </a>\n                  <svg\n                    aria-hidden='true'\n                    width='24'\n                    height='24'\n                    fill='none'\n                    className='mx-2 flex-none text-gray-300'\n                  >\n                    <path\n                      d='M10.75 8.75l3.5 3.25-3.5 3.25'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    ></path>\n                  </svg>\n                </div>\n              </li>\n            ))}\n            <li className='text-sm'>\n              <a\n                href='#'\n                aria-current='page'\n                className='font-medium text-red-400 hover:text-red-600'\n              >\n                {product.name}\n              </a>\n            </li>\n          </ol>\n        </nav>\n        <div className='lg:grid lg:grid-cols-2 lg:items-start lg:gap-x-8'>\n          {/* Image gallery */}\n          {/* <Tab.Group as='div' className='flex flex-col-reverse'> */}\n          {/* Image selector */}\n          {/* <div className='mx-auto mt-6 hidden w-full max-w-2xl sm:block lg:max-w-none'>\n              <Tab.List className='grid grid-cols-4 gap-6'>\n                {product.images.map((image) => (\n                  <Tab\n                    key={image.id}\n                    className='relative flex h-24 cursor-pointer items-center justify-center rounded-md bg-white text-sm font-medium uppercase text-gray-900 hover:bg-gray-50 focus:outline-none focus:ring focus:ring-opacity-50 focus:ring-offset-4'\n                  >\n                    {({ selected }) => (\n                      <>\n                        <span className='sr-only'>{image.name}</span>\n                        <span className='absolute inset-0 overflow-hidden rounded-md'>\n                          <img\n                            src={image.src}\n                            alt=''\n                            className='h-full w-full object-cover object-center'\n                          />\n                        </span>\n                        <span\n                          className={classNames(\n                            selected ? 'ring-indigo-500' : 'ring-transparent',\n                            'pointer-events-none absolute inset-0 rounded-md ring-2 ring-offset-2'\n                          )}\n                          aria-hidden='true'\n                        />\n                      </>\n                    )}\n                  </Tab>\n                ))}\n              </Tab.List>\n            </div> */}\n\n          {/* <Tab.Panels className='aspect-w-1 aspect-h-1 w-full'></Tab.Panels>\n          </Tab.Group> */}\n\n          <div className='flex flex-col-reverse'>\n            <img\n              src={product.imageUrl}\n              className='h-full w-full object-cover object-center sm:rounded-lg'\n            />\n          </div>\n\n          {/* Product info */}\n          <div className='mt-10 px-4 sm:mt-16 sm:px-0 lg:mt-0'>\n            <h1 className='text-4xl font-extrabold tracking-tight text-gray-900'>\n              {product.name}\n            </h1>\n\n            <div className='mt-3'>\n              <h2 className='sr-only'>Product information</h2>\n              <p className='text-3xl font-semibold text-red-500'>\n                \u20B1{product.price}{' '}\n              </p>\n            </div>\n\n            <div className='mt-6'>\n              <h3 className='sr-only'>Description</h3>\n\n              <p className='mb-2 text-base font-medium text-gray-900'>\n                {product.weight ? `${product.weight}g per quantity` : null}\n              </p>\n              <p className='space-y-6 text-base text-gray-700'>\n                {product.description}\n              </p>\n            </div>\n\n            <Form method='post' className='mt-6'>\n              <div className='sm:flex-col1 mt-10 flex'>\n                <button\n                  type='submit'\n                  className='flex max-w-xs flex-1 items-center justify-center rounded-md border border-transparent bg-red-500 py-3 px-8 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-offset-2 focus:ring-offset-gray-50 sm:w-full'\n                >\n                  Add to cart\n                </button>\n              </div>\n            </Form>\n\n            <section aria-labelledby='details-heading' className='mt-12'>\n              <h2 id='details-heading' className='sr-only'>\n                Additional details\n              </h2>\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { Link } from 'remix'\n\nexport default function Unauthorized() {\n  return (\n    <>\n      <div className='mt-16 flex min-h-full flex-col bg-white pt-16 pb-12'>\n        <main className='mx-auto flex w-full max-w-7xl flex-grow flex-col justify-center px-4 sm:px-6 lg:px-8'>\n          <div className='flex flex-shrink-0 justify-center'>\n            <Link to='/' className='inline-flex'>\n              <span className='sr-only'>Camille Meat Shop</span>\n              <img\n                className='h-12 w-auto'\n                src='/images/logo.png'\n                alt='Camille Meat Shop Logo'\n              />\n            </Link>\n          </div>\n          <div className='py-16'>\n            <div className='text-center'>\n              <p className='text-sm font-semibold uppercase tracking-wide text-red-600'>\n                Unauthorized\n              </p>\n              <h1 className='mt-2 text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl'>\n                Lost?\n              </h1>\n              <p className='mt-2 text-base text-gray-500'>\n                You're not supposed to be in this page\n              </p>\n              <div className='mt-6'>\n                <Link\n                  to='/'\n                  className='text-base font-medium text-red-600 hover:text-red-500'\n                >\n                  Go back home<span aria-hidden='true'> &rarr;</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </main>\n        <footer className='mx-auto w-full max-w-7xl flex-shrink-0 px-4 sm:px-6 lg:px-8'>\n          <nav className='flex justify-center space-x-4'>\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Contact Support\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Status\n            </a>\n            <span\n              className='inline-block border-l border-gray-300'\n              aria-hidden='true'\n            />\n            <a\n              href='#'\n              className='text-sm font-medium text-gray-500 hover:text-gray-600'\n            >\n              Twitter\n            </a>\n          </nav>\n        </footer>\n      </div>\n    </>\n  )\n}\n", "import { Fragment, useEffect, useState } from 'react'\nimport { Listbox, RadioGroup, Transition } from '@headlessui/react'\nimport {\n  CheckCircleIcon,\n  CheckIcon,\n  CreditCardIcon,\n  SelectorIcon,\n} from '@heroicons/react/solid'\nimport { CashIcon } from '@heroicons/react/outline'\nimport {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n  useActionData,\n  useLoaderData,\n} from 'remix'\nimport { authenticator } from '~/services/auth.server'\nimport { Address, Order, OrderItem, Role, Status } from '@prisma/client'\nimport { db } from '~/utils/db.server'\nimport { Product } from './products'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { ValidatedForm, validationError } from 'remix-validated-form'\nimport { Input } from '~/components/Input'\nimport {\n  payCard,\n  createGCashSource,\n  createGrabPaySource,\n  payMaya,\n} from '~/services/paymongo.server'\nimport { destroySession, getSession } from '~/services/guest.server'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst baseSchema = z.object({\n  contactPerson: zfd.text(z.string().nonempty()),\n  phoneNumber: zfd.text(z.string().nonempty()),\n  address: zfd.text(z.string().nonempty()),\n  city: zfd.text(z.string().nonempty()),\n  cardNumber: zfd.text(z.string().optional()),\n})\n\nexport const addressValidator = withZod(baseSchema)\n\nconst paymentMethods = [\n  { id: 'cod', title: 'Cash on delivery' },\n  { id: 'card', title: 'Credit or debit card' },\n  { id: 'gcash', title: 'GCash', imageSrc: '/images/gcash-logo.png' },\n  { id: 'paymaya', title: 'PayMaya', imageSrc: '/images/paymaya-logo.png' },\n  { id: 'grabpay', title: 'GrabPay', imageSrc: '/images/grabpay-logo.png' },\n]\n\nenum PaymentMethod {\n  CARD = 'card',\n  COD = 'cod',\n  GCASH = 'gcash',\n  GRABPAY = 'grabpay',\n  PAYMAYA = 'paymaya',\n}\n\ninterface OrderItemData extends OrderItem {\n  product: Product\n}\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.ADMIN || user?.role === Role.RIDER) {\n    return redirect('/unauthorized')\n  }\n\n  const formData = await request.formData()\n  const newAddress = formData.get('newAddress')\n  const orderId = formData.get('orderId')?.toString() || ''\n  const paymentMethod = formData.get('paymentMethod[id]')?.toString() || ''\n\n  if (!user?.id) {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    let amount = 0\n    const productIds = [\n      ...new Set(orderItems.map((o: any) => o?.productId || '')),\n    ] as string[]\n\n    const products = await db.product.findMany({\n      where: { id: { in: productIds || [] } },\n    })\n\n    orderItems.forEach((orderItem: any) => {\n      orderItem.product = products.find(\n        (p: any) => p.id === orderItem.productId\n      )\n      amount = amount + orderItem.product.price * orderItem.quantity\n    })\n\n    const order = await db.order.create({\n      data: {\n        amount,\n        status: Status.PACKAGING,\n      },\n    })\n\n    const orderId = order.id\n    const orderItemInputs = orderItems.map((orderItem: any) => ({\n      orderId,\n      productId: orderItem.productId,\n      quantity: orderItem.quantity,\n    }))\n\n    await db.orderItem.createMany({\n      data: orderItemInputs,\n    })\n\n    const nickname = formData.get('addressNickname')?.toString() || 'Home'\n    if (!nickname)\n      return validationError({\n        fieldErrors: {\n          nickname: 'Required',\n        },\n      })\n    const phoneNumber = formData.get('phoneNumber')?.toString() || ''\n    const city = formData.get('city')?.toString() || ''\n    const address = formData.get('address')?.toString() || ''\n    const contactPerson = formData.get('contactPerson')?.toString() || ''\n\n    const orderAddress = await db.address.create({\n      data: {\n        nickname,\n        phoneNumber,\n        city,\n        address,\n        contactPerson,\n        userId: user?.id || null,\n      },\n    })\n\n    if (paymentMethod === PaymentMethod.CARD) {\n      const cardNumber = formData.get('cardNumber')?.toString() || ''\n      const nameOnCard = formData.get('nameOnCard')?.toString() || ''\n      const expiration = formData.get('expiration')?.toString() || ''\n      const cvc = formData.get('cvc')?.toString() || ''\n\n      if (!cardNumber || !nameOnCard || !expiration || !cvc) {\n        return validationError({\n          fieldErrors: {\n            cardNumber: !cardNumber ? 'Required' : '',\n            nameOnCard: !nameOnCard ? 'Required' : '',\n            expiration: !expiration ? 'Required' : '',\n            cvc: !cvc ? 'Required' : '',\n          },\n        })\n      }\n\n      const res = await payCard({\n        cardNumber,\n        nameOnCard,\n        expiration,\n        cvc,\n        amount: order?.amount || 100,\n      })\n\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentOption: 'CARD',\n          addressId: orderAddress?.id,\n          paymentReference: res.paymentReference,\n          paidAt: new Date(),\n        },\n      })\n\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: orderItemInputs?.map((o: any) => o.productId) || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n      return redirect(`order-success/${orderId}`, {\n        headers: {\n          'Set-Cookie': await destroySession(session),\n        },\n      })\n    } else if (paymentMethod === PaymentMethod.GCASH) {\n      const res = await createGCashSource({\n        orderId,\n        amount: order?.amount || 100,\n      })\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      const { sourceId, checkoutUrl } = res\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          paymentOption: 'GCASH',\n          addressId: orderAddress?.id,\n          sourceId: sourceId,\n        },\n      })\n\n      return redirect(checkoutUrl)\n    } else if (paymentMethod === PaymentMethod.GRABPAY) {\n      const res = await createGrabPaySource({\n        orderId,\n        amount: order?.amount || 0,\n      })\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      const { sourceId, checkoutUrl } = res\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          paymentOption: 'GRABPAY',\n          addressId: orderAddress?.id,\n          sourceId: sourceId,\n        },\n      })\n\n      return redirect(checkoutUrl)\n    } else if (paymentMethod === PaymentMethod.PAYMAYA) {\n      const res = await payMaya({\n        orderId,\n        amount: order?.amount || 0,\n      })\n\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      const { paymentIntentId, checkoutUrl } = res\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          paymentOption: 'PAYMAYA',\n          addressId: orderAddress?.id,\n          paymentIntentId: paymentIntentId,\n        },\n      })\n      return redirect(checkoutUrl)\n    } else {\n      //COD\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentOption: 'COD',\n          addressId: orderAddress?.id,\n          paidAt: new Date(),\n        },\n      })\n\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: orderItemInputs?.map((o: any) => o.productId) || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n      const session = await getSession(request)\n\n      return redirect(`order-success/${orderId}`, {\n        headers: {\n          'Set-Cookie': await destroySession(session),\n        },\n      })\n    }\n  } else {\n    const order = await db.order.findFirst({\n      where: {\n        id: orderId,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: true,\n      },\n    })\n\n    let orderAddress: Address | null = null\n    if (newAddress) {\n      const nickname = formData.get('addressNickname')?.toString() || 'Home'\n      if (!nickname)\n        return validationError({\n          fieldErrors: {\n            nickname: 'Required',\n          },\n        })\n      const phoneNumber = formData.get('phoneNumber')?.toString() || ''\n      const city = formData.get('city')?.toString() || ''\n      const address = formData.get('address')?.toString() || ''\n      const contactPerson = formData.get('contactPerson')?.toString() || ''\n\n      orderAddress = await db.address.create({\n        data: {\n          nickname,\n          phoneNumber,\n          city,\n          address,\n          contactPerson,\n          userId: user?.id || null,\n        },\n      })\n    } else {\n      const addressId = formData.get('selectedAddressId')?.toString()\n      if (addressId) {\n        orderAddress = await db.address.findFirst({\n          where: {\n            id: addressId,\n          },\n        })\n      }\n    }\n\n    if (paymentMethod === PaymentMethod.CARD) {\n      const cardNumber = formData.get('cardNumber')?.toString() || ''\n      const nameOnCard = formData.get('nameOnCard')?.toString() || ''\n      const expiration = formData.get('expiration')?.toString() || ''\n      const cvc = formData.get('cvc')?.toString() || ''\n\n      if (!cardNumber || !nameOnCard || !expiration || !cvc) {\n        return validationError({\n          fieldErrors: {\n            cardNumber: !cardNumber ? 'Required' : '',\n            nameOnCard: !nameOnCard ? 'Required' : '',\n            expiration: !expiration ? 'Required' : '',\n            cvc: !cvc ? 'Required' : '',\n          },\n        })\n      }\n\n      const res = await payCard({\n        cardNumber,\n        nameOnCard,\n        expiration,\n        cvc,\n        amount: order?.amount || 100,\n      })\n\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentOption: 'CARD',\n          addressId: orderAddress?.id,\n          paymentReference: res.paymentReference,\n          paidAt: new Date(),\n        },\n      })\n\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: order?.orderItems?.map((o) => o.productId) || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n\n      return redirect(`order-success/${orderId}`)\n    } else if (paymentMethod === PaymentMethod.GCASH) {\n      const res = await createGCashSource({\n        orderId,\n        amount: order?.amount || 100,\n      })\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      const { sourceId, checkoutUrl } = res\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          paymentOption: 'GCASH',\n          addressId: orderAddress?.id,\n          sourceId: sourceId,\n        },\n      })\n\n      return redirect(checkoutUrl)\n    } else if (paymentMethod === PaymentMethod.GRABPAY) {\n      const res = await createGrabPaySource({\n        orderId,\n        amount: order?.amount || 0,\n      })\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      const { sourceId, checkoutUrl } = res\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          paymentOption: 'GRABPAY',\n          addressId: orderAddress?.id,\n          sourceId: sourceId,\n        },\n      })\n\n      return redirect(checkoutUrl)\n    } else if (paymentMethod === PaymentMethod.PAYMAYA) {\n      const res = await payMaya({\n        orderId,\n        amount: order?.amount || 0,\n      })\n\n      if (res.errors) {\n        return json({\n          paymentErrors: res.errors,\n        })\n      }\n\n      const { paymentIntentId, checkoutUrl } = res\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          paymentOption: 'PAYMAYA',\n          addressId: orderAddress?.id,\n          paymentIntentId: paymentIntentId,\n        },\n      })\n      return redirect(checkoutUrl)\n    } else {\n      //COD\n      await db.order.update({\n        where: {\n          id: orderId,\n        },\n        data: {\n          status: Status.PACKAGING,\n          paymentOption: 'COD',\n          addressId: orderAddress?.id,\n          paidAt: new Date(),\n        },\n      })\n\n      await db.product.updateMany({\n        where: {\n          id: {\n            in: order?.orderItems?.map((o) => o.productId) || [],\n          },\n        },\n        data: {\n          stock: { decrement: 1 },\n        },\n      })\n      return redirect(`order-success/${orderId}`)\n    }\n  }\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.ADMIN || user?.role === Role.RIDER) {\n    return redirect('/unauthorized')\n  }\n\n  if (!user?.id) {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    let amount = 0\n\n    const productIds = [\n      ...new Set(orderItems.map((o: any) => o?.productId || '')),\n    ] as string[]\n\n    const products = await db.product.findMany({\n      where: { id: { in: productIds || [] } },\n    })\n    orderItems.forEach(async (orderItem: any) => {\n      orderItem.product = products.find(\n        (p: any) => p.id === orderItem.productId\n      )\n      amount = amount + orderItem.product.price * orderItem.quantity\n    })\n\n    const url = new URL(request.url)\n    const paymentFailed = url.searchParams.get('paymentFailed')\n\n    return json({\n      currentOrder: { orderItems: orderItems, amount },\n      paymentError: paymentFailed ? true : false,\n    })\n  } else {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: {\n          include: {\n            product: true,\n          },\n        },\n      },\n    })\n\n    if (!currentOrder) redirect('/')\n\n    const savedAddresses = await db.address.findMany({\n      where: {\n        userId: user?.id || '',\n      },\n    })\n\n    const url = new URL(request.url)\n    const paymentFailed = url.searchParams.get('paymentFailed')\n\n    const data = { currentOrder, savedAddresses, paymentError: false }\n    if (paymentFailed) data.paymentError = true\n\n    return data\n  }\n}\n\nexport default function Example() {\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(\n    paymentMethods?.length && paymentMethods[0]\n  )\n\n  const { currentOrder, savedAddresses } = useLoaderData()\n\n  const orderItems = currentOrder?.orderItems || []\n\n  const [selected, setSelected] = useState<Address | null>(\n    savedAddresses?.length ? savedAddresses[0] : null\n  )\n  const [newAddress, setNewAddress] = useState(!savedAddresses?.length)\n\n  const loaderData = useLoaderData()\n  const actionData = useActionData()\n\n  return (\n    <div className='bg-gray-50'>\n      <ValidatedForm\n        validator={addressValidator}\n        method='post'\n        className='mx-auto max-w-2xl px-4 pt-24 pb-24 sm:px-6 lg:max-w-7xl lg:px-8'\n      >\n        <input\n          type='hidden'\n          value={newAddress ? 'true' : ''}\n          name='newAddress'\n        />\n\n        <input type='hidden' value={currentOrder?.id || ''} name='orderId' />\n        <h1 className='mb-6 text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl'>\n          Checkout\n        </h1>\n        <h2 className='sr-only'>Checkout</h2>\n\n        <div className='lg:grid lg:grid-cols-2 lg:gap-x-12 xl:gap-x-16'>\n          <div>\n            <div>\n              {currentOrder?.userId ? (\n                <div>\n                  {savedAddresses?.length ? (\n                    <div className=' lg:max-w-[36rem] '>\n                      <input\n                        type='hidden'\n                        value={selected?.id || ''}\n                        name='selectedAddressId'\n                      />\n                      <Listbox\n                        disabled={newAddress}\n                        value={selected}\n                        onChange={setSelected}\n                      >\n                        {({ open }) => (\n                          <>\n                            <Listbox.Label className='block text-xl font-medium text-gray-900'>\n                              Saved addresses\n                            </Listbox.Label>\n                            <div className='relative mt-4 mb-4'>\n                              <Listbox.Button className=' relative w-full cursor-default rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-left shadow-sm focus:border-red-500 focus:outline-none focus:ring-1 focus:ring-red-500 disabled:cursor-not-allowed disabled:text-gray-400 sm:text-sm'>\n                                <span className='block truncate py-1'>\n                                  {newAddress && savedAddresses?.length > 0\n                                    ? 'Saving the following information as a new address...'\n                                    : selected?.nickname || 'Select an address'}\n                                </span>\n                                <span className='pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2'>\n                                  <SelectorIcon\n                                    className='h-5 w-5 text-gray-400'\n                                    aria-hidden='true'\n                                  />\n                                </span>\n                              </Listbox.Button>\n\n                              <Transition\n                                show={open}\n                                as={Fragment}\n                                leave='transition ease-in duration-100'\n                                leaveFrom='opacity-100'\n                                leaveTo='opacity-0'\n                              >\n                                <Listbox.Options className='absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm'>\n                                  {savedAddresses?.length > 0 &&\n                                    savedAddresses.map((address: Address) => (\n                                      <Listbox.Option\n                                        key={address.id}\n                                        className={({ active }) =>\n                                          classNames(\n                                            active\n                                              ? 'bg-red-500 text-white'\n                                              : 'text-gray-900',\n                                            'relative cursor-default select-none py-2 pl-3 pr-9'\n                                          )\n                                        }\n                                        value={address}\n                                      >\n                                        {({ selected, active }) => (\n                                          <>\n                                            <span\n                                              className={classNames(\n                                                selected\n                                                  ? 'font-semibold'\n                                                  : 'font-normal',\n                                                'block truncate'\n                                              )}\n                                            >\n                                              {address.nickname}\n                                            </span>\n\n                                            {selected ? (\n                                              <span\n                                                className={classNames(\n                                                  active\n                                                    ? 'text-white'\n                                                    : 'text-red-600',\n                                                  'absolute inset-y-0 right-0 flex items-center pr-4'\n                                                )}\n                                              >\n                                                <CheckIcon\n                                                  className='h-5 w-5'\n                                                  aria-hidden='true'\n                                                />\n                                              </span>\n                                            ) : null}\n                                          </>\n                                        )}\n                                      </Listbox.Option>\n                                    ))}\n                                </Listbox.Options>\n                              </Transition>\n                            </div>\n                          </>\n                        )}\n                      </Listbox>\n\n                      {currentOrder?.userId ? (\n                        <div className='my-4 flex items-center'>\n                          <input\n                            checked={newAddress}\n                            onChange={() => setNewAddress(!newAddress)}\n                            type='checkbox'\n                            name='newAddress'\n                            id='new-address'\n                            className='h-4 w-4 rounded border-gray-300 text-red-600 focus:ring-red-500'\n                          />\n                          <label\n                            htmlFor='new-address'\n                            className='ml-2 text-sm text-gray-900'\n                          >\n                            Save the following address as a new address\n                          </label>\n                        </div>\n                      ) : null}\n                      {newAddress ? (\n                        <div className='my-4'>\n                          <Input\n                            name='addressNickname'\n                            label='Address nickname'\n                            type='text'\n                            className={`${\n                              loaderData?.error?.message && 'border-red-500'\n                            }`}\n                          />\n                        </div>\n                      ) : null}\n                    </div>\n                  ) : (\n                    <>\n                      <div className='my-4 flex items-center'>\n                        <input\n                          checked={newAddress}\n                          onChange={() => setNewAddress(!newAddress)}\n                          type='checkbox'\n                          name='newAddress'\n                          id='new-address'\n                          className='h-4 w-4 rounded border-gray-300 text-red-600 focus:ring-red-500'\n                        />\n                        <label\n                          htmlFor='new-address'\n                          className='ml-2 text-sm text-gray-900'\n                        >\n                          Save the following address as a new address\n                        </label>\n                      </div>\n                      {newAddress ? (\n                        <div className='my-4'>\n                          <Input\n                            name='addressNickname'\n                            label='Address nickname'\n                            type='text'\n                            className={`${\n                              loaderData?.error?.message && 'border-red-500'\n                            }`}\n                          />\n                        </div>\n                      ) : null}\n                    </>\n                  )}\n                </div>\n              ) : null}\n\n              <div className='mt-5 border-t border-gray-200 pt-5'>\n                <h2 className='text-xl font-medium text-gray-900'>\n                  Contact information\n                </h2>\n                <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                  <div>\n                    <Input\n                      name='contactPerson'\n                      label='Contact person'\n                      type='text'\n                      value={selected?.contactPerson || undefined}\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div>\n                    <Input\n                      name='phoneNumber'\n                      label='Phone number'\n                      type='text'\n                      value={selected?.phoneNumber || undefined}\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='mt-5 border-t border-gray-200 pt-5'>\n              <h2 className='text-lg font-medium text-gray-900'>\n                Delivery information\n              </h2>\n\n              <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                <div className='sm:col-span-2'>\n                  <Input\n                    name='address'\n                    label='Address'\n                    type='text'\n                    value={selected?.address || undefined}\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                </div>\n\n                <div>\n                  <Input\n                    name='city'\n                    label='City / Municipality'\n                    type='text'\n                    value={selected?.city || undefined}\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                </div>\n\n                <div>\n                  <label\n                    htmlFor='province'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    Province\n                  </label>\n                  <div className='mt-1'>\n                    <input\n                      type='text'\n                      name='province'\n                      id='province'\n                      value='Cavite'\n                      disabled\n                      autoComplete='address-level1'\n                      className='block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-red-500 focus:ring-red-500 disabled:border disabled:text-gray-500  sm:text-sm'\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='mt-5 border-t border-gray-200 pt-5'>\n              <RadioGroup\n                name='paymentMethod'\n                value={selectedPaymentMethod}\n                onChange={setSelectedPaymentMethod}\n              >\n                <RadioGroup.Label className='text-lg font-medium text-gray-900'>\n                  Payment method\n                </RadioGroup.Label>\n\n                <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                  {paymentMethods.map((paymentMethod) => (\n                    <RadioGroup.Option\n                      key={paymentMethod.id}\n                      value={paymentMethod}\n                      className={({ checked, active }) =>\n                        classNames(\n                          checked ? 'border-transparent' : 'border-gray-300',\n                          active ? 'ring-2 ring-green-500' : '',\n                          'relative flex cursor-pointer rounded-lg border bg-white p-4 shadow-sm focus:outline-none'\n                        )\n                      }\n                    >\n                      {({ checked, active }) => (\n                        <>\n                          <div className='flex-4 flex max-h-8 items-center justify-between'>\n                            <div className='flex items-center '>\n                              {paymentMethod.id === 'card' && (\n                                <CreditCardIcon className=' mr-2 w-10 text-green-500' />\n                              )}\n                              {paymentMethod.id === 'cod' && (\n                                <CashIcon className=' mr-2 w-8 text-green-500' />\n                              )}\n                              <RadioGroup.Label\n                                as='span'\n                                className='flex text-base font-medium text-gray-900'\n                              >\n                                {paymentMethod?.imageSrc ? (\n                                  <img\n                                    src={paymentMethod.imageSrc}\n                                    alt={paymentMethod.id}\n                                    className='w-24'\n                                  />\n                                ) : (\n                                  paymentMethod.title\n                                )}\n                              </RadioGroup.Label>\n                              {/* <RadioGroup.Description\n                                as='span'\n                                className='mt-1 flex items-center text-sm text-gray-500'\n                              >\n                                {paymentMethod.turnaround}\n                              </RadioGroup.Description> */}\n                              {/* <RadioGroup.Description\n                                as='span'\n                                className='mt-6 text-sm font-medium text-gray-900'\n                              >\n                                {paymentMethod.price}\n                              </RadioGroup.Description> */}\n                            </div>\n                            {checked ? (\n                              <div>\n                                <CheckCircleIcon\n                                  className=' ml-3 h-5 w-5 text-green-500'\n                                  aria-hidden='true'\n                                />\n                              </div>\n                            ) : null}\n                          </div>\n\n                          <div\n                            className={classNames(\n                              active ? 'border' : 'border-2',\n                              checked\n                                ? 'border-green-500'\n                                : 'border-transparent',\n                              'pointer-events-none absolute -inset-px rounded-lg'\n                            )}\n                            aria-hidden='true'\n                          />\n                        </>\n                      )}\n                    </RadioGroup.Option>\n                  ))}\n                </div>\n              </RadioGroup>\n              {selectedPaymentMethod &&\n              selectedPaymentMethod.id === PaymentMethod.CARD ? (\n                <div className='mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4'>\n                  <div className='sm:col-span-2'>\n                    <Input\n                      name='cardNumber'\n                      label='Credit / debit card number'\n                      defaultValue='4343434343434345'\n                      type='text'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div className='sm:col-span-2'>\n                    <Input\n                      name='nameOnCard'\n                      label='Name on card'\n                      defaultValue='Cardholder Name'\n                      type='text'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div>\n                    <Input\n                      name='expiration'\n                      label='Expiration date (MM/YY)'\n                      type='text'\n                      defaultValue='09/22'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n\n                  <div>\n                    <Input\n                      name='cvc'\n                      label='CVC'\n                      type='text'\n                      defaultValue='123'\n                      className={`${\n                        loaderData?.error?.message && 'border-red-500'\n                      }`}\n                    />\n                  </div>\n                </div>\n              ) : null}\n            </div>\n\n            {/* Payment */}\n          </div>\n\n          {/* Order summary */}\n          <div className='mt-5 lg:mt-0'>\n            <h2 className='text-xl font-medium text-gray-900'>Order summary</h2>\n\n            <div className='mt-6 rounded-lg border border-gray-200 bg-white shadow-sm'>\n              <h3 className='sr-only'>Items in your cart</h3>\n              <ul role='list' className='divide-y divide-gray-200'>\n                {orderItems?.map((orderItem: OrderItemData) => {\n                  const product = orderItem.product\n                  return (\n                    <li key={product.id} className='flex py-6 px-4 sm:px-6'>\n                      <div className='flex-shrink-0'>\n                        <img\n                          src={product.imageUrl}\n                          className='w-40 rounded-md'\n                        />\n                      </div>\n\n                      <div className='ml-6 flex flex-1 flex-col pt-4'>\n                        <div className='flex'>\n                          <div className='min-w-0 flex-1'>\n                            <h4 className='text-lg'>\n                              <a\n                                href={`/products/${product.id}`}\n                                className='font-medium text-gray-700 hover:text-red-800'\n                              >\n                                {product.name}\n                              </a>\n                            </h4>\n                            <p className='text-md mt-1 text-red-500'>\n                              \u20B1{product.price}\n                            </p>\n                            <div className='mt-2 '>\n                              <p>Quantity: {orderItem.quantity}</p>\n                            </div>\n                          </div>\n\n                          {/* <div className='ml-4 flow-root flex-shrink-0'>\n                            <button\n                              type='button'\n                              className='-m-2.5 flex items-center justify-center bg-white p-2.5 text-gray-400 hover:text-red-500'\n                            >\n                              <span className='sr-only'>Remove</span>\n                              <TrashIcon\n                                className='h-5 w-5'\n                                aria-hidden='true'\n                              />\n                            </button>\n                          </div> */}\n                        </div>\n\n                        <div className='flex flex-1 items-end justify-between pt-2'></div>\n                      </div>\n                    </li>\n                  )\n                })}\n              </ul>\n              <dl className='space-y-6 border-t border-gray-200 py-6 px-4 sm:px-6'>\n                <div className='flex items-center justify-between'>\n                  <dt className='text-sm'>Subtotal</dt>\n                  <dd className='text-sm font-medium text-gray-900'>\n                    \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                  </dd>\n                </div>\n                <div className='flex items-center justify-between'>\n                  <dt className='text-sm'>Delivery fee</dt>\n                  <dd className='text-right text-sm font-medium text-gray-900'>\n                    {currentOrder?.amount ? (\n                      <>\n                        <p className='line-through'>\u20B150</p>\n                      </>\n                    ) : (\n                      <>\n                        <p>\u20B10</p>\n                      </>\n                    )}\n                    {currentOrder?.amount && (\n                      <div className='mt-2 flex justify-end space-x-2'>\n                        <p className='text-right text-sm font-medium text-gray-900'>\n                          Free delivery promo applied\n                        </p>\n                        <CheckCircleIcon className='w-5 text-green-500' />\n                      </div>\n                    )}\n                  </dd>\n                </div>\n\n                <div className='flex items-center justify-between border-t border-gray-200 pt-6'>\n                  <dt className='text-base font-medium'>Total amount</dt>\n                  <dd className='text-base font-medium text-red-500'>\n                    {' '}\n                    \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                  </dd>\n                </div>\n              </dl>\n\n              <div className='border-t border-gray-200 py-6 px-4 sm:px-6'>\n                <div>\n                  {loaderData?.paymentError ? (\n                    <>\n                      <p className='mb-4 font-semibold text-red-600'>\n                        Payment Errors\n                      </p>\n                      <p className='mb-4 font-medium text-red-600'>\n                        Payment failed. Please try again.\n                      </p>\n                    </>\n                  ) : null}\n                  {actionData?.paymentErrors ? (\n                    <>\n                      <p className='mb-4 font-semibold text-red-600'>\n                        Payment Errors\n                      </p>\n                      {actionData.paymentErrors.map((e: string) => (\n                        <p key={e} className='mb-4 font-medium text-red-600'>\n                          {e}\n                        </p>\n                      ))}\n                    </>\n                  ) : null}\n                </div>\n                <button\n                  type='submit'\n                  className='w-full rounded-md border border-transparent bg-red-500 py-3 px-4 text-base font-medium text-white shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-50'\n                >\n                  Confirm order\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ValidatedForm>\n    </div>\n  )\n}\n", "import { OrderItem, Role, Status } from '@prisma/client'\nimport { LoaderFunction } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { ProductsPage } from '~/components/ProductsPage'\nimport { db } from '~/utils/db.server'\nimport { Category, Product } from './products'\nimport { ActionFunction, redirect } from '@remix-run/node'\nimport { authenticator } from '~/services/auth.server'\nimport { validationError } from 'remix-validated-form'\nimport { commitSession, getSession } from '~/services/guest.server'\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const products = await db.product.findMany({\n    where: {\n      category: 'CHICKEN',\n    },\n  })\n  return products\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return null\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: true,\n      },\n    })\n\n    if (currentOrder) {\n      const existingProduct = currentOrder.orderItems.find(\n        (p) => p.productId === product.id\n      )\n      if (existingProduct) {\n        await db.orderItem.update({\n          where: {\n            id: existingProduct.id,\n          },\n          data: {\n            quantity: {\n              increment: 1,\n            },\n          },\n        })\n      } else {\n        await db.orderItem.create({\n          data: {\n            productId: product.id,\n            quantity: 1,\n            orderId: currentOrder.id,\n          },\n        })\n      }\n      const updatedOrder = await db.order.update({\n        where: { id: currentOrder.id },\n        data: {\n          amount: { increment: product.price },\n        },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    } else {\n      const order = await db.order.create({\n        data: {\n          amount: product.price,\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n\n      await db.orderItem.create({\n        data: {\n          orderId: order.id,\n          productId: product.id,\n          quantity: 1,\n        },\n      })\n\n      const updatedOrder = await db.order.findFirst({\n        where: { id: order.id },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    }\n  } else {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    const existingProduct = orderItems.find(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    const existingProductIndex = orderItems.findIndex(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    if (existingProduct) {\n      orderItems[existingProductIndex] = {\n        productId: product.id,\n        quantity: existingProduct.quantity + 1,\n      }\n    } else {\n      orderItems.push({\n        productId: product.id,\n        quantity: 1,\n      })\n    }\n    session.set('orderItems', orderItems)\n    return redirect('/chicken', {\n      headers: {\n        'Set-Cookie': await commitSession(session),\n      },\n    })\n  }\n}\n\nexport default function ChickenPage() {\n  const category = Category.CHICKEN\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "import { ActionFunction, json, LoaderFunction } from 'remix'\nimport { authenticator } from '~/services/auth.server'\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  await authenticator.logout(request, { redirectTo: '/' })\n}\n", "import { Form, Link, useLoaderData, useTransition } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\n\nimport { SocialsProvider } from 'remix-auth-socials'\nimport {\n  commitSession,\n  destroySession,\n  getSession,\n} from '~/services/session.server'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { ValidatedForm, validationError } from 'remix-validated-form'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { Input } from '~/components/Input'\nimport { ActionFunction, LoaderFunction, json } from '@remix-run/node'\n\ninterface SocialsButtonProps {\n  provider: SocialsProvider\n  label: string\n}\n\nexport const validator = withZod(\n  z.object({\n    username: zfd.text(\n      z.string({\n        required_error: 'Username is required',\n      })\n    ),\n    password: zfd.text(\n      z.string({\n        required_error: 'Password is required',\n      })\n    ),\n  })\n)\n\n// // Second, we need to export an action function, here we will use the\n// // `authenticator.authenticate method`\nexport let action: ActionFunction = async ({ request }) => {\n  // we call the method with the name of the strategy we want to use and the\n  // request object, optionally we pass an object with the URLs we want the user\n  // to be redirected to after a success or a failure\n\n  const requestClone = request.clone() // if not cloned, authenticator cannot use the request\n\n  // form validation\n  const formData = await request.formData()\n  const result = await validator.validate(formData)\n  if (result.error) {\n    return validationError(result.error)\n  }\n\n  return await authenticator.authenticate('user-pass-signin', requestClone, {\n    successRedirect: '/',\n    failureRedirect: '/signin',\n  })\n}\n\n// Finally, we can export a loader function where we check if the user is\n// authenticated with `authenticator.isAuthenticated` and redirect to the\n// dashboard if it is or return null if it's not\nexport let loader: LoaderFunction = async ({ request }) => {\n  await authenticator.isAuthenticated(request, { successRedirect: '/' })\n  let session = await getSession(request)\n  let error = session.get('auth:error') as string | null\n\n  return json(\n    { error },\n    {\n      headers: {\n        'Set-Cookie': await destroySession(session),\n      },\n    }\n  )\n}\n\nconst FacebookIcon = () => (\n  <svg\n    className='h-5 w-5'\n    aria-hidden='true'\n    fill='currentColor'\n    viewBox='0 0 20 20'\n  >\n    <path\n      fillRule='evenodd'\n      d='M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z'\n      clipRule='evenodd'\n    />\n  </svg>\n)\n\nconst GoogleIcon = () => (\n  <svg\n    className='h-5 w-5'\n    aria-hidden='true'\n    fill='currentColor'\n    viewBox='0 0 24 24'\n  >\n    <path\n      xmlns='http://www.w3.org/2000/svg'\n      d='M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032 s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2 C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z'\n    />{' '}\n  </svg>\n)\n\nexport const SocialsButton: React.FC<SocialsButtonProps> = ({\n  provider,\n  label,\n}) => (\n  <Form action={`/auth/${provider}`} method='post'>\n    <button\n      disabled\n      className='inline-flex w-full cursor-not-allowed justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'\n    >\n      <span className='sr-only'>{label}</span>\n      {provider === SocialsProvider.FACEBOOK ? (\n        <FacebookIcon />\n      ) : (\n        <GoogleIcon />\n      )}\n    </button>\n  </Form>\n)\n\nexport default function Example() {\n  const loaderData = useLoaderData()\n  const transition = useTransition()\n\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-white\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className='flex min-h-full pt-16'>\n        <div className='flex flex-1 flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24'>\n          <div className='mx-auto w-full max-w-sm lg:w-96'>\n            <div>\n              <h2 className='mt-6 text-3xl font-extrabold text-gray-900'>\n                Sign in to your account\n              </h2>\n              <p className='mt-2 text-sm text-gray-600'>\n                Or{' '}\n                <Link\n                  to='/signup'\n                  className='font-medium text-red-600 hover:text-red-500'\n                >\n                  sign up for an account\n                </Link>\n              </p>\n            </div>\n\n            <div className='mt-8'>\n              <div>\n                <div>\n                  <p className='text-sm font-medium text-gray-700'>\n                    Sign in with (OAuth temporarily disabled)\n                  </p>\n\n                  <div className='mt-1 grid grid-cols-2 gap-3'>\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.FACEBOOK}\n                        label='Login with Facebook'\n                      />\n                    </div>\n\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.GOOGLE}\n                        label='Login with Google'\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='relative mt-6'>\n                  <div\n                    className='absolute inset-0 flex items-center'\n                    aria-hidden='true'\n                  >\n                    <div className='w-full border-t border-gray-300' />\n                  </div>\n                  <div className='relative flex justify-center text-sm'>\n                    <span className='bg-white px-2 text-gray-500'>\n                      Or continue with\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-6'>\n                <ValidatedForm\n                  validator={validator}\n                  method='post'\n                  className='space-y-6'\n                >\n                  <Input\n                    name='username'\n                    label='Username'\n                    type='username'\n                    autoComplete='username'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                  <Input\n                    name='password'\n                    label='Password'\n                    type='password'\n                    autoComplete='current-password'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n\n                  <div className='flex items-center justify-between space-x-8'>\n                    <div>\n                      {loaderData?.error?.message ? (\n                        <p className='text-sm font-medium text-red-600'>\n                          {loaderData?.error?.message}\n                        </p>\n                      ) : null}\n                    </div>\n\n                    {/* <div className='text-sm'>\n                      <a\n                        href='#'\n                        className='font-medium text-red-600 hover:text-red-500'\n                      >\n                        Forgot your password?\n                      </a>\n                    </div> */}\n                  </div>\n\n                  <div>\n                    <button\n                      disabled={transition.state === 'submitting'}\n                      type='submit'\n                      className={`${\n                        transition.submission && 'cursor-progress'\n                      } flex w-full justify-center rounded-md border border-transparent bg-red-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                    >\n                      {transition.submission ? (\n                        <svg\n                          className='-ml-1 mr-3 h-5 w-5 animate-spin text-white'\n                          xmlns='http://www.w3.org/2000/svg'\n                          fill='none'\n                          viewBox='0 0 24 24'\n                        >\n                          <circle\n                            className='opacity-25'\n                            cx='12'\n                            cy='12'\n                            r='10'\n                            stroke='currentColor'\n                            strokeWidth='4'\n                          ></circle>\n                          <path\n                            className='opacity-75'\n                            fill='currentColor'\n                            d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                          ></path>\n                        </svg>\n                      ) : (\n                        'Sign in'\n                      )}\n                    </button>\n                  </div>\n                </ValidatedForm>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='relative hidden w-0 flex-1 lg:block'>\n          <img\n            className='absolute inset-0 h-full w-full object-cover'\n            src='/images/hero-fresh-meat2.jpg'\n            alt='fresh chicken pork meat and beef'\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { useTransition, useLoaderData } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { ValidatedForm, validationError } from 'remix-validated-form'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { Input } from '~/components/Input'\nimport { destroySession, getSession } from '~/services/session.server'\nimport { ActionFunction, json, LoaderFunction } from '@remix-run/node'\nimport { SocialsButton } from './signin'\nimport { SocialsProvider } from 'remix-auth-socials'\n\nexport const validator = withZod(\n  z.object({\n    name: zfd.text(\n      z\n        .string({\n          required_error: 'Name is required',\n        })\n        .regex(/^[a-zA-Z ]*$/, 'Name should only include alphabet characters')\n    ),\n    username: zfd.text(\n      z\n        .string({\n          required_error: 'Username is required',\n        })\n        .min(6, 'Username should at least have 6 characters')\n        .max(32, 'Username is too long')\n        .regex(\n          /^[a-zA-Z0-9_]*$/,\n          'Username should only include alphanumeric characters and underscore'\n        )\n    ),\n    password: zfd.text(\n      z\n        .string({\n          required_error: 'Password is required',\n        })\n        .min(8, 'Password should at least have 8 characters')\n        .max(32, 'Password is too long')\n        .regex(\n          /^[a-zA-Z0-9_@^$!#?]*$/,\n          'Password should only include alphanumeric characters and symbols (_@^$!#?)'\n        )\n    ),\n  })\n)\n\n// // Second, we need to export an action function, here we will use the\n// // `authenticator.authenticate method`\nexport let action: ActionFunction = async ({ request }) => {\n  // we call the method with the name of the strategy we want to use and the\n  // request object, optionally we pass an object with the URLs we want the user\n  // to be redirected to after a success or a failure\n\n  const requestClone = request.clone() // if not cloned, authenticator cannot use the request\n\n  const formData = await request.formData()\n  const result = await validator.validate(formData)\n  if (result.error) return validationError(result.error)\n\n  return await authenticator.authenticate('user-pass-signup', requestClone, {\n    successRedirect: '/',\n    failureRedirect: '/signup',\n  })\n}\n\n// Finally, we can export a loader function where we check if the user is\n// authenticated with `authenticator.isAuthenticated` and redirect to the\n// dashboard if it is or return null if it's not\nexport let loader: LoaderFunction = async ({ request }) => {\n  // If the user is already authenticated redirect to /dashboard directly\n  await authenticator.isAuthenticated(request, { successRedirect: '/' })\n  let session = await getSession(request)\n  let error = session.get('auth:error') as string | null\n  return json(\n    { error },\n    {\n      headers: {\n        'Set-Cookie': await destroySession(session),\n      },\n    }\n  )\n}\n\nexport default function Example() {\n  const transition = useTransition()\n  const loaderData = useLoaderData()\n\n  return (\n    <>\n      <div className='flex min-h-full pt-16'>\n        <div className='flex flex-1 flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24'>\n          <div className='mx-auto w-full max-w-sm lg:w-96'>\n            <div>\n              <h2 className='mt-6 text-3xl font-extrabold text-gray-900'>\n                Create your account\n              </h2>\n            </div>\n\n            <div className='mt-6'>\n              <div>\n                <div>\n                  <p className='text-sm font-medium text-gray-700'>\n                    Sign up with\n                  </p>\n\n                  <div className='mt-1 grid grid-cols-2 gap-3'>\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.FACEBOOK}\n                        label='Login with Facebook'\n                      />\n                    </div>\n\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.GOOGLE}\n                        label='Login with Google'\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='relative mt-6'>\n                  <div\n                    className='absolute inset-0 flex items-center'\n                    aria-hidden='true'\n                  >\n                    <div className='w-full border-t border-gray-300' />\n                  </div>\n                  <div className='relative flex justify-center text-sm'>\n                    <span className='bg-white px-2 text-gray-500'>\n                      Or continue with\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-6'>\n                <ValidatedForm\n                  validator={validator}\n                  method='post'\n                  className='space-y-6'\n                >\n                  <Input\n                    name='name'\n                    label='Full Name'\n                    type='name'\n                    placeholder='Juan Dela Cruz'\n                    autoComplete='name'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                  <Input\n                    name='username'\n                    label='Username'\n                    type='username'\n                    autoComplete='username'\n                    placeholder='juandelacruz123'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                  <Input\n                    name='password'\n                    label='Password'\n                    type='password'\n                    autoComplete='current-password'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n\n                  <div>\n                    <p className='text-sm font-medium text-red-600'>\n                      {loaderData?.error?.message}\n                    </p>\n                  </div>\n\n                  <div>\n                    <button\n                      disabled={transition.state === 'submitting'}\n                      type='submit'\n                      className={`${\n                        transition.submission && 'cursor-progress'\n                      } flex w-full justify-center rounded-md border border-transparent bg-red-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                    >\n                      {transition.submission ? (\n                        <svg\n                          className='-ml-1 mr-3 h-5 w-5 animate-spin text-white'\n                          xmlns='http://www.w3.org/2000/svg'\n                          fill='none'\n                          viewBox='0 0 24 24'\n                        >\n                          <circle\n                            className='opacity-25'\n                            cx='12'\n                            cy='12'\n                            r='10'\n                            stroke='currentColor'\n                            strokeWidth='4'\n                          ></circle>\n                          <path\n                            className='opacity-75'\n                            fill='currentColor'\n                            d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                          ></path>\n                        </svg>\n                      ) : (\n                        'Sign up'\n                      )}\n                    </button>\n                  </div>\n                </ValidatedForm>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='relative hidden w-0 flex-1 lg:block'>\n          <img\n            className='absolute inset-0 h-full w-full object-cover'\n            src='/images/sign-up.jpg'\n            alt='fresh chicken pork meat and beef'\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n", "import { Form, Link, useLoaderData, useTransition } from '@remix-run/react'\nimport { authenticator } from '~/services/auth.server'\n\nimport { SocialsProvider } from 'remix-auth-socials'\nimport {\n  commitSession,\n  destroySession,\n  getSession,\n} from '~/services/session.server'\nimport { withZod } from '@remix-validated-form/with-zod'\nimport { ValidatedForm, validationError } from 'remix-validated-form'\nimport { z } from 'zod'\nimport { zfd } from 'zod-form-data'\nimport { Input } from '~/components/Input'\nimport { ActionFunction, LoaderFunction, json } from '@remix-run/node'\n\ninterface SocialsButtonProps {\n  provider: SocialsProvider\n  label: string\n}\n\nexport const validator = withZod(\n  z.object({\n    username: zfd.text(\n      z.string({\n        required_error: 'Username is required',\n      })\n    ),\n    password: zfd.text(\n      z.string({\n        required_error: 'Password is required',\n      })\n    ),\n  })\n)\n\n// // Second, we need to export an action function, here we will use the\n// // `authenticator.authenticate method`\nexport let action: ActionFunction = async ({ request }) => {\n  // we call the method with the name of the strategy we want to use and the\n  // request object, optionally we pass an object with the URLs we want the user\n  // to be redirected to after a success or a failure\n\n  const requestClone = request.clone() // if not cloned, authenticator cannot use the request\n\n  // form validation\n  const formData = await request.formData()\n  const result = await validator.validate(formData)\n  if (result.error) {\n    return validationError(result.error)\n  }\n\n  return await authenticator.authenticate('user-pass-signin', requestClone, {\n    successRedirect: '/',\n    failureRedirect: '/signin',\n  })\n}\n\n// Finally, we can export a loader function where we check if the user is\n// authenticated with `authenticator.isAuthenticated` and redirect to the\n// dashboard if it is or return null if it's not\nexport let loader: LoaderFunction = async ({ request }) => {\n  await authenticator.isAuthenticated(request, { successRedirect: '/' })\n  let session = await getSession(request)\n  let error = session.get('auth:error') as string | null\n\n  return json(\n    { error },\n    {\n      headers: {\n        'Set-Cookie': await destroySession(session),\n      },\n    }\n  )\n}\n\nconst FacebookIcon = () => (\n  <svg\n    className='h-5 w-5'\n    aria-hidden='true'\n    fill='currentColor'\n    viewBox='0 0 20 20'\n  >\n    <path\n      fillRule='evenodd'\n      d='M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z'\n      clipRule='evenodd'\n    />\n  </svg>\n)\n\nconst GoogleIcon = () => (\n  <svg\n    className='h-5 w-5'\n    aria-hidden='true'\n    fill='currentColor'\n    viewBox='0 0 24 24'\n  >\n    <path\n      xmlns='http://www.w3.org/2000/svg'\n      d='M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032 s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2 C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z'\n    />{' '}\n  </svg>\n)\n\nexport const SocialsButton: React.FC<SocialsButtonProps> = ({\n  provider,\n  label,\n}) => (\n  <Form action={`/auth/${provider}`} method='post'>\n    <button\n      disabled\n      className='inline-flex w-full cursor-not-allowed justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'\n    >\n      <span className='sr-only'>{label}</span>\n      {provider === SocialsProvider.FACEBOOK ? (\n        <FacebookIcon />\n      ) : (\n        <GoogleIcon />\n      )}\n    </button>\n  </Form>\n)\n\nexport default function Example() {\n  const loaderData = useLoaderData()\n  const transition = useTransition()\n\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-white\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className='flex min-h-full pt-16'>\n        <div className='flex flex-1 flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24'>\n          <div className='mx-auto w-full max-w-sm lg:w-96'>\n            <div>\n              <h2 className='mt-6 text-3xl font-extrabold text-gray-900'>\n                Sign in to your account\n              </h2>\n              <p className='mt-2 text-sm text-gray-600'>\n                Or{' '}\n                <Link\n                  to='/signup'\n                  className='font-medium text-red-600 hover:text-red-500'\n                >\n                  sign up for an account\n                </Link>\n              </p>\n            </div>\n\n            <div className='mt-8'>\n              <div>\n                <div>\n                  <p className='text-sm font-medium text-gray-700'>\n                    Sign in with (OAuth temporarily disabled)\n                  </p>\n\n                  <div className='mt-1 grid grid-cols-2 gap-3'>\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.FACEBOOK}\n                        label='Login with Facebook'\n                      />\n                    </div>\n\n                    <div>\n                      <SocialsButton\n                        provider={SocialsProvider.GOOGLE}\n                        label='Login with Google'\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='relative mt-6'>\n                  <div\n                    className='absolute inset-0 flex items-center'\n                    aria-hidden='true'\n                  >\n                    <div className='w-full border-t border-gray-300' />\n                  </div>\n                  <div className='relative flex justify-center text-sm'>\n                    <span className='bg-white px-2 text-gray-500'>\n                      Or continue with\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-6'>\n                <ValidatedForm\n                  validator={validator}\n                  method='post'\n                  className='space-y-6'\n                >\n                  <Input\n                    name='username'\n                    label='Username'\n                    type='username'\n                    autoComplete='username'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n                  <Input\n                    name='password'\n                    label='Password'\n                    type='password'\n                    autoComplete='current-password'\n                    className={`${\n                      loaderData?.error?.message && 'border-red-500'\n                    }`}\n                  />\n\n                  <div className='flex items-center justify-between space-x-8'>\n                    <div>\n                      {loaderData?.error?.message ? (\n                        <p className='text-sm font-medium text-red-600'>\n                          {loaderData?.error?.message}\n                        </p>\n                      ) : null}\n                    </div>\n\n                    {/* <div className='text-sm'>\n                      <a\n                        href='#'\n                        className='font-medium text-red-600 hover:text-red-500'\n                      >\n                        Forgot your password?\n                      </a>\n                    </div> */}\n                  </div>\n\n                  <div>\n                    <button\n                      disabled={transition.state === 'submitting'}\n                      type='submit'\n                      className={`${\n                        transition.submission && 'cursor-progress'\n                      } flex w-full justify-center rounded-md border border-transparent bg-red-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2`}\n                    >\n                      {transition.submission ? (\n                        <svg\n                          className='-ml-1 mr-3 h-5 w-5 animate-spin text-white'\n                          xmlns='http://www.w3.org/2000/svg'\n                          fill='none'\n                          viewBox='0 0 24 24'\n                        >\n                          <circle\n                            className='opacity-25'\n                            cx='12'\n                            cy='12'\n                            r='10'\n                            stroke='currentColor'\n                            strokeWidth='4'\n                          ></circle>\n                          <path\n                            className='opacity-75'\n                            fill='currentColor'\n                            d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                          ></path>\n                        </svg>\n                      ) : (\n                        'Sign in'\n                      )}\n                    </button>\n                  </div>\n                </ValidatedForm>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='relative hidden w-0 flex-1 lg:block'>\n          <img\n            className='absolute inset-0 h-full w-full object-cover'\n            src='/images/hero-fresh-meat2.jpg'\n            alt='fresh chicken pork meat and beef'\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n", "export {}", "/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n      require('@tailwindcss/aspect-ratio'),\n    ],\n  }\n  ```\n*/\nimport { Fragment, useState } from 'react'\nimport { Dialog, Popover, Tab, Transition } from '@headlessui/react'\nimport {\n  MenuIcon,\n  SearchIcon,\n  ShoppingCartIcon,\n  UserIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { Brand, Category, Product } from './products'\nimport { Link, LoaderFunction, useLoaderData } from 'remix'\nimport { db } from '~/utils/db.server'\n\nconst navigation = {\n  categories: [\n    {\n      name: 'Pork',\n      featured: [\n        { name: 'Sleep', href: '#' },\n        { name: 'Swimwear', href: '#' },\n        { name: 'Underwear', href: '#' },\n      ],\n      collection: [\n        { name: 'Everything', href: '#' },\n        { name: 'Core', href: '#' },\n        { name: 'New Arrivals', href: '#' },\n        { name: 'Sale', href: '#' },\n      ],\n      brands: [\n        { name: 'Full Nelson', href: '#' },\n        { name: 'My Way', href: '#' },\n        { name: 'Re-Arranged', href: '#' },\n        { name: 'Counterfeit', href: '#' },\n        { name: 'Significant Other', href: '#' },\n      ],\n    },\n    {\n      name: 'Chicken',\n      featured: [\n        { name: 'Casual', href: '#' },\n        { name: 'Boxers', href: '#' },\n        { name: 'Outdoor', href: '#' },\n      ],\n      collection: [\n        { name: 'Everything', href: '#' },\n        { name: 'Core', href: '#' },\n        { name: 'New Arrivals', href: '#' },\n        { name: 'Sale', href: '#' },\n      ],\n      categories: [\n        { name: 'Artwork Tees', href: '#' },\n        { name: 'Pants', href: '#' },\n        { name: 'Accessories', href: '#' },\n        { name: 'Boxers', href: '#' },\n        { name: 'Basic Tees', href: '#' },\n      ],\n      brands: [\n        { name: 'Significant Other', href: '#' },\n        { name: 'My Way', href: '#' },\n        { name: 'Counterfeit', href: '#' },\n        { name: 'Re-Arranged', href: '#' },\n        { name: 'Full Nelson', href: '#' },\n      ],\n    },\n  ],\n  pages: [{ name: 'Beef', href: '#' }],\n}\n\nconst categories = [\n  {\n    name: 'Chicken',\n    imageUrl: '/images/category-chicken2.jpg',\n    imageAlt: 'category-chicken',\n    href: '/chicken',\n  },\n  {\n    name: 'Pork',\n    imageUrl: '/images/category-pork2.jpg',\n    imageAlt: 'category-pork',\n    href: '/pork',\n  },\n  {\n    name: 'Beef',\n    imageUrl: '/images/category-beef2.jpg',\n    imageAlt: 'category-beef',\n    href: '/beef',\n  },\n]\nconst testimonials = [\n  {\n    id: 1,\n    quote:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.',\n    attribution: 'Sherrilyn Reyes, Camella Lessandra',\n  },\n  {\n    id: 2,\n    quote:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.',\n    attribution: 'Jason Orqueza, Parklane Country Homes',\n  },\n  {\n    id: 3,\n    quote:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.',\n    attribution: 'Evan Angelo Monreal, Lumina Homes',\n  },\n]\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const products = await db.product.findMany({\n    take: 4,\n  })\n  return products\n}\n\nexport default function IndexPage() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\n  const products = useLoaderData()\n  return (\n    <div className='bg-white'>\n      <main>\n        {/* Hero */}\n        <div className='flex flex-col border-b border-gray-200 lg:border-0'>\n          <div className='relative'>\n            <div\n              aria-hidden='true'\n              className='absolute hidden h-full w-1/2 bg-gray-50 lg:block'\n            />\n            <div className='relative bg-gray-50 lg:bg-transparent'>\n              <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:grid lg:grid-cols-2 lg:px-8'>\n                <div className='mx-auto max-w-2xl py-24 md:pt-40 lg:max-w-none lg:py-64'>\n                  <div className='lg:pr-16'>\n                    <h1 className='text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl lg:text-6xl'>\n                      Affordable meat at your fingertips\n                    </h1>\n                    <p className='mt-4 text-xl text-gray-600'>\n                      Choose from our wide selection of freshly prepared meats\n                      straight to your door.\n                    </p>\n                    <div className='mt-6'>\n                      <Link\n                        to='/products'\n                        className='inline-block rounded-md border border-transparent bg-red-600 py-3 px-8 font-medium text-white hover:bg-red-700 '\n                      >\n                        Start shopping\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='flex h-48 w-full justify-center sm:h-80 lg:absolute lg:top-0 lg:right-0 lg:h-full lg:w-1/2'>\n              <img\n                src={'images/hero-fresh-meat.jpg'}\n                alt='hero-fresh-meat'\n                className='h-full w-full object-cover object-center'\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Bestsellers */}\n        <section aria-labelledby='trending-heading' className='bg-white'>\n          <div className='py-16 sm:py-24 lg:mx-auto lg:max-w-7xl lg:py-32 lg:px-8'>\n            <div className='flex items-center justify-between px-4 sm:px-6 lg:px-0'>\n              <h2\n                id='trending-heading'\n                className='text-3xl font-extrabold tracking-tight text-gray-900'\n              >\n                Bestsellers\n              </h2>\n              <Link\n                to='/products'\n                className='hidden text-sm font-semibold text-red-600 hover:text-red-500 sm:block'\n              >\n                See all products<span aria-hidden='true'> &rarr;</span>\n              </Link>\n            </div>\n\n            <div className='relative mt-8'>\n              <div className='relative w-full overflow-x-auto'>\n                <ul\n                  role='list'\n                  className='mx-4 inline-flex space-x-8 sm:mx-6 lg:mx-0 lg:grid lg:grid-cols-4 lg:gap-x-8 lg:space-x-0'\n                >\n                  {products.map((product: Product) => (\n                    <li\n                      key={product.id}\n                      className='inline-flex w-64 flex-col text-center lg:w-auto '\n                    >\n                      <div className='group relative'>\n                        <div className='aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-md bg-gray-200'>\n                          <img\n                            src={product.imageUrl}\n                            className='h-full w-full object-cover object-center group-hover:opacity-75'\n                          />\n                        </div>\n                        <div className='mt-6'>\n                          <h3 className='mt-1 font-semibold text-gray-900 hover:text-red-600'>\n                            <Link to={`/products/${product.id}`}>\n                              <span className='absolute inset-0 ' />\n                              {product.name}\n                            </Link>\n                          </h3>\n                          <p className='mt-1 text-red-500 hover:text-red-400'>\n                            \u20B1{product.price}\n                          </p>\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n\n            <div className='mt-12 px-4 sm:hidden'>\n              <Link\n                to='#'\n                className='text-sm font-semibold text-red-600 hover:text-red-500'\n              >\n                See all products<span aria-hidden='true'> &rarr;</span>\n              </Link>\n            </div>\n          </div>\n        </section>\n\n        {/* Categories */}\n        <section aria-labelledby='categories-heading' className='bg-gray-50'>\n          <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>\n            <div className='mx-auto max-w-2xl py-16 sm:py-24 lg:max-w-none lg:py-32'>\n              <h2\n                id='categories-heading'\n                className='text-3xl font-extrabold text-gray-900'\n              >\n                Categories\n              </h2>\n\n              <div className='mt-6 space-y-12 lg:grid lg:grid-cols-3 lg:gap-x-6 lg:space-y-0'>\n                {categories.map((category) => (\n                  <div key={category.name} className='group relative'>\n                    <div className='sm:aspect-w-2 sm:aspect-h-1 lg:aspect-w-1 lg:aspect-h-1 relative h-80 w-full overflow-hidden rounded-lg bg-white group-hover:opacity-75 sm:h-64'>\n                      <img\n                        src={category.imageUrl}\n                        alt={category.imageAlt}\n                        className='h-full w-full object-cover object-center'\n                      />\n                    </div>\n                    <h3 className='mt-6 text-lg font-semibold text-gray-900 hover:text-red-600'>\n                      <Link to={category.href}>\n                        <span className='absolute inset-0' />\n                        {category.name}\n                      </Link>\n                    </h3>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Sale and testimonials */}\n        <div className='relative overflow-hidden'>\n          {/* Decorative background image and gradient */}\n          <div aria-hidden='true' className='absolute inset-0'>\n            <div className='absolute inset-0 mx-auto max-w-full overflow-hidden'>\n              <img\n                src='images/sale-delivery.jpeg'\n                alt=''\n                className='h-full w-full object-cover object-center'\n              />\n            </div>\n            <div className='absolute inset-0 bg-white bg-opacity-60' />\n            <div className='absolute inset-0 bg-gradient-to-t from-white via-white' />\n          </div>\n\n          {/* Sale */}\n          <section\n            aria-labelledby='sale-heading'\n            className='relative mx-auto flex max-w-7xl flex-col items-center px-4 pt-32 text-center sm:px-6 lg:px-32'\n          >\n            <div className='mx-auto max-w-2xl lg:max-w-none'>\n              <h2\n                id='sale-heading'\n                className='text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl lg:text-6xl'\n              >\n                Free delivery for orders worth{' '}\n                <span className='text-red-600'>\u20B1500</span> and above*\n              </h2>\n              <p className='mx-auto mt-4 max-w-xl text-xl text-gray-600'>\n                *within the 3.3 km radius of Parklane Country Homes\n              </p>\n              <Link\n                to='/products'\n                className='hover:pointer mt-6 inline-block w-full rounded-md border border-transparent bg-red-600 py-3 px-8 font-medium text-white hover:bg-red-700 sm:w-auto'\n              >\n                Start shopping\n              </Link>\n            </div>\n          </section>\n\n          {/* Testimonials */}\n          <section\n            aria-labelledby='testimonial-heading'\n            className='relative mx-auto max-w-7xl py-24 px-4 sm:px-6 lg:py-32 lg:px-8'\n          >\n            <div className='mx-auto max-w-2xl lg:max-w-none'>\n              <h2\n                id='testimonial-heading'\n                className='mt-2 text-3xl font-extrabold tracking-tight text-gray-900'\n              >\n                What are people saying?\n              </h2>\n\n              <div className='mt-16 space-y-16 lg:grid lg:grid-cols-3 lg:gap-x-8 lg:space-y-0'>\n                {testimonials.map((testimonial) => (\n                  <blockquote key={testimonial.id} className='sm:flex lg:block'>\n                    <svg\n                      width={24}\n                      height={18}\n                      viewBox='0 0 24 18'\n                      xmlns='http://www.w3.org/2000/svg'\n                      aria-hidden='true'\n                      className='flex-shrink-0 text-red-600'\n                    >\n                      <path\n                        d='M0 18h8.7v-5.555c-.024-3.906 1.113-6.841 2.892-9.68L6.452 0C3.188 2.644-.026 7.86 0 12.469V18zm12.408 0h8.7v-5.555C21.083 8.539 22.22 5.604 24 2.765L18.859 0c-3.263 2.644-6.476 7.86-6.451 12.469V18z'\n                        fill='currentColor'\n                      />\n                    </svg>\n                    <div className='mt-8 sm:mt-0 sm:ml-6 lg:mt-10 lg:ml-0'>\n                      <p className='text-lg text-gray-600'>\n                        {testimonial.quote}\n                      </p>\n                      <cite className='mt-4 block font-semibold not-italic text-gray-900'>\n                        {testimonial.attribution}\n                      </cite>\n                    </div>\n                  </blockquote>\n                ))}\n              </div>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  )\n}\n", "import { ArrowSmUpIcon } from '@heroicons/react/outline'\nimport { ArrowSmDownIcon } from '@heroicons/react/solid'\nimport { OrderData } from './manage-orders'\nimport { LoaderFunction } from '@remix-run/node'\nimport { db } from '~/utils/db.server'\nimport { Status } from '@prisma/client'\nimport { useLoaderData, useSearchParams, Link } from '@remix-run/react'\nimport { useNavigate } from 'react-router'\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts'\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n\ntype LoaderData = {\n  orders: OrderData[]\n  ordersCount: number\n  currentMonthGross: number\n  previousMonthGross: number\n  currentMonthCount: number\n  previousMonthCount: number\n  currentCompletionRate: number\n  previousCompletionRate: number\n}\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const page = parseInt(url?.searchParams?.get('page') || '0')\n  const orders = await db.order.findMany({\n    skip: page * 10,\n    take: 10,\n    where: {\n      paidAt: {\n        not: null,\n      },\n      status: Status.COMPLETED,\n    },\n    include: {\n      Address: true,\n      orderItems: {\n        include: {\n          product: true,\n        },\n      },\n    },\n    orderBy: {\n      updatedAt: 'desc',\n    },\n  })\n\n  const ordersCount = await db.order.count({\n    where: {\n      paidAt: {\n        not: null,\n      },\n      status: Status.COMPLETED,\n    },\n  })\n\n  const nonCompletedCurrentOrders = await db.order.findMany({\n    where: {\n      createdAt: {\n        lte: new Date('2022-06-30'),\n        gte: new Date('2022-06-01'),\n      },\n      status: {\n        not: Status.COMPLETED,\n      },\n    },\n  })\n\n  const completedCurrentOrders = await db.order.findMany({\n    where: {\n      createdAt: {\n        lte: new Date('2022-06-30'),\n        gte: new Date('2022-06-01'),\n      },\n      status: Status.COMPLETED,\n    },\n  })\n\n  const nonCompletedPreviousOrders = await db.order.findMany({\n    where: {\n      createdAt: {\n        lte: new Date('2022-05-30'),\n        gte: new Date('2022-05-01'),\n      },\n      status: {\n        not: Status.COMPLETED,\n      },\n    },\n  })\n\n  const completedPreviousOrders = await db.order.findMany({\n    where: {\n      createdAt: {\n        lte: new Date('2022-05-30'),\n        gte: new Date('2022-05-01'),\n      },\n      status: Status.COMPLETED,\n    },\n  })\n  const currentMonthOrders = await db.order.findMany({\n    where: {\n      paidAt: {\n        lte: new Date('2022-06-30'),\n        gte: new Date('2022-06-01'),\n      },\n      status: Status.COMPLETED,\n    },\n  })\n\n  const previousMonthOrders = await db.order.findMany({\n    where: {\n      paidAt: {\n        lte: new Date('2022-05-30'),\n        gte: new Date('2022-05-01'),\n      },\n      status: Status.COMPLETED,\n    },\n  })\n\n  const currentMonthGross = currentMonthOrders.reduce(\n    (sum, order) => sum + order.amount,\n    0\n  )\n\n  const previousMonthGross = previousMonthOrders.reduce(\n    (sum, order) => sum + order.amount,\n    0\n  )\n  const currentMonthCount = currentMonthOrders.length\n  const previousMonthCount = previousMonthOrders.length\n  console.log(\n    `nonCompletedCurrentOrders.length: ${JSON.stringify(\n      nonCompletedCurrentOrders.length,\n      null,\n      2\n    )}`\n  )\n  const currentCompletionRate = (\n    (completedCurrentOrders.length /\n      (nonCompletedCurrentOrders.length + completedCurrentOrders.length)) *\n    100\n  ).toFixed(2)\n  const previousCompletionRate = (\n    (completedPreviousOrders.length /\n      (nonCompletedPreviousOrders.length + completedPreviousOrders.length)) *\n    100\n  ).toFixed(2)\n  return {\n    orders,\n    ordersCount,\n    currentMonthGross,\n    previousMonthGross,\n    currentMonthCount,\n    previousMonthCount,\n    currentCompletionRate,\n    previousCompletionRate,\n  }\n}\n\nexport default function Example() {\n  const {\n    orders,\n    ordersCount,\n    currentMonthGross,\n    previousMonthGross,\n    currentMonthCount,\n    previousMonthCount,\n    currentCompletionRate,\n    previousCompletionRate,\n  } = useLoaderData<LoaderData>()\n\n  const navigate = useNavigate()\n\n  const [searchParams] = useSearchParams()\n  const page = parseInt(searchParams.get('page') || '0')\n\n  const cards = [\n    {\n      name: 'Total Gross Sales',\n      stat: currentMonthGross,\n      previousStat: previousMonthGross,\n      change: ((currentMonthGross / previousMonthGross) * 100).toFixed(2),\n      changeType:\n        (currentMonthGross / previousMonthGross) * 100 > 0\n          ? 'increase'\n          : 'decrease',\n    },\n    {\n      name: 'Monthly Completed Order Count',\n      stat: currentMonthCount,\n      previousStat: previousMonthCount,\n      change: ((currentMonthCount / previousMonthCount) * 100).toFixed(2),\n      changeType:\n        (currentMonthCount / previousMonthCount) * 100 > 0\n          ? 'increase'\n          : 'decrease',\n    },\n    {\n      name: 'Monthly Order Completion Rate',\n      stat: `${currentCompletionRate}%`,\n      previousStat: `${previousCompletionRate}%`,\n      change: (currentCompletionRate - previousCompletionRate).toFixed(2),\n      changeType:\n        currentCompletionRate - previousCompletionRate > 0\n          ? 'increase'\n          : 'decrease',\n    },\n  ]\n\n  const graphData = [\n    {\n      name: 'Jan',\n      sales: 5000,\n    },\n    {\n      name: 'Feb',\n      sales: 6000,\n    },\n    {\n      name: 'Mar',\n      sales: 4000,\n    },\n    {\n      name: 'Apr',\n      sales: 3000,\n    },\n    {\n      name: 'May',\n      sales: previousMonthGross,\n    },\n    {\n      name: 'Jun',\n      sales: currentMonthGross,\n    },\n  ]\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-gray-100\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=' bg-white px-4 py-5 pt-24 sm:px-6'>\n        <h3 className='text-3xl font-extrabold leading-6 text-gray-900'>\n          Sales Dashboard\n        </h3>\n        <p className='mt-3 text-sm text-gray-500'>\n          Analyze sales from completed orders.\n        </p>\n      </div>\n      <div className='min-h-full'>\n        <main className='flex-1 pb-8'>\n          <div className=''>\n            <div className='px-4 sm:px-6 lg:px-8'>\n              <h2 className='text-xl font-bold leading-6 text-gray-900'>\n                Overview\n              </h2>\n              <div className='mt-4 flex justify-between'>\n                <div className='h-64 w-full'>\n                  <ResponsiveContainer width='100%' height='100%'>\n                    <LineChart\n                      data={graphData}\n                      margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray='3 3' />\n                      <XAxis dataKey='name' />\n                      <YAxis />\n                      <Tooltip />\n                      <Legend />\n                      <Line\n                        type='monotone'\n                        dataKey='sales'\n                        stroke='#ef4444'\n                        activeDot={{ r: 8 }}\n                        strokeWidth={2}\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n\n              <h2 className='my-8 text-xl font-bold leading-6 text-gray-900 '>\n                Current month statistics\n              </h2>\n              <div className='mt-5 grid grid-cols-1 divide-y divide-gray-200 overflow-hidden rounded-lg bg-white shadow md:grid-cols-3 md:divide-y-0 md:divide-x'>\n                {/* Card */}\n                {cards.map((card) => (\n                  <div key={card.name} className=' px-4 py-5 sm:p-6'>\n                    <dt className='text-base font-normal text-gray-900'>\n                      {card.name}\n                    </dt>\n                    <dd className='mt-1 flex items-baseline justify-between md:block lg:flex'>\n                      <div className='flex items-baseline text-2xl font-semibold text-gray-900'>\n                        {card.stat}\n                        <span className='ml-2 text-sm font-medium text-gray-500'>\n                          from {card.previousStat}\n                        </span>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          card.changeType === 'increase'\n                            ? 'bg-green-100 text-green-800'\n                            : 'bg-red-100 text-red-800',\n                          'inline-flex items-baseline rounded-full px-2.5 py-0.5 text-sm font-medium md:mt-2 lg:mt-0'\n                        )}\n                      >\n                        {card.changeType === 'increase' ? (\n                          <ArrowSmUpIcon\n                            className='-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-green-500'\n                            aria-hidden='true'\n                          />\n                        ) : (\n                          <ArrowSmDownIcon\n                            className='-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-red-500'\n                            aria-hidden='true'\n                          />\n                        )}\n                        <span className='sr-only'>\n                          {card.changeType === 'increase'\n                            ? 'Increased'\n                            : 'Decreased'}{' '}\n                          by\n                        </span>\n                        {card.change}%\n                      </div>\n                    </dd>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <h2 className='my-8 px-4 text-xl font-bold leading-6 text-gray-900 sm:px-6 lg:px-8'>\n              Completed orders\n            </h2>\n\n            {/* Activity table (small breakpoint and up) */}\n            <div className='flex flex-col px-4'>\n              <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n                <div className='inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8'>\n                  <div className='overflow-hidden border-b border-gray-200 shadow sm:rounded-lg'>\n                    <table className='min-w-full divide-y divide-gray-200'>\n                      <thead className='bg-gray-50'>\n                        <tr>\n                          <th\n                            scope='col'\n                            className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                          >\n                            Order Id\n                          </th>\n                          <th\n                            scope='col'\n                            className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                          >\n                            Customer\n                          </th>\n                          <th\n                            scope='col'\n                            className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                          >\n                            Address\n                          </th>\n                          <th\n                            scope='col'\n                            className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                          >\n                            Order Items\n                          </th>\n                          <th\n                            scope='col'\n                            className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                          >\n                            Status\n                          </th>\n                          <th\n                            scope='col'\n                            className='px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500'\n                          >\n                            Date\n                          </th>\n                          <th scope='col' className='relative px-6 py-3'>\n                            <span className='sr-only'>Action</span>\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className='divide-y divide-gray-200 bg-white'>\n                        {orders.map((order) => {\n                          return (\n                            <tr\n                              className='hover:cursor-pointer hover:bg-red-50'\n                              key={order.id}\n                              onClick={() => {\n                                navigate(`/manage-orders/${order.id}`)\n                              }}\n                            >\n                              <td className='whitespace-nowrap px-6 py-4'>\n                                <div className='flex '>\n                                  <div className='text-sm font-medium text-gray-900'>\n                                    {order.id}\n                                  </div>\n                                </div>\n                              </td>\n                              <td className='whitespace-nowrap px-6 py-4'>\n                                <div className='flex items-center'>\n                                  <div className=''>\n                                    <div className='text-sm font-medium text-gray-900'>\n                                      {order?.User?.name || 'GUEST'}\n                                    </div>\n                                    <div className='text-sm text-gray-500'>\n                                      {order?.User?.email || ''}\n                                    </div>\n                                    <div className='text-sm text-gray-500'>\n                                      {order?.User?.username || ''}\n                                    </div>\n                                  </div>\n                                </div>\n                              </td>\n                              <td className='whitespace-nowrap px-6 py-4'>\n                                <div className='flex items-center '>\n                                  <div className=''>\n                                    <div className='text-sm font-medium text-gray-900'>\n                                      {order?.Address?.address || 'No address'}\n                                    </div>\n                                    <div className='text-sm text-gray-500'>\n                                      {order?.Address?.city || ''}\n                                    </div>\n                                    <div className='text-sm text-gray-500'>\n                                      {order?.Address?.province || ''}\n                                    </div>\n                                    <div className='text-sm text-gray-500'>\n                                      {order?.Address?.contactPerson || ''}\n                                    </div>\n                                    <div className='text-sm text-gray-500'>\n                                      {order?.Address?.phoneNumber || ''}\n                                    </div>\n                                  </div>\n                                </div>\n                              </td>\n                              <td className='whitespace-nowrap px-6 py-4'>\n                                {order?.orderItems?.map((orderItem) => {\n                                  return (\n                                    <div\n                                      key={orderItem.id}\n                                      className='text-sm font-medium text-gray-900'\n                                    >\n                                      {orderItem.quantity || ''}x{' '}\n                                      {orderItem.product.name}\n                                    </div>\n                                  )\n                                })}\n                              </td>\n                              <td className='whitespace-nowrap px-6 py-4 font-medium text-gray-900'>\n                                {order.status.replace(/_/g, ' ')}\n                              </td>\n                              <td className='whitespace-nowrap px-6 py-4 font-medium text-gray-900'>\n                                {new Date(\n                                  order?.paidAt || ''\n                                ).toLocaleDateString()}\n                              </td>\n                              <td className='whitespace-nowrap px-6 py-4 text-right text-sm font-medium'>\n                                <a\n                                  href='#'\n                                  className='text-red-500 hover:text-red-600'\n                                >\n                                  Edit\n                                </a>\n                              </td>\n                            </tr>\n                          )\n                        })}\n                      </tbody>\n                    </table>\n                    <nav\n                      className='flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6'\n                      aria-label='Pagination'\n                    >\n                      <div className='hidden sm:block'>\n                        <p className='text-sm text-gray-700'>\n                          Showing{' '}\n                          <span className='font-medium'>\n                            {(page + 1) * 10 - 9}\n                          </span>{' '}\n                          to{' '}\n                          <span className='font-medium'>\n                            {(page + 1) * 10 > ordersCount\n                              ? ordersCount\n                              : (page + 1) * 10}\n                          </span>{' '}\n                          of <span className='font-medium'>{ordersCount}</span>{' '}\n                          results\n                        </p>\n                      </div>\n                      <div className='flex flex-1 justify-between sm:justify-end'>\n                        <Link\n                          to={`?page=${page - 1}`}\n                          className={\n                            page < 1\n                              ? `hidden`\n                              : `relative inline-flex  items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                          }\n                        >\n                          Previous\n                        </Link>\n                        <Link\n                          to={`?page=${page + 1}`}\n                          className={\n                            page + 1 >= ordersCount / 10\n                              ? 'hidden'\n                              : `relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50`\n                          }\n                        >\n                          Next\n                        </Link>\n                      </div>\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </>\n  )\n}\n", "import { ProductsPage } from '~/components/ProductsPage'\nimport { db } from '~/utils/db.server'\nimport { Category, Product } from './products'\nimport { useLoaderData } from '@remix-run/react'\nimport { LoaderFunction, ActionFunction, redirect } from '@remix-run/node'\nimport { authenticator } from '~/services/auth.server'\nimport { validationError } from 'remix-validated-form'\nimport { OrderItem, Role, Status } from '@prisma/client'\nimport { commitSession, getSession } from '~/services/guest.server'\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const products = await db.product.findMany({\n    where: {\n      category: 'BEEF',\n    },\n  })\n  return products\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return null\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: true,\n      },\n    })\n\n    if (currentOrder) {\n      const existingProduct = currentOrder.orderItems.find(\n        (p) => p.productId === product.id\n      )\n      if (existingProduct) {\n        await db.orderItem.update({\n          where: {\n            id: existingProduct.id,\n          },\n          data: {\n            quantity: {\n              increment: 1,\n            },\n          },\n        })\n      } else {\n        await db.orderItem.create({\n          data: {\n            productId: product.id,\n            quantity: 1,\n            orderId: currentOrder.id,\n          },\n        })\n      }\n      const updatedOrder = await db.order.update({\n        where: { id: currentOrder.id },\n        data: {\n          amount: { increment: product.price },\n        },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    } else {\n      const order = await db.order.create({\n        data: {\n          amount: product.price,\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n\n      await db.orderItem.create({\n        data: {\n          orderId: order.id,\n          productId: product.id,\n          quantity: 1,\n        },\n      })\n\n      const updatedOrder = await db.order.findFirst({\n        where: { id: order.id },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    }\n  } else {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    const existingProduct = orderItems.find(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    const existingProductIndex = orderItems.findIndex(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    if (existingProduct) {\n      orderItems[existingProductIndex] = {\n        productId: product.id,\n        quantity: existingProduct.quantity + 1,\n      }\n    } else {\n      orderItems.push({\n        productId: product.id,\n        quantity: 1,\n      })\n    }\n    session.set('orderItems', orderItems)\n    return redirect('/beef', {\n      headers: {\n        'Set-Cookie': await commitSession(session),\n      },\n    })\n  }\n}\n\nexport default function BeefPage() {\n  const category = Category.BEEF\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nimport { CheckCircleIcon, QuestionMarkCircleIcon } from '@heroicons/react/solid'\nimport { OrderItem, Role, Status } from '@prisma/client'\nimport {\n  ActionFunction,\n  Link,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n} from 'remix'\nimport { validationError } from 'remix-validated-form'\nimport invariant from 'tiny-invariant'\nimport { Quantity } from '~/components/Quantity'\nimport { authenticator } from '~/services/auth.server'\nimport { commitSession, getSession } from '~/services/guest.server'\nimport { db } from '~/utils/db.server'\nimport { Product } from './products'\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const _method = formData.get('_method') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return null\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: true,\n      },\n    })\n    if (currentOrder) {\n      const existingProduct = currentOrder.orderItems.find(\n        (p) => p.productId === product.id\n      )\n      if (_method === 'ADD') {\n        if (existingProduct) {\n          await db.orderItem.update({\n            where: {\n              id: existingProduct.id,\n            },\n            data: {\n              quantity: {\n                increment: 1,\n              },\n            },\n          })\n        } else {\n          await db.orderItem.create({\n            data: {\n              productId: product.id,\n              quantity: 1,\n              orderId: currentOrder.id,\n            },\n          })\n        }\n        const updatedOrder = await db.order.update({\n          where: { id: currentOrder.id },\n          data: {\n            amount: { increment: product.price },\n          },\n          include: { orderItems: true },\n        })\n\n        return { order: updatedOrder }\n      } else {\n        const updatedOrderItem = await db.orderItem.update({\n          where: {\n            id: existingProduct?.id,\n          },\n          data: {\n            quantity: { decrement: 1 },\n          },\n        })\n\n        if (updatedOrderItem?.quantity === 0) {\n          await db.orderItem.delete({\n            where: {\n              id: existingProduct?.id,\n            },\n          })\n        }\n\n        const updatedOrder = await db.order.update({\n          where: { id: currentOrder.id },\n          data: {\n            amount: { decrement: product.price },\n          },\n          include: { orderItems: true },\n        })\n\n        if (updatedOrder.orderItems.length === 0) {\n          await db.order.delete({\n            where: {\n              id: currentOrder?.id,\n            },\n          })\n        } else {\n          return updatedOrder\n        }\n      }\n    }\n  } else {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    const existingProduct = orderItems.find(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    const existingProductIndex = orderItems.findIndex(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n\n    if (existingProduct) {\n      orderItems[existingProductIndex] = {\n        ...existingProduct,\n        quantity:\n          _method === 'ADD'\n            ? existingProduct.quantity + 1\n            : existingProduct.quantity - 1,\n      }\n\n      if (orderItems[existingProductIndex].quantity === 0) {\n        orderItems.splice(existingProductIndex, 1)\n      }\n    }\n    session.set('orderItems', orderItems)\n    return redirect('/cart', {\n      headers: {\n        'Set-Cookie': await commitSession(session),\n      },\n    })\n  }\n  return null\n}\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    redirect('/unauthorized')\n  }\n\n  if (user?.id) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: {\n          include: {\n            product: true,\n          },\n        },\n      },\n    })\n\n    return { currentOrder }\n  } else {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    let amount = 0\n\n    const productIds = [\n      ...new Set(orderItems.map((o: any) => o?.productId || '')),\n    ] as string[]\n\n    const products = await db.product.findMany({\n      where: { id: { in: productIds || [] } },\n    })\n    orderItems.forEach(async (orderItem: any) => {\n      orderItem.product = products.find((p) => p.id === orderItem.productId)\n      amount = amount + orderItem.product.price * orderItem.quantity\n    })\n\n    return { currentOrder: { orderItems: orderItems, amount } }\n  }\n}\n\nexport default function CartPage() {\n  const { currentOrder } = useLoaderData()\n  return (\n    <div className='bg-white'>\n      <div className='mx-auto max-w-2xl px-4 pt-24 pb-24 sm:px-6 lg:max-w-7xl lg:px-8'>\n        <h1 className='text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl'>\n          Shopping Cart\n        </h1>\n        <div className='mt-12 lg:grid lg:grid-cols-12 lg:items-start lg:gap-x-12 xl:gap-x-16'>\n          <section aria-labelledby='cart-heading' className='lg:col-span-7'>\n            <h2 id='cart-heading' className='sr-only'>\n              Items in your shopping cart\n            </h2>\n\n            <ul\n              role='list'\n              className='divide-y divide-gray-200 border-t border-b border-gray-200'\n            >\n              {currentOrder?.orderItems?.map((orderItem: any) => {\n                const product = orderItem.product\n                return (\n                  <li\n                    key={product.id}\n                    className='flex pt-6 pb-3 sm:pt-10 sm:pb-5'\n                  >\n                    <div className='flex-shrink-0'>\n                      <img\n                        src={product.imageUrl}\n                        className='h-24 w-24 rounded-md object-cover object-center sm:h-48 sm:w-48'\n                      />\n                    </div>\n\n                    <div className='justify-betweensm:ml-6 ml-4 flex flex-1 flex-col'>\n                      <div className='relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0'>\n                        <div>\n                          <div className='flex justify-between'>\n                            <h3 className='text-lg sm:text-xl'>\n                              <a\n                                href={`products/${product.id}`}\n                                className='font-medium text-gray-900 hover:text-red-500'\n                              >\n                                {product.name}\n                              </a>\n                            </h3>\n                          </div>\n\n                          <p className='mt-1 text-base font-medium text-red-500 sm:text-lg'>\n                            \u20B1{product.price}\n                          </p>\n                          <div className='mt-4'>\n                            <Quantity\n                              quantity={orderItem.quantity}\n                              productId={product.id?.toString()}\n                            />\n                          </div>\n                        </div>\n\n                        <div className='mt-4 sm:mt-0 sm:pr-9'>\n                          <div className='absolute top-0 right-0'>\n                            <button\n                              type='button'\n                              className='-m-2 inline-flex p-2 pt-2.5 text-gray-400 hover:text-red-500'\n                            >\n                              <span className='sr-only'>Remove</span>\n                              {/* <TrashIcon\n                                className='h-5 w-5'\n                                aria-hidden='true'\n                              /> */}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n            {!currentOrder?.orderItems && (\n              <h2 className='mt-2 text-xl font-semibold'>Your cart is empty</h2>\n            )}\n          </section>\n\n          {/* Order summary */}\n          <section\n            aria-labelledby='summary-heading'\n            className='mt-16 rounded-lg bg-gray-50 px-4 py-6 sm:p-6 lg:col-span-5 lg:mt-0 lg:p-8'\n          >\n            <h2\n              id='summary-heading'\n              className='text-lg font-medium text-gray-900'\n            >\n              Order summary\n            </h2>\n\n            <dl className='mt-6 space-y-4'>\n              <div className='flex items-center justify-between'>\n                <dt className='text-sm text-gray-600'>Subtotal</dt>\n                <dd className='text-sm font-medium text-gray-900'>\n                  \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                </dd>\n              </div>\n              <div className='flex items-center justify-between border-t border-gray-200 pt-4'>\n                <dt className='flex items-center text-sm text-gray-600'>\n                  <span>Delivery fee</span>\n                  <a\n                    href='#'\n                    className='ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500'\n                  >\n                    {currentOrder?.amount ? (\n                      <>\n                        <span className='sr-only'>Delivery fee</span>\n                        <QuestionMarkCircleIcon\n                          className='h-5 w-5'\n                          aria-hidden='true'\n                        />\n                      </>\n                    ) : null}\n                  </a>\n                </dt>\n                <dd className='text-right text-sm font-medium text-gray-900 '>\n                  {currentOrder?.amount ? (\n                    <>\n                      <p className='line-through'>\u20B150</p>\n                    </>\n                  ) : (\n                    <>\n                      <p>\u20B10</p>\n                    </>\n                  )}\n                </dd>\n              </div>\n              {currentOrder?.amount && (\n                <div className='flex justify-end space-x-2'>\n                  <p className='text-right text-sm font-medium text-gray-900'>\n                    Free delivery promo applied\n                  </p>\n                  <CheckCircleIcon className='w-5 text-green-500' />\n                </div>\n              )}\n\n              <div className='flex items-center justify-between border-t border-gray-200 pt-4'>\n                <dt className='text-base font-medium text-gray-900'>\n                  Total amount\n                </dt>\n                <dd className='text-base font-medium text-red-500'>\n                  \u20B1{currentOrder?.amount ? currentOrder?.amount : 0}\n                </dd>\n              </div>\n            </dl>\n\n            <div className='mt-6'>\n              {currentOrder?.orderItems?.length ? (\n                <Link to='/checkout'>\n                  <button className='w-full rounded-md border border-transparent bg-red-500 py-3 px-4 text-base font-medium text-white shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-50'>\n                    Checkout\n                  </button>\n                </Link>\n              ) : (\n                <button\n                  disabled\n                  className='w-full rounded-md border border-transparent bg-red-200 py-3 px-4 text-base font-medium text-white shadow-sm hover:cursor-not-allowed hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-red-100 focus:ring-offset-2 focus:ring-offset-gray-50'\n                >\n                  Checkout\n                </button>\n              )}\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "import { MinusSmIcon, PlusSmIcon } from '@heroicons/react/solid'\nimport { Form } from 'remix'\n\ninterface Props {\n  quantity: number\n  productId: string\n}\nexport function Quantity({ quantity, productId }: Props) {\n  return (\n    <div className='relative inline-flex rounded-md shadow-sm'>\n      <Form method='post' id='minus'>\n        <input type='hidden' name='_method' value='MINUS' />\n        <input type='hidden' name='productId' value={productId} />\n        <button\n          type='submit'\n          className='relative inline-flex items-center rounded-l-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500'\n        >\n          <span className='sr-only'>Minus</span>\n          <MinusSmIcon className='h-5 w-5' aria-hidden='true' />\n        </button>\n      </Form>\n\n      <label htmlFor='quantity' className='sr-only'>\n        Quantity\n      </label>\n      <input\n        disabled\n        name='quantity'\n        id='quantity'\n        className='flex w-16 border border-gray-300  px-2  text-center shadow-sm disabled:bg-white  sm:text-sm'\n        value={quantity}\n      />\n\n      <Form method='post' id='add'>\n        <input type='hidden' name='_method' value='ADD' />\n        <input type='hidden' name='productId' value={productId} />\n        <button\n          type='submit'\n          className='relative -ml-px inline-flex items-center rounded-r-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500'\n        >\n          <span className='sr-only'>Add</span>\n          <PlusSmIcon className='h-5 w-5' aria-hidden='true' />\n        </button>\n      </Form>\n    </div>\n  )\n}\n", "import { Category, OrderItem, Role, Status } from '@prisma/client'\nimport { LoaderFunction } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { ProductsPage } from '~/components/ProductsPage'\nimport { db } from '~/utils/db.server'\nimport { Product } from './products'\n\nimport { ActionFunction, redirect } from '@remix-run/node'\nimport { authenticator } from '~/services/auth.server'\nimport { validationError } from 'remix-validated-form'\nimport { commitSession, getSession } from '~/services/guest.server'\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const products = await db.product.findMany({\n    where: {\n      category: 'PORK',\n    },\n  })\n  return products\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request)\n\n  if (user?.role === Role.RIDER || user?.role === Role.ADMIN) {\n    return redirect('/unauthorized')\n  }\n\n  const formData = await request.formData()\n  const productId = formData.get('productId') as string\n  const product = await db.product.findFirst({\n    where: {\n      id: productId,\n    },\n  })\n\n  if (!product) {\n    return null\n  }\n\n  if (user?.role === Role.CUSTOMER) {\n    const currentOrder = await db.order.findFirst({\n      where: {\n        userId: user?.id,\n        status: 'IN_CART',\n      },\n      include: {\n        orderItems: true,\n      },\n    })\n\n    if (currentOrder) {\n      const existingProduct = currentOrder.orderItems.find(\n        (p) => p.productId === product.id\n      )\n      if (existingProduct) {\n        await db.orderItem.update({\n          where: {\n            id: existingProduct.id,\n          },\n          data: {\n            quantity: {\n              increment: 1,\n            },\n          },\n        })\n      } else {\n        await db.orderItem.create({\n          data: {\n            productId: product.id,\n            quantity: 1,\n            orderId: currentOrder.id,\n          },\n        })\n      }\n      const updatedOrder = await db.order.update({\n        where: { id: currentOrder.id },\n        data: {\n          amount: { increment: product.price },\n        },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    } else {\n      const order = await db.order.create({\n        data: {\n          amount: product.price,\n          status: Status.IN_CART,\n          userId: user?.id,\n        },\n      })\n\n      await db.orderItem.create({\n        data: {\n          orderId: order.id,\n          productId: product.id,\n          quantity: 1,\n        },\n      })\n\n      const updatedOrder = await db.order.findFirst({\n        where: { id: order.id },\n        include: { orderItems: true },\n      })\n\n      return { order: updatedOrder }\n    }\n  } else {\n    const session = await getSession(request)\n    const orderItems = session.get('orderItems') || []\n    const existingProduct = orderItems.find(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    const existingProductIndex = orderItems.findIndex(\n      (orderItem: OrderItem) => orderItem.productId === product.id\n    )\n    if (existingProduct) {\n      orderItems[existingProductIndex] = {\n        productId: product.id,\n        quantity: existingProduct.quantity + 1,\n      }\n    } else {\n      orderItems.push({\n        productId: product.id,\n        quantity: 1,\n      })\n    }\n    session.set('orderItems', orderItems)\n    return redirect('/pork', {\n      headers: {\n        'Set-Cookie': await commitSession(session),\n      },\n    })\n  }\n}\n\nexport default function PorkPage() {\n  const category = Category.PORK\n  const products: Product[] = useLoaderData()\n  return <ProductsPage {...{ products, category }} />\n}\n", "export default {'version':'93dbb91d','entry':{'module':'/build/entry.client-EH6QKJRW.js','imports':['/build/_shared/chunk-3XXAVSMV.js','/build/_shared/chunk-3QJBYVSE.js','/build/_shared/chunk-RAQUD2TT.js','/build/_shared/chunk-M3FANLDM.js','/build/_shared/chunk-QO3FLZQJ.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-MIGE4QPE.js','imports':['/build/_shared/chunk-3V7UD7QX.js','/build/_shared/chunk-PZTLWUUN.js','/build/_shared/chunk-OYH63HFL.js','/build/_shared/chunk-FVVKRT6L.js','/build/_shared/chunk-KEFJRJM2.js','/build/_shared/chunk-RFJ6MWBE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/assigned-orders/$orderId':{'id':'routes/assigned-orders/$orderId','parentId':'root','path':'assigned-orders/:orderId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/assigned-orders/$orderId-MMOKZ7U3.js','imports':['/build/_shared/chunk-IAPETVZP.js','/build/_shared/chunk-M65YAIWN.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/assigned-orders/index':{'id':'routes/assigned-orders/index','parentId':'root','path':'assigned-orders','index':true,'caseSensitive':undefined,'module':'/build/routes/assigned-orders/index-LH5QDUAX.js','imports':['/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/$provider':{'id':'routes/auth/$provider','parentId':'root','path':'auth/:provider','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/$provider-EQ5PEUS2.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/$provider.callback':{'id':'routes/auth/$provider.callback','parentId':'root','path':'auth/:provider/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/$provider.callback-6QDS6AEJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/beef':{'id':'routes/beef','parentId':'root','path':'beef','index':undefined,'caseSensitive':undefined,'module':'/build/routes/beef-5ZFVLACP.js','imports':['/build/_shared/chunk-HMOGWOMD.js','/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cart':{'id':'routes/cart','parentId':'root','path':'cart','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cart-LS5H6FDJ.js','imports':['/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/checkout':{'id':'routes/checkout','parentId':'root','path':'checkout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/checkout-R347P73Z.js','imports':['/build/_shared/chunk-5AOI33ZY.js','/build/_shared/chunk-K4JPEMST.js','/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KR3UFMUA.js','/build/_shared/chunk-M65YAIWN.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/chicken':{'id':'routes/chicken','parentId':'root','path':'chicken','index':undefined,'caseSensitive':undefined,'module':'/build/routes/chicken-2IJUROKV.js','imports':['/build/_shared/chunk-HMOGWOMD.js','/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cloudinary-upload':{'id':'routes/cloudinary-upload','parentId':'root','path':'cloudinary-upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cloudinary-upload-GOQD3Y26.js','imports':['/build/_shared/chunk-U5AQVOHL.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/create-orders':{'id':'routes/create-orders','parentId':'root','path':'create-orders','index':undefined,'caseSensitive':undefined,'module':'/build/routes/create-orders-YU5BOFGS.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/customer-feedback/$feedbackId':{'id':'routes/customer-feedback/$feedbackId','parentId':'root','path':'customer-feedback/:feedbackId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/customer-feedback/$feedbackId-ZIEUX5EH.js','imports':['/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/customer-feedback/index':{'id':'routes/customer-feedback/index','parentId':'root','path':'customer-feedback','index':true,'caseSensitive':undefined,'module':'/build/routes/customer-feedback/index-4XULDPN7.js','imports':['/build/_shared/chunk-KZ7PACYQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/error':{'id':'routes/error','parentId':'root','path':'error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/error-K76MWIGU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-FIZ7TWSW.js','imports':['/build/_shared/chunk-KZ7PACYQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-orders/$orderId':{'id':'routes/manage-orders/$orderId','parentId':'root','path':'manage-orders/:orderId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/manage-orders/$orderId-QUERLIOP.js','imports':['/build/_shared/chunk-5AOI33ZY.js','/build/_shared/chunk-KR3UFMUA.js','/build/_shared/chunk-IAPETVZP.js','/build/_shared/chunk-M65YAIWN.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-orders/index':{'id':'routes/manage-orders/index','parentId':'root','path':'manage-orders','index':true,'caseSensitive':undefined,'module':'/build/routes/manage-orders/index-CT4RZFUX.js','imports':['/build/_shared/chunk-KZ7PACYQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-products/$productId.upload-image':{'id':'routes/manage-products/$productId.upload-image','parentId':'root','path':'manage-products/:productId/upload-image','index':undefined,'caseSensitive':undefined,'module':'/build/routes/manage-products/$productId.upload-image-4LYELNVL.js','imports':['/build/_shared/chunk-6RTR7CGX.js','/build/_shared/chunk-U5AQVOHL.js','/build/_shared/chunk-KZ7PACYQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-products/index':{'id':'routes/manage-products/index','parentId':'root','path':'manage-products','index':true,'caseSensitive':undefined,'module':'/build/routes/manage-products/index-J7MXBRA2.js','imports':['/build/_shared/chunk-KR3UFMUA.js','/build/_shared/chunk-U5AQVOHL.js','/build/_shared/chunk-M65YAIWN.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/manage-users':{'id':'routes/manage-users','parentId':'root','path':'manage-users','index':undefined,'caseSensitive':undefined,'module':'/build/routes/manage-users-HX53KMU4.js','imports':['/build/_shared/chunk-KR3UFMUA.js','/build/_shared/chunk-M65YAIWN.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/order-history/$orderId':{'id':'routes/order-history/$orderId','parentId':'root','path':'order-history/:orderId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/order-history/$orderId-MH25YTZ4.js','imports':['/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/order-history/index':{'id':'routes/order-history/index','parentId':'root','path':'order-history','index':true,'caseSensitive':undefined,'module':'/build/routes/order-history/index-QN6Q3HLI.js','imports':['/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/order-success.$orderId':{'id':'routes/order-success.$orderId','parentId':'root','path':'order-success/:orderId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/order-success.$orderId-IQAK3PDS.js','imports':['/build/_shared/chunk-K4JPEMST.js','/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pork':{'id':'routes/pork','parentId':'root','path':'pork','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pork-OCMKVTNK.js','imports':['/build/_shared/chunk-HMOGWOMD.js','/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/products/$id':{'id':'routes/products/$id','parentId':'root','path':'products/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/products/$id-7JKTZTHZ.js','imports':['/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/products/index':{'id':'routes/products/index','parentId':'root','path':'products','index':true,'caseSensitive':undefined,'module':'/build/routes/products/index-DKRVMP4B.js','imports':['/build/_shared/chunk-HMOGWOMD.js','/build/_shared/chunk-L7SHDWTM.js','/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sales':{'id':'routes/sales','parentId':'root','path':'sales','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sales-D35DUQVL.js','imports':['/build/_shared/chunk-6RTR7CGX.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-KZ7PACYQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signin':{'id':'routes/signin','parentId':'root','path':'signin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signin-U3ZB6IWA.js','imports':['/build/_shared/chunk-D2JJPIP7.js','/build/_shared/chunk-KR3UFMUA.js','/build/_shared/chunk-M65YAIWN.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signout':{'id':'routes/signout','parentId':'root','path':'signout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signout-LJJBJXIH.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-P6POVUB6.js','imports':['/build/_shared/chunk-D2JJPIP7.js','/build/_shared/chunk-KR3UFMUA.js','/build/_shared/chunk-M65YAIWN.js','/build/_shared/chunk-6GNBYACY.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/submit-feedback/index':{'id':'routes/submit-feedback/index','parentId':'root','path':'submit-feedback','index':true,'caseSensitive':undefined,'module':'/build/routes/submit-feedback/index-SRHFCOXE.js','imports':['/build/_shared/chunk-KZ7PACYQ.js','/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/submit-feedback/success':{'id':'routes/submit-feedback/success','parentId':'root','path':'submit-feedback/success','index':undefined,'caseSensitive':undefined,'module':'/build/routes/submit-feedback/success-IQ5RW6PB.js','imports':['/build/_shared/chunk-FKJJ7JUB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/unauthorized':{'id':'routes/unauthorized','parentId':'root','path':'unauthorized','index':undefined,'caseSensitive':undefined,'module':'/build/routes/unauthorized-MX6NUA5M.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-93DBB91D.js'};"],
  "mappings": "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",
  "names": []
}
