var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});
var __esm = (fn2, res) => function __init() {
  return fn2 && (res = (0, fn2[Object.keys(fn2)[0]])(fn2 = 0)), res;
};
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// <define:process>
var env, define_process_default;
var init_define_process = __esm({
  "<define:process>"() {
    env = { NODE_ENV: "development", VERSION: "2022-02-24T15:09:57.474Z", DATABASE_URL: "postgres://jerichocalibuso@localhost:5432/jerichocalibuso", CLOUDFLARE_ACCOUNT_ID: "3fa49d9e46e488406f0e2d9784ec60b8" };
    define_process_default = { env };
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports2, module2) {
    init_define_process();
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to2 = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to2[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to2[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to2;
    };
  }
});

// node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "node_modules/react/cjs/react.development.js"(exports2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV !== "production") {
      (function() {
        "use strict";
        var _assign = require_object_assign();
        var ReactVersion = "17.0.2";
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        exports2.Fragment = 60107;
        exports2.StrictMode = 60108;
        exports2.Profiler = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        exports2.Suspense = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          exports2.Fragment = symbolFor("react.fragment");
          exports2.StrictMode = symbolFor("react.strict_mode");
          exports2.Profiler = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          exports2.Suspense = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: 0
        };
        var ReactCurrentOwner = {
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack = "";
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || "";
            }
            return stack;
          };
        }
        var IsSomeRendererActing = {
          current: false
        };
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner,
          IsSomeRendererActing,
          assign: _assign
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
        }
        function warn(format) {
          {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            printWarning("warn", format, args);
          }
        }
        function error(format) {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format, args);
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return "" + item;
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          isMounted: function(publicInstance) {
            return false;
          },
          enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context2, updater) {
          this.props = props;
          this.context = context2;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function(partialState, callback) {
          if (!(typeof partialState === "object" || typeof partialState === "function" || partialState == null)) {
            {
              throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
            }
          }
          this.updater.enqueueSetState(this, partialState, callback, "setState");
        };
        Component.prototype.forceUpdate = function(callback) {
          this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context2, updater) {
          this.props = props;
          this.context = context2;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        _assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case exports2.Fragment:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case exports2.Profiler:
              return "Profiler";
            case exports2.StrictMode:
              return "StrictMode";
            case exports2.Suspense:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context2 = type;
                return getContextName(context2) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentName(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
              var componentName = getComponentName(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type,
            key,
            ref,
            props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement(type, config, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self2 = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config);
              }
            }
            if (hasValidKey(config)) {
              key = "" + config.key;
            }
            self2 = config.__self === void 0 ? null : config.__self;
            source = config.__source === void 0 ? null : config.__source;
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config, children) {
          if (!!(element === null || element === void 0)) {
            {
              throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
            }
          }
          var propName;
          var props = _assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self2 = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              key = "" + config.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self2, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = ".";
        var SUBSEPARATOR = ":";
        function escape(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element, index) {
          if (typeof element === "object" && element !== null && element.key != null) {
            return escape("" + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
          var type = typeof children;
          if (type === "undefined" || type === "boolean") {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child);
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (Array.isArray(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                return c;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                mappedChild = cloneAndReplaceKey(mappedChild, escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
              }
              array.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getElementKey(child, i);
              subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii2 = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii2++);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
              }
            } else if (type === "object") {
              var childrenString = "" + children;
              {
                {
                  throw Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
                }
              }
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context2) {
          if (children == null) {
            return children;
          }
          var result = [];
          var count = 0;
          mapIntoArray(children, result, "", "", function(child) {
            return func.call(context2, child, count++);
          });
          return result;
        }
        function countChildren(children) {
          var n = 0;
          mapChildren(children, function() {
            n++;
          });
          return n;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(children, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray(children) {
          return mapChildren(children, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            {
              throw Error("React.Children.only expected to receive a single React element child.");
            }
          }
          return children;
        }
        function createContext2(defaultValue, calculateChangedBits) {
          if (calculateChangedBits === void 0) {
            calculateChangedBits = null;
          } else {
            {
              if (calculateChangedBits !== null && typeof calculateChangedBits !== "function") {
                error("createContext: Expected the optional second argument to be a function. Instead received: %s", calculateChangedBits);
              }
            }
          }
          var context2 = {
            $$typeof: REACT_CONTEXT_TYPE,
            _calculateChangedBits: calculateChangedBits,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null
          };
          context2.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context2
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context2,
              _calculateChangedBits: context2._calculateChangedBits
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context2.Provider;
                },
                set: function(_Provider) {
                  context2.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function() {
                  return context2._currentValue;
                },
                set: function(_currentValue) {
                  context2._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function() {
                  return context2._currentValue2;
                },
                set: function(_currentValue2) {
                  context2._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function() {
                  return context2._threadCount;
                },
                set: function(_threadCount) {
                  context2._threadCount = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context2.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context2.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context2.Consumer = Consumer;
          }
          {
            context2._currentRenderer = null;
            context2._currentRenderer2 = null;
          }
          return context2;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            var pending = payload;
            pending._status = Pending;
            pending._result = thenable;
            thenable.then(function(moduleObject) {
              if (payload._status === Pending) {
                var defaultExport = moduleObject.default;
                {
                  if (defaultExport === void 0) {
                    error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                  }
                }
                var resolved = payload;
                resolved._status = Resolved;
                resolved._result = defaultExport;
              }
            }, function(error2) {
              if (payload._status === Pending) {
                var rejected = payload;
                rejected._status = Rejected;
                rejected._result = error2;
              }
            });
          }
          if (payload._status === Resolved) {
            return payload._result;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            _status: -1,
            _result: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps;
                },
                set: function(newDefaultProps) {
                  error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes;
                },
                set: function(newPropTypes) {
                  error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef(render) {
          {
            if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
              error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render !== "function") {
              error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
            } else {
              if (render.length !== 0 && render.length !== 2) {
                error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render != null) {
              if (render.defaultProps != null || render.propTypes != null) {
                error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (render.displayName == null) {
                  render.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        var enableScopeAPI = false;
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === exports2.Fragment || type === exports2.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports2.StrictMode || type === exports2.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare === void 0 ? null : compare
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (type.displayName == null) {
                  type.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          if (!(dispatcher !== null)) {
            {
              throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext2(Context, unstable_observedBits) {
          var dispatcher = resolveDispatcher();
          {
            if (unstable_observedBits !== void 0) {
              error("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s", unstable_observedBits, typeof unstable_observedBits === "number" && Array.isArray(arguments[2]) ? "\n\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks" : "");
            }
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context, unstable_observedBits);
        }
        function useState2(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect2(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useLayoutEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback2(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: _assign({}, props, {
                  value: prevLog
                }),
                info: _assign({}, props, {
                  value: prevInfo
                }),
                warn: _assign({}, props, {
                  value: prevWarn
                }),
                error: _assign({}, props, {
                  value: prevError
                }),
                group: _assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: _assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: _assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case exports2.Suspense:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location2, componentName, element) {
          {
            var has = Function.call.bind(Object.prototype.hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location2 + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location2, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location2, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location2, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentName(ReactCurrentOwner.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== "object") {
            return;
          }
          if (Array.isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentName(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentName(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (Array.isArray(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentName(type.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            {
              error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
          }
          var element = createElement.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (type === exports2.Fragment) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type
                });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        {
          try {
            var frozenObject = Object.freeze({});
            new Map([[frozenObject, null]]);
            new Set([frozenObject]);
          } catch (e2) {
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray,
          only: onlyChild
        };
        exports2.Children = Children;
        exports2.Component = Component;
        exports2.PureComponent = PureComponent;
        exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
        exports2.cloneElement = cloneElement$1;
        exports2.createContext = createContext2;
        exports2.createElement = createElement$1;
        exports2.createFactory = createFactory;
        exports2.createRef = createRef;
        exports2.forwardRef = forwardRef;
        exports2.isValidElement = isValidElement;
        exports2.lazy = lazy;
        exports2.memo = memo;
        exports2.useCallback = useCallback2;
        exports2.useContext = useContext2;
        exports2.useDebugValue = useDebugValue;
        exports2.useEffect = useEffect2;
        exports2.useImperativeHandle = useImperativeHandle;
        exports2.useLayoutEffect = useLayoutEffect;
        exports2.useMemo = useMemo;
        exports2.useReducer = useReducer;
        exports2.useRef = useRef;
        exports2.useState = useState2;
        exports2.version = ReactVersion;
      })();
    }
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./cjs/react.production.min.js");
    } else {
      module2.exports = require_react_development();
    }
  }
});

// node_modules/@remix-run/cloudflare-pages/cookieSigning.js
var require_cookieSigning = __commonJS({
  "node_modules/@remix-run/cloudflare-pages/cookieSigning.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var encoder = new TextEncoder();
    async function sign2(value, secret) {
      let key = await crypto.subtle.importKey("raw", encoder.encode(secret), {
        name: "HMAC",
        hash: "SHA-256"
      }, false, ["sign"]);
      let data = encoder.encode(value);
      let signature = await crypto.subtle.sign("HMAC", key, data);
      let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/=+$/, "");
      return value + "." + hash;
    }
    async function unsign2(cookie, secret) {
      let key = await crypto.subtle.importKey("raw", encoder.encode(secret), {
        name: "HMAC",
        hash: "SHA-256"
      }, false, ["verify"]);
      let value = cookie.slice(0, cookie.lastIndexOf("."));
      let hash = cookie.slice(cookie.lastIndexOf(".") + 1);
      let data = encoder.encode(value);
      let signature = byteStringToUint8Array(atob(hash));
      let valid = await crypto.subtle.verify("HMAC", key, signature, data);
      return valid ? value : false;
    }
    function byteStringToUint8Array(byteString) {
      let array = new Uint8Array(byteString.length);
      for (let i = 0; i < byteString.length; i++) {
        array[i] = byteString.charCodeAt(i);
      }
      return array;
    }
    exports2.sign = sign2;
    exports2.unsign = unsign2;
  }
});

// node_modules/@remix-run/cloudflare-pages/globals.js
var require_globals = __commonJS({
  "node_modules/@remix-run/cloudflare-pages/globals.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var cookieSigning = require_cookieSigning();
    function installGlobals() {
      self.sign = cookieSigning.sign;
      self.unsign = cookieSigning.unsign;
    }
    exports2.installGlobals = installGlobals;
  }
});

// node_modules/cookie/index.js
var require_cookie = __commonJS({
  "node_modules/cookie/index.js"(exports2) {
    init_define_process();
    "use strict";
    exports2.parse = parse;
    exports2.serialize = serialize;
    var decode = decodeURIComponent;
    var encode = encodeURIComponent;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse(str, options2) {
      if (typeof str !== "string") {
        throw new TypeError("argument str must be a string");
      }
      var obj = {};
      var opt = options2 || {};
      var pairs = str.split(";");
      var dec = opt.decode || decode;
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        var index = pair.indexOf("=");
        if (index < 0) {
          continue;
        }
        var key = pair.substring(0, index).trim();
        if (obj[key] == void 0) {
          var val = pair.substring(index + 1, pair.length).trim();
          if (val[0] === '"') {
            val = val.slice(1, -1);
          }
          obj[key] = tryDecode(val, dec);
        }
      }
      return obj;
    }
    function serialize(name, val, options2) {
      var opt = options2 || {};
      var enc = opt.encode || encode;
      if (typeof enc !== "function") {
        throw new TypeError("option encode is invalid");
      }
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError("argument name is invalid");
      }
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError("argument val is invalid");
      }
      var str = name + "=" + value;
      if (opt.maxAge != null) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError("option domain is invalid");
        }
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError("option path is invalid");
        }
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        if (typeof opt.expires.toUTCString !== "function") {
          throw new TypeError("option expires is invalid");
        }
        str += "; Expires=" + opt.expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function tryDecode(str, decode2) {
      try {
        return decode2(str);
      } catch (e2) {
        return str;
      }
    }
  }
});

// node_modules/@remix-run/server-runtime/cookies.js
var require_cookies = __commonJS({
  "node_modules/@remix-run/server-runtime/cookies.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var cookie = require_cookie();
    function createCookie2(name, cookieOptions = {}) {
      let {
        secrets,
        ...options2
      } = {
        secrets: [],
        path: "/",
        ...cookieOptions
      };
      return {
        get name() {
          return name;
        },
        get isSigned() {
          return secrets.length > 0;
        },
        get expires() {
          return typeof options2.maxAge !== "undefined" ? new Date(Date.now() + options2.maxAge * 1e3) : options2.expires;
        },
        async parse(cookieHeader, parseOptions) {
          if (!cookieHeader)
            return null;
          let cookies = cookie.parse(cookieHeader, {
            ...options2,
            ...parseOptions
          });
          return name in cookies ? cookies[name] === "" ? "" : await decodeCookieValue(cookies[name], secrets) : null;
        },
        async serialize(value, serializeOptions) {
          return cookie.serialize(name, value === "" ? "" : await encodeCookieValue(value, secrets), {
            ...options2,
            ...serializeOptions
          });
        }
      };
    }
    function isCookie2(object) {
      return object != null && typeof object.name === "string" && typeof object.isSigned === "boolean" && typeof object.parse === "function" && typeof object.serialize === "function";
    }
    async function encodeCookieValue(value, secrets) {
      let encoded = encodeData(value);
      if (secrets.length > 0) {
        encoded = await sign(encoded, secrets[0]);
      }
      return encoded;
    }
    async function decodeCookieValue(value, secrets) {
      if (secrets.length > 0) {
        for (let secret of secrets) {
          let unsignedValue = await unsign(value, secret);
          if (unsignedValue !== false) {
            return decodeData(unsignedValue);
          }
        }
        return null;
      }
      return decodeData(value);
    }
    function encodeData(value) {
      return btoa(JSON.stringify(value));
    }
    function decodeData(value) {
      try {
        return JSON.parse(atob(value));
      } catch (error) {
        return {};
      }
    }
    exports2.createCookie = createCookie2;
    exports2.isCookie = isCookie2;
  }
});

// node_modules/@remix-run/server-runtime/responses.js
var require_responses = __commonJS({
  "node_modules/@remix-run/server-runtime/responses.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    function json3(data, init = {}) {
      let responseInit = init;
      if (typeof init === "number") {
        responseInit = {
          status: init
        };
      }
      let headers = new Headers(responseInit.headers);
      if (!headers.has("Content-Type")) {
        headers.set("Content-Type", "application/json; charset=utf-8");
      }
      return new Response(JSON.stringify(data), {
        ...responseInit,
        headers
      });
    }
    function redirect4(url2, init = 302) {
      let responseInit = init;
      if (typeof responseInit === "number") {
        responseInit = {
          status: responseInit
        };
      } else if (typeof responseInit.status === "undefined") {
        responseInit.status = 302;
      }
      let headers = new Headers(responseInit.headers);
      headers.set("Location", url2);
      return new Response(null, {
        ...responseInit,
        headers
      });
    }
    function isResponse(value) {
      return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
    }
    var redirectStatusCodes = new Set([301, 302, 303, 307, 308]);
    function isRedirectResponse(response) {
      return redirectStatusCodes.has(response.status);
    }
    function isCatchResponse(response) {
      return response.headers.get("X-Remix-Catch") != null;
    }
    exports2.isCatchResponse = isCatchResponse;
    exports2.isRedirectResponse = isRedirectResponse;
    exports2.isResponse = isResponse;
    exports2.json = json3;
    exports2.redirect = redirect4;
  }
});

// node_modules/@remix-run/server-runtime/data.js
var require_data = __commonJS({
  "node_modules/@remix-run/server-runtime/data.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var responses = require_responses();
    async function callRouteAction({
      loadContext,
      match,
      request: request2
    }) {
      let action = match.route.module.action;
      if (!action) {
        throw new Error(`You made a ${request2.method} request to ${request2.url} but did not provide an \`action\` for route "${match.route.id}", so there is no way to handle the request.`);
      }
      let result;
      try {
        result = await action({
          request: stripDataParam(stripIndexParam(request2)),
          context: loadContext,
          params: match.params
        });
      } catch (error) {
        if (!responses.isResponse(error)) {
          throw error;
        }
        if (!responses.isRedirectResponse(error)) {
          error.headers.set("X-Remix-Catch", "yes");
        }
        result = error;
      }
      if (result === void 0) {
        throw new Error(`You defined an action for route "${match.route.id}" but didn't return anything from your \`action\` function. Please return a value or \`null\`.`);
      }
      return responses.isResponse(result) ? result : responses.json(result);
    }
    async function callRouteLoader({
      loadContext,
      match,
      request: request2
    }) {
      let loader = match.route.module.loader;
      if (!loader) {
        throw new Error(`You made a ${request2.method} request to ${request2.url} but did not provide a \`loader\` for route "${match.route.id}", so there is no way to handle the request.`);
      }
      let result;
      try {
        result = await loader({
          request: stripDataParam(stripIndexParam(request2.clone())),
          context: loadContext,
          params: match.params
        });
      } catch (error) {
        if (!responses.isResponse(error)) {
          throw error;
        }
        if (!responses.isRedirectResponse(error)) {
          error.headers.set("X-Remix-Catch", "yes");
        }
        result = error;
      }
      if (result === void 0) {
        throw new Error(`You defined a loader for route "${match.route.id}" but didn't return anything from your \`loader\` function. Please return a value or \`null\`.`);
      }
      return responses.isResponse(result) ? result : responses.json(result);
    }
    function stripIndexParam(request2) {
      let url2 = new URL(request2.url);
      let indexValues = url2.searchParams.getAll("index");
      url2.searchParams.delete("index");
      let indexValuesToKeep = [];
      for (let indexValue of indexValues) {
        if (indexValue) {
          indexValuesToKeep.push(indexValue);
        }
      }
      for (let toKeep of indexValuesToKeep) {
        url2.searchParams.append("index", toKeep);
      }
      return new Request(url2.href, request2);
    }
    function stripDataParam(request2) {
      let url2 = new URL(request2.url);
      url2.searchParams.delete("_data");
      return new Request(url2.href, request2);
    }
    function extractData(response) {
      let contentType = response.headers.get("Content-Type");
      if (contentType && /\bapplication\/json\b/.test(contentType)) {
        return response.json();
      }
      return response.text();
    }
    exports2.callRouteAction = callRouteAction;
    exports2.callRouteLoader = callRouteLoader;
    exports2.extractData = extractData;
  }
});

// node_modules/@remix-run/server-runtime/entry.js
var require_entry = __commonJS({
  "node_modules/@remix-run/server-runtime/entry.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    function createEntryMatches(matches, routes) {
      return matches.map((match) => ({
        params: match.params,
        pathname: match.pathname,
        route: routes[match.route.id]
      }));
    }
    function createEntryRouteModules(manifest) {
      return Object.keys(manifest).reduce((memo, routeId) => {
        memo[routeId] = manifest[routeId].module;
        return memo;
      }, {});
    }
    exports2.createEntryMatches = createEntryMatches;
    exports2.createEntryRouteModules = createEntryRouteModules;
  }
});

// node_modules/@remix-run/server-runtime/errors.js
var require_errors = __commonJS({
  "node_modules/@remix-run/server-runtime/errors.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    async function serializeError(error) {
      return {
        message: error.message,
        stack: error.stack
      };
    }
    exports2.serializeError = serializeError;
  }
});

// node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports2, module2) {
    init_define_process();
    "use strict";
    var defaultParseOptions = {
      decodeValues: true,
      map: false,
      silent: false
    };
    function isNonEmptyString(str) {
      return typeof str === "string" && !!str.trim();
    }
    function parseString(setCookieValue, options2) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString);
      var nameValue = parts.shift().split("=");
      var name = nameValue.shift();
      var value = nameValue.join("=");
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      try {
        value = options2.decodeValues ? decodeURIComponent(value) : value;
      } catch (e2) {
        console.error("set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.", e2);
      }
      var cookie = {
        name,
        value
      };
      parts.forEach(function(part) {
        var sides = part.split("=");
        var key = sides.shift().trimLeft().toLowerCase();
        var value2 = sides.join("=");
        if (key === "expires") {
          cookie.expires = new Date(value2);
        } else if (key === "max-age") {
          cookie.maxAge = parseInt(value2, 10);
        } else if (key === "secure") {
          cookie.secure = true;
        } else if (key === "httponly") {
          cookie.httpOnly = true;
        } else if (key === "samesite") {
          cookie.sameSite = value2;
        } else {
          cookie[key] = value2;
        }
      });
      return cookie;
    }
    function parse(input, options2) {
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      if (!input) {
        if (!options2.map) {
          return [];
        } else {
          return {};
        }
      }
      if (input.headers && input.headers["set-cookie"]) {
        input = input.headers["set-cookie"];
      } else if (input.headers) {
        var sch = input.headers[Object.keys(input.headers).find(function(key) {
          return key.toLowerCase() === "set-cookie";
        })];
        if (!sch && input.headers.cookie && !options2.silent) {
          console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.");
        }
        input = sch;
      }
      if (!Array.isArray(input)) {
        input = [input];
      }
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      if (!options2.map) {
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString(str, options2);
        });
      } else {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString(str, options2);
          cookies2[cookie.name] = cookie;
          return cookies2;
        }, cookies);
      }
    }
    function splitCookiesString(cookiesString) {
      if (Array.isArray(cookiesString)) {
        return cookiesString;
      }
      if (typeof cookiesString !== "string") {
        return [];
      }
      var cookiesStrings = [];
      var pos = 0;
      var start;
      var ch;
      var lastComma;
      var nextStart;
      var cookiesSeparatorFound;
      function skipWhitespace() {
        while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
          pos += 1;
        }
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
      }
      while (pos < cookiesString.length) {
        start = pos;
        cookiesSeparatorFound = false;
        while (skipWhitespace()) {
          ch = cookiesString.charAt(pos);
          if (ch === ",") {
            lastComma = pos;
            pos += 1;
            skipWhitespace();
            nextStart = pos;
            while (pos < cookiesString.length && notSpecialChar()) {
              pos += 1;
            }
            if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
              cookiesSeparatorFound = true;
              pos = nextStart;
              cookiesStrings.push(cookiesString.substring(start, lastComma));
              start = pos;
            } else {
              pos = lastComma + 1;
            }
          } else {
            pos += 1;
          }
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) {
          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
        }
      }
      return cookiesStrings;
    }
    module2.exports = parse;
    module2.exports.parse = parse;
    module2.exports.parseString = parseString;
    module2.exports.splitCookiesString = splitCookiesString;
  }
});

// node_modules/@remix-run/server-runtime/headers.js
var require_headers = __commonJS({
  "node_modules/@remix-run/server-runtime/headers.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var setCookieParser = require_set_cookie();
    function getDocumentHeaders(build2, matches, routeLoaderResponses, actionResponse) {
      return matches.reduce((parentHeaders, match, index) => {
        let routeModule = build2.routes[match.route.id].module;
        let routeLoaderResponse = routeLoaderResponses[match.route.id];
        let loaderHeaders = routeLoaderResponse ? routeLoaderResponse.headers : new Headers();
        let actionHeaders = actionResponse ? actionResponse.headers : new Headers();
        let headers = new Headers(routeModule.headers ? typeof routeModule.headers === "function" ? routeModule.headers({
          loaderHeaders,
          parentHeaders,
          actionHeaders
        }) : routeModule.headers : void 0);
        prependCookies(actionHeaders, headers);
        prependCookies(loaderHeaders, headers);
        prependCookies(parentHeaders, headers);
        return headers;
      }, new Headers());
    }
    function prependCookies(parentHeaders, childHeaders) {
      let parentSetCookieString = parentHeaders.get("Set-Cookie");
      if (parentSetCookieString) {
        let cookies = setCookieParser.splitCookiesString(parentSetCookieString);
        cookies.forEach((cookie) => {
          childHeaders.append("Set-Cookie", cookie);
        });
      }
    }
    exports2.getDocumentHeaders = getDocumentHeaders;
  }
});

// node_modules/history/umd/history.development.js
var require_history_development = __commonJS({
  "node_modules/history/umd/history.development.js"(exports2, module2) {
    init_define_process();
    (function(global2, factory) {
      typeof exports2 === "object" && typeof module2 !== "undefined" ? factory(exports2) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2.HistoryLibrary = {}));
    })(exports2, function(exports3) {
      "use strict";
      function _extends() {
        _extends = Object.assign || function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        return _extends.apply(this, arguments);
      }
      exports3.Action = void 0;
      (function(Action) {
        Action["Pop"] = "POP";
        Action["Push"] = "PUSH";
        Action["Replace"] = "REPLACE";
      })(exports3.Action || (exports3.Action = {}));
      var readOnly = function(obj) {
        return Object.freeze(obj);
      };
      function warning(cond, message) {
        if (!cond) {
          if (typeof console !== "undefined")
            console.warn(message);
          try {
            throw new Error(message);
          } catch (e2) {
          }
        }
      }
      var BeforeUnloadEventType = "beforeunload";
      var HashChangeEventType = "hashchange";
      var PopStateEventType = "popstate";
      function createBrowserHistory(options2) {
        if (options2 === void 0) {
          options2 = {};
        }
        var _options = options2, _options$window = _options.window, window2 = _options$window === void 0 ? document.defaultView : _options$window;
        var globalHistory = window2.history;
        function getIndexAndLocation() {
          var _window$location = window2.location, pathname = _window$location.pathname, search = _window$location.search, hash = _window$location.hash;
          var state = globalHistory.state || {};
          return [state.idx, readOnly({
            pathname,
            search,
            hash,
            state: state.usr || null,
            key: state.key || "default"
          })];
        }
        var blockedPopTx = null;
        function handlePop() {
          if (blockedPopTx) {
            blockers.call(blockedPopTx);
            blockedPopTx = null;
          } else {
            var nextAction = exports3.Action.Pop;
            var _getIndexAndLocation = getIndexAndLocation(), nextIndex = _getIndexAndLocation[0], nextLocation = _getIndexAndLocation[1];
            if (blockers.length) {
              if (nextIndex != null) {
                var delta = index - nextIndex;
                if (delta) {
                  blockedPopTx = {
                    action: nextAction,
                    location: nextLocation,
                    retry: function retry() {
                      go2(delta * -1);
                    }
                  };
                  go2(delta);
                }
              } else {
                warning(false, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.");
              }
            } else {
              applyTx(nextAction);
            }
          }
        }
        window2.addEventListener(PopStateEventType, handlePop);
        var action = exports3.Action.Pop;
        var _getIndexAndLocation2 = getIndexAndLocation(), index = _getIndexAndLocation2[0], location2 = _getIndexAndLocation2[1];
        var listeners = createEvents();
        var blockers = createEvents();
        if (index == null) {
          index = 0;
          globalHistory.replaceState(_extends({}, globalHistory.state, {
            idx: index
          }), "");
        }
        function createHref(to2) {
          return typeof to2 === "string" ? to2 : createPath(to2);
        }
        function getNextLocation(to2, state) {
          if (state === void 0) {
            state = null;
          }
          return readOnly(_extends({
            pathname: location2.pathname,
            hash: "",
            search: ""
          }, typeof to2 === "string" ? parsePath(to2) : to2, {
            state,
            key: createKey()
          }));
        }
        function getHistoryStateAndUrl(nextLocation, index2) {
          return [{
            usr: nextLocation.state,
            key: nextLocation.key,
            idx: index2
          }, createHref(nextLocation)];
        }
        function allowTx(action2, location3, retry) {
          return !blockers.length || (blockers.call({
            action: action2,
            location: location3,
            retry
          }), false);
        }
        function applyTx(nextAction) {
          action = nextAction;
          var _getIndexAndLocation3 = getIndexAndLocation();
          index = _getIndexAndLocation3[0];
          location2 = _getIndexAndLocation3[1];
          listeners.call({
            action,
            location: location2
          });
        }
        function push(to2, state) {
          var nextAction = exports3.Action.Push;
          var nextLocation = getNextLocation(to2, state);
          function retry() {
            push(to2, state);
          }
          if (allowTx(nextAction, nextLocation, retry)) {
            var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1), historyState = _getHistoryStateAndUr[0], url2 = _getHistoryStateAndUr[1];
            try {
              globalHistory.pushState(historyState, "", url2);
            } catch (error) {
              window2.location.assign(url2);
            }
            applyTx(nextAction);
          }
        }
        function replace(to2, state) {
          var nextAction = exports3.Action.Replace;
          var nextLocation = getNextLocation(to2, state);
          function retry() {
            replace(to2, state);
          }
          if (allowTx(nextAction, nextLocation, retry)) {
            var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index), historyState = _getHistoryStateAndUr2[0], url2 = _getHistoryStateAndUr2[1];
            globalHistory.replaceState(historyState, "", url2);
            applyTx(nextAction);
          }
        }
        function go2(delta) {
          globalHistory.go(delta);
        }
        var history = {
          get action() {
            return action;
          },
          get location() {
            return location2;
          },
          createHref,
          push,
          replace,
          go: go2,
          back: function back() {
            go2(-1);
          },
          forward: function forward() {
            go2(1);
          },
          listen: function listen(listener) {
            return listeners.push(listener);
          },
          block: function block(blocker) {
            var unblock = blockers.push(blocker);
            if (blockers.length === 1) {
              window2.addEventListener(BeforeUnloadEventType, promptBeforeUnload);
            }
            return function() {
              unblock();
              if (!blockers.length) {
                window2.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);
              }
            };
          }
        };
        return history;
      }
      function createHashHistory(options2) {
        if (options2 === void 0) {
          options2 = {};
        }
        var _options2 = options2, _options2$window = _options2.window, window2 = _options2$window === void 0 ? document.defaultView : _options2$window;
        var globalHistory = window2.history;
        function getIndexAndLocation() {
          var _parsePath = parsePath(window2.location.hash.substr(1)), _parsePath$pathname = _parsePath.pathname, pathname = _parsePath$pathname === void 0 ? "/" : _parsePath$pathname, _parsePath$search = _parsePath.search, search = _parsePath$search === void 0 ? "" : _parsePath$search, _parsePath$hash = _parsePath.hash, hash = _parsePath$hash === void 0 ? "" : _parsePath$hash;
          var state = globalHistory.state || {};
          return [state.idx, readOnly({
            pathname,
            search,
            hash,
            state: state.usr || null,
            key: state.key || "default"
          })];
        }
        var blockedPopTx = null;
        function handlePop() {
          if (blockedPopTx) {
            blockers.call(blockedPopTx);
            blockedPopTx = null;
          } else {
            var nextAction = exports3.Action.Pop;
            var _getIndexAndLocation4 = getIndexAndLocation(), nextIndex = _getIndexAndLocation4[0], nextLocation = _getIndexAndLocation4[1];
            if (blockers.length) {
              if (nextIndex != null) {
                var delta = index - nextIndex;
                if (delta) {
                  blockedPopTx = {
                    action: nextAction,
                    location: nextLocation,
                    retry: function retry() {
                      go2(delta * -1);
                    }
                  };
                  go2(delta);
                }
              } else {
                warning(false, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.");
              }
            } else {
              applyTx(nextAction);
            }
          }
        }
        window2.addEventListener(PopStateEventType, handlePop);
        window2.addEventListener(HashChangeEventType, function() {
          var _getIndexAndLocation5 = getIndexAndLocation(), nextLocation = _getIndexAndLocation5[1];
          if (createPath(nextLocation) !== createPath(location2)) {
            handlePop();
          }
        });
        var action = exports3.Action.Pop;
        var _getIndexAndLocation6 = getIndexAndLocation(), index = _getIndexAndLocation6[0], location2 = _getIndexAndLocation6[1];
        var listeners = createEvents();
        var blockers = createEvents();
        if (index == null) {
          index = 0;
          globalHistory.replaceState(_extends({}, globalHistory.state, {
            idx: index
          }), "");
        }
        function getBaseHref() {
          var base = document.querySelector("base");
          var href = "";
          if (base && base.getAttribute("href")) {
            var url2 = window2.location.href;
            var hashIndex = url2.indexOf("#");
            href = hashIndex === -1 ? url2 : url2.slice(0, hashIndex);
          }
          return href;
        }
        function createHref(to2) {
          return getBaseHref() + "#" + (typeof to2 === "string" ? to2 : createPath(to2));
        }
        function getNextLocation(to2, state) {
          if (state === void 0) {
            state = null;
          }
          return readOnly(_extends({
            pathname: location2.pathname,
            hash: "",
            search: ""
          }, typeof to2 === "string" ? parsePath(to2) : to2, {
            state,
            key: createKey()
          }));
        }
        function getHistoryStateAndUrl(nextLocation, index2) {
          return [{
            usr: nextLocation.state,
            key: nextLocation.key,
            idx: index2
          }, createHref(nextLocation)];
        }
        function allowTx(action2, location3, retry) {
          return !blockers.length || (blockers.call({
            action: action2,
            location: location3,
            retry
          }), false);
        }
        function applyTx(nextAction) {
          action = nextAction;
          var _getIndexAndLocation7 = getIndexAndLocation();
          index = _getIndexAndLocation7[0];
          location2 = _getIndexAndLocation7[1];
          listeners.call({
            action,
            location: location2
          });
        }
        function push(to2, state) {
          var nextAction = exports3.Action.Push;
          var nextLocation = getNextLocation(to2, state);
          function retry() {
            push(to2, state);
          }
          warning(nextLocation.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.push(" + JSON.stringify(to2) + ")");
          if (allowTx(nextAction, nextLocation, retry)) {
            var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1), historyState = _getHistoryStateAndUr3[0], url2 = _getHistoryStateAndUr3[1];
            try {
              globalHistory.pushState(historyState, "", url2);
            } catch (error) {
              window2.location.assign(url2);
            }
            applyTx(nextAction);
          }
        }
        function replace(to2, state) {
          var nextAction = exports3.Action.Replace;
          var nextLocation = getNextLocation(to2, state);
          function retry() {
            replace(to2, state);
          }
          warning(nextLocation.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.replace(" + JSON.stringify(to2) + ")");
          if (allowTx(nextAction, nextLocation, retry)) {
            var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index), historyState = _getHistoryStateAndUr4[0], url2 = _getHistoryStateAndUr4[1];
            globalHistory.replaceState(historyState, "", url2);
            applyTx(nextAction);
          }
        }
        function go2(delta) {
          globalHistory.go(delta);
        }
        var history = {
          get action() {
            return action;
          },
          get location() {
            return location2;
          },
          createHref,
          push,
          replace,
          go: go2,
          back: function back() {
            go2(-1);
          },
          forward: function forward() {
            go2(1);
          },
          listen: function listen(listener) {
            return listeners.push(listener);
          },
          block: function block(blocker) {
            var unblock = blockers.push(blocker);
            if (blockers.length === 1) {
              window2.addEventListener(BeforeUnloadEventType, promptBeforeUnload);
            }
            return function() {
              unblock();
              if (!blockers.length) {
                window2.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);
              }
            };
          }
        };
        return history;
      }
      function createMemoryHistory(options2) {
        if (options2 === void 0) {
          options2 = {};
        }
        var _options3 = options2, _options3$initialEntr = _options3.initialEntries, initialEntries = _options3$initialEntr === void 0 ? ["/"] : _options3$initialEntr, initialIndex = _options3.initialIndex;
        var entries = initialEntries.map(function(entry) {
          var location3 = readOnly(_extends({
            pathname: "/",
            search: "",
            hash: "",
            state: null,
            key: createKey()
          }, typeof entry === "string" ? parsePath(entry) : entry));
          warning(location3.pathname.charAt(0) === "/", "Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: " + JSON.stringify(entry) + ")");
          return location3;
        });
        var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);
        var action = exports3.Action.Pop;
        var location2 = entries[index];
        var listeners = createEvents();
        var blockers = createEvents();
        function createHref(to2) {
          return typeof to2 === "string" ? to2 : createPath(to2);
        }
        function getNextLocation(to2, state) {
          if (state === void 0) {
            state = null;
          }
          return readOnly(_extends({
            pathname: location2.pathname,
            search: "",
            hash: ""
          }, typeof to2 === "string" ? parsePath(to2) : to2, {
            state,
            key: createKey()
          }));
        }
        function allowTx(action2, location3, retry) {
          return !blockers.length || (blockers.call({
            action: action2,
            location: location3,
            retry
          }), false);
        }
        function applyTx(nextAction, nextLocation) {
          action = nextAction;
          location2 = nextLocation;
          listeners.call({
            action,
            location: location2
          });
        }
        function push(to2, state) {
          var nextAction = exports3.Action.Push;
          var nextLocation = getNextLocation(to2, state);
          function retry() {
            push(to2, state);
          }
          warning(location2.pathname.charAt(0) === "/", "Relative pathnames are not supported in memory history.push(" + JSON.stringify(to2) + ")");
          if (allowTx(nextAction, nextLocation, retry)) {
            index += 1;
            entries.splice(index, entries.length, nextLocation);
            applyTx(nextAction, nextLocation);
          }
        }
        function replace(to2, state) {
          var nextAction = exports3.Action.Replace;
          var nextLocation = getNextLocation(to2, state);
          function retry() {
            replace(to2, state);
          }
          warning(location2.pathname.charAt(0) === "/", "Relative pathnames are not supported in memory history.replace(" + JSON.stringify(to2) + ")");
          if (allowTx(nextAction, nextLocation, retry)) {
            entries[index] = nextLocation;
            applyTx(nextAction, nextLocation);
          }
        }
        function go2(delta) {
          var nextIndex = clamp(index + delta, 0, entries.length - 1);
          var nextAction = exports3.Action.Pop;
          var nextLocation = entries[nextIndex];
          function retry() {
            go2(delta);
          }
          if (allowTx(nextAction, nextLocation, retry)) {
            index = nextIndex;
            applyTx(nextAction, nextLocation);
          }
        }
        var history = {
          get index() {
            return index;
          },
          get action() {
            return action;
          },
          get location() {
            return location2;
          },
          createHref,
          push,
          replace,
          go: go2,
          back: function back() {
            go2(-1);
          },
          forward: function forward() {
            go2(1);
          },
          listen: function listen(listener) {
            return listeners.push(listener);
          },
          block: function block(blocker) {
            return blockers.push(blocker);
          }
        };
        return history;
      }
      function clamp(n, lowerBound, upperBound) {
        return Math.min(Math.max(n, lowerBound), upperBound);
      }
      function promptBeforeUnload(event) {
        event.preventDefault();
        event.returnValue = "";
      }
      function createEvents() {
        var handlers = [];
        return {
          get length() {
            return handlers.length;
          },
          push: function push(fn2) {
            handlers.push(fn2);
            return function() {
              handlers = handlers.filter(function(handler) {
                return handler !== fn2;
              });
            };
          },
          call: function call(arg) {
            handlers.forEach(function(fn2) {
              return fn2 && fn2(arg);
            });
          }
        };
      }
      function createKey() {
        return Math.random().toString(36).substr(2, 8);
      }
      function createPath(_ref) {
        var _ref$pathname = _ref.pathname, pathname = _ref$pathname === void 0 ? "/" : _ref$pathname, _ref$search = _ref.search, search = _ref$search === void 0 ? "" : _ref$search, _ref$hash = _ref.hash, hash = _ref$hash === void 0 ? "" : _ref$hash;
        if (search && search !== "?")
          pathname += search.charAt(0) === "?" ? search : "?" + search;
        if (hash && hash !== "#")
          pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
        return pathname;
      }
      function parsePath(path) {
        var parsedPath = {};
        if (path) {
          var hashIndex = path.indexOf("#");
          if (hashIndex >= 0) {
            parsedPath.hash = path.substr(hashIndex);
            path = path.substr(0, hashIndex);
          }
          var searchIndex = path.indexOf("?");
          if (searchIndex >= 0) {
            parsedPath.search = path.substr(searchIndex);
            path = path.substr(0, searchIndex);
          }
          if (path) {
            parsedPath.pathname = path;
          }
        }
        return parsedPath;
      }
      exports3.createBrowserHistory = createBrowserHistory;
      exports3.createHashHistory = createHashHistory;
      exports3.createMemoryHistory = createMemoryHistory;
      exports3.createPath = createPath;
      exports3.parsePath = parsePath;
      Object.defineProperty(exports3, "__esModule", { value: true });
    });
  }
});

// node_modules/history/main.js
var require_main = __commonJS({
  "node_modules/history/main.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./umd/history.production.min.js");
    } else {
      module2.exports = require_history_development();
    }
  }
});

// node_modules/react-router/umd/react-router.development.js
var require_react_router_development = __commonJS({
  "node_modules/react-router/umd/react-router.development.js"(exports2, module2) {
    init_define_process();
    (function(global2, factory) {
      typeof exports2 === "object" && typeof module2 !== "undefined" ? factory(exports2, require_react(), require_main()) : typeof define === "function" && define.amd ? define(["exports", "react", "history"], factory) : (global2 = global2 || self, factory(global2.ReactRouter = {}, global2.React, global2.HistoryLibrary));
    })(exports2, function(exports3, React, history) {
      "use strict";
      function invariant(cond, message) {
        if (!cond)
          throw new Error(message);
      }
      function warning(cond, message) {
        if (!cond) {
          if (typeof console !== "undefined")
            console.warn(message);
          try {
            throw new Error(message);
          } catch (e2) {
          }
        }
      }
      const alreadyWarned = {};
      function warningOnce(key, cond, message) {
        if (!cond && !alreadyWarned[key]) {
          alreadyWarned[key] = true;
          warning(false, message);
        }
      }
      const NavigationContext = /* @__PURE__ */ React.createContext(null);
      {
        NavigationContext.displayName = "Navigation";
      }
      const LocationContext = /* @__PURE__ */ React.createContext(null);
      {
        LocationContext.displayName = "Location";
      }
      const RouteContext = /* @__PURE__ */ React.createContext({
        outlet: null,
        matches: []
      });
      {
        RouteContext.displayName = "Route";
      }
      function MemoryRouter(_ref) {
        let {
          basename,
          children,
          initialEntries,
          initialIndex
        } = _ref;
        let historyRef = React.useRef();
        if (historyRef.current == null) {
          historyRef.current = history.createMemoryHistory({
            initialEntries,
            initialIndex
          });
        }
        let history$1 = historyRef.current;
        let [state, setState] = React.useState({
          action: history$1.action,
          location: history$1.location
        });
        React.useLayoutEffect(() => history$1.listen(setState), [history$1]);
        return /* @__PURE__ */ React.createElement(Router, {
          basename,
          children,
          location: state.location,
          navigationType: state.action,
          navigator: history$1
        });
      }
      function Navigate(_ref2) {
        let {
          to: to2,
          replace,
          state
        } = _ref2;
        !useInRouterContext() ? invariant(false, "<Navigate> may be used only in the context of a <Router> component.") : void 0;
        warning(!React.useContext(NavigationContext).static, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");
        let navigate = useNavigate2();
        React.useEffect(() => {
          navigate(to2, {
            replace,
            state
          });
        });
        return null;
      }
      function Outlet2(props) {
        return useOutlet(props.context);
      }
      function Route(_props) {
        invariant(false, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.");
      }
      function Router(_ref3) {
        let {
          basename: basenameProp = "/",
          children = null,
          location: locationProp,
          navigationType = history.Action.Pop,
          navigator: navigator2,
          static: staticProp = false
        } = _ref3;
        !!useInRouterContext() ? invariant(false, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.") : void 0;
        let basename = normalizePathname(basenameProp);
        let navigationContext = React.useMemo(() => ({
          basename,
          navigator: navigator2,
          static: staticProp
        }), [basename, navigator2, staticProp]);
        if (typeof locationProp === "string") {
          locationProp = history.parsePath(locationProp);
        }
        let {
          pathname = "/",
          search = "",
          hash = "",
          state = null,
          key = "default"
        } = locationProp;
        let location2 = React.useMemo(() => {
          let trailingPathname = stripBasename(pathname, basename);
          if (trailingPathname == null) {
            return null;
          }
          return {
            pathname: trailingPathname,
            search,
            hash,
            state,
            key
          };
        }, [basename, pathname, search, hash, state, key]);
        warning(location2 != null, '<Router basename="' + basename + '"> is not able to match the URL ' + ('"' + pathname + search + hash + '" because it does not start with the ') + "basename, so the <Router> won't render anything.");
        if (location2 == null) {
          return null;
        }
        return /* @__PURE__ */ React.createElement(NavigationContext.Provider, {
          value: navigationContext
        }, /* @__PURE__ */ React.createElement(LocationContext.Provider, {
          children,
          value: {
            location: location2,
            navigationType
          }
        }));
      }
      function Routes(_ref4) {
        let {
          children,
          location: location2
        } = _ref4;
        return useRoutes(createRoutesFromChildren(children), location2);
      }
      function useHref(to2) {
        !useInRouterContext() ? invariant(false, "useHref() may be used only in the context of a <Router> component.") : void 0;
        let {
          basename,
          navigator: navigator2
        } = React.useContext(NavigationContext);
        let {
          hash,
          pathname,
          search
        } = useResolvedPath(to2);
        let joinedPathname = pathname;
        if (basename !== "/") {
          let toPathname = getToPathname(to2);
          let endsWithSlash = toPathname != null && toPathname.endsWith("/");
          joinedPathname = pathname === "/" ? basename + (endsWithSlash ? "/" : "") : joinPaths([basename, pathname]);
        }
        return navigator2.createHref({
          pathname: joinedPathname,
          search,
          hash
        });
      }
      function useInRouterContext() {
        return React.useContext(LocationContext) != null;
      }
      function useLocation() {
        !useInRouterContext() ? invariant(false, "useLocation() may be used only in the context of a <Router> component.") : void 0;
        return React.useContext(LocationContext).location;
      }
      function useNavigationType() {
        return React.useContext(LocationContext).navigationType;
      }
      function useMatch(pattern) {
        !useInRouterContext() ? invariant(false, "useMatch() may be used only in the context of a <Router> component.") : void 0;
        let {
          pathname
        } = useLocation();
        return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);
      }
      function useNavigate2() {
        !useInRouterContext() ? invariant(false, "useNavigate() may be used only in the context of a <Router> component.") : void 0;
        let {
          basename,
          navigator: navigator2
        } = React.useContext(NavigationContext);
        let {
          matches
        } = React.useContext(RouteContext);
        let {
          pathname: locationPathname
        } = useLocation();
        let routePathnamesJson = JSON.stringify(matches.map((match) => match.pathnameBase));
        let activeRef = React.useRef(false);
        React.useEffect(() => {
          activeRef.current = true;
        });
        let navigate = React.useCallback(function(to2, options2) {
          if (options2 === void 0) {
            options2 = {};
          }
          warning(activeRef.current, "You should call navigate() in a React.useEffect(), not when your component is first rendered.");
          if (!activeRef.current)
            return;
          if (typeof to2 === "number") {
            navigator2.go(to2);
            return;
          }
          let path = resolveTo(to2, JSON.parse(routePathnamesJson), locationPathname);
          if (basename !== "/") {
            path.pathname = joinPaths([basename, path.pathname]);
          }
          (!!options2.replace ? navigator2.replace : navigator2.push)(path, options2.state);
        }, [basename, navigator2, routePathnamesJson, locationPathname]);
        return navigate;
      }
      const OutletContext = /* @__PURE__ */ React.createContext(null);
      function useOutletContext2() {
        return React.useContext(OutletContext);
      }
      function useOutlet(context2) {
        let outlet = React.useContext(RouteContext).outlet;
        if (outlet) {
          return /* @__PURE__ */ React.createElement(OutletContext.Provider, {
            value: context2
          }, outlet);
        }
        return outlet;
      }
      function useParams() {
        let {
          matches
        } = React.useContext(RouteContext);
        let routeMatch = matches[matches.length - 1];
        return routeMatch ? routeMatch.params : {};
      }
      function useResolvedPath(to2) {
        let {
          matches
        } = React.useContext(RouteContext);
        let {
          pathname: locationPathname
        } = useLocation();
        let routePathnamesJson = JSON.stringify(matches.map((match) => match.pathnameBase));
        return React.useMemo(() => resolveTo(to2, JSON.parse(routePathnamesJson), locationPathname), [to2, routePathnamesJson, locationPathname]);
      }
      function useRoutes(routes, locationArg) {
        !useInRouterContext() ? invariant(false, "useRoutes() may be used only in the context of a <Router> component.") : void 0;
        let {
          matches: parentMatches
        } = React.useContext(RouteContext);
        let routeMatch = parentMatches[parentMatches.length - 1];
        let parentParams = routeMatch ? routeMatch.params : {};
        let parentPathname = routeMatch ? routeMatch.pathname : "/";
        let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
        let parentRoute = routeMatch && routeMatch.route;
        {
          let parentPath = parentRoute && parentRoute.path || "";
          warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + parentPathname + '" (under <Route path="' + parentPath + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + parentPath + '"> to <Route ') + ('path="' + (parentPath === "/" ? "*" : parentPath + "/*") + '">.'));
        }
        let locationFromContext = useLocation();
        let location2;
        if (locationArg) {
          var _parsedLocationArg$pa;
          let parsedLocationArg = typeof locationArg === "string" ? history.parsePath(locationArg) : locationArg;
          !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? invariant(false, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + parentPathnameBase + '" ') + ('but pathname "' + parsedLocationArg.pathname + '" was given in the `location` prop.')) : void 0;
          location2 = parsedLocationArg;
        } else {
          location2 = locationFromContext;
        }
        let pathname = location2.pathname || "/";
        let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
        let matches = matchRoutes(routes, {
          pathname: remainingPathname
        });
        {
          warning(parentRoute || matches != null, 'No routes matched location "' + location2.pathname + location2.search + location2.hash + '" ');
          warning(matches == null || matches[matches.length - 1].route.element !== void 0, 'Matched leaf route at location "' + location2.pathname + location2.search + location2.hash + '" does not have an element. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.');
        }
        return _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
          params: Object.assign({}, parentParams, match.params),
          pathname: joinPaths([parentPathnameBase, match.pathname]),
          pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])
        })), parentMatches);
      }
      function createRoutesFromChildren(children) {
        let routes = [];
        React.Children.forEach(children, (element) => {
          if (!/* @__PURE__ */ React.isValidElement(element)) {
            return;
          }
          if (element.type === React.Fragment) {
            routes.push.apply(routes, createRoutesFromChildren(element.props.children));
            return;
          }
          !(element.type === Route) ? invariant(false, "[" + (typeof element.type === "string" ? element.type : element.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : void 0;
          let route = {
            caseSensitive: element.props.caseSensitive,
            element: element.props.element,
            index: element.props.index,
            path: element.props.path
          };
          if (element.props.children) {
            route.children = createRoutesFromChildren(element.props.children);
          }
          routes.push(route);
        });
        return routes;
      }
      function generatePath(path, params) {
        if (params === void 0) {
          params = {};
        }
        return path.replace(/:(\w+)/g, (_, key) => {
          !(params[key] != null) ? invariant(false, 'Missing ":' + key + '" param') : void 0;
          return params[key];
        }).replace(/\/*\*$/, (_) => params["*"] == null ? "" : params["*"].replace(/^\/*/, "/"));
      }
      function matchRoutes(routes, locationArg, basename) {
        if (basename === void 0) {
          basename = "/";
        }
        let location2 = typeof locationArg === "string" ? history.parsePath(locationArg) : locationArg;
        let pathname = stripBasename(location2.pathname || "/", basename);
        if (pathname == null) {
          return null;
        }
        let branches = flattenRoutes(routes);
        rankRouteBranches(branches);
        let matches = null;
        for (let i = 0; matches == null && i < branches.length; ++i) {
          matches = matchRouteBranch(branches[i], pathname);
        }
        return matches;
      }
      function flattenRoutes(routes, branches, parentsMeta, parentPath) {
        if (branches === void 0) {
          branches = [];
        }
        if (parentsMeta === void 0) {
          parentsMeta = [];
        }
        if (parentPath === void 0) {
          parentPath = "";
        }
        routes.forEach((route, index) => {
          let meta = {
            relativePath: route.path || "",
            caseSensitive: route.caseSensitive === true,
            childrenIndex: index,
            route
          };
          if (meta.relativePath.startsWith("/")) {
            !meta.relativePath.startsWith(parentPath) ? invariant(false, 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.") : void 0;
            meta.relativePath = meta.relativePath.slice(parentPath.length);
          }
          let path = joinPaths([parentPath, meta.relativePath]);
          let routesMeta = parentsMeta.concat(meta);
          if (route.children && route.children.length > 0) {
            !(route.index !== true) ? invariant(false, "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')) : void 0;
            flattenRoutes(route.children, branches, routesMeta, path);
          }
          if (route.path == null && !route.index) {
            return;
          }
          branches.push({
            path,
            score: computeScore(path, route.index),
            routesMeta
          });
        });
        return branches;
      }
      function rankRouteBranches(branches) {
        branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta) => meta.childrenIndex), b.routesMeta.map((meta) => meta.childrenIndex)));
      }
      const paramRe = /^:\w+$/;
      const dynamicSegmentValue = 3;
      const indexRouteValue = 2;
      const emptySegmentValue = 1;
      const staticSegmentValue = 10;
      const splatPenalty = -2;
      const isSplat = (s) => s === "*";
      function computeScore(path, index) {
        let segments = path.split("/");
        let initialScore = segments.length;
        if (segments.some(isSplat)) {
          initialScore += splatPenalty;
        }
        if (index) {
          initialScore += indexRouteValue;
        }
        return segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
      }
      function compareIndexes(a, b) {
        let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);
        return siblings ? a[a.length - 1] - b[b.length - 1] : 0;
      }
      function matchRouteBranch(branch, pathname) {
        let {
          routesMeta
        } = branch;
        let matchedParams = {};
        let matchedPathname = "/";
        let matches = [];
        for (let i = 0; i < routesMeta.length; ++i) {
          let meta = routesMeta[i];
          let end = i === routesMeta.length - 1;
          let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
          let match = matchPath({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end
          }, remainingPathname);
          if (!match)
            return null;
          Object.assign(matchedParams, match.params);
          let route = meta.route;
          matches.push({
            params: matchedParams,
            pathname: joinPaths([matchedPathname, match.pathname]),
            pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),
            route
          });
          if (match.pathnameBase !== "/") {
            matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
          }
        }
        return matches;
      }
      function renderMatches(matches) {
        return _renderMatches(matches);
      }
      function _renderMatches(matches, parentMatches) {
        if (parentMatches === void 0) {
          parentMatches = [];
        }
        if (matches == null)
          return null;
        return matches.reduceRight((outlet, match, index) => {
          return /* @__PURE__ */ React.createElement(RouteContext.Provider, {
            children: match.route.element !== void 0 ? match.route.element : /* @__PURE__ */ React.createElement(Outlet2, null),
            value: {
              outlet,
              matches: parentMatches.concat(matches.slice(0, index + 1))
            }
          });
        }, null);
      }
      function matchPath(pattern, pathname) {
        if (typeof pattern === "string") {
          pattern = {
            path: pattern,
            caseSensitive: false,
            end: true
          };
        }
        let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
        let match = pathname.match(matcher);
        if (!match)
          return null;
        let matchedPathname = match[0];
        let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
        let captureGroups = match.slice(1);
        let params = paramNames.reduce((memo, paramName, index) => {
          if (paramName === "*") {
            let splatValue = captureGroups[index] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
          }
          memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
          return memo;
        }, {});
        return {
          params,
          pathname: matchedPathname,
          pathnameBase,
          pattern
        };
      }
      function compilePath(path, caseSensitive, end) {
        if (caseSensitive === void 0) {
          caseSensitive = false;
        }
        if (end === void 0) {
          end = true;
        }
        warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
        let paramNames = [];
        let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/:(\w+)/g, (_, paramName) => {
          paramNames.push(paramName);
          return "([^\\/]+)";
        });
        if (path.endsWith("*")) {
          paramNames.push("*");
          regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
        } else {
          regexpSource += end ? "\\/*$" : "(?:\\b|\\/|$)";
        }
        let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
        return [matcher, paramNames];
      }
      function safelyDecodeURIComponent(value, paramName) {
        try {
          return decodeURIComponent(value);
        } catch (error) {
          warning(false, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ")."));
          return value;
        }
      }
      function resolvePath(to2, fromPathname) {
        if (fromPathname === void 0) {
          fromPathname = "/";
        }
        let {
          pathname: toPathname,
          search = "",
          hash = ""
        } = typeof to2 === "string" ? history.parsePath(to2) : to2;
        let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
        return {
          pathname,
          search: normalizeSearch(search),
          hash: normalizeHash(hash)
        };
      }
      function resolvePathname(relativePath, fromPathname) {
        let segments = fromPathname.replace(/\/+$/, "").split("/");
        let relativeSegments = relativePath.split("/");
        relativeSegments.forEach((segment) => {
          if (segment === "..") {
            if (segments.length > 1)
              segments.pop();
          } else if (segment !== ".") {
            segments.push(segment);
          }
        });
        return segments.length > 1 ? segments.join("/") : "/";
      }
      function resolveTo(toArg, routePathnames, locationPathname) {
        let to2 = typeof toArg === "string" ? history.parsePath(toArg) : toArg;
        let toPathname = toArg === "" || to2.pathname === "" ? "/" : to2.pathname;
        let from;
        if (toPathname == null) {
          from = locationPathname;
        } else {
          let routePathnameIndex = routePathnames.length - 1;
          if (toPathname.startsWith("..")) {
            let toSegments = toPathname.split("/");
            while (toSegments[0] === "..") {
              toSegments.shift();
              routePathnameIndex -= 1;
            }
            to2.pathname = toSegments.join("/");
          }
          from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
        }
        let path = resolvePath(to2, from);
        if (toPathname && toPathname !== "/" && toPathname.endsWith("/") && !path.pathname.endsWith("/")) {
          path.pathname += "/";
        }
        return path;
      }
      function getToPathname(to2) {
        return to2 === "" || to2.pathname === "" ? "/" : typeof to2 === "string" ? history.parsePath(to2).pathname : to2.pathname;
      }
      function stripBasename(pathname, basename) {
        if (basename === "/")
          return pathname;
        if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
          return null;
        }
        let nextChar = pathname.charAt(basename.length);
        if (nextChar && nextChar !== "/") {
          return null;
        }
        return pathname.slice(basename.length) || "/";
      }
      const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
      const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
      const normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
      const normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
      exports3.MemoryRouter = MemoryRouter;
      exports3.Navigate = Navigate;
      exports3.Outlet = Outlet2;
      exports3.Route = Route;
      exports3.Router = Router;
      exports3.Routes = Routes;
      exports3.UNSAFE_LocationContext = LocationContext;
      exports3.UNSAFE_NavigationContext = NavigationContext;
      exports3.UNSAFE_RouteContext = RouteContext;
      exports3.createRoutesFromChildren = createRoutesFromChildren;
      exports3.generatePath = generatePath;
      exports3.matchPath = matchPath;
      exports3.matchRoutes = matchRoutes;
      exports3.renderMatches = renderMatches;
      exports3.resolvePath = resolvePath;
      exports3.useHref = useHref;
      exports3.useInRouterContext = useInRouterContext;
      exports3.useLocation = useLocation;
      exports3.useMatch = useMatch;
      exports3.useNavigate = useNavigate2;
      exports3.useNavigationType = useNavigationType;
      exports3.useOutlet = useOutlet;
      exports3.useOutletContext = useOutletContext2;
      exports3.useParams = useParams;
      exports3.useResolvedPath = useResolvedPath;
      exports3.useRoutes = useRoutes;
      Object.defineProperty(exports3, "__esModule", { value: true });
    });
  }
});

// node_modules/react-router/main.js
var require_main2 = __commonJS({
  "node_modules/react-router/main.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./umd/react-router.production.min.js");
    } else {
      module2.exports = require_react_router_development();
    }
  }
});

// node_modules/react-router-dom/umd/react-router-dom.development.js
var require_react_router_dom_development = __commonJS({
  "node_modules/react-router-dom/umd/react-router-dom.development.js"(exports2, module2) {
    init_define_process();
    (function(global2, factory) {
      typeof exports2 === "object" && typeof module2 !== "undefined" ? factory(exports2, require_react(), require_main(), require_main2()) : typeof define === "function" && define.amd ? define(["exports", "react", "history", "react-router"], factory) : (global2 = global2 || self, factory(global2.ReactRouterDOM = {}, global2.React, global2.HistoryLibrary, global2.ReactRouter));
    })(exports2, function(exports3, React, history, reactRouter) {
      "use strict";
      function _extends() {
        _extends = Object.assign || function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        return _extends.apply(this, arguments);
      }
      function _objectWithoutPropertiesLoose(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i;
        for (i = 0; i < sourceKeys.length; i++) {
          key = sourceKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      const _excluded = ["onClick", "reloadDocument", "replace", "state", "target", "to"], _excluded2 = ["aria-current", "caseSensitive", "className", "end", "style", "to", "children"];
      function warning(cond, message) {
        if (!cond) {
          if (typeof console !== "undefined")
            console.warn(message);
          try {
            throw new Error(message);
          } catch (e2) {
          }
        }
      }
      function BrowserRouter(_ref) {
        let {
          basename,
          children,
          window: window2
        } = _ref;
        let historyRef = React.useRef();
        if (historyRef.current == null) {
          historyRef.current = history.createBrowserHistory({
            window: window2
          });
        }
        let history$1 = historyRef.current;
        let [state, setState] = React.useState({
          action: history$1.action,
          location: history$1.location
        });
        React.useLayoutEffect(() => history$1.listen(setState), [history$1]);
        return /* @__PURE__ */ React.createElement(reactRouter.Router, {
          basename,
          children,
          location: state.location,
          navigationType: state.action,
          navigator: history$1
        });
      }
      function HashRouter(_ref2) {
        let {
          basename,
          children,
          window: window2
        } = _ref2;
        let historyRef = React.useRef();
        if (historyRef.current == null) {
          historyRef.current = history.createHashHistory({
            window: window2
          });
        }
        let history$1 = historyRef.current;
        let [state, setState] = React.useState({
          action: history$1.action,
          location: history$1.location
        });
        React.useLayoutEffect(() => history$1.listen(setState), [history$1]);
        return /* @__PURE__ */ React.createElement(reactRouter.Router, {
          basename,
          children,
          location: state.location,
          navigationType: state.action,
          navigator: history$1
        });
      }
      function HistoryRouter(_ref3) {
        let {
          basename,
          children,
          history: history2
        } = _ref3;
        const [state, setState] = React.useState({
          action: history2.action,
          location: history2.location
        });
        React.useLayoutEffect(() => history2.listen(setState), [history2]);
        return /* @__PURE__ */ React.createElement(reactRouter.Router, {
          basename,
          children,
          location: state.location,
          navigationType: state.action,
          navigator: history2
        });
      }
      {
        HistoryRouter.displayName = "unstable_HistoryRouter";
      }
      function isModifiedEvent(event) {
        return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
      }
      const Link2 = /* @__PURE__ */ React.forwardRef(function LinkWithRef(_ref4, ref) {
        let {
          onClick,
          reloadDocument,
          replace = false,
          state,
          target,
          to: to2
        } = _ref4, rest = _objectWithoutPropertiesLoose(_ref4, _excluded);
        let href = reactRouter.useHref(to2);
        let internalOnClick = useLinkClickHandler(to2, {
          replace,
          state,
          target
        });
        function handleClick(event) {
          if (onClick)
            onClick(event);
          if (!event.defaultPrevented && !reloadDocument) {
            internalOnClick(event);
          }
        }
        return /* @__PURE__ */ React.createElement("a", _extends({}, rest, {
          href,
          onClick: handleClick,
          ref,
          target
        }));
      });
      {
        Link2.displayName = "Link";
      }
      const NavLink = /* @__PURE__ */ React.forwardRef(function NavLinkWithRef(_ref5, ref) {
        let {
          "aria-current": ariaCurrentProp = "page",
          caseSensitive = false,
          className: classNameProp = "",
          end = false,
          style: styleProp,
          to: to2,
          children
        } = _ref5, rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);
        let location2 = reactRouter.useLocation();
        let path = reactRouter.useResolvedPath(to2);
        let locationPathname = location2.pathname;
        let toPathname = path.pathname;
        if (!caseSensitive) {
          locationPathname = locationPathname.toLowerCase();
          toPathname = toPathname.toLowerCase();
        }
        let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
        let ariaCurrent = isActive ? ariaCurrentProp : void 0;
        let className;
        if (typeof classNameProp === "function") {
          className = classNameProp({
            isActive
          });
        } else {
          className = [classNameProp, isActive ? "active" : null].filter(Boolean).join(" ");
        }
        let style = typeof styleProp === "function" ? styleProp({
          isActive
        }) : styleProp;
        return /* @__PURE__ */ React.createElement(Link2, _extends({}, rest, {
          "aria-current": ariaCurrent,
          className,
          ref,
          style,
          to: to2
        }), typeof children === "function" ? children({
          isActive
        }) : children);
      });
      {
        NavLink.displayName = "NavLink";
      }
      function useLinkClickHandler(to2, _temp) {
        let {
          target,
          replace: replaceProp,
          state
        } = _temp === void 0 ? {} : _temp;
        let navigate = reactRouter.useNavigate();
        let location2 = reactRouter.useLocation();
        let path = reactRouter.useResolvedPath(to2);
        return React.useCallback((event) => {
          if (event.button === 0 && (!target || target === "_self") && !isModifiedEvent(event)) {
            event.preventDefault();
            let replace = !!replaceProp || history.createPath(location2) === history.createPath(path);
            navigate(to2, {
              replace,
              state
            });
          }
        }, [location2, navigate, path, replaceProp, state, target, to2]);
      }
      function useSearchParams(defaultInit) {
        warning(typeof URLSearchParams !== "undefined", "You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.");
        let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));
        let location2 = reactRouter.useLocation();
        let searchParams = React.useMemo(() => {
          let searchParams2 = createSearchParams(location2.search);
          for (let key of defaultSearchParamsRef.current.keys()) {
            if (!searchParams2.has(key)) {
              defaultSearchParamsRef.current.getAll(key).forEach((value) => {
                searchParams2.append(key, value);
              });
            }
          }
          return searchParams2;
        }, [location2.search]);
        let navigate = reactRouter.useNavigate();
        let setSearchParams = React.useCallback((nextInit, navigateOptions) => {
          navigate("?" + createSearchParams(nextInit), navigateOptions);
        }, [navigate]);
        return [searchParams, setSearchParams];
      }
      function createSearchParams(init) {
        if (init === void 0) {
          init = "";
        }
        return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
          let value = init[key];
          return memo.concat(Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]);
        }, []));
      }
      Object.defineProperty(exports3, "MemoryRouter", {
        enumerable: true,
        get: function() {
          return reactRouter.MemoryRouter;
        }
      });
      Object.defineProperty(exports3, "Navigate", {
        enumerable: true,
        get: function() {
          return reactRouter.Navigate;
        }
      });
      Object.defineProperty(exports3, "Outlet", {
        enumerable: true,
        get: function() {
          return reactRouter.Outlet;
        }
      });
      Object.defineProperty(exports3, "Route", {
        enumerable: true,
        get: function() {
          return reactRouter.Route;
        }
      });
      Object.defineProperty(exports3, "Router", {
        enumerable: true,
        get: function() {
          return reactRouter.Router;
        }
      });
      Object.defineProperty(exports3, "Routes", {
        enumerable: true,
        get: function() {
          return reactRouter.Routes;
        }
      });
      Object.defineProperty(exports3, "UNSAFE_LocationContext", {
        enumerable: true,
        get: function() {
          return reactRouter.UNSAFE_LocationContext;
        }
      });
      Object.defineProperty(exports3, "UNSAFE_NavigationContext", {
        enumerable: true,
        get: function() {
          return reactRouter.UNSAFE_NavigationContext;
        }
      });
      Object.defineProperty(exports3, "UNSAFE_RouteContext", {
        enumerable: true,
        get: function() {
          return reactRouter.UNSAFE_RouteContext;
        }
      });
      Object.defineProperty(exports3, "createRoutesFromChildren", {
        enumerable: true,
        get: function() {
          return reactRouter.createRoutesFromChildren;
        }
      });
      Object.defineProperty(exports3, "generatePath", {
        enumerable: true,
        get: function() {
          return reactRouter.generatePath;
        }
      });
      Object.defineProperty(exports3, "matchPath", {
        enumerable: true,
        get: function() {
          return reactRouter.matchPath;
        }
      });
      Object.defineProperty(exports3, "matchRoutes", {
        enumerable: true,
        get: function() {
          return reactRouter.matchRoutes;
        }
      });
      Object.defineProperty(exports3, "renderMatches", {
        enumerable: true,
        get: function() {
          return reactRouter.renderMatches;
        }
      });
      Object.defineProperty(exports3, "resolvePath", {
        enumerable: true,
        get: function() {
          return reactRouter.resolvePath;
        }
      });
      Object.defineProperty(exports3, "useHref", {
        enumerable: true,
        get: function() {
          return reactRouter.useHref;
        }
      });
      Object.defineProperty(exports3, "useInRouterContext", {
        enumerable: true,
        get: function() {
          return reactRouter.useInRouterContext;
        }
      });
      Object.defineProperty(exports3, "useLocation", {
        enumerable: true,
        get: function() {
          return reactRouter.useLocation;
        }
      });
      Object.defineProperty(exports3, "useMatch", {
        enumerable: true,
        get: function() {
          return reactRouter.useMatch;
        }
      });
      Object.defineProperty(exports3, "useNavigate", {
        enumerable: true,
        get: function() {
          return reactRouter.useNavigate;
        }
      });
      Object.defineProperty(exports3, "useNavigationType", {
        enumerable: true,
        get: function() {
          return reactRouter.useNavigationType;
        }
      });
      Object.defineProperty(exports3, "useOutlet", {
        enumerable: true,
        get: function() {
          return reactRouter.useOutlet;
        }
      });
      Object.defineProperty(exports3, "useOutletContext", {
        enumerable: true,
        get: function() {
          return reactRouter.useOutletContext;
        }
      });
      Object.defineProperty(exports3, "useParams", {
        enumerable: true,
        get: function() {
          return reactRouter.useParams;
        }
      });
      Object.defineProperty(exports3, "useResolvedPath", {
        enumerable: true,
        get: function() {
          return reactRouter.useResolvedPath;
        }
      });
      Object.defineProperty(exports3, "useRoutes", {
        enumerable: true,
        get: function() {
          return reactRouter.useRoutes;
        }
      });
      exports3.BrowserRouter = BrowserRouter;
      exports3.HashRouter = HashRouter;
      exports3.Link = Link2;
      exports3.NavLink = NavLink;
      exports3.createSearchParams = createSearchParams;
      exports3.unstable_HistoryRouter = HistoryRouter;
      exports3.useLinkClickHandler = useLinkClickHandler;
      exports3.useSearchParams = useSearchParams;
      Object.defineProperty(exports3, "__esModule", { value: true });
    });
  }
});

// node_modules/react-router-dom/main.js
var require_main3 = __commonJS({
  "node_modules/react-router-dom/main.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./umd/react-router-dom.production.min.js");
    } else {
      module2.exports = require_react_router_dom_development();
    }
  }
});

// node_modules/@remix-run/server-runtime/routeMatching.js
var require_routeMatching = __commonJS({
  "node_modules/@remix-run/server-runtime/routeMatching.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var reactRouterDom = require_main3();
    function matchServerRoutes(routes, pathname) {
      let matches = reactRouterDom.matchRoutes(routes, pathname);
      if (!matches)
        return null;
      return matches.map((match) => ({
        params: match.params,
        pathname: match.pathname,
        route: match.route
      }));
    }
    exports2.matchServerRoutes = matchServerRoutes;
  }
});

// node_modules/@remix-run/server-runtime/mode.js
var require_mode = __commonJS({
  "node_modules/@remix-run/server-runtime/mode.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.ServerMode = void 0;
    (function(ServerMode) {
      ServerMode["Development"] = "development";
      ServerMode["Production"] = "production";
      ServerMode["Test"] = "test";
    })(exports2.ServerMode || (exports2.ServerMode = {}));
    function isServerMode(value) {
      return value === exports2.ServerMode.Development || value === exports2.ServerMode.Production || value === exports2.ServerMode.Test;
    }
    exports2.isServerMode = isServerMode;
  }
});

// node_modules/@remix-run/server-runtime/routes.js
var require_routes = __commonJS({
  "node_modules/@remix-run/server-runtime/routes.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    function createRoutes(manifest, parentId) {
      return Object.keys(manifest).filter((key) => manifest[key].parentId === parentId).map((id) => ({
        ...manifest[id],
        children: createRoutes(manifest, id)
      }));
    }
    exports2.createRoutes = createRoutes;
  }
});

// node_modules/jsesc/jsesc.js
var require_jsesc = __commonJS({
  "node_modules/jsesc/jsesc.js"(exports2, module2) {
    init_define_process();
    "use strict";
    var object = {};
    var hasOwnProperty = object.hasOwnProperty;
    var forOwn = (object2, callback) => {
      for (const key in object2) {
        if (hasOwnProperty.call(object2, key)) {
          callback(key, object2[key]);
        }
      }
    };
    var extend = (destination, source) => {
      if (!source) {
        return destination;
      }
      forOwn(source, (key, value) => {
        destination[key] = value;
      });
      return destination;
    };
    var forEach = (array, callback) => {
      const length = array.length;
      let index = -1;
      while (++index < length) {
        callback(array[index]);
      }
    };
    var fourHexEscape = (hex) => {
      return "\\u" + ("0000" + hex).slice(-4);
    };
    var hexadecimal = (code, lowercase) => {
      let hexadecimal2 = code.toString(16);
      if (lowercase)
        return hexadecimal2;
      return hexadecimal2.toUpperCase();
    };
    var toString = object.toString;
    var isArray = Array.isArray;
    var isBuffer = (value) => {
      return typeof Buffer === "function" && Buffer.isBuffer(value);
    };
    var isObject = (value) => {
      return toString.call(value) == "[object Object]";
    };
    var isString = (value) => {
      return typeof value == "string" || toString.call(value) == "[object String]";
    };
    var isNumber = (value) => {
      return typeof value == "number" || toString.call(value) == "[object Number]";
    };
    var isFunction = (value) => {
      return typeof value == "function";
    };
    var isMap = (value) => {
      return toString.call(value) == "[object Map]";
    };
    var isSet = (value) => {
      return toString.call(value) == "[object Set]";
    };
    var singleEscapes = {
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t"
    };
    var regexSingleEscape = /[\\\b\f\n\r\t]/;
    var regexDigit = /[0-9]/;
    var regexWhitespace = /[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;
    var escapeEverythingRegex = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^]/g;
    var escapeNonAsciiRegex = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^ !#-&\(-\[\]-_a-~]/g;
    var jsesc = (argument, options2) => {
      const increaseIndentation = () => {
        oldIndent = indent;
        ++options2.indentLevel;
        indent = options2.indent.repeat(options2.indentLevel);
      };
      const defaults = {
        "escapeEverything": false,
        "minimal": false,
        "isScriptContext": false,
        "quotes": "single",
        "wrap": false,
        "es6": false,
        "json": false,
        "compact": true,
        "lowercaseHex": false,
        "numbers": "decimal",
        "indent": "	",
        "indentLevel": 0,
        "__inline1__": false,
        "__inline2__": false
      };
      const json3 = options2 && options2.json;
      if (json3) {
        defaults.quotes = "double";
        defaults.wrap = true;
      }
      options2 = extend(defaults, options2);
      if (options2.quotes != "single" && options2.quotes != "double" && options2.quotes != "backtick") {
        options2.quotes = "single";
      }
      const quote = options2.quotes == "double" ? '"' : options2.quotes == "backtick" ? "`" : "'";
      const compact = options2.compact;
      const lowercaseHex = options2.lowercaseHex;
      let indent = options2.indent.repeat(options2.indentLevel);
      let oldIndent = "";
      const inline1 = options2.__inline1__;
      const inline2 = options2.__inline2__;
      const newLine = compact ? "" : "\n";
      let result;
      let isEmpty = true;
      const useBinNumbers = options2.numbers == "binary";
      const useOctNumbers = options2.numbers == "octal";
      const useDecNumbers = options2.numbers == "decimal";
      const useHexNumbers = options2.numbers == "hexadecimal";
      if (json3 && argument && isFunction(argument.toJSON)) {
        argument = argument.toJSON();
      }
      if (!isString(argument)) {
        if (isMap(argument)) {
          if (argument.size == 0) {
            return "new Map()";
          }
          if (!compact) {
            options2.__inline1__ = true;
            options2.__inline2__ = false;
          }
          return "new Map(" + jsesc(Array.from(argument), options2) + ")";
        }
        if (isSet(argument)) {
          if (argument.size == 0) {
            return "new Set()";
          }
          return "new Set(" + jsesc(Array.from(argument), options2) + ")";
        }
        if (isBuffer(argument)) {
          if (argument.length == 0) {
            return "Buffer.from([])";
          }
          return "Buffer.from(" + jsesc(Array.from(argument), options2) + ")";
        }
        if (isArray(argument)) {
          result = [];
          options2.wrap = true;
          if (inline1) {
            options2.__inline1__ = false;
            options2.__inline2__ = true;
          }
          if (!inline2) {
            increaseIndentation();
          }
          forEach(argument, (value) => {
            isEmpty = false;
            if (inline2) {
              options2.__inline2__ = false;
            }
            result.push((compact || inline2 ? "" : indent) + jsesc(value, options2));
          });
          if (isEmpty) {
            return "[]";
          }
          if (inline2) {
            return "[" + result.join(", ") + "]";
          }
          return "[" + newLine + result.join("," + newLine) + newLine + (compact ? "" : oldIndent) + "]";
        } else if (isNumber(argument)) {
          if (json3) {
            return JSON.stringify(argument);
          }
          if (useDecNumbers) {
            return String(argument);
          }
          if (useHexNumbers) {
            let hexadecimal2 = argument.toString(16);
            if (!lowercaseHex) {
              hexadecimal2 = hexadecimal2.toUpperCase();
            }
            return "0x" + hexadecimal2;
          }
          if (useBinNumbers) {
            return "0b" + argument.toString(2);
          }
          if (useOctNumbers) {
            return "0o" + argument.toString(8);
          }
        } else if (!isObject(argument)) {
          if (json3) {
            return JSON.stringify(argument) || "null";
          }
          return String(argument);
        } else {
          result = [];
          options2.wrap = true;
          increaseIndentation();
          forOwn(argument, (key, value) => {
            isEmpty = false;
            result.push((compact ? "" : indent) + jsesc(key, options2) + ":" + (compact ? "" : " ") + jsesc(value, options2));
          });
          if (isEmpty) {
            return "{}";
          }
          return "{" + newLine + result.join("," + newLine) + newLine + (compact ? "" : oldIndent) + "}";
        }
      }
      const regex = options2.escapeEverything ? escapeEverythingRegex : escapeNonAsciiRegex;
      result = argument.replace(regex, (char, pair, lone, quoteChar, index, string) => {
        if (pair) {
          if (options2.minimal)
            return pair;
          const first = pair.charCodeAt(0);
          const second = pair.charCodeAt(1);
          if (options2.es6) {
            const codePoint = (first - 55296) * 1024 + second - 56320 + 65536;
            const hex2 = hexadecimal(codePoint, lowercaseHex);
            return "\\u{" + hex2 + "}";
          }
          return fourHexEscape(hexadecimal(first, lowercaseHex)) + fourHexEscape(hexadecimal(second, lowercaseHex));
        }
        if (lone) {
          return fourHexEscape(hexadecimal(lone.charCodeAt(0), lowercaseHex));
        }
        if (char == "\0" && !json3 && !regexDigit.test(string.charAt(index + 1))) {
          return "\\0";
        }
        if (quoteChar) {
          if (quoteChar == quote || options2.escapeEverything) {
            return "\\" + quoteChar;
          }
          return quoteChar;
        }
        if (regexSingleEscape.test(char)) {
          return singleEscapes[char];
        }
        if (options2.minimal && !regexWhitespace.test(char)) {
          return char;
        }
        const hex = hexadecimal(char.charCodeAt(0), lowercaseHex);
        if (json3 || hex.length > 2) {
          return fourHexEscape(hex);
        }
        return "\\x" + ("00" + hex).slice(-2);
      });
      if (quote == "`") {
        result = result.replace(/\$\{/g, "\\${");
      }
      if (options2.isScriptContext) {
        result = result.replace(/<\/(script|style)/gi, "<\\/$1").replace(/<!--/g, json3 ? "\\u003C!--" : "\\x3C!--");
      }
      if (options2.wrap) {
        result = quote + result + quote;
      }
      return result;
    };
    jsesc.version = "3.0.2";
    module2.exports = jsesc;
  }
});

// node_modules/@remix-run/server-runtime/serverHandoff.js
var require_serverHandoff = __commonJS({
  "node_modules/@remix-run/server-runtime/serverHandoff.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var jsesc = require_jsesc();
    function _interopDefaultLegacy(e2) {
      return e2 && typeof e2 === "object" && "default" in e2 ? e2 : { "default": e2 };
    }
    var jsesc__default = /* @__PURE__ */ _interopDefaultLegacy(jsesc);
    function createServerHandoffString(serverHandoff) {
      return jsesc__default["default"](serverHandoff, {
        isScriptContext: true
      });
    }
    exports2.createServerHandoffString = createServerHandoffString;
  }
});

// node_modules/@remix-run/server-runtime/server.js
var require_server = __commonJS({
  "node_modules/@remix-run/server-runtime/server.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var data = require_data();
    var entry = require_entry();
    var errors = require_errors();
    var headers = require_headers();
    var routeMatching = require_routeMatching();
    var mode = require_mode();
    var routes = require_routes();
    var responses = require_responses();
    var serverHandoff = require_serverHandoff();
    function createRequestHandler2(build2, platform, mode$1) {
      let routes$1 = routes.createRoutes(build2.routes);
      let serverMode = mode.isServerMode(mode$1) ? mode$1 : mode.ServerMode.Production;
      return async function requestHandler(request2, loadContext) {
        let url2 = new URL(request2.url);
        let matches = routeMatching.matchServerRoutes(routes$1, url2.pathname);
        let requestType = getRequestType(url2, matches);
        let response;
        switch (requestType) {
          case "data":
            response = await handleDataRequest({
              request: request2,
              loadContext,
              matches,
              handleDataRequest: build2.entry.module.handleDataRequest,
              serverMode
            });
            break;
          case "document":
            response = await renderDocumentRequest({
              build: build2,
              loadContext,
              matches,
              request: request2,
              routes: routes$1,
              serverMode
            });
            break;
          case "resource":
            response = await handleResourceRequest({
              request: request2,
              loadContext,
              matches,
              serverMode
            });
            break;
        }
        if (request2.method.toLowerCase() === "head") {
          return new Response(null, {
            headers: response.headers,
            status: response.status,
            statusText: response.statusText
          });
        }
        return response;
      };
    }
    async function handleDataRequest({
      handleDataRequest: handleDataRequest2,
      loadContext,
      matches,
      request: request2,
      serverMode
    }) {
      if (!isValidRequestMethod(request2)) {
        return errorBoundaryError(new Error(`Invalid request method "${request2.method}"`), 405);
      }
      let url2 = new URL(request2.url);
      if (!matches) {
        return errorBoundaryError(new Error(`No route matches URL "${url2.pathname}"`), 404);
      }
      let response;
      let match;
      try {
        if (isActionRequest(request2)) {
          match = getActionRequestMatch(url2, matches);
          response = await data.callRouteAction({
            loadContext,
            match,
            request: request2
          });
        } else {
          let routeId = url2.searchParams.get("_data");
          if (!routeId) {
            return errorBoundaryError(new Error(`Missing route id in ?_data`), 403);
          }
          let tempMatch = matches.find((match2) => match2.route.id === routeId);
          if (!tempMatch) {
            return errorBoundaryError(new Error(`Route "${routeId}" does not match URL "${url2.pathname}"`), 403);
          }
          match = tempMatch;
          response = await data.callRouteLoader({
            loadContext,
            match,
            request: request2
          });
        }
        if (responses.isRedirectResponse(response)) {
          let headers2 = new Headers(response.headers);
          headers2.set("X-Remix-Redirect", headers2.get("Location"));
          headers2.delete("Location");
          return new Response(null, {
            status: 204,
            headers: headers2
          });
        }
        if (handleDataRequest2) {
          response = await handleDataRequest2(response.clone(), {
            context: loadContext,
            params: match.params,
            request: request2.clone()
          });
        }
        return response;
      } catch (error) {
        if (serverMode !== mode.ServerMode.Test) {
          console.error(error);
        }
        if (serverMode === mode.ServerMode.Development) {
          return errorBoundaryError(error, 500);
        }
        return errorBoundaryError(new Error("Unexpected Server Error"), 500);
      }
    }
    async function renderDocumentRequest({
      build: build2,
      loadContext,
      matches,
      request: request2,
      routes: routes2,
      serverMode
    }) {
      let url2 = new URL(request2.url);
      let appState = {
        trackBoundaries: true,
        trackCatchBoundaries: true,
        catchBoundaryRouteId: null,
        renderBoundaryRouteId: null,
        loaderBoundaryRouteId: null,
        error: void 0,
        catch: void 0
      };
      if (!isValidRequestMethod(request2)) {
        matches = null;
        appState.trackCatchBoundaries = false;
        appState.catch = {
          data: null,
          status: 405,
          statusText: "Method Not Allowed"
        };
      } else if (!matches) {
        appState.trackCatchBoundaries = false;
        appState.catch = {
          data: null,
          status: 404,
          statusText: "Not Found"
        };
      }
      let actionStatus;
      let actionData;
      let actionMatch;
      let actionResponse;
      if (matches && isActionRequest(request2)) {
        actionMatch = getActionRequestMatch(url2, matches);
        try {
          actionResponse = await data.callRouteAction({
            loadContext,
            match: actionMatch,
            request: request2
          });
          if (responses.isRedirectResponse(actionResponse)) {
            return actionResponse;
          }
          actionStatus = {
            status: actionResponse.status,
            statusText: actionResponse.statusText
          };
          if (responses.isCatchResponse(actionResponse)) {
            appState.catchBoundaryRouteId = getDeepestRouteIdWithBoundary(matches, "CatchBoundary");
            appState.trackCatchBoundaries = false;
            appState.catch = {
              ...actionStatus,
              data: await data.extractData(actionResponse)
            };
          } else {
            actionData = {
              [actionMatch.route.id]: await data.extractData(actionResponse)
            };
          }
        } catch (error) {
          appState.loaderBoundaryRouteId = getDeepestRouteIdWithBoundary(matches, "ErrorBoundary");
          appState.trackBoundaries = false;
          appState.error = await errors.serializeError(error);
          if (serverMode !== mode.ServerMode.Test) {
            console.error(`There was an error running the action for route ${actionMatch.route.id}`);
          }
        }
      }
      let routeModules = entry.createEntryRouteModules(build2.routes);
      let matchesToLoad = matches || [];
      if (appState.catch) {
        matchesToLoad = getMatchesUpToDeepestBoundary(matchesToLoad.slice(0, -1), "CatchBoundary");
      } else if (appState.error) {
        matchesToLoad = getMatchesUpToDeepestBoundary(matchesToLoad.slice(0, -1), "ErrorBoundary");
      }
      let routeLoaderResults = await Promise.allSettled(matchesToLoad.map((match) => match.route.module.loader ? data.callRouteLoader({
        loadContext,
        match,
        request: request2
      }) : Promise.resolve(void 0)));
      let actionCatch = appState.catch;
      let actionError = appState.error;
      let actionCatchBoundaryRouteId = appState.catchBoundaryRouteId;
      let actionLoaderBoundaryRouteId = appState.loaderBoundaryRouteId;
      appState.catch = void 0;
      appState.error = void 0;
      let routeLoaderResponses = {};
      let loaderStatusCodes = [];
      let routeData = {};
      for (let index = 0; index < matchesToLoad.length; index++) {
        let match = matchesToLoad[index];
        let result = routeLoaderResults[index];
        let error = result.status === "rejected" ? result.reason : void 0;
        let response = result.status === "fulfilled" ? result.value : void 0;
        let isRedirect = response ? responses.isRedirectResponse(response) : false;
        let isCatch = response ? responses.isCatchResponse(response) : false;
        if (appState.catch || appState.error) {
          break;
        }
        if (!actionCatch && !actionError && response && isRedirect) {
          return response;
        }
        if (match.route.module.CatchBoundary) {
          appState.catchBoundaryRouteId = match.route.id;
        }
        if (match.route.module.ErrorBoundary) {
          appState.loaderBoundaryRouteId = match.route.id;
        }
        if (error) {
          loaderStatusCodes.push(500);
          appState.trackBoundaries = false;
          appState.error = await errors.serializeError(error);
          if (serverMode !== mode.ServerMode.Test) {
            console.error(`There was an error running the data loader for route ${match.route.id}`);
          }
          break;
        } else if (response) {
          routeLoaderResponses[match.route.id] = response;
          loaderStatusCodes.push(response.status);
          if (isCatch) {
            appState.trackCatchBoundaries = false;
            appState.catch = {
              data: await data.extractData(response),
              status: response.status,
              statusText: response.statusText
            };
            break;
          } else {
            routeData[match.route.id] = await data.extractData(response);
          }
        }
      }
      if (!appState.catch) {
        appState.catchBoundaryRouteId = actionCatchBoundaryRouteId;
      }
      if (!appState.error) {
        appState.loaderBoundaryRouteId = actionLoaderBoundaryRouteId;
      }
      appState.catch = actionCatch || appState.catch;
      appState.error = actionError || appState.error;
      let renderableMatches = getRenderableMatches(matches, appState);
      if (!renderableMatches) {
        renderableMatches = [];
        let root = routes2[0];
        if (root !== null && root !== void 0 && root.module.CatchBoundary) {
          appState.catchBoundaryRouteId = "root";
          renderableMatches.push({
            params: {},
            pathname: "",
            route: routes2[0]
          });
        }
      }
      let notOkResponse = actionStatus && actionStatus.status !== 200 ? actionStatus.status : loaderStatusCodes.find((status) => status !== 200);
      let responseStatusCode = appState.error ? 500 : typeof notOkResponse === "number" ? notOkResponse : appState.catch ? appState.catch.status : 200;
      let responseHeaders = headers.getDocumentHeaders(build2, renderableMatches, routeLoaderResponses, actionResponse);
      let entryMatches = entry.createEntryMatches(renderableMatches, build2.assets.routes);
      let serverHandoff$1 = {
        actionData,
        appState,
        matches: entryMatches,
        routeData
      };
      let entryContext = {
        ...serverHandoff$1,
        manifest: build2.assets,
        routeModules,
        serverHandoffString: serverHandoff.createServerHandoffString(serverHandoff$1)
      };
      let handleDocumentRequest = build2.entry.module.default;
      try {
        return await handleDocumentRequest(request2.clone(), responseStatusCode, responseHeaders, entryContext);
      } catch (error) {
        responseStatusCode = 500;
        appState.trackBoundaries = false;
        appState.error = await errors.serializeError(error);
        entryContext.serverHandoffString = serverHandoff.createServerHandoffString(serverHandoff$1);
        try {
          return await handleDocumentRequest(request2.clone(), responseStatusCode, responseHeaders, entryContext);
        } catch (error2) {
          if (serverMode !== mode.ServerMode.Test) {
            console.error(error2);
          }
          let message = "Unexpected Server Error";
          if (serverMode === mode.ServerMode.Development) {
            message += `

${String(error2)}`;
          }
          return new Response(message, {
            status: 500,
            headers: {
              "Content-Type": "text/plain"
            }
          });
        }
      }
    }
    async function handleResourceRequest({
      loadContext,
      matches,
      request: request2,
      serverMode
    }) {
      let match = matches.slice(-1)[0];
      try {
        if (isActionRequest(request2)) {
          return await data.callRouteAction({
            match,
            loadContext,
            request: request2
          });
        } else {
          return await data.callRouteLoader({
            match,
            loadContext,
            request: request2
          });
        }
      } catch (error) {
        if (serverMode !== mode.ServerMode.Test) {
          console.error(error);
        }
        let message = "Unexpected Server Error";
        if (serverMode === mode.ServerMode.Development) {
          message += `

${String(error)}`;
        }
        return new Response(message, {
          status: 500,
          headers: {
            "Content-Type": "text/plain"
          }
        });
      }
    }
    function getRequestType(url2, matches) {
      if (url2.searchParams.has("_data")) {
        return "data";
      }
      if (!matches) {
        return "document";
      }
      let match = matches.slice(-1)[0];
      if (!match.route.module.default) {
        return "resource";
      }
      return "document";
    }
    function isActionRequest(request2) {
      let method = request2.method.toLowerCase();
      return method === "post" || method === "put" || method === "patch" || method === "delete";
    }
    function isHeadRequest(request2) {
      return request2.method.toLowerCase() === "head";
    }
    function isValidRequestMethod(request2) {
      return request2.method.toLowerCase() === "get" || isHeadRequest(request2) || isActionRequest(request2);
    }
    async function errorBoundaryError(error, status) {
      return responses.json(await errors.serializeError(error), {
        status,
        headers: {
          "X-Remix-Error": "yes"
        }
      });
    }
    function isIndexRequestUrl(url2) {
      let indexRequest = false;
      for (let param of url2.searchParams.getAll("index")) {
        if (!param) {
          indexRequest = true;
        }
      }
      return indexRequest;
    }
    function getActionRequestMatch(url2, matches) {
      let match = matches.slice(-1)[0];
      if (!isIndexRequestUrl(url2) && match.route.id.endsWith("/index")) {
        return matches.slice(-2)[0];
      }
      return match;
    }
    function getDeepestRouteIdWithBoundary(matches, key) {
      let matched = getMatchesUpToDeepestBoundary(matches, key).slice(-1)[0];
      return matched ? matched.route.id : null;
    }
    function getMatchesUpToDeepestBoundary(matches, key) {
      let deepestBoundaryIndex = -1;
      matches.forEach((match, index) => {
        if (match.route.module[key]) {
          deepestBoundaryIndex = index;
        }
      });
      if (deepestBoundaryIndex === -1) {
        return [];
      }
      return matches.slice(0, deepestBoundaryIndex + 1);
    }
    function getRenderableMatches(matches, appState) {
      if (!matches) {
        return null;
      }
      if (!appState.catch && !appState.error) {
        return matches;
      }
      let lastRenderableIndex = -1;
      matches.forEach((match, index) => {
        let id = match.route.id;
        if (appState.renderBoundaryRouteId === id || appState.loaderBoundaryRouteId === id || appState.catchBoundaryRouteId === id) {
          lastRenderableIndex = index;
        }
      });
      return matches.slice(0, lastRenderableIndex + 1);
    }
    exports2.createRequestHandler = createRequestHandler2;
  }
});

// node_modules/@remix-run/server-runtime/warnings.js
var require_warnings = __commonJS({
  "node_modules/@remix-run/server-runtime/warnings.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var alreadyWarned = {};
    function warnOnce(condition, message) {
      if (!condition && !alreadyWarned[message]) {
        alreadyWarned[message] = true;
        console.warn(message);
      }
    }
    exports2.warnOnce = warnOnce;
  }
});

// node_modules/@remix-run/server-runtime/sessions.js
var require_sessions = __commonJS({
  "node_modules/@remix-run/server-runtime/sessions.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var cookies = require_cookies();
    var warnings = require_warnings();
    function flash(name) {
      return `__flash_${name}__`;
    }
    function createSession2(initialData = {}, id = "") {
      let map = new Map(Object.entries(initialData));
      return {
        get id() {
          return id;
        },
        get data() {
          return Object.fromEntries(map);
        },
        has(name) {
          return map.has(name) || map.has(flash(name));
        },
        get(name) {
          if (map.has(name))
            return map.get(name);
          let flashName = flash(name);
          if (map.has(flashName)) {
            let value = map.get(flashName);
            map.delete(flashName);
            return value;
          }
          return void 0;
        },
        set(name, value) {
          map.set(name, value);
        },
        flash(name, value) {
          map.set(flash(name), value);
        },
        unset(name) {
          map.delete(name);
        }
      };
    }
    function isSession2(object) {
      return object != null && typeof object.id === "string" && typeof object.data !== "undefined" && typeof object.has === "function" && typeof object.get === "function" && typeof object.set === "function" && typeof object.flash === "function" && typeof object.unset === "function";
    }
    function createSessionStorage2({
      cookie: cookieArg,
      createData,
      readData,
      updateData,
      deleteData
    }) {
      let cookie = cookies.isCookie(cookieArg) ? cookieArg : cookies.createCookie((cookieArg === null || cookieArg === void 0 ? void 0 : cookieArg.name) || "__session", cookieArg);
      warnOnceAboutSigningSessionCookie(cookie);
      return {
        async getSession(cookieHeader, options2) {
          let id = cookieHeader && await cookie.parse(cookieHeader, options2);
          let data = id && await readData(id);
          return createSession2(data || {}, id || "");
        },
        async commitSession(session, options2) {
          let {
            id,
            data
          } = session;
          if (id) {
            await updateData(id, data, cookie.expires);
          } else {
            id = await createData(data, cookie.expires);
          }
          return cookie.serialize(id, options2);
        },
        async destroySession(session, options2) {
          await deleteData(session.id);
          return cookie.serialize("", {
            ...options2,
            expires: new Date(0)
          });
        }
      };
    }
    function warnOnceAboutSigningSessionCookie(cookie) {
      warnings.warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/api/remix#signing-cookies for more information.`);
    }
    exports2.createSession = createSession2;
    exports2.createSessionStorage = createSessionStorage2;
    exports2.isSession = isSession2;
    exports2.warnOnceAboutSigningSessionCookie = warnOnceAboutSigningSessionCookie;
  }
});

// node_modules/@remix-run/server-runtime/sessions/cookieStorage.js
var require_cookieStorage = __commonJS({
  "node_modules/@remix-run/server-runtime/sessions/cookieStorage.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var cookies = require_cookies();
    var sessions = require_sessions();
    function createCookieSessionStorage2({
      cookie: cookieArg
    } = {}) {
      let cookie = cookies.isCookie(cookieArg) ? cookieArg : cookies.createCookie((cookieArg === null || cookieArg === void 0 ? void 0 : cookieArg.name) || "__session", cookieArg);
      sessions.warnOnceAboutSigningSessionCookie(cookie);
      return {
        async getSession(cookieHeader, options2) {
          return sessions.createSession(cookieHeader && await cookie.parse(cookieHeader, options2) || {});
        },
        async commitSession(session, options2) {
          return cookie.serialize(session.data, options2);
        },
        async destroySession(_session, options2) {
          return cookie.serialize("", {
            ...options2,
            expires: new Date(0)
          });
        }
      };
    }
    exports2.createCookieSessionStorage = createCookieSessionStorage2;
  }
});

// node_modules/@remix-run/server-runtime/sessions/memoryStorage.js
var require_memoryStorage = __commonJS({
  "node_modules/@remix-run/server-runtime/sessions/memoryStorage.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var sessions = require_sessions();
    function createMemorySessionStorage2({
      cookie
    } = {}) {
      let uniqueId = 0;
      let map = new Map();
      return sessions.createSessionStorage({
        cookie,
        async createData(data, expires) {
          let id = (++uniqueId).toString();
          map.set(id, {
            data,
            expires
          });
          return id;
        },
        async readData(id) {
          if (map.has(id)) {
            let {
              data,
              expires
            } = map.get(id);
            if (!expires || expires > new Date()) {
              return data;
            }
            if (expires)
              map.delete(id);
          }
          return null;
        },
        async updateData(id, data, expires) {
          map.set(id, {
            data,
            expires
          });
        },
        async deleteData(id) {
          map.delete(id);
        }
      });
    }
    exports2.createMemorySessionStorage = createMemorySessionStorage2;
  }
});

// node_modules/@remix-run/server-runtime/index.js
var require_server_runtime = __commonJS({
  "node_modules/@remix-run/server-runtime/index.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var cookies = require_cookies();
    var responses = require_responses();
    var server = require_server();
    var sessions = require_sessions();
    var cookieStorage = require_cookieStorage();
    var memoryStorage = require_memoryStorage();
    exports2.createCookie = cookies.createCookie;
    exports2.isCookie = cookies.isCookie;
    exports2.json = responses.json;
    exports2.redirect = responses.redirect;
    exports2.createRequestHandler = server.createRequestHandler;
    exports2.createSession = sessions.createSession;
    exports2.createSessionStorage = sessions.createSessionStorage;
    exports2.isSession = sessions.isSession;
    exports2.createCookieSessionStorage = cookieStorage.createCookieSessionStorage;
    exports2.createMemorySessionStorage = memoryStorage.createMemorySessionStorage;
  }
});

// node_modules/@remix-run/cloudflare-pages/sessions/cloudflareKVSessionStorage.js
var require_cloudflareKVSessionStorage = __commonJS({
  "node_modules/@remix-run/cloudflare-pages/sessions/cloudflareKVSessionStorage.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var serverRuntime = require_server_runtime();
    function createCloudflareKVSessionStorage2({
      cookie,
      kv
    }) {
      return serverRuntime.createSessionStorage({
        cookie,
        async createData(data, expires) {
          while (true) {
            let randomBytes = new Uint8Array(8);
            crypto.getRandomValues(randomBytes);
            let id = [...randomBytes].map((x) => x.toString(16).padStart(2, "0")).join("");
            if (await kv.get(id, "json")) {
              continue;
            }
            await kv.put(id, JSON.stringify(data), {
              expiration: expires ? Math.round(expires.getTime() / 1e3) : void 0
            });
            return id;
          }
        },
        async readData(id) {
          let session = await kv.get(id);
          if (!session) {
            return null;
          }
          return JSON.parse(session);
        },
        async updateData(id, data, expires) {
          await kv.put(id, JSON.stringify(data), {
            expiration: expires ? Math.round(expires.getTime() / 1e3) : void 0
          });
        },
        async deleteData(id) {
          await kv.delete(id);
        }
      });
    }
    exports2.createCloudflareKVSessionStorage = createCloudflareKVSessionStorage2;
  }
});

// node_modules/@remix-run/cloudflare-pages/worker.js
var require_worker = __commonJS({
  "node_modules/@remix-run/cloudflare-pages/worker.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var serverRuntime = require_server_runtime();
    function createRequestHandler2({
      build: build2,
      getLoadContext,
      mode
    }) {
      let platform = {};
      let handleRequest = serverRuntime.createRequestHandler(build2, platform, mode);
      return (context2) => {
        let loadContext = typeof getLoadContext === "function" ? getLoadContext(context2) : void 0;
        return handleRequest(context2.request, loadContext);
      };
    }
    function createPagesFunctionHandler({
      build: build2,
      getLoadContext,
      mode
    }) {
      const handleRequest = createRequestHandler2({
        build: build2,
        getLoadContext,
        mode
      });
      const handleFetch2 = async (context2) => {
        let response;
        context2.request.headers.delete("if-none-match");
        try {
          response = await context2.env.ASSETS.fetch(context2.request.url, context2.request.clone());
          response = response && response.status >= 200 && response.status < 400 ? new Response(response.body, response) : void 0;
        } catch {
        }
        if (!response) {
          response = await handleRequest(context2);
        }
        return response;
      };
      return async (context2) => {
        try {
          return await handleFetch2(context2);
        } catch (e2) {
          if (define_process_default.env.NODE_ENV === "development" && e2 instanceof Error) {
            console.error(e2);
            return new Response(e2.message || e2.toString(), {
              status: 500
            });
          }
          return new Response("Internal Error", {
            status: 500
          });
        }
      };
    }
    exports2.createPagesFunctionHandler = createPagesFunctionHandler;
    exports2.createRequestHandler = createRequestHandler2;
  }
});

// node_modules/@remix-run/cloudflare-pages/index.js
var require_cloudflare_pages = __commonJS({
  "node_modules/@remix-run/cloudflare-pages/index.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var globals = require_globals();
    var cloudflareKVSessionStorage = require_cloudflareKVSessionStorage();
    var worker2 = require_worker();
    globals.installGlobals();
    exports2.createCloudflareKVSessionStorage = cloudflareKVSessionStorage.createCloudflareKVSessionStorage;
    exports2.createPagesFunctionHandler = worker2.createPagesFunctionHandler;
    exports2.createRequestHandler = worker2.createRequestHandler;
  }
});

// node_modules/@remix-run/react/_virtual/_rollupPluginBabelHelpers.js
var require_rollupPluginBabelHelpers = __commonJS({
  "node_modules/@remix-run/react/_virtual/_rollupPluginBabelHelpers.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    exports2["extends"] = _extends;
  }
});

// node_modules/@remix-run/react/errorBoundaries.js
var require_errorBoundaries = __commonJS({
  "node_modules/@remix-run/react/errorBoundaries.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var React = require_react();
    function _interopDefaultLegacy(e2) {
      return e2 && typeof e2 === "object" && "default" in e2 ? e2 : { "default": e2 };
    }
    var React__default = /* @__PURE__ */ _interopDefaultLegacy(React);
    var RemixErrorBoundary = class extends React__default["default"].Component {
      constructor(props) {
        super(props);
        this.state = {
          error: props.error || null,
          location: props.location
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      static getDerivedStateFromProps(props, state) {
        if (state.location !== props.location) {
          return {
            error: props.error || null,
            location: props.location
          };
        }
        return {
          error: props.error || state.error,
          location: state.location
        };
      }
      render() {
        if (this.state.error) {
          return /* @__PURE__ */ React__default["default"].createElement(this.props.component, {
            error: this.state.error
          });
        } else {
          return this.props.children;
        }
      }
    };
    function RemixRootDefaultErrorBoundary({
      error
    }) {
      console.error(error);
      return /* @__PURE__ */ React__default["default"].createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React__default["default"].createElement("head", null, /* @__PURE__ */ React__default["default"].createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React__default["default"].createElement("meta", {
        name: "viewport",
        content: "width=device-width,initial-scale=1,viewport-fit=cover"
      }), /* @__PURE__ */ React__default["default"].createElement("title", null, "Application Error!")), /* @__PURE__ */ React__default["default"].createElement("body", null, /* @__PURE__ */ React__default["default"].createElement("main", {
        style: {
          fontFamily: "system-ui, sans-serif",
          padding: "2rem"
        }
      }, /* @__PURE__ */ React__default["default"].createElement("h1", {
        style: {
          fontSize: "24px"
        }
      }, "Application Error"), /* @__PURE__ */ React__default["default"].createElement("pre", {
        style: {
          padding: "2rem",
          background: "hsla(10, 50%, 50%, 0.1)",
          color: "red",
          overflow: "auto"
        }
      }, error.stack)), /* @__PURE__ */ React__default["default"].createElement("script", {
        dangerouslySetInnerHTML: {
          __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
              );
            `
        }
      })));
    }
    var RemixCatchContext = /* @__PURE__ */ React__default["default"].createContext(void 0);
    function useCatch() {
      return React.useContext(RemixCatchContext);
    }
    function RemixCatchBoundary({
      catch: catchVal,
      component: Component,
      children
    }) {
      if (catchVal) {
        return /* @__PURE__ */ React__default["default"].createElement(RemixCatchContext.Provider, {
          value: catchVal
        }, /* @__PURE__ */ React__default["default"].createElement(Component, null));
      }
      return /* @__PURE__ */ React__default["default"].createElement(React__default["default"].Fragment, null, children);
    }
    function RemixRootDefaultCatchBoundary() {
      let caught = useCatch();
      return /* @__PURE__ */ React__default["default"].createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React__default["default"].createElement("head", null, /* @__PURE__ */ React__default["default"].createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React__default["default"].createElement("meta", {
        name: "viewport",
        content: "width=device-width,initial-scale=1,viewport-fit=cover"
      }), /* @__PURE__ */ React__default["default"].createElement("title", null, "Unhandled Thrown Response!")), /* @__PURE__ */ React__default["default"].createElement("body", null, /* @__PURE__ */ React__default["default"].createElement("h1", {
        style: {
          fontFamily: "system-ui, sans-serif",
          padding: "2rem"
        }
      }, caught.status, " ", caught.statusText), /* @__PURE__ */ React__default["default"].createElement("script", {
        dangerouslySetInnerHTML: {
          __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information."
              );
            `
        }
      })));
    }
    exports2.RemixCatchBoundary = RemixCatchBoundary;
    exports2.RemixErrorBoundary = RemixErrorBoundary;
    exports2.RemixRootDefaultCatchBoundary = RemixRootDefaultCatchBoundary;
    exports2.RemixRootDefaultErrorBoundary = RemixRootDefaultErrorBoundary;
    exports2.useCatch = useCatch;
  }
});

// node_modules/@remix-run/react/invariant.js
var require_invariant = __commonJS({
  "node_modules/@remix-run/react/invariant.js"(exports2, module2) {
    init_define_process();
    "use strict";
    function invariant(value, message) {
      if (value === false || value === null || typeof value === "undefined") {
        throw new Error(message);
      }
    }
    module2.exports = invariant;
  }
});

// node_modules/@remix-run/react/routeModules.js
var require_routeModules = __commonJS({
  "node_modules/@remix-run/react/routeModules.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    function _interopNamespace(e2) {
      if (e2 && e2.__esModule)
        return e2;
      var n = Object.create(null);
      if (e2) {
        Object.keys(e2).forEach(function(k2) {
          if (k2 !== "default") {
            var d2 = Object.getOwnPropertyDescriptor(e2, k2);
            Object.defineProperty(n, k2, d2.get ? d2 : {
              enumerable: true,
              get: function() {
                return e2[k2];
              }
            });
          }
        });
      }
      n["default"] = e2;
      return Object.freeze(n);
    }
    async function loadRouteModule(route, routeModulesCache) {
      if (route.id in routeModulesCache) {
        return routeModulesCache[route.id];
      }
      try {
        let routeModule = await function(t) {
          return Promise.resolve().then(function() {
            return /* @__PURE__ */ _interopNamespace(__require(t));
          });
        }(route.module);
        routeModulesCache[route.id] = routeModule;
        return routeModule;
      } catch (error) {
        window.location.reload();
        return new Promise(() => {
        });
      }
    }
    exports2.loadRouteModule = loadRouteModule;
  }
});

// node_modules/@remix-run/react/links.js
var require_links = __commonJS({
  "node_modules/@remix-run/react/links.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var history = require_main();
    var routeModules = require_routeModules();
    function getLinksForMatches(matches, routeModules2, manifest) {
      let descriptors = matches.map((match) => {
        var _module$links;
        let module3 = routeModules2[match.route.id];
        return ((_module$links = module3.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module3)) || [];
      }).flat(1);
      let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
      return dedupe(descriptors, preloads);
    }
    async function prefetchStyleLinks(routeModule) {
      if (!routeModule.links)
        return;
      let descriptors = routeModule.links();
      if (!descriptors)
        return;
      let styleLinks = [];
      for (let descriptor of descriptors) {
        if (!isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet") {
          styleLinks.push({
            ...descriptor,
            rel: "preload",
            as: "style"
          });
        }
      }
      let matchingLinks = styleLinks.filter((link) => !link.media || window.matchMedia(link.media).matches);
      await Promise.all(matchingLinks.map(prefetchStyleLink));
    }
    async function prefetchStyleLink(descriptor) {
      return new Promise((resolve2) => {
        let link = document.createElement("link");
        Object.assign(link, descriptor);
        function removeLink() {
          if (document.head.contains(link)) {
            document.head.removeChild(link);
          }
        }
        link.onload = () => {
          removeLink();
          resolve2();
        };
        link.onerror = () => {
          removeLink();
          resolve2();
        };
        document.head.appendChild(link);
      });
    }
    function isPageLinkDescriptor(object) {
      return object != null && typeof object.page === "string";
    }
    function isHtmlLinkDescriptor(object) {
      return object != null && typeof object.rel === "string" && typeof object.href === "string";
    }
    async function getStylesheetPrefetchLinks(matches, routeModules$1) {
      let links = await Promise.all(matches.map(async (match) => {
        let mod = await routeModules.loadRouteModule(match.route, routeModules$1);
        return mod.links ? mod.links() : [];
      }));
      return links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map(({
        rel,
        ...attrs
      }) => rel === "preload" ? {
        rel: "prefetch",
        ...attrs
      } : {
        rel: "prefetch",
        as: "style",
        ...attrs
      });
    }
    function getNewMatchesForLinks(page, nextMatches, currentMatches, location2, mode) {
      let path = parsePathPatch(page);
      let isNew = (match, index) => {
        if (!currentMatches[index])
          return true;
        return match.route.id !== currentMatches[index].route.id;
      };
      let matchPathChanged = (match, index) => {
        var _currentMatches$index;
        return currentMatches[index].pathname !== match.pathname || ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith("*")) && currentMatches[index].params["*"] !== match.params["*"];
      };
      let newMatches = mode === "data" && location2.search !== path.search ? nextMatches.filter((match, index) => {
        if (!match.route.hasLoader) {
          return false;
        }
        if (isNew(match, index) || matchPathChanged(match, index)) {
          return true;
        }
        if (match.route.shouldReload) {
          return match.route.shouldReload({
            params: match.params,
            prevUrl: new URL(location2.pathname + location2.search + location2.hash, window.origin),
            url: new URL(page, window.origin)
          });
        }
        return true;
      }) : nextMatches.filter((match, index) => {
        return match.route.hasLoader && (isNew(match, index) || matchPathChanged(match, index));
      });
      return newMatches;
    }
    function getDataLinkHrefs(page, matches, manifest) {
      let path = parsePathPatch(page);
      return dedupeHrefs(matches.filter((match) => manifest.routes[match.route.id].hasLoader).map((match) => {
        let {
          pathname,
          search
        } = path;
        let searchParams = new URLSearchParams(search);
        searchParams.set("_data", match.route.id);
        return `${pathname}?${searchParams}`;
      }));
    }
    function getModuleLinkHrefs(matches, manifestPatch) {
      return dedupeHrefs(matches.map((match) => {
        let route = manifestPatch.routes[match.route.id];
        let hrefs = [route.module];
        if (route.imports) {
          hrefs = hrefs.concat(route.imports);
        }
        return hrefs;
      }).flat(1));
    }
    function getCurrentPageModulePreloadHrefs(matches, manifest) {
      return dedupeHrefs(matches.map((match) => {
        let route = manifest.routes[match.route.id];
        let hrefs = [route.module];
        if (route.imports) {
          hrefs = hrefs.concat(route.imports);
        }
        return hrefs;
      }).flat(1));
    }
    function dedupeHrefs(hrefs) {
      return [...new Set(hrefs)];
    }
    function dedupe(descriptors, preloads) {
      let set = new Set();
      let preloadsSet = new Set(preloads);
      return descriptors.reduce((deduped, descriptor) => {
        let alreadyModulePreload = !isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href);
        if (alreadyModulePreload) {
          return deduped;
        }
        let str = JSON.stringify(descriptor);
        if (!set.has(str)) {
          set.add(str);
          deduped.push(descriptor);
        }
        return deduped;
      }, []);
    }
    function parsePathPatch(href) {
      let path = history.parsePath(href);
      if (path.search === void 0)
        path.search = "";
      return path;
    }
    exports2.dedupe = dedupe;
    exports2.getDataLinkHrefs = getDataLinkHrefs;
    exports2.getLinksForMatches = getLinksForMatches;
    exports2.getModuleLinkHrefs = getModuleLinkHrefs;
    exports2.getNewMatchesForLinks = getNewMatchesForLinks;
    exports2.getStylesheetPrefetchLinks = getStylesheetPrefetchLinks;
    exports2.isHtmlLinkDescriptor = isHtmlLinkDescriptor;
    exports2.isPageLinkDescriptor = isPageLinkDescriptor;
    exports2.prefetchStyleLinks = prefetchStyleLinks;
  }
});

// node_modules/@remix-run/react/markup.js
var require_markup = __commonJS({
  "node_modules/@remix-run/react/markup.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    function createHtml(html2) {
      return {
        __html: html2
      };
    }
    exports2.createHtml = createHtml;
  }
});

// node_modules/@remix-run/react/data.js
var require_data2 = __commonJS({
  "node_modules/@remix-run/react/data.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var invariant = require_invariant();
    function isCatchResponse(response) {
      return response instanceof Response && response.headers.get("X-Remix-Catch") != null;
    }
    function isErrorResponse(response) {
      return response instanceof Response && response.headers.get("X-Remix-Error") != null;
    }
    function isRedirectResponse(response) {
      return response instanceof Response && response.headers.get("X-Remix-Redirect") != null;
    }
    async function fetchData(url2, routeId, signal, submission) {
      url2.searchParams.set("_data", routeId);
      let init = submission ? getActionInit(submission, signal) : {
        credentials: "same-origin",
        signal
      };
      let response = await fetch(url2.href, init);
      if (isErrorResponse(response)) {
        let data = await response.json();
        let error = new Error(data.message);
        error.stack = data.stack;
        return error;
      }
      return response;
    }
    async function extractData(response) {
      let contentType = response.headers.get("Content-Type");
      if (contentType && /\bapplication\/json\b/.test(contentType)) {
        return response.json();
      }
      return response.text();
    }
    function getActionInit(submission, signal) {
      let {
        encType,
        method,
        formData
      } = submission;
      let headers = void 0;
      let body = formData;
      if (encType === "application/x-www-form-urlencoded") {
        body = new URLSearchParams();
        for (let [key, value] of formData) {
          invariant(typeof value === "string", `File inputs are not supported with encType "application/x-www-form-urlencoded", please use "multipart/form-data" instead.`);
          body.append(key, value);
        }
        headers = {
          "Content-Type": encType
        };
      }
      return {
        method,
        body,
        signal,
        credentials: "same-origin",
        headers
      };
    }
    exports2.extractData = extractData;
    exports2.fetchData = fetchData;
    exports2.isCatchResponse = isCatchResponse;
    exports2.isErrorResponse = isErrorResponse;
    exports2.isRedirectResponse = isRedirectResponse;
  }
});

// node_modules/@remix-run/react/routeMatching.js
var require_routeMatching2 = __commonJS({
  "node_modules/@remix-run/react/routeMatching.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var reactRouterDom = require_main3();
    function matchClientRoutes(routes, location2) {
      let matches = reactRouterDom.matchRoutes(routes, location2);
      if (!matches)
        return null;
      return matches.map((match) => ({
        params: match.params,
        pathname: match.pathname,
        route: match.route
      }));
    }
    exports2.matchClientRoutes = matchClientRoutes;
  }
});

// node_modules/@remix-run/react/transition.js
var require_transition = __commonJS({
  "node_modules/@remix-run/react/transition.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var history = require_main();
    var routeMatching = require_routeMatching2();
    var invariant = require_invariant();
    var CatchValue = class {
      constructor(status, statusText, data) {
        this.status = status;
        this.statusText = statusText;
        this.data = data;
      }
    };
    function isActionSubmission(submission) {
      return ["POST", "PUT", "PATCH", "DELETE"].includes(submission.method);
    }
    function isLoaderSubmission(submission) {
      return submission.method === "GET";
    }
    function isRedirectLocation(location2) {
      return Boolean(location2.state) && location2.state.isRedirect;
    }
    function isLoaderRedirectLocation(location2) {
      return isRedirectLocation(location2) && location2.state.type === "loader";
    }
    function isActionRedirectLocation(location2) {
      return isRedirectLocation(location2) && location2.state.type === "action";
    }
    function isFetchActionRedirect(location2) {
      return isRedirectLocation(location2) && location2.state.type === "fetchAction";
    }
    function isLoaderSubmissionRedirectLocation(location2) {
      return isRedirectLocation(location2) && location2.state.type === "loaderSubmission";
    }
    var TransitionRedirect = class {
      constructor(location2) {
        this.location = typeof location2 === "string" ? location2 : location2.pathname + location2.search;
      }
    };
    var IDLE_TRANSITION = {
      state: "idle",
      submission: void 0,
      location: void 0,
      type: "idle"
    };
    var IDLE_FETCHER = {
      state: "idle",
      type: "init",
      data: void 0,
      submission: void 0
    };
    function createTransitionManager(init) {
      let {
        routes
      } = init;
      let pendingNavigationController;
      let fetchControllers = new Map();
      let incrementingLoadId = 0;
      let navigationLoadId = -1;
      let fetchReloadIds = new Map();
      let matches = routeMatching.matchClientRoutes(routes, init.location);
      if (!matches) {
        matches = [{
          params: {},
          pathname: "",
          route: routes[0]
        }];
      }
      let state = {
        location: init.location,
        loaderData: init.loaderData || {},
        actionData: init.actionData,
        catch: init.catch,
        error: init.error,
        catchBoundaryId: init.catchBoundaryId || null,
        errorBoundaryId: init.errorBoundaryId || null,
        matches,
        nextMatches: void 0,
        transition: IDLE_TRANSITION,
        fetchers: new Map()
      };
      function update(updates) {
        state = Object.assign({}, state, updates);
        init.onChange(state);
      }
      function getState() {
        return state;
      }
      function getFetcher(key) {
        return state.fetchers.get(key) || IDLE_FETCHER;
      }
      function deleteFetcher(key) {
        if (fetchControllers.has(key))
          abortFetcher(key);
        fetchReloadIds.delete(key);
        state.fetchers.delete(key);
      }
      async function send(event) {
        switch (event.type) {
          case "navigation": {
            let {
              action,
              location: location2,
              submission
            } = event;
            let matches2 = routeMatching.matchClientRoutes(routes, location2);
            if (!matches2) {
              matches2 = [{
                params: {},
                pathname: "",
                route: routes[0]
              }];
              await handleNotFoundNavigation(location2, matches2);
            } else if (!submission && isHashChangeOnly(location2)) {
              await handleHashChange(location2, matches2);
            } else if (action === history.Action.Pop) {
              await handleLoad(location2, matches2);
            } else if (submission && isActionSubmission(submission)) {
              await handleActionSubmissionNavigation(location2, submission, matches2);
            } else if (submission && isLoaderSubmission(submission)) {
              await handleLoaderSubmissionNavigation(location2, submission, matches2);
            } else if (isActionRedirectLocation(location2)) {
              await handleActionRedirect(location2, matches2);
            } else if (isLoaderSubmissionRedirectLocation(location2)) {
              await handleLoaderSubmissionRedirect(location2, matches2);
            } else if (isLoaderRedirectLocation(location2)) {
              await handleLoaderRedirect(location2, matches2);
            } else if (isFetchActionRedirect(location2)) {
              await handleFetchActionRedirect(location2, matches2);
            } else {
              await handleLoad(location2, matches2);
            }
            navigationLoadId = -1;
            break;
          }
          case "fetcher": {
            let {
              key,
              submission,
              href
            } = event;
            let matches2 = routeMatching.matchClientRoutes(routes, href);
            invariant(matches2, "No matches found");
            let match = matches2.slice(-1)[0];
            if (fetchControllers.has(key))
              abortFetcher(key);
            if (submission && isActionSubmission(submission)) {
              await handleActionFetchSubmission(key, submission, match);
            } else if (submission && isLoaderSubmission(submission)) {
              await handleLoaderFetchSubmission(href, key, submission, match);
            } else {
              await handleLoaderFetch(href, key, match);
            }
            break;
          }
          default: {
            throw new Error(`Unknown data event type: ${event.type}`);
          }
        }
      }
      function dispose() {
        abortNormalNavigation();
        for (let [, controller] of fetchControllers) {
          controller.abort();
        }
      }
      async function handleActionFetchSubmission(key, submission, match) {
        let currentFetcher = state.fetchers.get(key);
        let fetcher = {
          state: "submitting",
          type: "actionSubmission",
          submission,
          data: (currentFetcher === null || currentFetcher === void 0 ? void 0 : currentFetcher.data) || void 0
        };
        state.fetchers.set(key, fetcher);
        update({
          fetchers: new Map(state.fetchers)
        });
        let controller = new AbortController();
        fetchControllers.set(key, controller);
        let result = await callAction(submission, match, controller.signal);
        if (controller.signal.aborted) {
          return;
        }
        if (isRedirectResult(result)) {
          let locationState = {
            isRedirect: true,
            type: "fetchAction"
          };
          init.onRedirect(result.value.location, locationState);
          let doneFetcher2 = {
            state: "idle",
            type: "done",
            data: result.value,
            submission: void 0
          };
          state.fetchers.set(key, doneFetcher2);
          update({
            fetchers: new Map(state.fetchers)
          });
          return;
        }
        if (maybeBailOnError(match, key, result)) {
          return;
        }
        if (await maybeBailOnCatch(match, key, result)) {
          return;
        }
        let loadFetcher = {
          state: "loading",
          type: "actionReload",
          data: result.value,
          submission
        };
        state.fetchers.set(key, loadFetcher);
        update({
          fetchers: new Map(state.fetchers)
        });
        let maybeActionErrorResult = isErrorResult(result) ? result : void 0;
        let maybeActionCatchResult = isCatchResult(result) ? result : void 0;
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key, loadId);
        let matchesToLoad = state.nextMatches || state.matches;
        let hrefToLoad = createHref(state.transition.location || state.location);
        let results = await callLoaders(state, createUrl(hrefToLoad), matchesToLoad, controller.signal, maybeActionErrorResult, maybeActionCatchResult, submission, match.route.id, loadFetcher);
        if (controller.signal.aborted) {
          return;
        }
        fetchReloadIds.delete(key);
        fetchControllers.delete(key);
        let redirect4 = findRedirect(results);
        if (redirect4) {
          let locationState = {
            isRedirect: true,
            type: "loader"
          };
          init.onRedirect(redirect4.location, locationState);
          return;
        }
        let [error, errorBoundaryId] = findErrorAndBoundaryId(results, state.matches, maybeActionErrorResult);
        let [catchVal, catchBoundaryId] = await findCatchAndBoundaryId(results, state.matches, maybeActionCatchResult);
        let doneFetcher = {
          state: "idle",
          type: "done",
          data: result.value,
          submission: void 0
        };
        state.fetchers.set(key, doneFetcher);
        let abortedKeys = abortStaleFetchLoads(loadId);
        if (abortedKeys) {
          markFetchersDone(abortedKeys);
        }
        let yeetedNavigation = yeetStaleNavigationLoad(loadId);
        if (yeetedNavigation) {
          let {
            transition
          } = state;
          invariant(transition.state === "loading", "Expected loading transition");
          update({
            location: transition.location,
            matches: state.nextMatches,
            error,
            errorBoundaryId,
            catch: catchVal,
            catchBoundaryId,
            loaderData: makeLoaderData(state, results, matchesToLoad),
            actionData: transition.type === "actionReload" ? state.actionData : void 0,
            transition: IDLE_TRANSITION,
            fetchers: new Map(state.fetchers)
          });
        } else {
          update({
            fetchers: new Map(state.fetchers),
            error,
            errorBoundaryId,
            loaderData: makeLoaderData(state, results, matchesToLoad)
          });
        }
      }
      function yeetStaleNavigationLoad(landedId) {
        let isLoadingNavigation = state.transition.state === "loading";
        if (isLoadingNavigation && navigationLoadId < landedId) {
          abortNormalNavigation();
          return true;
        }
        return false;
      }
      function markFetchersDone(keys) {
        for (let key of keys) {
          let fetcher = getFetcher(key);
          let doneFetcher = {
            state: "idle",
            type: "done",
            data: fetcher.data,
            submission: void 0
          };
          state.fetchers.set(key, doneFetcher);
        }
      }
      function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key, id] of fetchReloadIds) {
          if (id < landedId) {
            let fetcher = state.fetchers.get(key);
            invariant(fetcher, `Expected fetcher: ${key}`);
            if (fetcher.state === "loading") {
              abortFetcher(key);
              fetchReloadIds.delete(key);
              yeetedKeys.push(key);
            }
          }
        }
        return yeetedKeys.length ? yeetedKeys : false;
      }
      async function handleLoaderFetchSubmission(href, key, submission, match) {
        let currentFetcher = state.fetchers.get(key);
        let fetcher = {
          state: "submitting",
          type: "loaderSubmission",
          submission,
          data: (currentFetcher === null || currentFetcher === void 0 ? void 0 : currentFetcher.data) || void 0
        };
        state.fetchers.set(key, fetcher);
        update({
          fetchers: new Map(state.fetchers)
        });
        let controller = new AbortController();
        fetchControllers.set(key, controller);
        let result = await callLoader(match, createUrl(href), controller.signal);
        fetchControllers.delete(key);
        if (controller.signal.aborted) {
          return;
        }
        if (isRedirectResult(result)) {
          let locationState = {
            isRedirect: true,
            type: "loader"
          };
          init.onRedirect(result.value.location, locationState);
          return;
        }
        if (maybeBailOnError(match, key, result)) {
          return;
        }
        if (await maybeBailOnCatch(match, key, result)) {
          return;
        }
        let doneFetcher = {
          state: "idle",
          type: "done",
          data: result.value,
          submission: void 0
        };
        state.fetchers.set(key, doneFetcher);
        update({
          fetchers: new Map(state.fetchers)
        });
      }
      async function handleLoaderFetch(href, key, match) {
        if (typeof AbortController === "undefined") {
          throw new Error("handleLoaderFetch was called during the server render, but it shouldn't be. You are likely calling useFetcher.load() in the body of your component. Try moving it to a useEffect or a callback.");
        }
        let currentFetcher = state.fetchers.get(key);
        let fetcher = {
          state: "loading",
          type: "normalLoad",
          submission: void 0,
          data: (currentFetcher === null || currentFetcher === void 0 ? void 0 : currentFetcher.data) || void 0
        };
        state.fetchers.set(key, fetcher);
        update({
          fetchers: new Map(state.fetchers)
        });
        let controller = new AbortController();
        fetchControllers.set(key, controller);
        let result = await callLoader(match, createUrl(href), controller.signal);
        if (controller.signal.aborted)
          return;
        fetchControllers.delete(key);
        if (isRedirectResult(result)) {
          let locationState = {
            isRedirect: true,
            type: "loader"
          };
          init.onRedirect(result.value.location, locationState);
          return;
        }
        if (maybeBailOnError(match, key, result)) {
          return;
        }
        if (await maybeBailOnCatch(match, key, result)) {
          return;
        }
        let doneFetcher = {
          state: "idle",
          type: "done",
          data: result.value,
          submission: void 0
        };
        state.fetchers.set(key, doneFetcher);
        update({
          fetchers: new Map(state.fetchers)
        });
      }
      async function maybeBailOnCatch(match, key, result) {
        if (isCatchResult(result)) {
          let catchBoundaryId = findNearestCatchBoundary(match, state.matches);
          state.fetchers.delete(key);
          update({
            transition: IDLE_TRANSITION,
            fetchers: new Map(state.fetchers),
            catch: {
              data: result.value.data,
              status: result.value.status,
              statusText: result.value.statusText
            },
            catchBoundaryId
          });
          return true;
        }
        return false;
      }
      function maybeBailOnError(match, key, result) {
        if (isErrorResult(result)) {
          let errorBoundaryId = findNearestBoundary(match, state.matches);
          state.fetchers.delete(key);
          update({
            fetchers: new Map(state.fetchers),
            error: result.value,
            errorBoundaryId
          });
          return true;
        }
        return false;
      }
      async function handleNotFoundNavigation(location2, matches2) {
        abortNormalNavigation();
        let transition = {
          state: "loading",
          type: "normalLoad",
          submission: void 0,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await Promise.resolve();
        let catchBoundaryId = findNearestCatchBoundary(matches2[0], matches2);
        update({
          location: location2,
          matches: matches2,
          catch: {
            data: null,
            status: 404,
            statusText: "Not Found"
          },
          catchBoundaryId,
          transition: IDLE_TRANSITION
        });
      }
      async function handleActionSubmissionNavigation(location2, submission, matches2) {
        abortNormalNavigation();
        let transition = {
          state: "submitting",
          type: "actionSubmission",
          submission,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        let controller = new AbortController();
        pendingNavigationController = controller;
        if (!isIndexRequestAction(submission.action) && matches2[matches2.length - 1].route.id.endsWith("/index")) {
          matches2 = matches2.slice(0, -1);
        }
        let leafMatch = matches2.slice(-1)[0];
        let result = await callAction(submission, leafMatch, controller.signal);
        if (controller.signal.aborted) {
          return;
        }
        if (isRedirectResult(result)) {
          let locationState = {
            isRedirect: true,
            type: "action"
          };
          init.onRedirect(result.value.location, locationState);
          return;
        }
        if (isCatchResult(result)) {
          let [catchVal, catchBoundaryId] = await findCatchAndBoundaryId([result], matches2, result);
          update({
            transition: IDLE_TRANSITION,
            catch: catchVal,
            catchBoundaryId
          });
          return;
        }
        let loadTransition = {
          state: "loading",
          type: "actionReload",
          submission,
          location: location2
        };
        update({
          transition: loadTransition,
          actionData: {
            [leafMatch.route.id]: result.value
          }
        });
        await loadPageData(location2, matches2, submission, leafMatch.route.id, result);
      }
      async function handleLoaderSubmissionNavigation(location2, submission, matches2) {
        abortNormalNavigation();
        let transition = {
          state: "submitting",
          type: "loaderSubmission",
          submission,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await loadPageData(location2, matches2, submission);
      }
      async function handleHashChange(location2, matches2) {
        abortNormalNavigation();
        let transition = {
          state: "loading",
          type: "normalLoad",
          submission: void 0,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await Promise.resolve();
        update({
          location: location2,
          matches: matches2,
          transition: IDLE_TRANSITION
        });
      }
      async function handleLoad(location2, matches2) {
        abortNormalNavigation();
        let transition = {
          state: "loading",
          type: "normalLoad",
          submission: void 0,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await loadPageData(location2, matches2);
      }
      async function handleLoaderRedirect(location2, matches2) {
        abortNormalNavigation();
        let transition = {
          state: "loading",
          type: "normalRedirect",
          submission: void 0,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await loadPageData(location2, matches2);
      }
      async function handleLoaderSubmissionRedirect(location2, matches2) {
        abortNormalNavigation();
        invariant(state.transition.type === "loaderSubmission", `Unexpected transition: ${JSON.stringify(state.transition)}`);
        let {
          submission
        } = state.transition;
        let transition = {
          state: "loading",
          type: "loaderSubmissionRedirect",
          submission,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await loadPageData(location2, matches2, submission);
      }
      async function handleFetchActionRedirect(location2, matches2) {
        abortNormalNavigation();
        let transition = {
          state: "loading",
          type: "fetchActionRedirect",
          submission: void 0,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await loadPageData(location2, matches2);
      }
      async function handleActionRedirect(location2, matches2) {
        abortNormalNavigation();
        invariant(state.transition.type === "actionSubmission" || state.transition.type === "actionReload", `Unexpected transition: ${JSON.stringify(state.transition)}`);
        let {
          submission
        } = state.transition;
        let transition = {
          state: "loading",
          type: "actionRedirect",
          submission,
          location: location2
        };
        update({
          transition,
          nextMatches: matches2
        });
        await loadPageData(location2, matches2, submission);
      }
      function isHashChangeOnly(location2) {
        return createHref(state.location) === createHref(location2) && state.location.hash !== location2.hash;
      }
      async function loadPageData(location2, matches2, submission, submissionRouteId, actionResult) {
        let maybeActionErrorResult = actionResult && isErrorResult(actionResult) ? actionResult : void 0;
        let maybeActionCatchResult = actionResult && isCatchResult(actionResult) ? actionResult : void 0;
        let controller = new AbortController();
        pendingNavigationController = controller;
        navigationLoadId = ++incrementingLoadId;
        let results = await callLoaders(state, createUrl(createHref(location2)), matches2, controller.signal, maybeActionErrorResult, maybeActionCatchResult, submission, submissionRouteId);
        if (controller.signal.aborted) {
          return;
        }
        let redirect4 = findRedirect(results);
        if (redirect4) {
          if (state.transition.type === "actionReload") {
            let locationState = {
              isRedirect: true,
              type: "action"
            };
            init.onRedirect(redirect4.location, locationState);
          } else if (state.transition.type === "loaderSubmission") {
            let locationState = {
              isRedirect: true,
              type: "loaderSubmission"
            };
            init.onRedirect(redirect4.location, locationState);
          } else {
            let locationState = {
              isRedirect: true,
              type: "loader"
            };
            init.onRedirect(redirect4.location, locationState);
          }
          return;
        }
        let [error, errorBoundaryId] = findErrorAndBoundaryId(results, matches2, maybeActionErrorResult);
        let [catchVal, catchBoundaryId] = await findCatchAndBoundaryId(results, matches2, maybeActionErrorResult);
        let abortedIds = abortStaleFetchLoads(navigationLoadId);
        if (abortedIds) {
          markFetchersDone(abortedIds);
        }
        update({
          location: location2,
          matches: matches2,
          error,
          errorBoundaryId,
          catch: catchVal,
          catchBoundaryId,
          loaderData: makeLoaderData(state, results, matches2),
          actionData: state.transition.type === "actionReload" ? state.actionData : void 0,
          transition: IDLE_TRANSITION,
          fetchers: abortedIds ? new Map(state.fetchers) : state.fetchers
        });
      }
      function abortNormalNavigation() {
        var _pendingNavigationCon;
        (_pendingNavigationCon = pendingNavigationController) === null || _pendingNavigationCon === void 0 ? void 0 : _pendingNavigationCon.abort();
      }
      function abortFetcher(key) {
        let controller = fetchControllers.get(key);
        invariant(controller, `Expected fetch controller: ${key}`);
        controller.abort();
        fetchControllers.delete(key);
      }
      return {
        send,
        getState,
        getFetcher,
        deleteFetcher,
        dispose,
        get _internalFetchControllers() {
          return fetchControllers;
        }
      };
    }
    function isIndexRequestAction(action) {
      let indexRequest = false;
      let searchParams = new URLSearchParams(action.split("?", 2)[1] || "");
      for (let param of searchParams.getAll("index")) {
        if (!param) {
          indexRequest = true;
        }
      }
      return indexRequest;
    }
    async function callLoaders(state, url2, matches, signal, actionErrorResult, actionCatchResult, submission, submissionRouteId, fetcher) {
      let matchesToLoad = filterMatchesToLoad(state, url2, matches, actionErrorResult, actionCatchResult, submission, submissionRouteId, fetcher);
      return Promise.all(matchesToLoad.map((match) => callLoader(match, url2, signal)));
    }
    async function callLoader(match, url2, signal) {
      invariant(match.route.loader, `Expected loader for ${match.route.id}`);
      try {
        let {
          params
        } = match;
        let value = await match.route.loader({
          params,
          url: url2,
          signal
        });
        return {
          match,
          value
        };
      } catch (error) {
        return {
          match,
          value: error
        };
      }
    }
    async function callAction(submission, match, signal) {
      if (!match.route.action) {
        throw new Error(`Route "${match.route.id}" does not have an action, but you are trying to submit to it. To fix this, please add an \`action\` function to the route`);
      }
      try {
        let value = await match.route.action({
          url: createUrl(submission.action),
          params: match.params,
          submission,
          signal
        });
        return {
          match,
          value
        };
      } catch (error) {
        return {
          match,
          value: error
        };
      }
    }
    function filterMatchesToLoad(state, url2, matches, actionErrorResult, actionCatchResult, submission, submissionRouteId, fetcher) {
      if (submissionRouteId && (actionCatchResult || actionErrorResult)) {
        let foundProblematicRoute = false;
        matches = matches.filter((match) => {
          if (foundProblematicRoute) {
            return false;
          }
          if (match.route.id === submissionRouteId) {
            foundProblematicRoute = true;
            return false;
          }
          return true;
        });
      }
      let isNew = (match, index) => {
        if (!state.matches[index])
          return true;
        return match.route.id !== state.matches[index].route.id;
      };
      let matchPathChanged = (match, index) => {
        var _state$matches$index$;
        return state.matches[index].pathname !== match.pathname || ((_state$matches$index$ = state.matches[index].route.path) === null || _state$matches$index$ === void 0 ? void 0 : _state$matches$index$.endsWith("*")) && state.matches[index].params["*"] !== match.params["*"];
      };
      let filterByRouteProps = (match, index) => {
        if (!match.route.loader) {
          return false;
        }
        if (isNew(match, index) || matchPathChanged(match, index)) {
          return true;
        }
        if (match.route.shouldReload) {
          let prevUrl = createUrl(createHref(state.location));
          return match.route.shouldReload({
            prevUrl,
            url: url2,
            submission,
            params: match.params
          });
        }
        return true;
      };
      let isInRootCatchBoundary = state.matches.length === 1;
      if (isInRootCatchBoundary) {
        return matches.filter((match) => !!match.route.loader);
      }
      if ((fetcher === null || fetcher === void 0 ? void 0 : fetcher.type) === "actionReload") {
        return matches.filter(filterByRouteProps);
      } else if (state.transition.type === "actionReload" || state.transition.type === "actionRedirect" || createHref(url2) === createHref(state.location) || url2.searchParams.toString() !== state.location.search.substring(1)) {
        return matches.filter(filterByRouteProps);
      }
      return matches.filter((match, index, arr) => {
        if ((actionErrorResult || actionCatchResult) && arr.length - 1 === index) {
          return false;
        }
        return match.route.loader && (isNew(match, index) || matchPathChanged(match, index));
      });
    }
    function isRedirectResult(result) {
      return result.value instanceof TransitionRedirect;
    }
    function createHref(location2) {
      return location2.pathname + location2.search;
    }
    function findRedirect(results) {
      for (let result of results) {
        if (isRedirectResult(result)) {
          return result.value;
        }
      }
      return null;
    }
    async function findCatchAndBoundaryId(results, matches, actionCatchResult) {
      let loaderCatchResult;
      for (let result of results) {
        if (isCatchResult(result)) {
          loaderCatchResult = result;
          break;
        }
      }
      let extractCatchData = async (res) => ({
        status: res.status,
        statusText: res.statusText,
        data: res.data
      });
      if (actionCatchResult && loaderCatchResult) {
        let boundaryId = findNearestCatchBoundary(loaderCatchResult.match, matches);
        return [await extractCatchData(actionCatchResult.value), boundaryId];
      }
      if (loaderCatchResult) {
        let boundaryId = findNearestCatchBoundary(loaderCatchResult.match, matches);
        return [await extractCatchData(loaderCatchResult.value), boundaryId];
      }
      return [void 0, void 0];
    }
    function findErrorAndBoundaryId(results, matches, actionErrorResult) {
      let loaderErrorResult;
      for (let result of results) {
        if (isErrorResult(result)) {
          loaderErrorResult = result;
          break;
        }
      }
      if (actionErrorResult && loaderErrorResult) {
        let boundaryId = findNearestBoundary(loaderErrorResult.match, matches);
        return [actionErrorResult.value, boundaryId];
      }
      if (actionErrorResult) {
        let boundaryId = findNearestBoundary(actionErrorResult.match, matches);
        return [actionErrorResult.value, boundaryId];
      }
      if (loaderErrorResult) {
        let boundaryId = findNearestBoundary(loaderErrorResult.match, matches);
        return [loaderErrorResult.value, boundaryId];
      }
      return [void 0, void 0];
    }
    function findNearestCatchBoundary(matchWithError, matches) {
      let nearestBoundaryId = null;
      for (let match of matches) {
        if (match.route.CatchBoundary) {
          nearestBoundaryId = match.route.id;
        }
        if (match === matchWithError) {
          break;
        }
      }
      return nearestBoundaryId;
    }
    function findNearestBoundary(matchWithError, matches) {
      let nearestBoundaryId = null;
      for (let match of matches) {
        if (match.route.ErrorBoundary) {
          nearestBoundaryId = match.route.id;
        }
        if (match === matchWithError) {
          break;
        }
      }
      return nearestBoundaryId;
    }
    function makeLoaderData(state, results, matches) {
      let newData = {};
      for (let {
        match,
        value
      } of results) {
        newData[match.route.id] = value;
      }
      let loaderData = {};
      for (let {
        route
      } of matches) {
        let value = newData[route.id] !== void 0 ? newData[route.id] : state.loaderData[route.id];
        if (value !== void 0) {
          loaderData[route.id] = value;
        }
      }
      return loaderData;
    }
    function isCatchResult(result) {
      return result.value instanceof CatchValue;
    }
    function isErrorResult(result) {
      return result.value instanceof Error;
    }
    function createUrl(href) {
      return new URL(href, window.location.origin);
    }
    exports2.CatchValue = CatchValue;
    exports2.IDLE_FETCHER = IDLE_FETCHER;
    exports2.IDLE_TRANSITION = IDLE_TRANSITION;
    exports2.TransitionRedirect = TransitionRedirect;
    exports2.createTransitionManager = createTransitionManager;
  }
});

// node_modules/@remix-run/react/routes.js
var require_routes2 = __commonJS({
  "node_modules/@remix-run/react/routes.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var React = require_react();
    var routeModules = require_routeModules();
    var data = require_data2();
    var transition = require_transition();
    var links = require_links();
    var invariant = require_invariant();
    function _interopNamespace(e2) {
      if (e2 && e2.__esModule)
        return e2;
      var n = Object.create(null);
      if (e2) {
        Object.keys(e2).forEach(function(k2) {
          if (k2 !== "default") {
            var d2 = Object.getOwnPropertyDescriptor(e2, k2);
            Object.defineProperty(n, k2, d2.get ? d2 : {
              enumerable: true,
              get: function() {
                return e2[k2];
              }
            });
          }
        });
      }
      n["default"] = e2;
      return Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    function createClientRoute(entryRoute, routeModulesCache, Component) {
      return {
        caseSensitive: !!entryRoute.caseSensitive,
        element: /* @__PURE__ */ React__namespace.createElement(Component, {
          id: entryRoute.id
        }),
        id: entryRoute.id,
        path: entryRoute.path,
        index: entryRoute.index,
        module: entryRoute.module,
        loader: createLoader(entryRoute, routeModulesCache),
        action: createAction(entryRoute),
        shouldReload: createShouldReload(entryRoute, routeModulesCache),
        ErrorBoundary: entryRoute.hasErrorBoundary,
        CatchBoundary: entryRoute.hasCatchBoundary,
        hasLoader: entryRoute.hasLoader
      };
    }
    function createClientRoutes(routeManifest, routeModulesCache, Component, parentId) {
      return Object.keys(routeManifest).filter((key) => routeManifest[key].parentId === parentId).map((key) => {
        let route = createClientRoute(routeManifest[key], routeModulesCache, Component);
        let children = createClientRoutes(routeManifest, routeModulesCache, Component, route.id);
        if (children.length > 0)
          route.children = children;
        return route;
      });
    }
    function createShouldReload(route, routeModules2) {
      let shouldReload = (arg) => {
        let module3 = routeModules2[route.id];
        invariant(module3, `Expected route module to be loaded for ${route.id}`);
        if (module3.unstable_shouldReload) {
          return module3.unstable_shouldReload(arg);
        }
        return true;
      };
      return shouldReload;
    }
    async function loadRouteModuleWithBlockingLinks(route, routeModules$1) {
      let routeModule = await routeModules.loadRouteModule(route, routeModules$1);
      await links.prefetchStyleLinks(routeModule);
      return routeModule;
    }
    function createLoader(route, routeModules2) {
      let loader = async ({
        url: url2,
        signal,
        submission
      }) => {
        if (route.hasLoader) {
          let [result] = await Promise.all([data.fetchData(url2, route.id, signal, submission), loadRouteModuleWithBlockingLinks(route, routeModules2)]);
          if (result instanceof Error)
            throw result;
          let redirect4 = await checkRedirect(result);
          if (redirect4)
            return redirect4;
          if (data.isCatchResponse(result)) {
            throw new transition.CatchValue(result.status, result.statusText, await data.extractData(result.clone()));
          }
          return data.extractData(result);
        } else {
          await loadRouteModuleWithBlockingLinks(route, routeModules2);
        }
      };
      return loader;
    }
    function createAction(route) {
      if (!route.hasAction)
        return void 0;
      let action = async ({
        url: url2,
        signal,
        submission
      }) => {
        let result = await data.fetchData(url2, route.id, signal, submission);
        if (result instanceof Error) {
          throw result;
        }
        let redirect4 = await checkRedirect(result);
        if (redirect4)
          return redirect4;
        if (data.isCatchResponse(result)) {
          throw new transition.CatchValue(result.status, result.statusText, await data.extractData(result.clone()));
        }
        return data.extractData(result);
      };
      return action;
    }
    async function checkRedirect(response) {
      if (data.isRedirectResponse(response)) {
        let url2 = new URL(response.headers.get("X-Remix-Redirect"), window.location.origin);
        if (url2.origin !== window.location.origin) {
          await new Promise(() => {
            window.location.replace(url2.href);
          });
        } else {
          return new transition.TransitionRedirect(url2.pathname + url2.search);
        }
      }
      return null;
    }
    exports2.createClientRoute = createClientRoute;
    exports2.createClientRoutes = createClientRoutes;
  }
});

// node_modules/@remix-run/react/components.js
var require_components = __commonJS({
  "node_modules/@remix-run/react/components.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var _rollupPluginBabelHelpers = require_rollupPluginBabelHelpers();
    var React = require_react();
    var reactRouterDom = require_main3();
    var errorBoundaries = require_errorBoundaries();
    var invariant = require_invariant();
    var links = require_links();
    var markup = require_markup();
    var routes = require_routes2();
    var routeMatching = require_routeMatching2();
    var transition = require_transition();
    function _interopNamespace(e2) {
      if (e2 && e2.__esModule)
        return e2;
      var n = Object.create(null);
      if (e2) {
        Object.keys(e2).forEach(function(k2) {
          if (k2 !== "default") {
            var d2 = Object.getOwnPropertyDescriptor(e2, k2);
            Object.defineProperty(n, k2, d2.get ? d2 : {
              enumerable: true,
              get: function() {
                return e2[k2];
              }
            });
          }
        });
      }
      n["default"] = e2;
      return Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    var RemixEntryContext = /* @__PURE__ */ React__namespace.createContext(void 0);
    function useRemixEntryContext() {
      let context2 = React__namespace.useContext(RemixEntryContext);
      invariant(context2, "You must render this element inside a <Remix> element");
      return context2;
    }
    function RemixEntry({
      context: entryContext,
      action,
      location: historyLocation,
      navigator: _navigator,
      static: staticProp = false
    }) {
      let {
        manifest,
        routeData: documentLoaderData,
        actionData: documentActionData,
        routeModules,
        serverHandoffString,
        appState: entryComponentDidCatchEmulator
      } = entryContext;
      let clientRoutes = React__namespace.useMemo(() => routes.createClientRoutes(manifest.routes, routeModules, RemixRoute), [manifest, routeModules]);
      let [clientState, setClientState] = React__namespace.useState(entryComponentDidCatchEmulator);
      let [transitionManager] = React__namespace.useState(() => {
        return transition.createTransitionManager({
          routes: clientRoutes,
          actionData: documentActionData,
          loaderData: documentLoaderData,
          location: historyLocation,
          catch: entryComponentDidCatchEmulator.catch,
          catchBoundaryId: entryComponentDidCatchEmulator.catchBoundaryRouteId,
          onRedirect: _navigator.replace,
          onChange: (state) => {
            setClientState({
              catch: state.catch,
              error: state.error,
              catchBoundaryRouteId: state.catchBoundaryId,
              loaderBoundaryRouteId: state.errorBoundaryId,
              renderBoundaryRouteId: null,
              trackBoundaries: false,
              trackCatchBoundaries: false
            });
          }
        });
      });
      let navigator2 = React__namespace.useMemo(() => {
        let push = (to2, state) => {
          return transitionManager.getState().transition.state !== "idle" ? _navigator.replace(to2, state) : _navigator.push(to2, state);
        };
        return {
          ..._navigator,
          push
        };
      }, [_navigator, transitionManager]);
      let {
        location: location2,
        matches,
        loaderData,
        actionData
      } = transitionManager.getState();
      React__namespace.useEffect(() => {
        let {
          location: location3
        } = transitionManager.getState();
        if (historyLocation === location3)
          return;
        transitionManager.send({
          type: "navigation",
          location: historyLocation,
          submission: consumeNextNavigationSubmission(),
          action
        });
      }, [transitionManager, historyLocation, action]);
      let ssrErrorBeforeRoutesRendered = clientState.error && clientState.renderBoundaryRouteId === null && clientState.loaderBoundaryRouteId === null ? deserializeError(clientState.error) : void 0;
      let ssrCatchBeforeRoutesRendered = clientState.catch && clientState.catchBoundaryRouteId === null ? clientState.catch : void 0;
      return /* @__PURE__ */ React__namespace.createElement(RemixEntryContext.Provider, {
        value: {
          matches,
          manifest,
          appState: clientState,
          routeModules,
          serverHandoffString,
          clientRoutes,
          routeData: loaderData,
          actionData,
          transitionManager
        }
      }, /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixErrorBoundary, {
        location: location2,
        component: errorBoundaries.RemixRootDefaultErrorBoundary,
        error: ssrErrorBeforeRoutesRendered
      }, /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixCatchBoundary, {
        location: location2,
        component: errorBoundaries.RemixRootDefaultCatchBoundary,
        catch: ssrCatchBeforeRoutesRendered
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        navigationType: action,
        location: location2,
        navigator: navigator2,
        static: staticProp
      }, /* @__PURE__ */ React__namespace.createElement(Routes, null)))));
    }
    function deserializeError(data) {
      let error = new Error(data.message);
      error.stack = data.stack;
      return error;
    }
    function Routes() {
      let {
        clientRoutes
      } = useRemixEntryContext();
      let element = reactRouterDom.useRoutes(clientRoutes) || clientRoutes[0].element;
      return element;
    }
    var RemixRouteContext = /* @__PURE__ */ React__namespace.createContext(void 0);
    function useRemixRouteContext() {
      let context2 = React__namespace.useContext(RemixRouteContext);
      invariant(context2, "You must render this element in a remix route element");
      return context2;
    }
    function DefaultRouteComponent({
      id
    }) {
      throw new Error(`Route "${id}" has no component! Please go add a \`default\` export in the route module file.
If you were trying to navigate or submit to a resource route, use \`<a>\` instead of \`<Link>\` or \`<Form reloadDocument>\`.`);
    }
    function RemixRoute({
      id
    }) {
      let location2 = reactRouterDom.useLocation();
      let {
        routeData,
        routeModules,
        appState
      } = useRemixEntryContext();
      let data = routeData[id];
      let {
        default: Component,
        CatchBoundary,
        ErrorBoundary
      } = routeModules[id];
      let element = Component ? /* @__PURE__ */ React__namespace.createElement(Component, null) : /* @__PURE__ */ React__namespace.createElement(DefaultRouteComponent, {
        id
      });
      let context2 = {
        data,
        id
      };
      if (CatchBoundary) {
        let maybeServerCaught = appState.catch && appState.catchBoundaryRouteId === id ? appState.catch : void 0;
        if (appState.trackCatchBoundaries) {
          appState.catchBoundaryRouteId = id;
        }
        context2 = maybeServerCaught ? {
          id,
          get data() {
            console.error("You cannot `useLoaderData` in a catch boundary.");
            return void 0;
          }
        } : {
          id,
          data
        };
        element = /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixCatchBoundary, {
          location: location2,
          component: CatchBoundary,
          catch: maybeServerCaught
        }, element);
      }
      if (ErrorBoundary) {
        let maybeServerRenderError = appState.error && (appState.renderBoundaryRouteId === id || appState.loaderBoundaryRouteId === id) ? deserializeError(appState.error) : void 0;
        if (appState.trackBoundaries) {
          appState.renderBoundaryRouteId = id;
        }
        context2 = maybeServerRenderError ? {
          id,
          get data() {
            console.error("You cannot `useLoaderData` in an error boundary.");
            return void 0;
          }
        } : {
          id,
          data
        };
        element = /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixErrorBoundary, {
          location: location2,
          component: ErrorBoundary,
          error: maybeServerRenderError
        }, element);
      }
      return /* @__PURE__ */ React__namespace.createElement(RemixRouteContext.Provider, {
        value: context2
      }, element);
    }
    function usePrefetchBehavior(prefetch, theirElementProps) {
      let [maybePrefetch, setMaybePrefetch] = React__namespace.useState(false);
      let [shouldPrefetch, setShouldPrefetch] = React__namespace.useState(false);
      let {
        onFocus,
        onBlur,
        onMouseEnter,
        onMouseLeave,
        onTouchStart
      } = theirElementProps;
      React__namespace.useEffect(() => {
        if (prefetch === "render") {
          setShouldPrefetch(true);
        }
      }, [prefetch]);
      let setIntent = () => {
        if (prefetch === "intent") {
          setMaybePrefetch(true);
        }
      };
      let cancelIntent = () => {
        if (prefetch === "intent") {
          setMaybePrefetch(false);
        }
      };
      React__namespace.useEffect(() => {
        if (maybePrefetch) {
          let id = setTimeout(() => {
            setShouldPrefetch(true);
          }, 100);
          return () => {
            clearTimeout(id);
          };
        }
      }, [maybePrefetch]);
      return [shouldPrefetch, {
        onFocus: composeEventHandlers(onFocus, setIntent),
        onBlur: composeEventHandlers(onBlur, cancelIntent),
        onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
        onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
        onTouchStart: composeEventHandlers(onTouchStart, setIntent)
      }];
    }
    var NavLink = /* @__PURE__ */ React__namespace.forwardRef(({
      to: to2,
      prefetch = "none",
      ...props
    }, forwardedRef) => {
      let href = reactRouterDom.useHref(to2);
      let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.NavLink, _rollupPluginBabelHelpers["extends"]({
        ref: forwardedRef,
        to: to2
      }, props, prefetchHandlers)), shouldPrefetch ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, {
        page: href
      }) : null);
    });
    var Link2 = /* @__PURE__ */ React__namespace.forwardRef(({
      to: to2,
      prefetch = "none",
      ...props
    }, forwardedRef) => {
      let href = reactRouterDom.useHref(to2);
      let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Link, _rollupPluginBabelHelpers["extends"]({
        ref: forwardedRef,
        to: to2
      }, props, prefetchHandlers)), shouldPrefetch ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, {
        page: href
      }) : null);
    });
    function composeEventHandlers(theirHandler, ourHandler) {
      return (event) => {
        theirHandler && theirHandler(event);
        if (!event.defaultPrevented) {
          ourHandler(event);
        }
      };
    }
    function Links() {
      let {
        matches,
        routeModules,
        manifest
      } = useRemixEntryContext();
      let links$1 = React__namespace.useMemo(() => links.getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, links$1.map((link) => links.isPageLinkDescriptor(link) ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, _rollupPluginBabelHelpers["extends"]({
        key: link.page
      }, link)) : /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers["extends"]({
        key: link.rel + link.href
      }, link))));
    }
    function PrefetchPageLinks({
      page,
      ...dataLinkProps
    }) {
      let {
        clientRoutes
      } = useRemixEntryContext();
      let matches = React__namespace.useMemo(() => routeMatching.matchClientRoutes(clientRoutes, page), [clientRoutes, page]);
      if (!matches) {
        console.warn(`Tried to prefetch ${page} but no routes matched.`);
        return null;
      }
      return /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinksImpl, _rollupPluginBabelHelpers["extends"]({
        page,
        matches
      }, dataLinkProps));
    }
    function usePrefetchedStylesheets(matches) {
      let {
        routeModules
      } = useRemixEntryContext();
      let [styleLinks, setStyleLinks] = React__namespace.useState([]);
      React__namespace.useEffect(() => {
        let interrupted = false;
        links.getStylesheetPrefetchLinks(matches, routeModules).then((links2) => {
          if (!interrupted)
            setStyleLinks(links2);
        });
        return () => {
          interrupted = true;
        };
      }, [matches, routeModules]);
      return styleLinks;
    }
    function PrefetchPageLinksImpl({
      page,
      matches: nextMatches,
      ...linkProps
    }) {
      let location2 = reactRouterDom.useLocation();
      let {
        matches,
        manifest
      } = useRemixEntryContext();
      let newMatchesForData = React__namespace.useMemo(() => links.getNewMatchesForLinks(page, nextMatches, matches, location2, "data"), [page, nextMatches, matches, location2]);
      let newMatchesForAssets = React__namespace.useMemo(() => links.getNewMatchesForLinks(page, nextMatches, matches, location2, "assets"), [page, nextMatches, matches, location2]);
      let dataHrefs = React__namespace.useMemo(() => links.getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]);
      let moduleHrefs = React__namespace.useMemo(() => links.getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]);
      let styleLinks = usePrefetchedStylesheets(newMatchesForAssets);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers["extends"]({
        key: href,
        rel: "prefetch",
        as: "fetch",
        href
      }, linkProps))), moduleHrefs.map((href) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers["extends"]({
        key: href,
        rel: "modulepreload",
        href
      }, linkProps))), styleLinks.map((link) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers["extends"]({
        key: link.href
      }, link))));
    }
    function Meta() {
      let {
        matches,
        routeData,
        routeModules
      } = useRemixEntryContext();
      let location2 = reactRouterDom.useLocation();
      let meta = {};
      let parentsData = {};
      for (let match of matches) {
        let routeId = match.route.id;
        let data = routeData[routeId];
        let params = match.params;
        let routeModule = routeModules[routeId];
        if (routeModule.meta) {
          let routeMeta = typeof routeModule.meta === "function" ? routeModule.meta({
            data,
            parentsData,
            params,
            location: location2
          }) : routeModule.meta;
          Object.assign(meta, routeMeta);
        }
        parentsData[routeId] = data;
      }
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, Object.entries(meta).map(([name, value]) => {
        let isOpenGraphTag = name.startsWith("og:");
        return name === "title" ? /* @__PURE__ */ React__namespace.createElement("title", {
          key: "title"
        }, value) : Array.isArray(value) ? value.map((content) => isOpenGraphTag ? /* @__PURE__ */ React__namespace.createElement("meta", {
          key: name + content,
          property: name,
          content
        }) : /* @__PURE__ */ React__namespace.createElement("meta", {
          key: name + content,
          name,
          content
        })) : isOpenGraphTag ? /* @__PURE__ */ React__namespace.createElement("meta", {
          key: name,
          property: name,
          content: value
        }) : /* @__PURE__ */ React__namespace.createElement("meta", {
          key: name,
          name,
          content: value
        });
      }));
    }
    var isHydrated = false;
    function Scripts(props) {
      let {
        manifest,
        matches,
        pendingLocation,
        clientRoutes,
        serverHandoffString
      } = useRemixEntryContext();
      React__namespace.useEffect(() => {
        isHydrated = true;
      }, []);
      let initialScripts = React__namespace.useMemo(() => {
        let contextScript = serverHandoffString ? `window.__remixContext = ${serverHandoffString};` : "";
        let routeModulesScript = `${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join("\n")}
window.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(",")}};`;
        return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers["extends"]({}, props, {
          suppressHydrationWarning: true,
          dangerouslySetInnerHTML: markup.createHtml(contextScript)
        })), /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers["extends"]({}, props, {
          src: manifest.url
        })), /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers["extends"]({}, props, {
          dangerouslySetInnerHTML: markup.createHtml(routeModulesScript),
          type: "module"
        })), /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers["extends"]({}, props, {
          src: manifest.entry.module,
          type: "module"
        })));
      }, []);
      let nextMatches = React__namespace.useMemo(() => {
        if (pendingLocation) {
          let matches2 = routeMatching.matchClientRoutes(clientRoutes, pendingLocation);
          invariant(matches2, `No routes match path "${pendingLocation.pathname}"`);
          return matches2;
        }
        return [];
      }, [pendingLocation, clientRoutes]);
      let routePreloads = matches.concat(nextMatches).map((match) => {
        let route = manifest.routes[match.route.id];
        return (route.imports || []).concat([route.module]);
      }).flat(1);
      let preloads = manifest.entry.imports.concat(routePreloads);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, dedupe(preloads).map((path) => /* @__PURE__ */ React__namespace.createElement("link", {
        key: path,
        rel: "modulepreload",
        href: path,
        crossOrigin: props.crossOrigin
      })), isHydrated ? null : initialScripts);
    }
    function dedupe(array) {
      return [...new Set(array)];
    }
    var Form = /* @__PURE__ */ React__namespace.forwardRef((props, ref) => {
      return /* @__PURE__ */ React__namespace.createElement(FormImpl, _rollupPluginBabelHelpers["extends"]({}, props, {
        ref
      }));
    });
    var FormImpl = /* @__PURE__ */ React__namespace.forwardRef(({
      reloadDocument = false,
      replace = false,
      method = "get",
      action = ".",
      encType = "application/x-www-form-urlencoded",
      fetchKey,
      onSubmit,
      ...props
    }, forwardedRef) => {
      let submit = useSubmitImpl(fetchKey);
      let formMethod = method.toLowerCase() === "get" ? "get" : "post";
      let formAction = useFormAction(action, formMethod);
      let formRef = React__namespace.useRef();
      let ref = useComposedRefs(forwardedRef, formRef);
      let clickedButtonRef = React__namespace.useRef();
      React__namespace.useEffect(() => {
        let form = formRef.current;
        if (!form)
          return;
        function handleClick(event) {
          if (!(event.target instanceof Element))
            return;
          let submitButton = event.target.closest("button,input[type=submit]");
          if (submitButton && submitButton.form === form && submitButton.type === "submit") {
            clickedButtonRef.current = submitButton;
          }
        }
        window.addEventListener("click", handleClick);
        return () => {
          window.removeEventListener("click", handleClick);
        };
      }, []);
      return /* @__PURE__ */ React__namespace.createElement("form", _rollupPluginBabelHelpers["extends"]({
        ref,
        method: formMethod,
        action: formAction,
        encType,
        onSubmit: reloadDocument ? void 0 : (event) => {
          onSubmit && onSubmit(event);
          if (event.defaultPrevented)
            return;
          event.preventDefault();
          submit(clickedButtonRef.current || event.currentTarget, {
            method,
            replace
          });
          clickedButtonRef.current = null;
        }
      }, props));
    });
    function isActionRequestMethod(method) {
      method = method.toLowerCase();
      return method === "post" || method === "put" || method === "patch" || method === "delete";
    }
    function useFormAction(action = ".", method = "get") {
      let {
        id
      } = useRemixRouteContext();
      let path = reactRouterDom.useResolvedPath(action);
      let search = path.search;
      let isIndexRoute = id.endsWith("/index");
      if (action === "." && isIndexRoute && isActionRequestMethod(method)) {
        search = search ? search.replace(/^\?/, "?index&") : "?index";
      }
      return path.pathname + search;
    }
    function useSubmit() {
      return useSubmitImpl();
    }
    function useSubmitImpl(key) {
      let navigate = reactRouterDom.useNavigate();
      let defaultAction = useFormAction();
      let {
        transitionManager
      } = useRemixEntryContext();
      return React__namespace.useCallback((target, options2 = {}) => {
        let method;
        let action;
        let encType;
        let formData;
        if (isFormElement(target)) {
          let submissionTrigger = options2.submissionTrigger;
          method = options2.method || target.method;
          action = options2.action || target.action;
          encType = options2.encType || target.enctype;
          formData = new FormData(target);
          if (submissionTrigger && submissionTrigger.name) {
            formData.append(submissionTrigger.name, submissionTrigger.value);
          }
        } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
          let form = target.form;
          if (form == null) {
            throw new Error(`Cannot submit a <button> without a <form>`);
          }
          method = options2.method || target.getAttribute("formmethod") || form.method;
          action = options2.action || target.getAttribute("formaction") || form.action;
          encType = options2.encType || target.getAttribute("formenctype") || form.enctype;
          formData = new FormData(form);
          if (target.name) {
            formData.set(target.name, target.value);
          }
        } else {
          if (isHtmlElement(target)) {
            throw new Error(`Cannot submit element that is not <form>, <button>, or <input type="submit|image">`);
          }
          method = options2.method || "get";
          action = options2.action || defaultAction;
          encType = options2.encType || "application/x-www-form-urlencoded";
          if (target instanceof FormData) {
            formData = target;
          } else {
            formData = new FormData();
            if (target instanceof URLSearchParams) {
              for (let [name, value] of target) {
                formData.append(name, value);
              }
            } else if (target != null) {
              for (let name of Object.keys(target)) {
                formData.append(name, target[name]);
              }
            }
          }
        }
        if (typeof document === "undefined") {
          throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
        }
        let {
          protocol,
          host
        } = window.location;
        let url2 = new URL(action, `${protocol}//${host}`);
        if (method.toLowerCase() === "get") {
          for (let [name, value] of formData) {
            if (typeof value === "string") {
              url2.searchParams.append(name, value);
            } else {
              throw new Error(`Cannot submit binary form data using GET`);
            }
          }
        }
        let submission = {
          formData,
          action: url2.pathname + url2.search,
          method: method.toUpperCase(),
          encType,
          key: Math.random().toString(36).substr(2, 8)
        };
        if (key) {
          transitionManager.send({
            type: "fetcher",
            href: submission.action,
            submission,
            key
          });
        } else {
          setNextNavigationSubmission(submission);
          navigate(url2.pathname + url2.search, {
            replace: options2.replace
          });
        }
      }, [defaultAction, key, navigate, transitionManager]);
    }
    var nextNavigationSubmission;
    function setNextNavigationSubmission(submission) {
      nextNavigationSubmission = submission;
    }
    function consumeNextNavigationSubmission() {
      let submission = nextNavigationSubmission;
      nextNavigationSubmission = void 0;
      return submission;
    }
    function isHtmlElement(object) {
      return object != null && typeof object.tagName === "string";
    }
    function isButtonElement(object) {
      return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
    }
    function isFormElement(object) {
      return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
    }
    function isInputElement(object) {
      return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
    }
    function useBeforeUnload(callback) {
      React__namespace.useEffect(() => {
        window.addEventListener("beforeunload", callback);
        return () => {
          window.removeEventListener("beforeunload", callback);
        };
      }, [callback]);
    }
    function useMatches5() {
      let {
        matches,
        routeData,
        routeModules
      } = useRemixEntryContext();
      return React__namespace.useMemo(() => matches.map((match) => {
        var _routeModules$match$r;
        let {
          pathname,
          params
        } = match;
        return {
          id: match.route.id,
          pathname,
          params,
          data: routeData[match.route.id],
          handle: (_routeModules$match$r = routeModules[match.route.id]) === null || _routeModules$match$r === void 0 ? void 0 : _routeModules$match$r.handle
        };
      }), [matches, routeData, routeModules]);
    }
    function useLoaderData() {
      return useRemixRouteContext().data;
    }
    function useActionData() {
      let {
        id: routeId
      } = useRemixRouteContext();
      let {
        transitionManager
      } = useRemixEntryContext();
      let {
        actionData
      } = transitionManager.getState();
      return actionData ? actionData[routeId] : void 0;
    }
    function useTransition() {
      let {
        transitionManager
      } = useRemixEntryContext();
      return transitionManager.getState().transition;
    }
    function createFetcherForm(fetchKey) {
      return /* @__PURE__ */ React__namespace.forwardRef((props, ref) => {
        return /* @__PURE__ */ React__namespace.createElement(FormImpl, _rollupPluginBabelHelpers["extends"]({}, props, {
          ref,
          fetchKey
        }));
      });
    }
    var fetcherId = 0;
    function useFetcher() {
      let {
        transitionManager
      } = useRemixEntryContext();
      let [key] = React__namespace.useState(() => String(++fetcherId));
      let [Form2] = React__namespace.useState(() => createFetcherForm(key));
      let [load] = React__namespace.useState(() => (href) => {
        transitionManager.send({
          type: "fetcher",
          href,
          key
        });
      });
      let submit = useSubmitImpl(key);
      let fetcher = transitionManager.getFetcher(key);
      let fetcherWithComponents = React__namespace.useMemo(() => ({
        Form: Form2,
        submit,
        load,
        ...fetcher
      }), [fetcher, Form2, submit, load]);
      React__namespace.useEffect(() => {
        return () => transitionManager.deleteFetcher(key);
      }, [transitionManager, key]);
      return fetcherWithComponents;
    }
    function useFetchers() {
      let {
        transitionManager
      } = useRemixEntryContext();
      let {
        fetchers
      } = transitionManager.getState();
      return [...fetchers.values()];
    }
    var LiveReload = define_process_default.env.NODE_ENV !== "development" ? () => null : function LiveReload2({
      port = Number(define_process_default.env.REMIX_DEV_SERVER_WS_PORT || 8002)
    }) {
      let setupLiveReload = ((port2) => {
        let protocol = location.protocol === "https:" ? "wss:" : "ws:";
        let host = location.hostname;
        let socketPath = `${protocol}//${host}:${port2}/socket`;
        let ws2 = new WebSocket(socketPath);
        ws2.onmessage = (message) => {
          let event = JSON.parse(message.data);
          if (event.type === "LOG") {
            console.log(event.message);
          }
          if (event.type === "RELOAD") {
            console.log("\u{1F4BF} Reloading window ...");
            window.location.reload();
          }
        };
        ws2.onerror = (error) => {
          console.log("Remix dev asset server web socket error:");
          console.error(error);
        };
      }).toString();
      return /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: {
          __html: `(${setupLiveReload})(${JSON.stringify(port)})`
        }
      });
    };
    function useComposedRefs(...refs) {
      return React__namespace.useCallback((node) => {
        for (let ref of refs) {
          if (ref == null)
            continue;
          if (typeof ref === "function") {
            ref(node);
          } else {
            try {
              ref.current = node;
            } catch (_) {
            }
          }
        }
      }, refs);
    }
    exports2.Form = Form;
    exports2.FormImpl = FormImpl;
    exports2.Link = Link2;
    exports2.Links = Links;
    exports2.LiveReload = LiveReload;
    exports2.Meta = Meta;
    exports2.NavLink = NavLink;
    exports2.PrefetchPageLinks = PrefetchPageLinks;
    exports2.RemixEntry = RemixEntry;
    exports2.RemixEntryContext = RemixEntryContext;
    exports2.RemixRoute = RemixRoute;
    exports2.Scripts = Scripts;
    exports2.composeEventHandlers = composeEventHandlers;
    exports2.useActionData = useActionData;
    exports2.useBeforeUnload = useBeforeUnload;
    exports2.useFetcher = useFetcher;
    exports2.useFetchers = useFetchers;
    exports2.useFormAction = useFormAction;
    exports2.useLoaderData = useLoaderData;
    exports2.useMatches = useMatches5;
    exports2.useSubmit = useSubmit;
    exports2.useSubmitImpl = useSubmitImpl;
    exports2.useTransition = useTransition;
  }
});

// node_modules/@remix-run/react/browser.js
var require_browser = __commonJS({
  "node_modules/@remix-run/react/browser.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var history = require_main();
    var React = require_react();
    var components = require_components();
    function _interopNamespace(e2) {
      if (e2 && e2.__esModule)
        return e2;
      var n = Object.create(null);
      if (e2) {
        Object.keys(e2).forEach(function(k2) {
          if (k2 !== "default") {
            var d2 = Object.getOwnPropertyDescriptor(e2, k2);
            Object.defineProperty(n, k2, d2.get ? d2 : {
              enumerable: true,
              get: function() {
                return e2[k2];
              }
            });
          }
        });
      }
      n["default"] = e2;
      return Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    function RemixBrowser(_props) {
      let historyRef = React__namespace.useRef();
      if (historyRef.current == null) {
        historyRef.current = history.createBrowserHistory({
          window
        });
      }
      let history$1 = historyRef.current;
      let [state, dispatch] = React__namespace.useReducer((_, update) => update, {
        action: history$1.action,
        location: history$1.location
      });
      React__namespace.useLayoutEffect(() => history$1.listen(dispatch), [history$1]);
      let entryContext = window.__remixContext;
      entryContext.manifest = window.__remixManifest;
      entryContext.routeModules = window.__remixRouteModules;
      entryContext.appState.trackBoundaries = false;
      entryContext.appState.trackCatchBoundaries = false;
      return /* @__PURE__ */ React__namespace.createElement(components.RemixEntry, {
        context: entryContext,
        action: state.action,
        location: state.location,
        navigator: history$1
      });
    }
    exports2.RemixBrowser = RemixBrowser;
  }
});

// node_modules/@remix-run/react/scroll-restoration.js
var require_scroll_restoration = __commonJS({
  "node_modules/@remix-run/react/scroll-restoration.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var React = require_react();
    var reactRouterDom = require_main3();
    var components = require_components();
    function _interopNamespace(e2) {
      if (e2 && e2.__esModule)
        return e2;
      var n = Object.create(null);
      if (e2) {
        Object.keys(e2).forEach(function(k2) {
          if (k2 !== "default") {
            var d2 = Object.getOwnPropertyDescriptor(e2, k2);
            Object.defineProperty(n, k2, d2.get ? d2 : {
              enumerable: true,
              get: function() {
                return e2[k2];
              }
            });
          }
        });
      }
      n["default"] = e2;
      return Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    var STORAGE_KEY = "positions";
    var positions = {};
    if (typeof document !== "undefined") {
      let sessionPositions = sessionStorage.getItem(STORAGE_KEY);
      if (sessionPositions) {
        positions = JSON.parse(sessionPositions);
      }
    }
    function ScrollRestoration() {
      useScrollRestoration();
      React__namespace.useEffect(() => {
        window.history.scrollRestoration = "manual";
      }, []);
      components.useBeforeUnload(React__namespace.useCallback(() => {
        window.history.scrollRestoration = "auto";
      }, []));
      let restoreScroll = ((STORAGE_KEY2) => {
        if (!window.history.state || !window.history.state.key) {
          let key = Math.random().toString(32).slice(2);
          window.history.replaceState({
            key
          }, "");
        }
        try {
          let positions2 = JSON.parse(sessionStorage.getItem(STORAGE_KEY2) || "{}");
          let storedY = positions2[window.history.state.key];
          if (typeof storedY === "number") {
            window.scrollTo(0, storedY);
          }
        } catch (error) {
          console.error(error);
          sessionStorage.removeItem(STORAGE_KEY2);
        }
      }).toString();
      return /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: {
          __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)})`
        }
      });
    }
    var hydrated = false;
    function useScrollRestoration() {
      let location2 = reactRouterDom.useLocation();
      let transition = components.useTransition();
      let wasSubmissionRef = React__namespace.useRef(false);
      React__namespace.useEffect(() => {
        if (transition.submission) {
          wasSubmissionRef.current = true;
        }
      }, [transition]);
      React__namespace.useEffect(() => {
        if (transition.location) {
          positions[location2.key] = window.scrollY;
        }
      }, [transition, location2]);
      components.useBeforeUnload(React__namespace.useCallback(() => {
        sessionStorage.setItem(STORAGE_KEY, JSON.stringify(positions));
      }, []));
      if (typeof document !== "undefined") {
        React__namespace.useLayoutEffect(() => {
          if (!hydrated) {
            hydrated = true;
            return;
          }
          let y2 = positions[location2.key];
          if (y2 != void 0) {
            window.scrollTo(0, y2);
            return;
          }
          if (location2.hash) {
            let el2 = document.getElementById(location2.hash.slice(1));
            if (el2) {
              el2.scrollIntoView();
              return;
            }
          }
          if (wasSubmissionRef.current === true) {
            wasSubmissionRef.current = false;
            return;
          }
          window.scrollTo(0, 0);
        }, [location2]);
      }
      React__namespace.useEffect(() => {
        if (transition.submission) {
          wasSubmissionRef.current = true;
        }
      }, [transition]);
    }
    exports2.ScrollRestoration = ScrollRestoration;
  }
});

// node_modules/@remix-run/react/server.js
var require_server2 = __commonJS({
  "node_modules/@remix-run/react/server.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var history = require_main();
    var React = require_react();
    var components = require_components();
    function _interopNamespace(e2) {
      if (e2 && e2.__esModule)
        return e2;
      var n = Object.create(null);
      if (e2) {
        Object.keys(e2).forEach(function(k2) {
          if (k2 !== "default") {
            var d2 = Object.getOwnPropertyDescriptor(e2, k2);
            Object.defineProperty(n, k2, d2.get ? d2 : {
              enumerable: true,
              get: function() {
                return e2[k2];
              }
            });
          }
        });
      }
      n["default"] = e2;
      return Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React);
    function RemixServer({
      context: context2,
      url: url2
    }) {
      if (typeof url2 === "string") {
        url2 = new URL(url2);
      }
      let location2 = {
        pathname: url2.pathname,
        search: url2.search,
        hash: "",
        state: null,
        key: "default"
      };
      let staticNavigator = {
        createHref(to2) {
          return typeof to2 === "string" ? to2 : history.createPath(to2);
        },
        push(to2) {
          throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to2)})\` somewhere in your app.`);
        },
        replace(to2) {
          throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to2)}, { replace: true })\` somewhere in your app.`);
        },
        go(delta) {
          throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back() {
          throw new Error(`You cannot use navigator.back() on the server because it is a stateless environment.`);
        },
        forward() {
          throw new Error(`You cannot use navigator.forward() on the server because it is a stateless environment.`);
        },
        block() {
          throw new Error(`You cannot use navigator.block() on the server because it is a stateless environment.`);
        }
      };
      return /* @__PURE__ */ React__namespace.createElement(components.RemixEntry, {
        context: context2,
        action: history.Action.Pop,
        location: location2,
        navigator: staticNavigator,
        static: true
      });
    }
    exports2.RemixServer = RemixServer;
  }
});

// node_modules/@remix-run/react/index.js
var require_react2 = __commonJS({
  "node_modules/@remix-run/react/index.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var browser = require_browser();
    var reactRouterDom = require_main3();
    var components = require_components();
    var errorBoundaries = require_errorBoundaries();
    var scrollRestoration = require_scroll_restoration();
    var server = require_server2();
    exports2.RemixBrowser = browser.RemixBrowser;
    Object.defineProperty(exports2, "Outlet", {
      enumerable: true,
      get: function() {
        return reactRouterDom.Outlet;
      }
    });
    Object.defineProperty(exports2, "useHref", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useHref;
      }
    });
    Object.defineProperty(exports2, "useLocation", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useLocation;
      }
    });
    Object.defineProperty(exports2, "useNavigate", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useNavigate;
      }
    });
    Object.defineProperty(exports2, "useNavigationType", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useNavigationType;
      }
    });
    Object.defineProperty(exports2, "useOutlet", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useOutlet;
      }
    });
    Object.defineProperty(exports2, "useOutletContext", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useOutletContext;
      }
    });
    Object.defineProperty(exports2, "useParams", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useParams;
      }
    });
    Object.defineProperty(exports2, "useResolvedPath", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useResolvedPath;
      }
    });
    Object.defineProperty(exports2, "useSearchParams", {
      enumerable: true,
      get: function() {
        return reactRouterDom.useSearchParams;
      }
    });
    exports2.Form = components.Form;
    exports2.Link = components.Link;
    exports2.Links = components.Links;
    exports2.LiveReload = components.LiveReload;
    exports2.Meta = components.Meta;
    exports2.NavLink = components.NavLink;
    exports2.PrefetchPageLinks = components.PrefetchPageLinks;
    exports2.Scripts = components.Scripts;
    exports2.useActionData = components.useActionData;
    exports2.useBeforeUnload = components.useBeforeUnload;
    exports2.useFetcher = components.useFetcher;
    exports2.useFetchers = components.useFetchers;
    exports2.useFormAction = components.useFormAction;
    exports2.useLoaderData = components.useLoaderData;
    exports2.useMatches = components.useMatches;
    exports2.useSubmit = components.useSubmit;
    exports2.useTransition = components.useTransition;
    exports2.useCatch = errorBoundaries.useCatch;
    exports2.ScrollRestoration = scrollRestoration.ScrollRestoration;
    exports2.RemixServer = server.RemixServer;
  }
});

// node_modules/react-dom/cjs/react-dom-server.browser.development.js
var require_react_dom_server_browser_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom-server.browser.development.js"(exports2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV !== "production") {
      (function() {
        "use strict";
        var React = require_react();
        var _assign = require_object_assign();
        function formatProdErrorMessage(code) {
          var url2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + code;
          for (var i2 = 1; i2 < arguments.length; i2++) {
            url2 += "&args[]=" + encodeURIComponent(arguments[i2]);
          }
          return "Minified React error #" + code + "; visit " + url2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
        }
        var ReactVersion = "17.0.2";
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn(format) {
          {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            printWarning("warn", format, args);
          }
        }
        function error(format) {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format, args);
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return "" + item;
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        var REACT_FRAGMENT_TYPE = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context2 = type;
                return getContextName(context2) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentName(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var enableSuspenseServerRenderer = false;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: _assign({}, props, {
                  value: prevLog
                }),
                info: _assign({}, props, {
                  value: prevInfo
                }),
                warn: _assign({}, props, {
                  value: prevWarn
                }),
                error: _assign({}, props, {
                  value: prevError
                }),
                group: _assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: _assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: _assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location2, componentName, element) {
          {
            var has = Function.call.bind(Object.prototype.hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location2 + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location2, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location2, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location2, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutInvalidateContextType = new Set();
        }
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function maskContext(type, context2) {
          var contextTypes = type.contextTypes;
          if (!contextTypes) {
            return emptyObject;
          }
          var maskedContext = {};
          for (var contextName in contextTypes) {
            maskedContext[contextName] = context2[contextName];
          }
          return maskedContext;
        }
        function checkContextTypes(typeSpecs, values, location2) {
          {
            checkPropTypes(typeSpecs, values, location2, "Component");
          }
        }
        function validateContextBounds(context2, threadID) {
          for (var i2 = context2._threadCount | 0; i2 <= threadID; i2++) {
            context2[i2] = context2._currentValue2;
            context2._threadCount = i2 + 1;
          }
        }
        function processContext(type, context2, threadID, isClass) {
          if (isClass) {
            var contextType = type.contextType;
            {
              if ("contextType" in type) {
                var isValid = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
                if (!isValid && !didWarnAboutInvalidateContextType.has(type)) {
                  didWarnAboutInvalidateContextType.add(type);
                  var addendum = "";
                  if (contextType === void 0) {
                    addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                  } else if (typeof contextType !== "object") {
                    addendum = " However, it is set to a " + typeof contextType + ".";
                  } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                    addendum = " Did you accidentally pass the Context.Provider instead?";
                  } else if (contextType._context !== void 0) {
                    addendum = " Did you accidentally pass the Context.Consumer instead?";
                  } else {
                    addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                  }
                  error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentName(type) || "Component", addendum);
                }
              }
            }
            if (typeof contextType === "object" && contextType !== null) {
              validateContextBounds(contextType, threadID);
              return contextType[threadID];
            }
            {
              var maskedContext = maskContext(type, context2);
              {
                if (type.contextTypes) {
                  checkContextTypes(type.contextTypes, maskedContext, "context");
                }
              }
              return maskedContext;
            }
          } else {
            {
              var _maskedContext = maskContext(type, context2);
              {
                if (type.contextTypes) {
                  checkContextTypes(type.contextTypes, _maskedContext, "context");
                }
              }
              return _maskedContext;
            }
          }
        }
        var nextAvailableThreadIDs = new Uint16Array(16);
        for (var i = 0; i < 15; i++) {
          nextAvailableThreadIDs[i] = i + 1;
        }
        nextAvailableThreadIDs[15] = 0;
        function growThreadCountAndReturnNextAvailable() {
          var oldArray = nextAvailableThreadIDs;
          var oldSize = oldArray.length;
          var newSize = oldSize * 2;
          if (!(newSize <= 65536)) {
            {
              throw Error("Maximum number of concurrent React renderers exceeded. This can happen if you are not properly destroying the Readable provided by React. Ensure that you call .destroy() on it if you no longer want to read from it, and did not read to the end. If you use .pipe() this should be automatic.");
            }
          }
          var newArray = new Uint16Array(newSize);
          newArray.set(oldArray);
          nextAvailableThreadIDs = newArray;
          nextAvailableThreadIDs[0] = oldSize + 1;
          for (var _i2 = oldSize; _i2 < newSize - 1; _i2++) {
            nextAvailableThreadIDs[_i2] = _i2 + 1;
          }
          nextAvailableThreadIDs[newSize - 1] = 0;
          return oldSize;
        }
        function allocThreadID() {
          var nextID = nextAvailableThreadIDs[0];
          if (nextID === 0) {
            return growThreadCountAndReturnNextAvailable();
          }
          nextAvailableThreadIDs[0] = nextAvailableThreadIDs[nextID];
          return nextID;
        }
        function freeThreadID(id) {
          nextAvailableThreadIDs[id] = nextAvailableThreadIDs[0];
          nextAvailableThreadIDs[0] = id;
        }
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var ROOT_ATTRIBUTE_NAME = "data-reactroot";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null) {
            return propertyInfo.type === RESERVED;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
            return true;
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
          if (value === null || typeof value === "undefined") {
            return true;
          }
          if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
            return true;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (propertyInfo !== null) {
            switch (propertyInfo.type) {
              case BOOLEAN:
                return !value;
              case OVERLOADED_BOOLEAN:
                return value === false;
              case NUMERIC:
                return isNaN(value);
              case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
            }
          }
          return false;
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
        });
        [
          "allowFullScreen",
          "async",
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
        });
        [
          "checked",
          "multiple",
          "muted",
          "selected"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
        });
        [
          "capture",
          "download"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
        });
        [
          "cols",
          "rows",
          "size",
          "span"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
        });
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url2) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url2)) {
              didWarn = true;
              error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url2));
            }
          }
        }
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          var str = "" + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape;
          var html2 = "";
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape = "&quot;";
                break;
              case 38:
                escape = "&amp;";
                break;
              case 39:
                escape = "&#x27;";
                break;
              case 60:
                escape = "&lt;";
                break;
              case 62:
                escape = "&gt;";
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html2 += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html2 += escape;
          }
          return lastIndex !== index ? html2 + str.substring(lastIndex, index) : html2;
        }
        function escapeTextForBrowser(text) {
          if (typeof text === "boolean" || typeof text === "number") {
            return "" + text;
          }
          return escapeHtml(text);
        }
        function quoteAttributeValueForBrowser(value) {
          return '"' + escapeTextForBrowser(value) + '"';
        }
        function createMarkupForRoot() {
          return ROOT_ATTRIBUTE_NAME + '=""';
        }
        function createMarkupForProperty(name, value) {
          var propertyInfo = getPropertyInfo(name);
          if (name !== "style" && shouldIgnoreAttribute(name, propertyInfo, false)) {
            return "";
          }
          if (shouldRemoveAttribute(name, value, propertyInfo, false)) {
            return "";
          }
          if (propertyInfo !== null) {
            var attributeName = propertyInfo.attributeName;
            var type = propertyInfo.type;
            if (type === BOOLEAN || type === OVERLOADED_BOOLEAN && value === true) {
              return attributeName + '=""';
            } else {
              if (propertyInfo.sanitizeURL) {
                value = "" + value;
                sanitizeURL(value);
              }
              return attributeName + "=" + quoteAttributeValueForBrowser(value);
            }
          } else if (isAttributeNameSafe(name)) {
            return name + "=" + quoteAttributeValueForBrowser(value);
          }
          return "";
        }
        function createMarkupForCustomAttribute(name, value) {
          if (!isAttributeNameSafe(name) || value == null) {
            return "";
          }
          return name + "=" + quoteAttributeValueForBrowser(value);
        }
        function is2(x, y2) {
          return x === y2 && (x !== 0 || 1 / x === 1 / y2) || x !== x && y2 !== y2;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is2;
        var currentlyRenderingComponent = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (!(currentlyRenderingComponent !== null)) {
            {
              throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          {
            if (isInHookUserCodeInDev) {
              error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
            }
          }
          for (var i2 = 0; i2 < prevDeps.length && i2 < nextDeps.length; i2++) {
            if (objectIs(nextDeps[i2], prevDeps[i2])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            {
              {
                throw Error("Rendered more hooks than during the previous render");
              }
            }
          }
          return {
            memoizedState: null,
            queue: null,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          {
            isInHookUserCodeInDev = false;
          }
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext(context2, observedBits) {
          var threadID = currentPartialRenderer.threadID;
          validateContextBounds(context2, threadID);
          {
            if (isInHookUserCodeInDev) {
              error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          return context2[threadID];
        }
        function useContext2(context2, observedBits) {
          {
            currentHookNameInDev = "useContext";
          }
          resolveCurrentlyRenderingComponent();
          var threadID = currentPartialRenderer.threadID;
          validateContextBounds(context2, threadID);
          return context2[threadID];
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function useState2(initialState) {
          {
            currentHookNameInDev = "useState";
          }
          return useReducer(basicStateReducer, initialState);
        }
        function useReducer(reducer, initialArg, init) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = "useReducer";
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState = typeof initialArg === "function" ? initialArg() : initialArg;
            } else {
              initialState = init !== void 0 ? init(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue = workInProgressHook.queue = {
              last: null,
              dispatch: null
            };
            var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = "useLayoutEffect";
            error("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
            {
              throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
            }
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback2(callback, deps) {
          return useMemo(function() {
            return callback;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          var startTransition = function(callback) {
            callback();
          };
          return [startTransition, false];
        }
        function useOpaqueIdentifier() {
          return (currentPartialRenderer.identifierPrefix || "") + "R:" + (currentPartialRenderer.uniqueID++).toString(36);
        }
        function noop() {
        }
        var currentPartialRenderer = null;
        function setCurrentPartialRenderer(renderer) {
          currentPartialRenderer = renderer;
        }
        var Dispatcher = {
          readContext,
          useContext: useContext2,
          useMemo,
          useReducer,
          useRef,
          useState: useState2,
          useLayoutEffect,
          useCallback: useCallback2,
          useImperativeHandle: noop,
          useEffect: noop,
          useDebugValue: noop,
          useDeferredValue,
          useTransition,
          useOpaqueIdentifier,
          useMutableSource
        };
        var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
        var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
        var Namespaces = {
          html: HTML_NAMESPACE,
          mathml: MATH_NAMESPACE,
          svg: SVG_NAMESPACE
        };
        function getIntrinsicNamespace(type) {
          switch (type) {
            case "svg":
              return SVG_NAMESPACE;
            case "math":
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE;
          }
        }
        function getChildNamespace(parentNamespace, type) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
            return getIntrinsicNamespace(type);
          }
          if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
            return HTML_NAMESPACE;
          }
          return parentNamespace;
        }
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
        };
        var voidElementTags = _assign({
          menuitem: true
        }, omittedCloseTags);
        var HTML = "__html";
        function assertValidProps(tag, props) {
          if (!props) {
            return;
          }
          if (voidElementTags[tag]) {
            if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
              {
                throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              }
            }
          }
          if (props.dangerouslySetInnerHTML != null) {
            if (!(props.children == null)) {
              {
                throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
              }
            }
            if (!(typeof props.dangerouslySetInnerHTML === "object" && HTML in props.dangerouslySetInnerHTML)) {
              {
                throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
              }
            }
          }
          {
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
          }
          if (!(props.style == null || typeof props.style === "object")) {
            {
              throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
            }
          }
        }
        var isUnitlessNumber = {
          animationIterationCount: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        function dangerousStyleValue(name, value, isCustomProperty) {
          var isEmpty = value == null || typeof value === "boolean" || value === "";
          if (isEmpty) {
            return "";
          }
          if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
            return value + "px";
          }
          return ("" + value).trim();
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern$1 = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported style property %s. Did you mean %s?", name, camelize(name.replace(msPattern$1, "ms-")));
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var ariaProperties = {
          "aria-current": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          "aria-hidden": 0,
          "aria-invalid": 0,
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var possibleStandardNames = {
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var _hasOwnProperty = Object.prototype.hasOwnProperty;
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var toArray = React.Children.toArray;
        var currentDebugStacks = [];
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1;
        var prevGetCurrentStackImpl = null;
        var getCurrentServerStackImpl = function() {
          return "";
        };
        var describeStackFrame = function(element) {
          return "";
        };
        var validatePropertiesInDevelopment = function(type, props) {
        };
        var pushCurrentDebugStack = function(stack) {
        };
        var pushElementToDebugStack = function(element) {
        };
        var popCurrentDebugStack = function() {
        };
        var hasWarnedAboutUsingContextAsConsumer = false;
        {
          ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          validatePropertiesInDevelopment = function(type, props) {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
          };
          describeStackFrame = function(element) {
            return describeUnknownElementTypeFrameInDEV(element.type, element._source, null);
          };
          pushCurrentDebugStack = function(stack) {
            currentDebugStacks.push(stack);
            if (currentDebugStacks.length === 1) {
              prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
              ReactDebugCurrentFrame$1.getCurrentStack = getCurrentServerStackImpl;
            }
          };
          pushElementToDebugStack = function(element) {
            var stack = currentDebugStacks[currentDebugStacks.length - 1];
            var frame = stack[stack.length - 1];
            frame.debugElementStack.push(element);
          };
          popCurrentDebugStack = function() {
            currentDebugStacks.pop();
            if (currentDebugStacks.length === 0) {
              ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
              prevGetCurrentStackImpl = null;
            }
          };
          getCurrentServerStackImpl = function() {
            if (currentDebugStacks.length === 0) {
              return "";
            }
            var frames = currentDebugStacks[currentDebugStacks.length - 1];
            var stack = "";
            for (var i2 = frames.length - 1; i2 >= 0; i2--) {
              var frame = frames[i2];
              var debugElementStack = frame.debugElementStack;
              for (var ii2 = debugElementStack.length - 1; ii2 >= 0; ii2--) {
                stack += describeStackFrame(debugElementStack[ii2]);
              }
            }
            return stack;
          };
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUndefinedDerivedState = {};
        var didWarnAboutUninitializedState = {};
        var valuePropNames = ["value", "defaultValue"];
        var newlineEatingTags = {
          listing: true,
          pre: true,
          textarea: true
        };
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = {};
        function validateDangerousTag(tag) {
          if (!validatedTagCache.hasOwnProperty(tag)) {
            if (!VALID_TAG_REGEX.test(tag)) {
              {
                throw Error("Invalid tag: " + tag);
              }
            }
            validatedTagCache[tag] = true;
          }
        }
        var styleNameCache = {};
        var processStyleName = function(styleName) {
          if (styleNameCache.hasOwnProperty(styleName)) {
            return styleNameCache[styleName];
          }
          var result = hyphenateStyleName(styleName);
          styleNameCache[styleName] = result;
          return result;
        };
        function createMarkupForStyles(styles) {
          var serialized = "";
          var delimiter = "";
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            var isCustomProperty = styleName.indexOf("--") === 0;
            var styleValue = styles[styleName];
            {
              if (!isCustomProperty) {
                warnValidStyle$1(styleName, styleValue);
              }
            }
            if (styleValue != null) {
              serialized += delimiter + (isCustomProperty ? styleName : processStyleName(styleName)) + ":";
              serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
              delimiter = ";";
            }
          }
          return serialized || null;
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && getComponentName(_constructor) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error("%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.", callerName, callerName, componentName);
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function getNonChildrenInnerMarkup(props) {
          var innerHTML = props.dangerouslySetInnerHTML;
          if (innerHTML != null) {
            if (innerHTML.__html != null) {
              return innerHTML.__html;
            }
          } else {
            var content = props.children;
            if (typeof content === "string" || typeof content === "number") {
              return escapeTextForBrowser(content);
            }
          }
          return null;
        }
        function flattenTopLevelChildren(children) {
          if (!React.isValidElement(children)) {
            return toArray(children);
          }
          var element = children;
          if (element.type !== REACT_FRAGMENT_TYPE) {
            return [element];
          }
          var fragmentChildren = element.props.children;
          if (!React.isValidElement(fragmentChildren)) {
            return toArray(fragmentChildren);
          }
          var fragmentChildElement = fragmentChildren;
          return [fragmentChildElement];
        }
        function flattenOptionChildren(children) {
          if (children === void 0 || children === null) {
            return children;
          }
          var content = "";
          React.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (!didWarnInvalidOptionChildren && typeof child !== "string" && typeof child !== "number") {
                didWarnInvalidOptionChildren = true;
                error("Only strings and numbers are supported as <option> children.");
              }
            }
          });
          return content;
        }
        var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
        var STYLE = "style";
        var RESERVED_PROPS = {
          children: null,
          dangerouslySetInnerHTML: null,
          suppressContentEditableWarning: null,
          suppressHydrationWarning: null
        };
        function createOpenTagMarkup(tagVerbatim, tagLowercase, props, namespace, makeStaticMarkup, isRootElement) {
          var ret = "<" + tagVerbatim;
          var isCustomComponent$1 = isCustomComponent(tagLowercase, props);
          for (var propKey in props) {
            if (!hasOwnProperty$2.call(props, propKey)) {
              continue;
            }
            var propValue = props[propKey];
            if (propValue == null) {
              continue;
            }
            if (propKey === STYLE) {
              propValue = createMarkupForStyles(propValue);
            }
            var markup = null;
            if (isCustomComponent$1) {
              if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                markup = createMarkupForCustomAttribute(propKey, propValue);
              }
            } else {
              markup = createMarkupForProperty(propKey, propValue);
            }
            if (markup) {
              ret += " " + markup;
            }
          }
          if (makeStaticMarkup) {
            return ret;
          }
          if (isRootElement) {
            ret += " " + createMarkupForRoot();
          }
          return ret;
        }
        function validateRenderResult(child, type) {
          if (child === void 0) {
            {
              {
                throw Error((getComponentName(type) || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
              }
            }
          }
        }
        function resolve2(child, context2, threadID) {
          while (React.isValidElement(child)) {
            var element = child;
            var Component = element.type;
            {
              pushElementToDebugStack(element);
            }
            if (typeof Component !== "function") {
              break;
            }
            processChild(element, Component);
          }
          function processChild(element2, Component2) {
            var isClass = shouldConstruct$1(Component2);
            var publicContext = processContext(Component2, context2, threadID, isClass);
            var queue = [];
            var replace = false;
            var updater = {
              isMounted: function(publicInstance) {
                return false;
              },
              enqueueForceUpdate: function(publicInstance) {
                if (queue === null) {
                  warnNoop(publicInstance, "forceUpdate");
                  return null;
                }
              },
              enqueueReplaceState: function(publicInstance, completeState) {
                replace = true;
                queue = [completeState];
              },
              enqueueSetState: function(publicInstance, currentPartialState) {
                if (queue === null) {
                  warnNoop(publicInstance, "setState");
                  return null;
                }
                queue.push(currentPartialState);
              }
            };
            var inst;
            if (isClass) {
              inst = new Component2(element2.props, publicContext, updater);
              if (typeof Component2.getDerivedStateFromProps === "function") {
                {
                  if (inst.state === null || inst.state === void 0) {
                    var componentName = getComponentName(Component2) || "Unknown";
                    if (!didWarnAboutUninitializedState[componentName]) {
                      error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, inst.state === null ? "null" : "undefined", componentName);
                      didWarnAboutUninitializedState[componentName] = true;
                    }
                  }
                }
                var partialState = Component2.getDerivedStateFromProps.call(null, element2.props, inst.state);
                {
                  if (partialState === void 0) {
                    var _componentName = getComponentName(Component2) || "Unknown";
                    if (!didWarnAboutUndefinedDerivedState[_componentName]) {
                      error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", _componentName);
                      didWarnAboutUndefinedDerivedState[_componentName] = true;
                    }
                  }
                }
                if (partialState != null) {
                  inst.state = _assign({}, inst.state, partialState);
                }
              }
            } else {
              {
                if (Component2.prototype && typeof Component2.prototype.render === "function") {
                  var _componentName2 = getComponentName(Component2) || "Unknown";
                  if (!didWarnAboutBadClass[_componentName2]) {
                    error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", _componentName2, _componentName2);
                    didWarnAboutBadClass[_componentName2] = true;
                  }
                }
              }
              var componentIdentity = {};
              prepareToUseHooks(componentIdentity);
              inst = Component2(element2.props, publicContext, updater);
              inst = finishHooks(Component2, element2.props, inst, publicContext);
              {
                if (inst != null && inst.render != null) {
                  var _componentName3 = getComponentName(Component2) || "Unknown";
                  if (!didWarnAboutModulePatternComponent[_componentName3]) {
                    error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName3, _componentName3, _componentName3);
                    didWarnAboutModulePatternComponent[_componentName3] = true;
                  }
                }
              }
              if (inst == null || inst.render == null) {
                child = inst;
                validateRenderResult(child, Component2);
                return;
              }
            }
            inst.props = element2.props;
            inst.context = publicContext;
            inst.updater = updater;
            var initialState = inst.state;
            if (initialState === void 0) {
              inst.state = initialState = null;
            }
            if (typeof inst.UNSAFE_componentWillMount === "function" || typeof inst.componentWillMount === "function") {
              if (typeof inst.componentWillMount === "function") {
                {
                  if (inst.componentWillMount.__suppressDeprecationWarning !== true) {
                    var _componentName4 = getComponentName(Component2) || "Unknown";
                    if (!didWarnAboutDeprecatedWillMount[_componentName4]) {
                      warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s", _componentName4);
                      didWarnAboutDeprecatedWillMount[_componentName4] = true;
                    }
                  }
                }
                if (typeof Component2.getDerivedStateFromProps !== "function") {
                  inst.componentWillMount();
                }
              }
              if (typeof inst.UNSAFE_componentWillMount === "function" && typeof Component2.getDerivedStateFromProps !== "function") {
                inst.UNSAFE_componentWillMount();
              }
              if (queue.length) {
                var oldQueue = queue;
                var oldReplace = replace;
                queue = null;
                replace = false;
                if (oldReplace && oldQueue.length === 1) {
                  inst.state = oldQueue[0];
                } else {
                  var nextState = oldReplace ? oldQueue[0] : inst.state;
                  var dontMutate = true;
                  for (var i2 = oldReplace ? 1 : 0; i2 < oldQueue.length; i2++) {
                    var partial = oldQueue[i2];
                    var _partialState = typeof partial === "function" ? partial.call(inst, nextState, element2.props, publicContext) : partial;
                    if (_partialState != null) {
                      if (dontMutate) {
                        dontMutate = false;
                        nextState = _assign({}, nextState, _partialState);
                      } else {
                        _assign(nextState, _partialState);
                      }
                    }
                  }
                  inst.state = nextState;
                }
              } else {
                queue = null;
              }
            }
            child = inst.render();
            {
              if (child === void 0 && inst.render._isMockFunction) {
                child = null;
              }
            }
            validateRenderResult(child, Component2);
            var childContext;
            {
              if (typeof inst.getChildContext === "function") {
                var _childContextTypes = Component2.childContextTypes;
                if (typeof _childContextTypes === "object") {
                  childContext = inst.getChildContext();
                  for (var contextKey in childContext) {
                    if (!(contextKey in _childContextTypes)) {
                      {
                        throw Error((getComponentName(Component2) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
                      }
                    }
                  }
                } else {
                  {
                    error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", getComponentName(Component2) || "Unknown");
                  }
                }
              }
              if (childContext) {
                context2 = _assign({}, context2, childContext);
              }
            }
          }
          return {
            child,
            context: context2
          };
        }
        var ReactDOMServerRenderer = /* @__PURE__ */ function() {
          function ReactDOMServerRenderer2(children, makeStaticMarkup, options2) {
            var flatChildren = flattenTopLevelChildren(children);
            var topFrame = {
              type: null,
              domNamespace: Namespaces.html,
              children: flatChildren,
              childIndex: 0,
              context: emptyObject,
              footer: ""
            };
            {
              topFrame.debugElementStack = [];
            }
            this.threadID = allocThreadID();
            this.stack = [topFrame];
            this.exhausted = false;
            this.currentSelectValue = null;
            this.previousWasTextNode = false;
            this.makeStaticMarkup = makeStaticMarkup;
            this.suspenseDepth = 0;
            this.contextIndex = -1;
            this.contextStack = [];
            this.contextValueStack = [];
            this.uniqueID = 0;
            this.identifierPrefix = options2 && options2.identifierPrefix || "";
            {
              this.contextProviderStack = [];
            }
          }
          var _proto = ReactDOMServerRenderer2.prototype;
          _proto.destroy = function destroy() {
            if (!this.exhausted) {
              this.exhausted = true;
              this.clearProviders();
              freeThreadID(this.threadID);
            }
          };
          _proto.pushProvider = function pushProvider(provider) {
            var index = ++this.contextIndex;
            var context2 = provider.type._context;
            var threadID = this.threadID;
            validateContextBounds(context2, threadID);
            var previousValue = context2[threadID];
            this.contextStack[index] = context2;
            this.contextValueStack[index] = previousValue;
            {
              this.contextProviderStack[index] = provider;
            }
            context2[threadID] = provider.props.value;
          };
          _proto.popProvider = function popProvider(provider) {
            var index = this.contextIndex;
            {
              if (index < 0 || provider !== this.contextProviderStack[index]) {
                error("Unexpected pop.");
              }
            }
            var context2 = this.contextStack[index];
            var previousValue = this.contextValueStack[index];
            this.contextStack[index] = null;
            this.contextValueStack[index] = null;
            {
              this.contextProviderStack[index] = null;
            }
            this.contextIndex--;
            context2[this.threadID] = previousValue;
          };
          _proto.clearProviders = function clearProviders() {
            for (var index = this.contextIndex; index >= 0; index--) {
              var context2 = this.contextStack[index];
              var previousValue = this.contextValueStack[index];
              context2[this.threadID] = previousValue;
            }
          };
          _proto.read = function read(bytes) {
            if (this.exhausted) {
              return null;
            }
            var prevPartialRenderer = currentPartialRenderer;
            setCurrentPartialRenderer(this);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = Dispatcher;
            try {
              var out = [""];
              var suspended = false;
              while (out[0].length < bytes) {
                if (this.stack.length === 0) {
                  this.exhausted = true;
                  freeThreadID(this.threadID);
                  break;
                }
                var frame = this.stack[this.stack.length - 1];
                if (suspended || frame.childIndex >= frame.children.length) {
                  var footer = frame.footer;
                  if (footer !== "") {
                    this.previousWasTextNode = false;
                  }
                  this.stack.pop();
                  if (frame.type === "select") {
                    this.currentSelectValue = null;
                  } else if (frame.type != null && frame.type.type != null && frame.type.type.$$typeof === REACT_PROVIDER_TYPE) {
                    var provider = frame.type;
                    this.popProvider(provider);
                  } else if (frame.type === REACT_SUSPENSE_TYPE) {
                    this.suspenseDepth--;
                    var buffered = out.pop();
                    if (suspended) {
                      suspended = false;
                      var fallbackFrame = frame.fallbackFrame;
                      if (!fallbackFrame) {
                        {
                          throw Error(true ? "ReactDOMServer did not find an internal fallback frame for Suspense. This is a bug in React. Please file an issue." : formatProdErrorMessage(303));
                        }
                      }
                      this.stack.push(fallbackFrame);
                      out[this.suspenseDepth] += "<!--$!-->";
                      continue;
                    } else {
                      out[this.suspenseDepth] += buffered;
                    }
                  }
                  out[this.suspenseDepth] += footer;
                  continue;
                }
                var child = frame.children[frame.childIndex++];
                var outBuffer = "";
                if (true) {
                  pushCurrentDebugStack(this.stack);
                  frame.debugElementStack.length = 0;
                }
                try {
                  outBuffer += this.render(child, frame.context, frame.domNamespace);
                } catch (err) {
                  if (err != null && typeof err.then === "function") {
                    if (enableSuspenseServerRenderer) {
                      if (!(this.suspenseDepth > 0)) {
                        {
                          throw Error(true ? "A React component suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." : formatProdErrorMessage(342));
                        }
                      }
                      suspended = true;
                    } else {
                      if (true) {
                        {
                          throw Error(true ? "ReactDOMServer does not yet support Suspense." : formatProdErrorMessage(294));
                        }
                      }
                    }
                  } else {
                    throw err;
                  }
                } finally {
                  if (true) {
                    popCurrentDebugStack();
                  }
                }
                if (out.length <= this.suspenseDepth) {
                  out.push("");
                }
                out[this.suspenseDepth] += outBuffer;
              }
              return out[0];
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
              setCurrentPartialRenderer(prevPartialRenderer);
              resetHooksState();
            }
          };
          _proto.render = function render(child, context2, parentNamespace) {
            if (typeof child === "string" || typeof child === "number") {
              var text = "" + child;
              if (text === "") {
                return "";
              }
              if (this.makeStaticMarkup) {
                return escapeTextForBrowser(text);
              }
              if (this.previousWasTextNode) {
                return "<!-- -->" + escapeTextForBrowser(text);
              }
              this.previousWasTextNode = true;
              return escapeTextForBrowser(text);
            } else {
              var nextChild;
              var _resolve = resolve2(child, context2, this.threadID);
              nextChild = _resolve.child;
              context2 = _resolve.context;
              if (nextChild === null || nextChild === false) {
                return "";
              } else if (!React.isValidElement(nextChild)) {
                if (nextChild != null && nextChild.$$typeof != null) {
                  var $$typeof = nextChild.$$typeof;
                  if (!($$typeof !== REACT_PORTAL_TYPE)) {
                    {
                      throw Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
                    }
                  }
                  {
                    {
                      throw Error("Unknown element-like object type: " + $$typeof.toString() + ". This is likely a bug in React. Please file an issue.");
                    }
                  }
                }
                var nextChildren = toArray(nextChild);
                var frame = {
                  type: null,
                  domNamespace: parentNamespace,
                  children: nextChildren,
                  childIndex: 0,
                  context: context2,
                  footer: ""
                };
                {
                  frame.debugElementStack = [];
                }
                this.stack.push(frame);
                return "";
              }
              var nextElement = nextChild;
              var elementType = nextElement.type;
              if (typeof elementType === "string") {
                return this.renderDOM(nextElement, context2, parentNamespace);
              }
              switch (elementType) {
                case REACT_LEGACY_HIDDEN_TYPE:
                case REACT_DEBUG_TRACING_MODE_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_SUSPENSE_LIST_TYPE:
                case REACT_FRAGMENT_TYPE: {
                  var _nextChildren = toArray(nextChild.props.children);
                  var _frame = {
                    type: null,
                    domNamespace: parentNamespace,
                    children: _nextChildren,
                    childIndex: 0,
                    context: context2,
                    footer: ""
                  };
                  {
                    _frame.debugElementStack = [];
                  }
                  this.stack.push(_frame);
                  return "";
                }
                case REACT_SUSPENSE_TYPE: {
                  {
                    {
                      {
                        throw Error("ReactDOMServer does not yet support Suspense.");
                      }
                    }
                  }
                }
                case REACT_SCOPE_TYPE: {
                  {
                    {
                      throw Error("ReactDOMServer does not yet support scope components.");
                    }
                  }
                }
              }
              if (typeof elementType === "object" && elementType !== null) {
                switch (elementType.$$typeof) {
                  case REACT_FORWARD_REF_TYPE: {
                    var element = nextChild;
                    var _nextChildren5;
                    var componentIdentity = {};
                    prepareToUseHooks(componentIdentity);
                    _nextChildren5 = elementType.render(element.props, element.ref);
                    _nextChildren5 = finishHooks(elementType.render, element.props, _nextChildren5, element.ref);
                    _nextChildren5 = toArray(_nextChildren5);
                    var _frame5 = {
                      type: null,
                      domNamespace: parentNamespace,
                      children: _nextChildren5,
                      childIndex: 0,
                      context: context2,
                      footer: ""
                    };
                    {
                      _frame5.debugElementStack = [];
                    }
                    this.stack.push(_frame5);
                    return "";
                  }
                  case REACT_MEMO_TYPE: {
                    var _element = nextChild;
                    var _nextChildren6 = [React.createElement(elementType.type, _assign({
                      ref: _element.ref
                    }, _element.props))];
                    var _frame6 = {
                      type: null,
                      domNamespace: parentNamespace,
                      children: _nextChildren6,
                      childIndex: 0,
                      context: context2,
                      footer: ""
                    };
                    {
                      _frame6.debugElementStack = [];
                    }
                    this.stack.push(_frame6);
                    return "";
                  }
                  case REACT_PROVIDER_TYPE: {
                    var provider = nextChild;
                    var nextProps = provider.props;
                    var _nextChildren7 = toArray(nextProps.children);
                    var _frame7 = {
                      type: provider,
                      domNamespace: parentNamespace,
                      children: _nextChildren7,
                      childIndex: 0,
                      context: context2,
                      footer: ""
                    };
                    {
                      _frame7.debugElementStack = [];
                    }
                    this.pushProvider(provider);
                    this.stack.push(_frame7);
                    return "";
                  }
                  case REACT_CONTEXT_TYPE: {
                    var reactContext = nextChild.type;
                    {
                      if (reactContext._context === void 0) {
                        if (reactContext !== reactContext.Consumer) {
                          if (!hasWarnedAboutUsingContextAsConsumer) {
                            hasWarnedAboutUsingContextAsConsumer = true;
                            error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                          }
                        }
                      } else {
                        reactContext = reactContext._context;
                      }
                    }
                    var _nextProps = nextChild.props;
                    var threadID = this.threadID;
                    validateContextBounds(reactContext, threadID);
                    var nextValue = reactContext[threadID];
                    var _nextChildren8 = toArray(_nextProps.children(nextValue));
                    var _frame8 = {
                      type: nextChild,
                      domNamespace: parentNamespace,
                      children: _nextChildren8,
                      childIndex: 0,
                      context: context2,
                      footer: ""
                    };
                    {
                      _frame8.debugElementStack = [];
                    }
                    this.stack.push(_frame8);
                    return "";
                  }
                  case REACT_FUNDAMENTAL_TYPE: {
                    {
                      {
                        throw Error("ReactDOMServer does not yet support the fundamental API.");
                      }
                    }
                  }
                  case REACT_LAZY_TYPE: {
                    var _element2 = nextChild;
                    var lazyComponent = nextChild.type;
                    var payload = lazyComponent._payload;
                    var init = lazyComponent._init;
                    var result = init(payload);
                    var _nextChildren10 = [React.createElement(result, _assign({
                      ref: _element2.ref
                    }, _element2.props))];
                    var _frame10 = {
                      type: null,
                      domNamespace: parentNamespace,
                      children: _nextChildren10,
                      childIndex: 0,
                      context: context2,
                      footer: ""
                    };
                    {
                      _frame10.debugElementStack = [];
                    }
                    this.stack.push(_frame10);
                    return "";
                  }
                }
              }
              var info = "";
              {
                var owner = nextElement._owner;
                if (elementType === void 0 || typeof elementType === "object" && elementType !== null && Object.keys(elementType).length === 0) {
                  info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                }
                var ownerName = owner ? getComponentName(owner) : null;
                if (ownerName) {
                  info += "\n\nCheck the render method of `" + ownerName + "`.";
                }
              }
              {
                {
                  throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (elementType == null ? elementType : typeof elementType) + "." + info);
                }
              }
            }
          };
          _proto.renderDOM = function renderDOM(element, context2, parentNamespace) {
            var tag = element.type.toLowerCase();
            var namespace = parentNamespace;
            if (parentNamespace === Namespaces.html) {
              namespace = getIntrinsicNamespace(tag);
            }
            {
              if (namespace === Namespaces.html) {
                if (tag !== element.type) {
                  error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", element.type);
                }
              }
            }
            validateDangerousTag(tag);
            var props = element.props;
            if (tag === "input") {
              {
                checkControlledValueProps("input", props);
                if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked) {
                  error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
                  didWarnDefaultChecked = true;
                }
                if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue) {
                  error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
                  didWarnDefaultInputValue = true;
                }
              }
              props = _assign({
                type: void 0
              }, props, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: props.value != null ? props.value : props.defaultValue,
                checked: props.checked != null ? props.checked : props.defaultChecked
              });
            } else if (tag === "textarea") {
              {
                checkControlledValueProps("textarea", props);
                if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue) {
                  error("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components");
                  didWarnDefaultTextareaValue = true;
                }
              }
              var initialValue = props.value;
              if (initialValue == null) {
                var defaultValue = props.defaultValue;
                var textareaChildren = props.children;
                if (textareaChildren != null) {
                  {
                    error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                  }
                  if (!(defaultValue == null)) {
                    {
                      throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                    }
                  }
                  if (Array.isArray(textareaChildren)) {
                    if (!(textareaChildren.length <= 1)) {
                      {
                        throw Error("<textarea> can only have at most one child.");
                      }
                    }
                    textareaChildren = textareaChildren[0];
                  }
                  defaultValue = "" + textareaChildren;
                }
                if (defaultValue == null) {
                  defaultValue = "";
                }
                initialValue = defaultValue;
              }
              props = _assign({}, props, {
                value: void 0,
                children: "" + initialValue
              });
            } else if (tag === "select") {
              {
                checkControlledValueProps("select", props);
                for (var i2 = 0; i2 < valuePropNames.length; i2++) {
                  var propName = valuePropNames[i2];
                  if (props[propName] == null) {
                    continue;
                  }
                  var isArray = Array.isArray(props[propName]);
                  if (props.multiple && !isArray) {
                    error("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName);
                  } else if (!props.multiple && isArray) {
                    error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
                  }
                }
                if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue) {
                  error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
                  didWarnDefaultSelectValue = true;
                }
              }
              this.currentSelectValue = props.value != null ? props.value : props.defaultValue;
              props = _assign({}, props, {
                value: void 0
              });
            } else if (tag === "option") {
              var selected = null;
              var selectValue = this.currentSelectValue;
              var optionChildren = flattenOptionChildren(props.children);
              if (selectValue != null) {
                var value;
                if (props.value != null) {
                  value = props.value + "";
                } else {
                  value = optionChildren;
                }
                selected = false;
                if (Array.isArray(selectValue)) {
                  for (var j2 = 0; j2 < selectValue.length; j2++) {
                    if ("" + selectValue[j2] === value) {
                      selected = true;
                      break;
                    }
                  }
                } else {
                  selected = "" + selectValue === value;
                }
                props = _assign({
                  selected: void 0,
                  children: void 0
                }, props, {
                  selected,
                  children: optionChildren
                });
              }
            }
            {
              validatePropertiesInDevelopment(tag, props);
            }
            assertValidProps(tag, props);
            var out = createOpenTagMarkup(element.type, tag, props, namespace, this.makeStaticMarkup, this.stack.length === 1);
            var footer = "";
            if (omittedCloseTags.hasOwnProperty(tag)) {
              out += "/>";
            } else {
              out += ">";
              footer = "</" + element.type + ">";
            }
            var children;
            var innerMarkup = getNonChildrenInnerMarkup(props);
            if (innerMarkup != null) {
              children = [];
              if (newlineEatingTags.hasOwnProperty(tag) && innerMarkup.charAt(0) === "\n") {
                out += "\n";
              }
              out += innerMarkup;
            } else {
              children = toArray(props.children);
            }
            var frame = {
              domNamespace: getChildNamespace(parentNamespace, element.type),
              type: tag,
              children,
              childIndex: 0,
              context: context2,
              footer
            };
            {
              frame.debugElementStack = [];
            }
            this.stack.push(frame);
            this.previousWasTextNode = false;
            return out;
          };
          return ReactDOMServerRenderer2;
        }();
        function renderToString(element, options2) {
          var renderer = new ReactDOMServerRenderer(element, false, options2);
          try {
            var markup = renderer.read(Infinity);
            return markup;
          } finally {
            renderer.destroy();
          }
        }
        function renderToStaticMarkup(element, options2) {
          var renderer = new ReactDOMServerRenderer(element, true, options2);
          try {
            var markup = renderer.read(Infinity);
            return markup;
          } finally {
            renderer.destroy();
          }
        }
        function renderToNodeStream() {
          {
            {
              throw Error("ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.");
            }
          }
        }
        function renderToStaticNodeStream() {
          {
            {
              throw Error("ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.");
            }
          }
        }
        exports2.renderToNodeStream = renderToNodeStream;
        exports2.renderToStaticMarkup = renderToStaticMarkup;
        exports2.renderToStaticNodeStream = renderToStaticNodeStream;
        exports2.renderToString = renderToString;
        exports2.version = ReactVersion;
      })();
    }
  }
});

// node_modules/react-dom/server.browser.js
var require_server_browser = __commonJS({
  "node_modules/react-dom/server.browser.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./cjs/react-dom-server.browser.production.min.js");
    } else {
      module2.exports = require_react_dom_server_browser_development();
    }
  }
});

// node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler.development.js"(exports2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV !== "production") {
      (function() {
        "use strict";
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var requestHostCallback;
        var requestHostTimeout;
        var cancelHostTimeout;
        var requestPaint;
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports2.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports2.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        if (typeof window === "undefined" || typeof MessageChannel !== "function") {
          var _callback = null;
          var _timeoutID = null;
          var _flushCallback = function() {
            if (_callback !== null) {
              try {
                var currentTime = exports2.unstable_now();
                var hasRemainingTime = true;
                _callback(hasRemainingTime, currentTime);
                _callback = null;
              } catch (e2) {
                setTimeout(_flushCallback, 0);
                throw e2;
              }
            }
          };
          requestHostCallback = function(cb) {
            if (_callback !== null) {
              setTimeout(requestHostCallback, 0, cb);
            } else {
              _callback = cb;
              setTimeout(_flushCallback, 0);
            }
          };
          requestHostTimeout = function(cb, ms2) {
            _timeoutID = setTimeout(cb, ms2);
          };
          cancelHostTimeout = function() {
            clearTimeout(_timeoutID);
          };
          exports2.unstable_shouldYield = function() {
            return false;
          };
          requestPaint = exports2.unstable_forceFrameRate = function() {
          };
        } else {
          var _setTimeout = window.setTimeout;
          var _clearTimeout = window.clearTimeout;
          if (typeof console !== "undefined") {
            var requestAnimationFrame2 = window.requestAnimationFrame;
            var cancelAnimationFrame2 = window.cancelAnimationFrame;
            if (typeof requestAnimationFrame2 !== "function") {
              console["error"]("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
            if (typeof cancelAnimationFrame2 !== "function") {
              console["error"]("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
          }
          var isMessageLoopRunning = false;
          var scheduledHostCallback = null;
          var taskTimeoutID = -1;
          var yieldInterval = 5;
          var deadline = 0;
          {
            exports2.unstable_shouldYield = function() {
              return exports2.unstable_now() >= deadline;
            };
            requestPaint = function() {
            };
          }
          exports2.unstable_forceFrameRate = function(fps) {
            if (fps < 0 || fps > 125) {
              console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
              return;
            }
            if (fps > 0) {
              yieldInterval = Math.floor(1e3 / fps);
            } else {
              yieldInterval = 5;
            }
          };
          var performWorkUntilDeadline = function() {
            if (scheduledHostCallback !== null) {
              var currentTime = exports2.unstable_now();
              deadline = currentTime + yieldInterval;
              var hasTimeRemaining = true;
              try {
                var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                if (!hasMoreWork) {
                  isMessageLoopRunning = false;
                  scheduledHostCallback = null;
                } else {
                  port.postMessage(null);
                }
              } catch (error) {
                port.postMessage(null);
                throw error;
              }
            } else {
              isMessageLoopRunning = false;
            }
          };
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          requestHostCallback = function(callback) {
            scheduledHostCallback = callback;
            if (!isMessageLoopRunning) {
              isMessageLoopRunning = true;
              port.postMessage(null);
            }
          };
          requestHostTimeout = function(callback, ms2) {
            taskTimeoutID = _setTimeout(function() {
              callback(exports2.unstable_now());
            }, ms2);
          };
          cancelHostTimeout = function() {
            _clearTimeout(taskTimeoutID);
            taskTimeoutID = -1;
          };
        }
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          var first = heap[0];
          return first === void 0 ? null : first;
        }
        function pop(heap) {
          var first = heap[0];
          if (first !== void 0) {
            var last = heap.pop();
            if (last !== first) {
              heap[0] = last;
              siftDown(heap, last, 0);
            }
            return first;
          } else {
            return null;
          }
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (true) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (parent !== void 0 && compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          while (index < length) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (left !== void 0 && compare(left, node) < 0) {
              if (right !== void 0 && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (right !== void 0 && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms2) {
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports2.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports2.unstable_shouldYield())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports2.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
              priorityLevel = NormalPriority;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options2) {
          var currentTime = exports2.unstable_now();
          var startTime;
          if (typeof options2 === "object" && options2 !== null) {
            var delay = options2.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime = currentTime + delay;
            } else {
              startTime = currentTime;
            }
          } else {
            startTime = currentTime;
          }
          var timeout;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority:
            default:
              timeout = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime + timeout;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime,
            expirationTime,
            sortIndex: -1
          };
          if (startTime > currentTime) {
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports2.unstable_IdlePriority = IdlePriority;
        exports2.unstable_ImmediatePriority = ImmediatePriority;
        exports2.unstable_LowPriority = LowPriority;
        exports2.unstable_NormalPriority = NormalPriority;
        exports2.unstable_Profiling = unstable_Profiling;
        exports2.unstable_UserBlockingPriority = UserBlockingPriority;
        exports2.unstable_cancelCallback = unstable_cancelCallback;
        exports2.unstable_continueExecution = unstable_continueExecution;
        exports2.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports2.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports2.unstable_next = unstable_next;
        exports2.unstable_pauseExecution = unstable_pauseExecution;
        exports2.unstable_requestPaint = unstable_requestPaint;
        exports2.unstable_runWithPriority = unstable_runWithPriority;
        exports2.unstable_scheduleCallback = unstable_scheduleCallback;
        exports2.unstable_wrapCallback = unstable_wrapCallback;
      })();
    }
  }
});

// node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/scheduler/index.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./cjs/scheduler.production.min.js");
    } else {
      module2.exports = require_scheduler_development();
    }
  }
});

// node_modules/scheduler/cjs/scheduler-tracing.development.js
var require_scheduler_tracing_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler-tracing.development.js"(exports2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV !== "production") {
      (function() {
        "use strict";
        var DEFAULT_THREAD_ID = 0;
        var interactionIDCounter = 0;
        var threadIDCounter = 0;
        exports2.__interactionsRef = null;
        exports2.__subscriberRef = null;
        {
          exports2.__interactionsRef = {
            current: new Set()
          };
          exports2.__subscriberRef = {
            current: null
          };
        }
        function unstable_clear(callback) {
          var prevInteractions = exports2.__interactionsRef.current;
          exports2.__interactionsRef.current = new Set();
          try {
            return callback();
          } finally {
            exports2.__interactionsRef.current = prevInteractions;
          }
        }
        function unstable_getCurrent() {
          {
            return exports2.__interactionsRef.current;
          }
        }
        function unstable_getThreadID() {
          return ++threadIDCounter;
        }
        function unstable_trace(name, timestamp, callback) {
          var threadID = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : DEFAULT_THREAD_ID;
          var interaction = {
            __count: 1,
            id: interactionIDCounter++,
            name,
            timestamp
          };
          var prevInteractions = exports2.__interactionsRef.current;
          var interactions = new Set(prevInteractions);
          interactions.add(interaction);
          exports2.__interactionsRef.current = interactions;
          var subscriber = exports2.__subscriberRef.current;
          var returnValue;
          try {
            if (subscriber !== null) {
              subscriber.onInteractionTraced(interaction);
            }
          } finally {
            try {
              if (subscriber !== null) {
                subscriber.onWorkStarted(interactions, threadID);
              }
            } finally {
              try {
                returnValue = callback();
              } finally {
                exports2.__interactionsRef.current = prevInteractions;
                try {
                  if (subscriber !== null) {
                    subscriber.onWorkStopped(interactions, threadID);
                  }
                } finally {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                }
              }
            }
          }
          return returnValue;
        }
        function unstable_wrap(callback) {
          var threadID = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_THREAD_ID;
          var wrappedInteractions = exports2.__interactionsRef.current;
          var subscriber = exports2.__subscriberRef.current;
          if (subscriber !== null) {
            subscriber.onWorkScheduled(wrappedInteractions, threadID);
          }
          wrappedInteractions.forEach(function(interaction) {
            interaction.__count++;
          });
          var hasRun = false;
          function wrapped() {
            var prevInteractions = exports2.__interactionsRef.current;
            exports2.__interactionsRef.current = wrappedInteractions;
            subscriber = exports2.__subscriberRef.current;
            try {
              var returnValue;
              try {
                if (subscriber !== null) {
                  subscriber.onWorkStarted(wrappedInteractions, threadID);
                }
              } finally {
                try {
                  returnValue = callback.apply(void 0, arguments);
                } finally {
                  exports2.__interactionsRef.current = prevInteractions;
                  if (subscriber !== null) {
                    subscriber.onWorkStopped(wrappedInteractions, threadID);
                  }
                }
              }
              return returnValue;
            } finally {
              if (!hasRun) {
                hasRun = true;
                wrappedInteractions.forEach(function(interaction) {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                });
              }
            }
          }
          wrapped.cancel = function cancel() {
            subscriber = exports2.__subscriberRef.current;
            try {
              if (subscriber !== null) {
                subscriber.onWorkCanceled(wrappedInteractions, threadID);
              }
            } finally {
              wrappedInteractions.forEach(function(interaction) {
                interaction.__count--;
                if (subscriber && interaction.__count === 0) {
                  subscriber.onInteractionScheduledWorkCompleted(interaction);
                }
              });
            }
          };
          return wrapped;
        }
        var subscribers = null;
        {
          subscribers = new Set();
        }
        function unstable_subscribe(subscriber) {
          {
            subscribers.add(subscriber);
            if (subscribers.size === 1) {
              exports2.__subscriberRef.current = {
                onInteractionScheduledWorkCompleted,
                onInteractionTraced,
                onWorkCanceled,
                onWorkScheduled,
                onWorkStarted,
                onWorkStopped
              };
            }
          }
        }
        function unstable_unsubscribe(subscriber) {
          {
            subscribers.delete(subscriber);
            if (subscribers.size === 0) {
              exports2.__subscriberRef.current = null;
            }
          }
        }
        function onInteractionTraced(interaction) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onInteractionTraced(interaction);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onInteractionScheduledWorkCompleted(interaction) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkScheduled(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkScheduled(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkStarted(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkStarted(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkStopped(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkStopped(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkCanceled(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkCanceled(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        exports2.unstable_clear = unstable_clear;
        exports2.unstable_getCurrent = unstable_getCurrent;
        exports2.unstable_getThreadID = unstable_getThreadID;
        exports2.unstable_subscribe = unstable_subscribe;
        exports2.unstable_trace = unstable_trace;
        exports2.unstable_unsubscribe = unstable_unsubscribe;
        exports2.unstable_wrap = unstable_wrap;
      })();
    }
  }
});

// node_modules/scheduler/tracing.js
var require_tracing = __commonJS({
  "node_modules/scheduler/tracing.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./cjs/scheduler-tracing.production.min.js");
    } else {
      module2.exports = require_scheduler_tracing_development();
    }
  }
});

// node_modules/react-dom/cjs/react-dom.development.js
var require_react_dom_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom.development.js"(exports2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV !== "production") {
      (function() {
        "use strict";
        var React = require_react();
        var _assign = require_object_assign();
        var Scheduler = require_scheduler();
        var tracing = require_tracing();
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn(format) {
          {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            printWarning("warn", format, args);
          }
        }
        function error(format) {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format, args);
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return "" + item;
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        if (!React) {
          {
            throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
          }
        }
        var FunctionComponent = 0;
        var ClassComponent = 1;
        var IndeterminateComponent = 2;
        var HostRoot = 3;
        var HostPortal = 4;
        var HostComponent = 5;
        var HostText = 6;
        var Fragment = 7;
        var Mode = 8;
        var ContextConsumer = 9;
        var ContextProvider = 10;
        var ForwardRef = 11;
        var Profiler = 12;
        var SuspenseComponent = 13;
        var MemoComponent = 14;
        var SimpleMemoComponent = 15;
        var LazyComponent = 16;
        var IncompleteClassComponent = 17;
        var DehydratedFragment = 18;
        var SuspenseListComponent = 19;
        var FundamentalComponent = 20;
        var ScopeComponent = 21;
        var Block = 22;
        var OffscreenComponent = 23;
        var LegacyHiddenComponent = 24;
        var enableProfilerTimer = true;
        var enableFundamentalAPI = false;
        var enableNewReconciler = false;
        var warnAboutStringRefs = false;
        var allNativeEvents = new Set();
        var registrationNameDependencies = {};
        var possibleRegistrationNames = {};
        function registerTwoPhaseEvent(registrationName, dependencies) {
          registerDirectEvent(registrationName, dependencies);
          registerDirectEvent(registrationName + "Capture", dependencies);
        }
        function registerDirectEvent(registrationName, dependencies) {
          {
            if (registrationNameDependencies[registrationName]) {
              error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
            }
          }
          registrationNameDependencies[registrationName] = dependencies;
          {
            var lowerCasedName = registrationName.toLowerCase();
            possibleRegistrationNames[lowerCasedName] = registrationName;
            if (registrationName === "onDoubleClick") {
              possibleRegistrationNames.ondblclick = registrationName;
            }
          }
          for (var i = 0; i < dependencies.length; i++) {
            allNativeEvents.add(dependencies[i]);
          }
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var ROOT_ATTRIBUTE_NAME = "data-reactroot";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null) {
            return propertyInfo.type === RESERVED;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
            return true;
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
          if (value === null || typeof value === "undefined") {
            return true;
          }
          if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
            return true;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (propertyInfo !== null) {
            switch (propertyInfo.type) {
              case BOOLEAN:
                return !value;
              case OVERLOADED_BOOLEAN:
                return value === false;
              case NUMERIC:
                return isNaN(value);
              case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
            }
          }
          return false;
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
        });
        [
          "allowFullScreen",
          "async",
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
        });
        [
          "checked",
          "multiple",
          "muted",
          "selected"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
        });
        [
          "capture",
          "download"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
        });
        [
          "cols",
          "rows",
          "size",
          "span"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
        });
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url2) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url2)) {
              didWarn = true;
              error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url2));
            }
          }
        }
        function getValueForProperty(node, name, expected, propertyInfo) {
          {
            if (propertyInfo.mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              return node[propertyName];
            } else {
              if (propertyInfo.sanitizeURL) {
                sanitizeURL("" + expected);
              }
              var attributeName = propertyInfo.attributeName;
              var stringValue = null;
              if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                  var value = node.getAttribute(attributeName);
                  if (value === "") {
                    return true;
                  }
                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                    return value;
                  }
                  if (value === "" + expected) {
                    return expected;
                  }
                  return value;
                }
              } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                  return node.getAttribute(attributeName);
                }
                if (propertyInfo.type === BOOLEAN) {
                  return expected;
                }
                stringValue = node.getAttribute(attributeName);
              }
              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return stringValue === null ? expected : stringValue;
              } else if (stringValue === "" + expected) {
                return expected;
              } else {
                return stringValue;
              }
            }
          }
        }
        function getValueForAttribute(node, name, expected) {
          {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (isOpaqueHydratingObject(expected)) {
              return expected;
            }
            if (!node.hasAttribute(name)) {
              return expected === void 0 ? void 0 : null;
            }
            var value = node.getAttribute(name);
            if (value === "" + expected) {
              return expected;
            }
            return value;
          }
        }
        function setValueForProperty(node, name, value, isCustomComponentTag) {
          var propertyInfo = getPropertyInfo(name);
          if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
            return;
          }
          if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
            value = null;
          }
          if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
              var _attributeName = name;
              if (value === null) {
                node.removeAttribute(_attributeName);
              } else {
                node.setAttribute(_attributeName, "" + value);
              }
            }
            return;
          }
          var mustUseProperty = propertyInfo.mustUseProperty;
          if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
              var type = propertyInfo.type;
              node[propertyName] = type === BOOLEAN ? false : "";
            } else {
              node[propertyName] = value;
            }
            return;
          }
          var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
          if (value === null) {
            node.removeAttribute(attributeName);
          } else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
              attributeValue = "";
            } else {
              {
                attributeValue = "" + value;
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL(attributeValue.toString());
              }
            }
            if (attributeNamespace) {
              node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            } else {
              node.setAttribute(attributeName, attributeValue);
            }
          }
        }
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        var REACT_FRAGMENT_TYPE = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: _assign({}, props, {
                  value: prevLog
                }),
                info: _assign({}, props, {
                  value: prevInfo
                }),
                warn: _assign({}, props, {
                  value: prevWarn
                }),
                error: _assign({}, props, {
                  value: prevError
                }),
                group: _assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: _assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: _assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        function describeFiber(fiber) {
          var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
          var source = fiber._debugSource;
          switch (fiber.tag) {
            case HostComponent:
              return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
              return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
              return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
              return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
              return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
              return describeFunctionComponentFrame(fiber.type.render);
            case Block:
              return describeFunctionComponentFrame(fiber.type._render);
            case ClassComponent:
              return describeClassComponentFrame(fiber.type);
            default:
              return "";
          }
        }
        function getStackByFiberInDevAndProd(workInProgress2) {
          try {
            var info = "";
            var node = workInProgress2;
            do {
              info += describeFiber(node);
              node = node.return;
            } while (node);
            return info;
          } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context2 = type;
                return getContextName(context2) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentName(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var current = null;
        var isRendering = false;
        function getCurrentFiberOwnerNameInDevOrNull() {
          {
            if (current === null) {
              return null;
            }
            var owner = current._debugOwner;
            if (owner !== null && typeof owner !== "undefined") {
              return getComponentName(owner.type);
            }
          }
          return null;
        }
        function getCurrentFiberStackInDev() {
          {
            if (current === null) {
              return "";
            }
            return getStackByFiberInDevAndProd(current);
          }
        }
        function resetCurrentFiber() {
          {
            ReactDebugCurrentFrame.getCurrentStack = null;
            current = null;
            isRendering = false;
          }
        }
        function setCurrentFiber(fiber) {
          {
            ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
            current = fiber;
            isRendering = false;
          }
        }
        function setIsRendering(rendering) {
          {
            isRendering = rendering;
          }
        }
        function getIsRendering() {
          {
            return isRendering;
          }
        }
        function toString(value) {
          return "" + value;
        }
        function getToStringValue(value) {
          switch (typeof value) {
            case "boolean":
            case "number":
            case "object":
            case "string":
            case "undefined":
              return value;
            default:
              return "";
          }
        }
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCheckable(elem) {
          var type = elem.type;
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
        }
        function getTracker(node) {
          return node._valueTracker;
        }
        function detachTracker(node) {
          node._valueTracker = null;
        }
        function getValueFromNode(node) {
          var value = "";
          if (!node) {
            return value;
          }
          if (isCheckable(node)) {
            value = node.checked ? "true" : "false";
          } else {
            value = node.value;
          }
          return value;
        }
        function trackValueOnNode(node) {
          var valueField = isCheckable(node) ? "checked" : "value";
          var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
          var currentValue = "" + node[valueField];
          if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
            return;
          }
          var get2 = descriptor.get, set2 = descriptor.set;
          Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
              return get2.call(this);
            },
            set: function(value) {
              currentValue = "" + value;
              set2.call(this, value);
            }
          });
          Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
          });
          var tracker = {
            getValue: function() {
              return currentValue;
            },
            setValue: function(value) {
              currentValue = "" + value;
            },
            stopTracking: function() {
              detachTracker(node);
              delete node[valueField];
            }
          };
          return tracker;
        }
        function track(node) {
          if (getTracker(node)) {
            return;
          }
          node._valueTracker = trackValueOnNode(node);
        }
        function updateValueIfChanged(node) {
          if (!node) {
            return false;
          }
          var tracker = getTracker(node);
          if (!tracker) {
            return true;
          }
          var lastValue = tracker.getValue();
          var nextValue = getValueFromNode(node);
          if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
          }
          return false;
        }
        function getActiveElement(doc) {
          doc = doc || (typeof document !== "undefined" ? document : void 0);
          if (typeof doc === "undefined") {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e2) {
            return doc.body;
          }
        }
        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;
        function isControlled(props) {
          var usesChecked = props.type === "checkbox" || props.type === "radio";
          return usesChecked ? props.checked != null : props.value != null;
        }
        function getHostProps(element, props) {
          var node = element;
          var checked = props.checked;
          var hostProps = _assign({}, props, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: checked != null ? checked : node._wrapperState.initialChecked
          });
          return hostProps;
        }
        function initWrapperState(element, props) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
              error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnCheckedDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
              error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnValueDefaultValue = true;
            }
          }
          var node = element;
          var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
          node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
          };
        }
        function updateChecked(element, props) {
          var node = element;
          var checked = props.checked;
          if (checked != null) {
            setValueForProperty(node, "checked", checked, false);
          }
        }
        function updateWrapper(element, props) {
          var node = element;
          {
            var controlled = isControlled(props);
            if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
              error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnUncontrolledToControlled = true;
            }
            if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
              error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnControlledToUncontrolled = true;
            }
          }
          updateChecked(element, props);
          var value = getToStringValue(props.value);
          var type = props.type;
          if (value != null) {
            if (type === "number") {
              if (value === 0 && node.value === "" || node.value != value) {
                node.value = toString(value);
              }
            } else if (node.value !== toString(value)) {
              node.value = toString(value);
            }
          } else if (type === "submit" || type === "reset") {
            node.removeAttribute("value");
            return;
          }
          {
            if (props.hasOwnProperty("value")) {
              setDefaultValue(node, props.type, value);
            } else if (props.hasOwnProperty("defaultValue")) {
              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
            }
          }
          {
            if (props.checked == null && props.defaultChecked != null) {
              node.defaultChecked = !!props.defaultChecked;
            }
          }
        }
        function postMountWrapper(element, props, isHydrating2) {
          var node = element;
          if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type = props.type;
            var isButton = type === "submit" || type === "reset";
            if (isButton && (props.value === void 0 || props.value === null)) {
              return;
            }
            var initialValue = toString(node._wrapperState.initialValue);
            if (!isHydrating2) {
              {
                if (initialValue !== node.value) {
                  node.value = initialValue;
                }
              }
            }
            {
              node.defaultValue = initialValue;
            }
          }
          var name = node.name;
          if (name !== "") {
            node.name = "";
          }
          {
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !!node._wrapperState.initialChecked;
          }
          if (name !== "") {
            node.name = name;
          }
        }
        function restoreControlledState(element, props) {
          var node = element;
          updateWrapper(node, props);
          updateNamedCousins(node, props);
        }
        function updateNamedCousins(rootNode, props) {
          var name = props.name;
          if (props.type === "radio" && name != null) {
            var queryRoot = rootNode;
            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }
            var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
            for (var i = 0; i < group.length; i++) {
              var otherNode = group[i];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              var otherProps = getFiberCurrentPropsFromNode(otherNode);
              if (!otherProps) {
                {
                  throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                }
              }
              updateValueIfChanged(otherNode);
              updateWrapper(otherNode, otherProps);
            }
          }
        }
        function setDefaultValue(node, type, value) {
          if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) {
              node.defaultValue = toString(node._wrapperState.initialValue);
            } else if (node.defaultValue !== toString(value)) {
              node.defaultValue = toString(value);
            }
          }
        }
        var didWarnSelectedSetOnOption = false;
        var didWarnInvalidChild = false;
        function flattenChildren(children) {
          var content = "";
          React.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
          });
          return content;
        }
        function validateProps(element, props) {
          {
            if (typeof props.children === "object" && props.children !== null) {
              React.Children.forEach(props.children, function(child) {
                if (child == null) {
                  return;
                }
                if (typeof child === "string" || typeof child === "number") {
                  return;
                }
                if (typeof child.type !== "string") {
                  return;
                }
                if (!didWarnInvalidChild) {
                  didWarnInvalidChild = true;
                  error("Only strings and numbers are supported as <option> children.");
                }
              });
            }
            if (props.selected != null && !didWarnSelectedSetOnOption) {
              error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
              didWarnSelectedSetOnOption = true;
            }
          }
        }
        function postMountWrapper$1(element, props) {
          if (props.value != null) {
            element.setAttribute("value", toString(getToStringValue(props.value)));
          }
        }
        function getHostProps$1(element, props) {
          var hostProps = _assign({
            children: void 0
          }, props);
          var content = flattenChildren(props.children);
          if (content) {
            hostProps.children = content;
          }
          return hostProps;
        }
        var didWarnValueDefaultValue$1;
        {
          didWarnValueDefaultValue$1 = false;
        }
        function getDeclarationErrorAddendum() {
          var ownerName = getCurrentFiberOwnerNameInDevOrNull();
          if (ownerName) {
            return "\n\nCheck the render method of `" + ownerName + "`.";
          }
          return "";
        }
        var valuePropNames = ["value", "defaultValue"];
        function checkSelectPropTypes(props) {
          {
            checkControlledValueProps("select", props);
            for (var i = 0; i < valuePropNames.length; i++) {
              var propName = valuePropNames[i];
              if (props[propName] == null) {
                continue;
              }
              var isArray2 = Array.isArray(props[propName]);
              if (props.multiple && !isArray2) {
                error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
              } else if (!props.multiple && isArray2) {
                error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
              }
            }
          }
        }
        function updateOptions(node, multiple, propValue, setDefaultSelected) {
          var options3 = node.options;
          if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for (var i = 0; i < selectedValues.length; i++) {
              selectedValue["$" + selectedValues[i]] = true;
            }
            for (var _i2 = 0; _i2 < options3.length; _i2++) {
              var selected = selectedValue.hasOwnProperty("$" + options3[_i2].value);
              if (options3[_i2].selected !== selected) {
                options3[_i2].selected = selected;
              }
              if (selected && setDefaultSelected) {
                options3[_i2].defaultSelected = true;
              }
            }
          } else {
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for (var _i22 = 0; _i22 < options3.length; _i22++) {
              if (options3[_i22].value === _selectedValue) {
                options3[_i22].selected = true;
                if (setDefaultSelected) {
                  options3[_i22].defaultSelected = true;
                }
                return;
              }
              if (defaultSelected === null && !options3[_i22].disabled) {
                defaultSelected = options3[_i22];
              }
            }
            if (defaultSelected !== null) {
              defaultSelected.selected = true;
            }
          }
        }
        function getHostProps$2(element, props) {
          return _assign({}, props, {
            value: void 0
          });
        }
        function initWrapperState$1(element, props) {
          var node = element;
          {
            checkSelectPropTypes(props);
          }
          node._wrapperState = {
            wasMultiple: !!props.multiple
          };
          {
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
              error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnValueDefaultValue$1 = true;
            }
          }
        }
        function postMountWrapper$2(element, props) {
          var node = element;
          node.multiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (props.defaultValue != null) {
            updateOptions(node, !!props.multiple, props.defaultValue, true);
          }
        }
        function postUpdateWrapper(element, props) {
          var node = element;
          var wasMultiple = node._wrapperState.wasMultiple;
          node._wrapperState.wasMultiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (wasMultiple !== !!props.multiple) {
            if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            } else {
              updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
            }
          }
        }
        function restoreControlledState$1(element, props) {
          var node = element;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          }
        }
        var didWarnValDefaultVal = false;
        function getHostProps$3(element, props) {
          var node = element;
          if (!(props.dangerouslySetInnerHTML == null)) {
            {
              throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
            }
          }
          var hostProps = _assign({}, props, {
            value: void 0,
            defaultValue: void 0,
            children: toString(node._wrapperState.initialValue)
          });
          return hostProps;
        }
        function initWrapperState$2(element, props) {
          var node = element;
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
              error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
              didWarnValDefaultVal = true;
            }
          }
          var initialValue = props.value;
          if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
              {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
              }
              {
                if (!(defaultValue == null)) {
                  {
                    throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                  }
                }
                if (Array.isArray(children)) {
                  if (!(children.length <= 1)) {
                    {
                      throw Error("<textarea> can only have at most one child.");
                    }
                  }
                  children = children[0];
                }
                defaultValue = children;
              }
            }
            if (defaultValue == null) {
              defaultValue = "";
            }
            initialValue = defaultValue;
          }
          node._wrapperState = {
            initialValue: getToStringValue(initialValue)
          };
        }
        function updateWrapper$1(element, props) {
          var node = element;
          var value = getToStringValue(props.value);
          var defaultValue = getToStringValue(props.defaultValue);
          if (value != null) {
            var newValue = toString(value);
            if (newValue !== node.value) {
              node.value = newValue;
            }
            if (props.defaultValue == null && node.defaultValue !== newValue) {
              node.defaultValue = newValue;
            }
          }
          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        }
        function postMountWrapper$3(element, props) {
          var node = element;
          var textContent = node.textContent;
          if (textContent === node._wrapperState.initialValue) {
            if (textContent !== "" && textContent !== null) {
              node.value = textContent;
            }
          }
        }
        function restoreControlledState$2(element, props) {
          updateWrapper$1(element, props);
        }
        var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
        var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
        var Namespaces = {
          html: HTML_NAMESPACE,
          mathml: MATH_NAMESPACE,
          svg: SVG_NAMESPACE
        };
        function getIntrinsicNamespace(type) {
          switch (type) {
            case "svg":
              return SVG_NAMESPACE;
            case "math":
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE;
          }
        }
        function getChildNamespace(parentNamespace, type) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
            return getIntrinsicNamespace(type);
          }
          if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
            return HTML_NAMESPACE;
          }
          return parentNamespace;
        }
        var createMicrosoftUnsafeLocalFunction = function(func) {
          if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
            return function(arg0, arg1, arg2, arg3) {
              MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
              });
            };
          } else {
            return func;
          }
        };
        var reusableSVGContainer;
        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html2) {
          if (node.namespaceURI === Namespaces.svg) {
            if (!("innerHTML" in node)) {
              reusableSVGContainer = reusableSVGContainer || document.createElement("div");
              reusableSVGContainer.innerHTML = "<svg>" + html2.valueOf().toString() + "</svg>";
              var svgNode = reusableSVGContainer.firstChild;
              while (node.firstChild) {
                node.removeChild(node.firstChild);
              }
              while (svgNode.firstChild) {
                node.appendChild(svgNode.firstChild);
              }
              return;
            }
          }
          node.innerHTML = html2;
        });
        var ELEMENT_NODE = 1;
        var TEXT_NODE = 3;
        var COMMENT_NODE = 8;
        var DOCUMENT_NODE = 9;
        var DOCUMENT_FRAGMENT_NODE = 11;
        var setTextContent = function(node, text) {
          if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
              firstChild.nodeValue = text;
              return;
            }
          }
          node.textContent = text;
        };
        var shorthandToLonghand = {
          animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
          background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
          backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
          border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
          borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
          borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
          borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
          borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
          borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
          borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
          borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
          borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
          borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
          borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
          borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
          columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
          columns: ["columnCount", "columnWidth"],
          flex: ["flexBasis", "flexGrow", "flexShrink"],
          flexFlow: ["flexDirection", "flexWrap"],
          font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
          fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
          gap: ["columnGap", "rowGap"],
          grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
          gridColumn: ["gridColumnEnd", "gridColumnStart"],
          gridColumnGap: ["columnGap"],
          gridGap: ["columnGap", "rowGap"],
          gridRow: ["gridRowEnd", "gridRowStart"],
          gridRowGap: ["rowGap"],
          gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
          margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
          marker: ["markerEnd", "markerMid", "markerStart"],
          mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
          maskPosition: ["maskPositionX", "maskPositionY"],
          outline: ["outlineColor", "outlineStyle", "outlineWidth"],
          overflow: ["overflowX", "overflowY"],
          padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
          placeContent: ["alignContent", "justifyContent"],
          placeItems: ["alignItems", "justifyItems"],
          placeSelf: ["alignSelf", "justifySelf"],
          textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
          textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
          transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
          wordWrap: ["overflowWrap"]
        };
        var isUnitlessNumber = {
          animationIterationCount: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        function dangerousStyleValue(name, value, isCustomProperty) {
          var isEmpty = value == null || typeof value === "boolean" || value === "";
          if (isEmpty) {
            return "";
          }
          if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
            return value + "px";
          }
          return ("" + value).trim();
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern$1 = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported style property %s. Did you mean %s?", name, camelize(name.replace(msPattern$1, "ms-")));
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        function createDangerousStringForStyles(styles) {
          {
            var serialized = "";
            var delimiter = "";
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var styleValue = styles[styleName];
              if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ";";
              }
            }
            return serialized || null;
          }
        }
        function setValueForStyles(node, styles) {
          var style2 = node.style;
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            var isCustomProperty = styleName.indexOf("--") === 0;
            {
              if (!isCustomProperty) {
                warnValidStyle$1(styleName, styles[styleName]);
              }
            }
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === "float") {
              styleName = "cssFloat";
            }
            if (isCustomProperty) {
              style2.setProperty(styleName, styleValue);
            } else {
              style2[styleName] = styleValue;
            }
          }
        }
        function isValueEmpty(value) {
          return value == null || typeof value === "boolean" || value === "";
        }
        function expandShorthandMap(styles) {
          var expanded = {};
          for (var key in styles) {
            var longhands = shorthandToLonghand[key] || [key];
            for (var i = 0; i < longhands.length; i++) {
              expanded[longhands[i]] = key;
            }
          }
          return expanded;
        }
        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
          {
            if (!nextStyles) {
              return;
            }
            var expandedUpdates = expandShorthandMap(styleUpdates);
            var expandedStyles = expandShorthandMap(nextStyles);
            var warnedAbout = {};
            for (var key in expandedUpdates) {
              var originalKey = expandedUpdates[key];
              var correctOriginalKey = expandedStyles[key];
              if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) {
                  continue;
                }
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
              }
            }
          }
        }
        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
        };
        var voidElementTags = _assign({
          menuitem: true
        }, omittedCloseTags);
        var HTML = "__html";
        function assertValidProps(tag, props) {
          if (!props) {
            return;
          }
          if (voidElementTags[tag]) {
            if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
              {
                throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              }
            }
          }
          if (props.dangerouslySetInnerHTML != null) {
            if (!(props.children == null)) {
              {
                throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
              }
            }
            if (!(typeof props.dangerouslySetInnerHTML === "object" && HTML in props.dangerouslySetInnerHTML)) {
              {
                throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
              }
            }
          }
          {
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
          }
          if (!(props.style == null || typeof props.style === "object")) {
            {
              throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var possibleStandardNames = {
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var ariaProperties = {
          "aria-current": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          "aria-hidden": 0,
          "aria-invalid": 0,
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var _hasOwnProperty = Object.prototype.hasOwnProperty;
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies2.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
              if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
        var IS_NON_DELEGATED = 1 << 1;
        var IS_CAPTURE_PHASE = 1 << 2;
        var IS_REPLAYED = 1 << 4;
        var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
        function getEventTarget(nativeEvent) {
          var target = nativeEvent.target || nativeEvent.srcElement || window;
          if (target.correspondingUseElement) {
            target = target.correspondingUseElement;
          }
          return target.nodeType === TEXT_NODE ? target.parentNode : target;
        }
        var restoreImpl = null;
        var restoreTarget = null;
        var restoreQueue = null;
        function restoreStateOfTarget(target) {
          var internalInstance = getInstanceFromNode(target);
          if (!internalInstance) {
            return;
          }
          if (!(typeof restoreImpl === "function")) {
            {
              throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          var stateNode = internalInstance.stateNode;
          if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
          }
        }
        function setRestoreImplementation(impl) {
          restoreImpl = impl;
        }
        function enqueueStateRestore(target) {
          if (restoreTarget) {
            if (restoreQueue) {
              restoreQueue.push(target);
            } else {
              restoreQueue = [target];
            }
          } else {
            restoreTarget = target;
          }
        }
        function needsStateRestore() {
          return restoreTarget !== null || restoreQueue !== null;
        }
        function restoreStateIfNeeded() {
          if (!restoreTarget) {
            return;
          }
          var target = restoreTarget;
          var queuedTargets = restoreQueue;
          restoreTarget = null;
          restoreQueue = null;
          restoreStateOfTarget(target);
          if (queuedTargets) {
            for (var i = 0; i < queuedTargets.length; i++) {
              restoreStateOfTarget(queuedTargets[i]);
            }
          }
        }
        var batchedUpdatesImpl = function(fn2, bookkeeping) {
          return fn2(bookkeeping);
        };
        var discreteUpdatesImpl = function(fn2, a, b, c, d2) {
          return fn2(a, b, c, d2);
        };
        var flushDiscreteUpdatesImpl = function() {
        };
        var batchedEventUpdatesImpl = batchedUpdatesImpl;
        var isInsideEventHandler = false;
        var isBatchingEventUpdates = false;
        function finishEventHandler() {
          var controlledComponentsHavePendingUpdates = needsStateRestore();
          if (controlledComponentsHavePendingUpdates) {
            flushDiscreteUpdatesImpl();
            restoreStateIfNeeded();
          }
        }
        function batchedUpdates(fn2, bookkeeping) {
          if (isInsideEventHandler) {
            return fn2(bookkeeping);
          }
          isInsideEventHandler = true;
          try {
            return batchedUpdatesImpl(fn2, bookkeeping);
          } finally {
            isInsideEventHandler = false;
            finishEventHandler();
          }
        }
        function batchedEventUpdates(fn2, a, b) {
          if (isBatchingEventUpdates) {
            return fn2(a, b);
          }
          isBatchingEventUpdates = true;
          try {
            return batchedEventUpdatesImpl(fn2, a, b);
          } finally {
            isBatchingEventUpdates = false;
            finishEventHandler();
          }
        }
        function discreteUpdates(fn2, a, b, c, d2) {
          var prevIsInsideEventHandler = isInsideEventHandler;
          isInsideEventHandler = true;
          try {
            return discreteUpdatesImpl(fn2, a, b, c, d2);
          } finally {
            isInsideEventHandler = prevIsInsideEventHandler;
            if (!isInsideEventHandler) {
              finishEventHandler();
            }
          }
        }
        function flushDiscreteUpdatesIfNeeded(timeStamp) {
          {
            if (!isInsideEventHandler) {
              flushDiscreteUpdatesImpl();
            }
          }
        }
        function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
          batchedUpdatesImpl = _batchedUpdatesImpl;
          discreteUpdatesImpl = _discreteUpdatesImpl;
          flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
          batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
        }
        function isInteractive(tag) {
          return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
        }
        function shouldPreventMouseEvent(name, type, props) {
          switch (name) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              return !!(props.disabled && isInteractive(type));
            default:
              return false;
          }
        }
        function getListener(inst, registrationName) {
          var stateNode = inst.stateNode;
          if (stateNode === null) {
            return null;
          }
          var props = getFiberCurrentPropsFromNode(stateNode);
          if (props === null) {
            return null;
          }
          var listener = props[registrationName];
          if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
            return null;
          }
          if (!(!listener || typeof listener === "function")) {
            {
              throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
            }
          }
          return listener;
        }
        var passiveBrowserEventsSupported = false;
        if (canUseDOM) {
          try {
            var options2 = {};
            Object.defineProperty(options2, "passive", {
              get: function() {
                passiveBrowserEventsSupported = true;
              }
            });
            window.addEventListener("test", options2, options2);
            window.removeEventListener("test", options2, options2);
          } catch (e2) {
            passiveBrowserEventsSupported = false;
          }
        }
        function invokeGuardedCallbackProd(name, func, context2, a, b, c, d2, e2, f) {
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          try {
            func.apply(context2, funcArgs);
          } catch (error2) {
            this.onError(error2);
          }
        }
        var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
        {
          if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
            var fakeNode = document.createElement("react");
            invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context2, a, b, c, d2, e2, f) {
              if (!(typeof document !== "undefined")) {
                {
                  throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
                }
              }
              var evt = document.createEvent("Event");
              var didCall = false;
              var didError = true;
              var windowEvent = window.event;
              var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
              function restoreAfterDispatch() {
                fakeNode.removeEventListener(evtType, callCallback2, false);
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                  window.event = windowEvent;
                }
              }
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              function callCallback2() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context2, funcArgs);
                didError = false;
              }
              var error2;
              var didSetError = false;
              var isCrossOriginError = false;
              function handleWindowError(event) {
                error2 = event.error;
                didSetError = true;
                if (error2 === null && event.colno === 0 && event.lineno === 0) {
                  isCrossOriginError = true;
                }
                if (event.defaultPrevented) {
                  if (error2 != null && typeof error2 === "object") {
                    try {
                      error2._suppressLogging = true;
                    } catch (inner) {
                    }
                  }
                }
              }
              var evtType = "react-" + (name ? name : "invokeguardedcallback");
              window.addEventListener("error", handleWindowError);
              fakeNode.addEventListener(evtType, callCallback2, false);
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);
              if (windowEventDescriptor) {
                Object.defineProperty(window, "event", windowEventDescriptor);
              }
              if (didCall && didError) {
                if (!didSetError) {
                  error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                } else if (isCrossOriginError) {
                  error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                }
                this.onError(error2);
              }
              window.removeEventListener("error", handleWindowError);
              if (!didCall) {
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
              }
            };
          }
        }
        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
        var hasError = false;
        var caughtError = null;
        var hasRethrowError = false;
        var rethrowError = null;
        var reporter = {
          onError: function(error2) {
            hasError = true;
            caughtError = error2;
          }
        };
        function invokeGuardedCallback(name, func, context2, a, b, c, d2, e2, f) {
          hasError = false;
          caughtError = null;
          invokeGuardedCallbackImpl$1.apply(reporter, arguments);
        }
        function invokeGuardedCallbackAndCatchFirstError(name, func, context2, a, b, c, d2, e2, f) {
          invokeGuardedCallback.apply(this, arguments);
          if (hasError) {
            var error2 = clearCaughtError();
            if (!hasRethrowError) {
              hasRethrowError = true;
              rethrowError = error2;
            }
          }
        }
        function rethrowCaughtError() {
          if (hasRethrowError) {
            var error2 = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error2;
          }
        }
        function hasCaughtError() {
          return hasError;
        }
        function clearCaughtError() {
          if (hasError) {
            var error2 = caughtError;
            hasError = false;
            caughtError = null;
            return error2;
          } else {
            {
              {
                throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
        }
        function get(key) {
          return key._reactInternals;
        }
        function has(key) {
          return key._reactInternals !== void 0;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var NoFlags = 0;
        var PerformedWork = 1;
        var Placement = 2;
        var Update = 4;
        var PlacementAndUpdate = 6;
        var Deletion = 8;
        var ContentReset = 16;
        var Callback = 32;
        var DidCapture = 64;
        var Ref = 128;
        var Snapshot = 256;
        var Passive = 512;
        var PassiveUnmountPendingDev = 8192;
        var Hydrating = 1024;
        var HydratingAndUpdate = 1028;
        var LifecycleEffectMask = 932;
        var HostEffectMask = 2047;
        var Incomplete = 2048;
        var ShouldCapture = 4096;
        var ForceUpdateForLegacySuspense = 16384;
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        function getNearestMountedFiber(fiber) {
          var node = fiber;
          var nearestMounted = fiber;
          if (!fiber.alternate) {
            var nextNode = node;
            do {
              node = nextNode;
              if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
                nearestMounted = node.return;
              }
              nextNode = node.return;
            } while (nextNode);
          } else {
            while (node.return) {
              node = node.return;
            }
          }
          if (node.tag === HostRoot) {
            return nearestMounted;
          }
          return null;
        }
        function getSuspenseInstanceFromFiber(fiber) {
          if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
              var current2 = fiber.alternate;
              if (current2 !== null) {
                suspenseState = current2.memoizedState;
              }
            }
            if (suspenseState !== null) {
              return suspenseState.dehydrated;
            }
          }
          return null;
        }
        function getContainerFromFiber(fiber) {
          return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
        }
        function isFiberMounted(fiber) {
          return getNearestMountedFiber(fiber) === fiber;
        }
        function isMounted(component) {
          {
            var owner = ReactCurrentOwner.current;
            if (owner !== null && owner.tag === ClassComponent) {
              var ownerFiber = owner;
              var instance = ownerFiber.stateNode;
              if (!instance._warnedAboutRefsInRender) {
                error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(ownerFiber.type) || "A component");
              }
              instance._warnedAboutRefsInRender = true;
            }
          }
          var fiber = get(component);
          if (!fiber) {
            return false;
          }
          return getNearestMountedFiber(fiber) === fiber;
        }
        function assertIsMounted(fiber) {
          if (!(getNearestMountedFiber(fiber) === fiber)) {
            {
              throw Error("Unable to find node on an unmounted component.");
            }
          }
        }
        function findCurrentFiberUsingSlowPath(fiber) {
          var alternate = fiber.alternate;
          if (!alternate) {
            var nearestMounted = getNearestMountedFiber(fiber);
            if (!(nearestMounted !== null)) {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
            if (nearestMounted !== fiber) {
              return null;
            }
            return fiber;
          }
          var a = fiber;
          var b = alternate;
          while (true) {
            var parentA = a.return;
            if (parentA === null) {
              break;
            }
            var parentB = parentA.alternate;
            if (parentB === null) {
              var nextParent = parentA.return;
              if (nextParent !== null) {
                a = b = nextParent;
                continue;
              }
              break;
            }
            if (parentA.child === parentB.child) {
              var child = parentA.child;
              while (child) {
                if (child === a) {
                  assertIsMounted(parentA);
                  return fiber;
                }
                if (child === b) {
                  assertIsMounted(parentA);
                  return alternate;
                }
                child = child.sibling;
              }
              {
                {
                  throw Error("Unable to find node on an unmounted component.");
                }
              }
            }
            if (a.return !== b.return) {
              a = parentA;
              b = parentB;
            } else {
              var didFindChild = false;
              var _child = parentA.child;
              while (_child) {
                if (_child === a) {
                  didFindChild = true;
                  a = parentA;
                  b = parentB;
                  break;
                }
                if (_child === b) {
                  didFindChild = true;
                  b = parentA;
                  a = parentB;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild) {
                _child = parentB.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentB;
                    b = parentA;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentB;
                    a = parentA;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  {
                    throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                  }
                }
              }
            }
            if (!(a.alternate === b)) {
              {
                throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          if (!(a.tag === HostRoot)) {
            {
              throw Error("Unable to find node on an unmounted component.");
            }
          }
          if (a.stateNode.current === a) {
            return fiber;
          }
          return alternate;
        }
        function findCurrentHostFiber(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent || node.tag === HostText) {
              return node;
            } else if (node.child) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node.return || node.return === currentParent) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        function findCurrentHostFiberWithNoPortals(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI) {
              return node;
            } else if (node.child && node.tag !== HostPortal) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node.return || node.return === currentParent) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        function doesFiberContain(parentFiber, childFiber) {
          var node = childFiber;
          var parentFiberAlternate = parentFiber.alternate;
          while (node !== null) {
            if (node === parentFiber || node === parentFiberAlternate) {
              return true;
            }
            node = node.return;
          }
          return false;
        }
        var attemptUserBlockingHydration;
        function setAttemptUserBlockingHydration(fn2) {
          attemptUserBlockingHydration = fn2;
        }
        var attemptContinuousHydration;
        function setAttemptContinuousHydration(fn2) {
          attemptContinuousHydration = fn2;
        }
        var attemptHydrationAtCurrentPriority;
        function setAttemptHydrationAtCurrentPriority(fn2) {
          attemptHydrationAtCurrentPriority = fn2;
        }
        var attemptHydrationAtPriority;
        function setAttemptHydrationAtPriority(fn2) {
          attemptHydrationAtPriority = fn2;
        }
        var hasScheduledReplayAttempt = false;
        var queuedDiscreteEvents = [];
        var queuedFocus = null;
        var queuedDrag = null;
        var queuedMouse = null;
        var queuedPointers = new Map();
        var queuedPointerCaptures = new Map();
        var queuedExplicitHydrationTargets = [];
        function hasQueuedDiscreteEvents() {
          return queuedDiscreteEvents.length > 0;
        }
        var discreteReplayableEvents = [
          "mousedown",
          "mouseup",
          "touchcancel",
          "touchend",
          "touchstart",
          "auxclick",
          "dblclick",
          "pointercancel",
          "pointerdown",
          "pointerup",
          "dragend",
          "dragstart",
          "drop",
          "compositionend",
          "compositionstart",
          "keydown",
          "keypress",
          "keyup",
          "input",
          "textInput",
          "copy",
          "cut",
          "paste",
          "click",
          "change",
          "contextmenu",
          "reset",
          "submit"
        ];
        function isReplayableDiscreteEvent(eventType) {
          return discreteReplayableEvents.indexOf(eventType) > -1;
        }
        function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return {
            blockedOn,
            domEventName,
            eventSystemFlags: eventSystemFlags | IS_REPLAYED,
            nativeEvent,
            targetContainers: [targetContainer]
          };
        }
        function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
          queuedDiscreteEvents.push(queuedEvent);
        }
        function clearIfContinuousEvent(domEventName, nativeEvent) {
          switch (domEventName) {
            case "focusin":
            case "focusout":
              queuedFocus = null;
              break;
            case "dragenter":
            case "dragleave":
              queuedDrag = null;
              break;
            case "mouseover":
            case "mouseout":
              queuedMouse = null;
              break;
            case "pointerover":
            case "pointerout": {
              var pointerId = nativeEvent.pointerId;
              queuedPointers.delete(pointerId);
              break;
            }
            case "gotpointercapture":
            case "lostpointercapture": {
              var _pointerId = nativeEvent.pointerId;
              queuedPointerCaptures.delete(_pointerId);
              break;
            }
          }
        }
        function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
              var _fiber2 = getInstanceFromNode(blockedOn);
              if (_fiber2 !== null) {
                attemptContinuousHydration(_fiber2);
              }
            }
            return queuedEvent;
          }
          existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
          var targetContainers = existingQueuedEvent.targetContainers;
          if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
            targetContainers.push(targetContainer);
          }
          return existingQueuedEvent;
        }
        function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          switch (domEventName) {
            case "focusin": {
              var focusEvent = nativeEvent;
              queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
              return true;
            }
            case "dragenter": {
              var dragEvent = nativeEvent;
              queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
              return true;
            }
            case "mouseover": {
              var mouseEvent = nativeEvent;
              queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
              return true;
            }
            case "pointerover": {
              var pointerEvent = nativeEvent;
              var pointerId = pointerEvent.pointerId;
              queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
              return true;
            }
            case "gotpointercapture": {
              var _pointerEvent = nativeEvent;
              var _pointerId2 = _pointerEvent.pointerId;
              queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
              return true;
            }
          }
          return false;
        }
        function attemptExplicitHydrationTarget(queuedTarget) {
          var targetInst = getClosestInstanceFromNode(queuedTarget.target);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  queuedTarget.blockedOn = instance;
                  attemptHydrationAtPriority(queuedTarget.lanePriority, function() {
                    Scheduler.unstable_runWithPriority(queuedTarget.priority, function() {
                      attemptHydrationAtCurrentPriority(nearestMounted);
                    });
                  });
                  return;
                }
              } else if (tag === HostRoot) {
                var root2 = nearestMounted.stateNode;
                if (root2.hydrate) {
                  queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                  return;
                }
              }
            }
          }
          queuedTarget.blockedOn = null;
        }
        function attemptReplayContinuousQueuedEvent(queuedEvent) {
          if (queuedEvent.blockedOn !== null) {
            return false;
          }
          var targetContainers = queuedEvent.targetContainers;
          while (targetContainers.length > 0) {
            var targetContainer = targetContainers[0];
            var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn !== null) {
              var _fiber3 = getInstanceFromNode(nextBlockedOn);
              if (_fiber3 !== null) {
                attemptContinuousHydration(_fiber3);
              }
              queuedEvent.blockedOn = nextBlockedOn;
              return false;
            }
            targetContainers.shift();
          }
          return true;
        }
        function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
          if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
            map.delete(key);
          }
        }
        function replayUnblockedEvents() {
          hasScheduledReplayAttempt = false;
          while (queuedDiscreteEvents.length > 0) {
            var nextDiscreteEvent = queuedDiscreteEvents[0];
            if (nextDiscreteEvent.blockedOn !== null) {
              var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);
              if (_fiber4 !== null) {
                attemptUserBlockingHydration(_fiber4);
              }
              break;
            }
            var targetContainers = nextDiscreteEvent.targetContainers;
            while (targetContainers.length > 0) {
              var targetContainer = targetContainers[0];
              var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);
              if (nextBlockedOn !== null) {
                nextDiscreteEvent.blockedOn = nextBlockedOn;
                break;
              }
              targetContainers.shift();
            }
            if (nextDiscreteEvent.blockedOn === null) {
              queuedDiscreteEvents.shift();
            }
          }
          if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
            queuedFocus = null;
          }
          if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
            queuedDrag = null;
          }
          if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
            queuedMouse = null;
          }
          queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
          queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
        }
        function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
              hasScheduledReplayAttempt = true;
              Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
          }
        }
        function retryIfBlockedOn(unblocked) {
          if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
            for (var i = 1; i < queuedDiscreteEvents.length; i++) {
              var queuedEvent = queuedDiscreteEvents[i];
              if (queuedEvent.blockedOn === unblocked) {
                queuedEvent.blockedOn = null;
              }
            }
          }
          if (queuedFocus !== null) {
            scheduleCallbackIfUnblocked(queuedFocus, unblocked);
          }
          if (queuedDrag !== null) {
            scheduleCallbackIfUnblocked(queuedDrag, unblocked);
          }
          if (queuedMouse !== null) {
            scheduleCallbackIfUnblocked(queuedMouse, unblocked);
          }
          var unblock = function(queuedEvent2) {
            return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
          };
          queuedPointers.forEach(unblock);
          queuedPointerCaptures.forEach(unblock);
          for (var _i2 = 0; _i2 < queuedExplicitHydrationTargets.length; _i2++) {
            var queuedTarget = queuedExplicitHydrationTargets[_i2];
            if (queuedTarget.blockedOn === unblocked) {
              queuedTarget.blockedOn = null;
            }
          }
          while (queuedExplicitHydrationTargets.length > 0) {
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) {
              break;
            } else {
              attemptExplicitHydrationTarget(nextExplicitTarget);
              if (nextExplicitTarget.blockedOn === null) {
                queuedExplicitHydrationTargets.shift();
              }
            }
          }
        }
        var DiscreteEvent = 0;
        var UserBlockingEvent = 1;
        var ContinuousEvent = 2;
        function makePrefixMap(styleProp, eventName) {
          var prefixes2 = {};
          prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase();
          prefixes2["Webkit" + styleProp] = "webkit" + eventName;
          prefixes2["Moz" + styleProp] = "moz" + eventName;
          return prefixes2;
        }
        var vendorPrefixes = {
          animationend: makePrefixMap("Animation", "AnimationEnd"),
          animationiteration: makePrefixMap("Animation", "AnimationIteration"),
          animationstart: makePrefixMap("Animation", "AnimationStart"),
          transitionend: makePrefixMap("Transition", "TransitionEnd")
        };
        var prefixedEventNames = {};
        var style = {};
        if (canUseDOM) {
          style = document.createElement("div").style;
          if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
          }
          if (!("TransitionEvent" in window)) {
            delete vendorPrefixes.transitionend.transition;
          }
        }
        function getVendorPrefixedEventName(eventName) {
          if (prefixedEventNames[eventName]) {
            return prefixedEventNames[eventName];
          } else if (!vendorPrefixes[eventName]) {
            return eventName;
          }
          var prefixMap = vendorPrefixes[eventName];
          for (var styleProp in prefixMap) {
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
              return prefixedEventNames[eventName] = prefixMap[styleProp];
            }
          }
          return eventName;
        }
        var ANIMATION_END = getVendorPrefixedEventName("animationend");
        var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
        var ANIMATION_START = getVendorPrefixedEventName("animationstart");
        var TRANSITION_END = getVendorPrefixedEventName("transitionend");
        var topLevelEventsToReactNames = new Map();
        var eventPriorities = new Map();
        var discreteEventPairsForSimpleEventPlugin = [
          "cancel",
          "cancel",
          "click",
          "click",
          "close",
          "close",
          "contextmenu",
          "contextMenu",
          "copy",
          "copy",
          "cut",
          "cut",
          "auxclick",
          "auxClick",
          "dblclick",
          "doubleClick",
          "dragend",
          "dragEnd",
          "dragstart",
          "dragStart",
          "drop",
          "drop",
          "focusin",
          "focus",
          "focusout",
          "blur",
          "input",
          "input",
          "invalid",
          "invalid",
          "keydown",
          "keyDown",
          "keypress",
          "keyPress",
          "keyup",
          "keyUp",
          "mousedown",
          "mouseDown",
          "mouseup",
          "mouseUp",
          "paste",
          "paste",
          "pause",
          "pause",
          "play",
          "play",
          "pointercancel",
          "pointerCancel",
          "pointerdown",
          "pointerDown",
          "pointerup",
          "pointerUp",
          "ratechange",
          "rateChange",
          "reset",
          "reset",
          "seeked",
          "seeked",
          "submit",
          "submit",
          "touchcancel",
          "touchCancel",
          "touchend",
          "touchEnd",
          "touchstart",
          "touchStart",
          "volumechange",
          "volumeChange"
        ];
        var otherDiscreteEvents = ["change", "selectionchange", "textInput", "compositionstart", "compositionend", "compositionupdate"];
        var userBlockingPairsForSimpleEventPlugin = ["drag", "drag", "dragenter", "dragEnter", "dragexit", "dragExit", "dragleave", "dragLeave", "dragover", "dragOver", "mousemove", "mouseMove", "mouseout", "mouseOut", "mouseover", "mouseOver", "pointermove", "pointerMove", "pointerout", "pointerOut", "pointerover", "pointerOver", "scroll", "scroll", "toggle", "toggle", "touchmove", "touchMove", "wheel", "wheel"];
        var continuousPairsForSimpleEventPlugin = ["abort", "abort", ANIMATION_END, "animationEnd", ANIMATION_ITERATION, "animationIteration", ANIMATION_START, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", TRANSITION_END, "transitionEnd", "waiting", "waiting"];
        function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
          for (var i = 0; i < eventTypes.length; i += 2) {
            var topEvent = eventTypes[i];
            var event = eventTypes[i + 1];
            var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
            var reactName = "on" + capitalizedEvent;
            eventPriorities.set(topEvent, priority);
            topLevelEventsToReactNames.set(topEvent, reactName);
            registerTwoPhaseEvent(reactName, [topEvent]);
          }
        }
        function setEventPriorities(eventTypes, priority) {
          for (var i = 0; i < eventTypes.length; i++) {
            eventPriorities.set(eventTypes[i], priority);
          }
        }
        function getEventPriorityForPluginSystem(domEventName) {
          var priority = eventPriorities.get(domEventName);
          return priority === void 0 ? ContinuousEvent : priority;
        }
        function registerSimpleEvents() {
          registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
          registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
          registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
          setEventPriorities(otherDiscreteEvents, DiscreteEvent);
        }
        var Scheduler_now = Scheduler.unstable_now;
        {
          if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
            {
              throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
            }
          }
        }
        var ImmediatePriority = 99;
        var UserBlockingPriority = 98;
        var NormalPriority = 97;
        var LowPriority = 96;
        var IdlePriority = 95;
        var NoPriority = 90;
        var initialTimeMs = Scheduler_now();
        var SyncLanePriority = 15;
        var SyncBatchedLanePriority = 14;
        var InputDiscreteHydrationLanePriority = 13;
        var InputDiscreteLanePriority = 12;
        var InputContinuousHydrationLanePriority = 11;
        var InputContinuousLanePriority = 10;
        var DefaultHydrationLanePriority = 9;
        var DefaultLanePriority = 8;
        var TransitionHydrationPriority = 7;
        var TransitionPriority = 6;
        var RetryLanePriority = 5;
        var SelectiveHydrationLanePriority = 4;
        var IdleHydrationLanePriority = 3;
        var IdleLanePriority = 2;
        var OffscreenLanePriority = 1;
        var NoLanePriority = 0;
        var TotalLanes = 31;
        var NoLanes = 0;
        var NoLane = 0;
        var SyncLane = 1;
        var SyncBatchedLane = 2;
        var InputDiscreteHydrationLane = 4;
        var InputDiscreteLanes = 24;
        var InputContinuousHydrationLane = 32;
        var InputContinuousLanes = 192;
        var DefaultHydrationLane = 256;
        var DefaultLanes = 3584;
        var TransitionHydrationLane = 4096;
        var TransitionLanes = 4186112;
        var RetryLanes = 62914560;
        var SomeRetryLane = 33554432;
        var SelectiveHydrationLane = 67108864;
        var NonIdleLanes = 134217727;
        var IdleHydrationLane = 134217728;
        var IdleLanes = 805306368;
        var OffscreenLane = 1073741824;
        var NoTimestamp = -1;
        function setCurrentUpdateLanePriority(newLanePriority) {
        }
        var return_highestLanePriority = DefaultLanePriority;
        function getHighestPriorityLanes(lanes) {
          if ((SyncLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncLanePriority;
            return SyncLane;
          }
          if ((SyncBatchedLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncBatchedLanePriority;
            return SyncBatchedLane;
          }
          if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
            return_highestLanePriority = InputDiscreteHydrationLanePriority;
            return InputDiscreteHydrationLane;
          }
          var inputDiscreteLanes = InputDiscreteLanes & lanes;
          if (inputDiscreteLanes !== NoLanes) {
            return_highestLanePriority = InputDiscreteLanePriority;
            return inputDiscreteLanes;
          }
          if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
            return_highestLanePriority = InputContinuousHydrationLanePriority;
            return InputContinuousHydrationLane;
          }
          var inputContinuousLanes = InputContinuousLanes & lanes;
          if (inputContinuousLanes !== NoLanes) {
            return_highestLanePriority = InputContinuousLanePriority;
            return inputContinuousLanes;
          }
          if ((lanes & DefaultHydrationLane) !== NoLanes) {
            return_highestLanePriority = DefaultHydrationLanePriority;
            return DefaultHydrationLane;
          }
          var defaultLanes = DefaultLanes & lanes;
          if (defaultLanes !== NoLanes) {
            return_highestLanePriority = DefaultLanePriority;
            return defaultLanes;
          }
          if ((lanes & TransitionHydrationLane) !== NoLanes) {
            return_highestLanePriority = TransitionHydrationPriority;
            return TransitionHydrationLane;
          }
          var transitionLanes = TransitionLanes & lanes;
          if (transitionLanes !== NoLanes) {
            return_highestLanePriority = TransitionPriority;
            return transitionLanes;
          }
          var retryLanes = RetryLanes & lanes;
          if (retryLanes !== NoLanes) {
            return_highestLanePriority = RetryLanePriority;
            return retryLanes;
          }
          if (lanes & SelectiveHydrationLane) {
            return_highestLanePriority = SelectiveHydrationLanePriority;
            return SelectiveHydrationLane;
          }
          if ((lanes & IdleHydrationLane) !== NoLanes) {
            return_highestLanePriority = IdleHydrationLanePriority;
            return IdleHydrationLane;
          }
          var idleLanes = IdleLanes & lanes;
          if (idleLanes !== NoLanes) {
            return_highestLanePriority = IdleLanePriority;
            return idleLanes;
          }
          if ((OffscreenLane & lanes) !== NoLanes) {
            return_highestLanePriority = OffscreenLanePriority;
            return OffscreenLane;
          }
          {
            error("Should have found matching lanes. This is a bug in React.");
          }
          return_highestLanePriority = DefaultLanePriority;
          return lanes;
        }
        function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
          switch (schedulerPriorityLevel) {
            case ImmediatePriority:
              return SyncLanePriority;
            case UserBlockingPriority:
              return InputContinuousLanePriority;
            case NormalPriority:
            case LowPriority:
              return DefaultLanePriority;
            case IdlePriority:
              return IdleLanePriority;
            default:
              return NoLanePriority;
          }
        }
        function lanePriorityToSchedulerPriority(lanePriority) {
          switch (lanePriority) {
            case SyncLanePriority:
            case SyncBatchedLanePriority:
              return ImmediatePriority;
            case InputDiscreteHydrationLanePriority:
            case InputDiscreteLanePriority:
            case InputContinuousHydrationLanePriority:
            case InputContinuousLanePriority:
              return UserBlockingPriority;
            case DefaultHydrationLanePriority:
            case DefaultLanePriority:
            case TransitionHydrationPriority:
            case TransitionPriority:
            case SelectiveHydrationLanePriority:
            case RetryLanePriority:
              return NormalPriority;
            case IdleHydrationLanePriority:
            case IdleLanePriority:
            case OffscreenLanePriority:
              return IdlePriority;
            case NoLanePriority:
              return NoPriority;
            default: {
              {
                throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
              }
            }
          }
        }
        function getNextLanes(root2, wipLanes) {
          var pendingLanes = root2.pendingLanes;
          if (pendingLanes === NoLanes) {
            return_highestLanePriority = NoLanePriority;
            return NoLanes;
          }
          var nextLanes = NoLanes;
          var nextLanePriority = NoLanePriority;
          var expiredLanes = root2.expiredLanes;
          var suspendedLanes = root2.suspendedLanes;
          var pingedLanes = root2.pingedLanes;
          if (expiredLanes !== NoLanes) {
            nextLanes = expiredLanes;
            nextLanePriority = return_highestLanePriority = SyncLanePriority;
          } else {
            var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
            if (nonIdlePendingLanes !== NoLanes) {
              var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
              if (nonIdleUnblockedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
                nextLanePriority = return_highestLanePriority;
              } else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
                  nextLanePriority = return_highestLanePriority;
                }
              }
            } else {
              var unblockedLanes = pendingLanes & ~suspendedLanes;
              if (unblockedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(unblockedLanes);
                nextLanePriority = return_highestLanePriority;
              } else {
                if (pingedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(pingedLanes);
                  nextLanePriority = return_highestLanePriority;
                }
              }
            }
          }
          if (nextLanes === NoLanes) {
            return NoLanes;
          }
          nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes);
          if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {
            getHighestPriorityLanes(wipLanes);
            var wipLanePriority = return_highestLanePriority;
            if (nextLanePriority <= wipLanePriority) {
              return wipLanes;
            } else {
              return_highestLanePriority = nextLanePriority;
            }
          }
          var entangledLanes = root2.entangledLanes;
          if (entangledLanes !== NoLanes) {
            var entanglements = root2.entanglements;
            var lanes = nextLanes & entangledLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              nextLanes |= entanglements[index2];
              lanes &= ~lane;
            }
          }
          return nextLanes;
        }
        function getMostRecentEventTime(root2, lanes) {
          var eventTimes = root2.eventTimes;
          var mostRecentEventTime = NoTimestamp;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var eventTime = eventTimes[index2];
            if (eventTime > mostRecentEventTime) {
              mostRecentEventTime = eventTime;
            }
            lanes &= ~lane;
          }
          return mostRecentEventTime;
        }
        function computeExpirationTime(lane, currentTime) {
          getHighestPriorityLanes(lane);
          var priority = return_highestLanePriority;
          if (priority >= InputContinuousLanePriority) {
            return currentTime + 250;
          } else if (priority >= TransitionPriority) {
            return currentTime + 5e3;
          } else {
            return NoTimestamp;
          }
        }
        function markStarvedLanesAsExpired(root2, currentTime) {
          var pendingLanes = root2.pendingLanes;
          var suspendedLanes = root2.suspendedLanes;
          var pingedLanes = root2.pingedLanes;
          var expirationTimes = root2.expirationTimes;
          var lanes = pendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var expirationTime = expirationTimes[index2];
            if (expirationTime === NoTimestamp) {
              if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                expirationTimes[index2] = computeExpirationTime(lane, currentTime);
              }
            } else if (expirationTime <= currentTime) {
              root2.expiredLanes |= lane;
            }
            lanes &= ~lane;
          }
        }
        function getLanesToRetrySynchronouslyOnError(root2) {
          var everythingButOffscreen = root2.pendingLanes & ~OffscreenLane;
          if (everythingButOffscreen !== NoLanes) {
            return everythingButOffscreen;
          }
          if (everythingButOffscreen & OffscreenLane) {
            return OffscreenLane;
          }
          return NoLanes;
        }
        function returnNextLanesPriority() {
          return return_highestLanePriority;
        }
        function includesNonIdleWork(lanes) {
          return (lanes & NonIdleLanes) !== NoLanes;
        }
        function includesOnlyRetries(lanes) {
          return (lanes & RetryLanes) === lanes;
        }
        function includesOnlyTransitions(lanes) {
          return (lanes & TransitionLanes) === lanes;
        }
        function findUpdateLane(lanePriority, wipLanes) {
          switch (lanePriority) {
            case NoLanePriority:
              break;
            case SyncLanePriority:
              return SyncLane;
            case SyncBatchedLanePriority:
              return SyncBatchedLane;
            case InputDiscreteLanePriority: {
              var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);
              if (_lane === NoLane) {
                return findUpdateLane(InputContinuousLanePriority, wipLanes);
              }
              return _lane;
            }
            case InputContinuousLanePriority: {
              var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);
              if (_lane2 === NoLane) {
                return findUpdateLane(DefaultLanePriority, wipLanes);
              }
              return _lane2;
            }
            case DefaultLanePriority: {
              var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);
              if (_lane3 === NoLane) {
                _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);
                if (_lane3 === NoLane) {
                  _lane3 = pickArbitraryLane(DefaultLanes);
                }
              }
              return _lane3;
            }
            case TransitionPriority:
            case RetryLanePriority:
              break;
            case IdleLanePriority:
              var lane = pickArbitraryLane(IdleLanes & ~wipLanes);
              if (lane === NoLane) {
                lane = pickArbitraryLane(IdleLanes);
              }
              return lane;
          }
          {
            {
              throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
            }
          }
        }
        function findTransitionLane(wipLanes, pendingLanes) {
          var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);
          if (lane === NoLane) {
            lane = pickArbitraryLane(TransitionLanes & ~wipLanes);
            if (lane === NoLane) {
              lane = pickArbitraryLane(TransitionLanes);
            }
          }
          return lane;
        }
        function findRetryLane(wipLanes) {
          var lane = pickArbitraryLane(RetryLanes & ~wipLanes);
          if (lane === NoLane) {
            lane = pickArbitraryLane(RetryLanes);
          }
          return lane;
        }
        function getHighestPriorityLane(lanes) {
          return lanes & -lanes;
        }
        function getLowestPriorityLane(lanes) {
          var index2 = 31 - clz32(lanes);
          return index2 < 0 ? NoLanes : 1 << index2;
        }
        function getEqualOrHigherPriorityLanes(lanes) {
          return (getLowestPriorityLane(lanes) << 1) - 1;
        }
        function pickArbitraryLane(lanes) {
          return getHighestPriorityLane(lanes);
        }
        function pickArbitraryLaneIndex(lanes) {
          return 31 - clz32(lanes);
        }
        function laneToIndex(lane) {
          return pickArbitraryLaneIndex(lane);
        }
        function includesSomeLane(a, b) {
          return (a & b) !== NoLanes;
        }
        function isSubsetOfLanes(set2, subset) {
          return (set2 & subset) === subset;
        }
        function mergeLanes(a, b) {
          return a | b;
        }
        function removeLanes(set2, subset) {
          return set2 & ~subset;
        }
        function laneToLanes(lane) {
          return lane;
        }
        function higherPriorityLane(a, b) {
          return a !== NoLane && a < b ? a : b;
        }
        function createLaneMap(initial) {
          var laneMap = [];
          for (var i = 0; i < TotalLanes; i++) {
            laneMap.push(initial);
          }
          return laneMap;
        }
        function markRootUpdated(root2, updateLane, eventTime) {
          root2.pendingLanes |= updateLane;
          var higherPriorityLanes = updateLane - 1;
          root2.suspendedLanes &= higherPriorityLanes;
          root2.pingedLanes &= higherPriorityLanes;
          var eventTimes = root2.eventTimes;
          var index2 = laneToIndex(updateLane);
          eventTimes[index2] = eventTime;
        }
        function markRootSuspended(root2, suspendedLanes) {
          root2.suspendedLanes |= suspendedLanes;
          root2.pingedLanes &= ~suspendedLanes;
          var expirationTimes = root2.expirationTimes;
          var lanes = suspendedLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootPinged(root2, pingedLanes, eventTime) {
          root2.pingedLanes |= root2.suspendedLanes & pingedLanes;
        }
        function markDiscreteUpdatesExpired(root2) {
          root2.expiredLanes |= InputDiscreteLanes & root2.pendingLanes;
        }
        function hasDiscreteLanes(lanes) {
          return (lanes & InputDiscreteLanes) !== NoLanes;
        }
        function markRootMutableRead(root2, updateLane) {
          root2.mutableReadLanes |= updateLane & root2.pendingLanes;
        }
        function markRootFinished(root2, remainingLanes) {
          var noLongerPendingLanes = root2.pendingLanes & ~remainingLanes;
          root2.pendingLanes = remainingLanes;
          root2.suspendedLanes = 0;
          root2.pingedLanes = 0;
          root2.expiredLanes &= remainingLanes;
          root2.mutableReadLanes &= remainingLanes;
          root2.entangledLanes &= remainingLanes;
          var entanglements = root2.entanglements;
          var eventTimes = root2.eventTimes;
          var expirationTimes = root2.expirationTimes;
          var lanes = noLongerPendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            entanglements[index2] = NoLanes;
            eventTimes[index2] = NoTimestamp;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootEntangled(root2, entangledLanes) {
          root2.entangledLanes |= entangledLanes;
          var entanglements = root2.entanglements;
          var lanes = entangledLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            entanglements[index2] |= entangledLanes;
            lanes &= ~lane;
          }
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(lanes) {
          if (lanes === 0) {
            return 32;
          }
          return 31 - (log(lanes) / LN2 | 0) | 0;
        }
        var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority, runWithPriority = Scheduler.unstable_runWithPriority;
        var _enabled = true;
        function setEnabled(enabled) {
          _enabled = !!enabled;
        }
        function isEnabled() {
          return _enabled;
        }
        function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
          var eventPriority = getEventPriorityForPluginSystem(domEventName);
          var listenerWrapper;
          switch (eventPriority) {
            case DiscreteEvent:
              listenerWrapper = dispatchDiscreteEvent;
              break;
            case UserBlockingEvent:
              listenerWrapper = dispatchUserBlockingUpdate;
              break;
            case ContinuousEvent:
            default:
              listenerWrapper = dispatchEvent;
              break;
          }
          return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        }
        function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
          {
            flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
          }
          discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
        }
        function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
          {
            runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
          }
        }
        function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (!_enabled) {
            return;
          }
          var allowReplay = true;
          {
            allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
          }
          if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
            queueDiscreteEvent(null, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            return;
          }
          var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          if (blockedOn === null) {
            if (allowReplay) {
              clearIfContinuousEvent(domEventName, nativeEvent);
            }
            return;
          }
          if (allowReplay) {
            if (isReplayableDiscreteEvent(domEventName)) {
              queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
              return;
            }
            if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
              return;
            }
            clearIfContinuousEvent(domEventName, nativeEvent);
          }
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
        function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          var nativeEventTarget = getEventTarget(nativeEvent);
          var targetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) {
              targetInst = null;
            } else {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  return instance;
                }
                targetInst = null;
              } else if (tag === HostRoot) {
                var root2 = nearestMounted.stateNode;
                if (root2.hydrate) {
                  return getContainerFromFiber(nearestMounted);
                }
                targetInst = null;
              } else if (nearestMounted !== targetInst) {
                targetInst = null;
              }
            }
          }
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer);
          return null;
        }
        function addEventBubbleListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, false);
          return listener;
        }
        function addEventCaptureListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, true);
          return listener;
        }
        function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            capture: true,
            passive
          });
          return listener;
        }
        function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            passive
          });
          return listener;
        }
        var root = null;
        var startText = null;
        var fallbackText = null;
        function initialize(nativeEventTarget) {
          root = nativeEventTarget;
          startText = getText();
          return true;
        }
        function reset() {
          root = null;
          startText = null;
          fallbackText = null;
        }
        function getData() {
          if (fallbackText) {
            return fallbackText;
          }
          var start;
          var startValue = startText;
          var startLength = startValue.length;
          var end;
          var endValue = getText();
          var endLength = endValue.length;
          for (start = 0; start < startLength; start++) {
            if (startValue[start] !== endValue[start]) {
              break;
            }
          }
          var minEnd = startLength - start;
          for (end = 1; end <= minEnd; end++) {
            if (startValue[startLength - end] !== endValue[endLength - end]) {
              break;
            }
          }
          var sliceTail = end > 1 ? 1 - end : void 0;
          fallbackText = endValue.slice(start, sliceTail);
          return fallbackText;
        }
        function getText() {
          if ("value" in root) {
            return root.value;
          }
          return root.textContent;
        }
        function getEventCharCode(nativeEvent) {
          var charCode;
          var keyCode = nativeEvent.keyCode;
          if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode;
            if (charCode === 0 && keyCode === 13) {
              charCode = 13;
            }
          } else {
            charCode = keyCode;
          }
          if (charCode === 10) {
            charCode = 13;
          }
          if (charCode >= 32 || charCode === 13) {
            return charCode;
          }
          return 0;
        }
        function functionThatReturnsTrue() {
          return true;
        }
        function functionThatReturnsFalse() {
          return false;
        }
        function createSyntheticEvent(Interface) {
          function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for (var _propName in Interface) {
              if (!Interface.hasOwnProperty(_propName)) {
                continue;
              }
              var normalize = Interface[_propName];
              if (normalize) {
                this[_propName] = normalize(nativeEvent);
              } else {
                this[_propName] = nativeEvent[_propName];
              }
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) {
              this.isDefaultPrevented = functionThatReturnsTrue;
            } else {
              this.isDefaultPrevented = functionThatReturnsFalse;
            }
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
          }
          _assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
              this.defaultPrevented = true;
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.preventDefault) {
                event.preventDefault();
              } else if (typeof event.returnValue !== "unknown") {
                event.returnValue = false;
              }
              this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.stopPropagation) {
                event.stopPropagation();
              } else if (typeof event.cancelBubble !== "unknown") {
                event.cancelBubble = true;
              }
              this.isPropagationStopped = functionThatReturnsTrue;
            },
            persist: function() {
            },
            isPersistent: functionThatReturnsTrue
          });
          return SyntheticBaseEvent;
        }
        var EventInterface = {
          eventPhase: 0,
          bubbles: 0,
          cancelable: 0,
          timeStamp: function(event) {
            return event.timeStamp || Date.now();
          },
          defaultPrevented: 0,
          isTrusted: 0
        };
        var SyntheticEvent = createSyntheticEvent(EventInterface);
        var UIEventInterface = _assign({}, EventInterface, {
          view: 0,
          detail: 0
        });
        var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
        var lastMovementX;
        var lastMovementY;
        var lastMouseEvent;
        function updateMouseMovementPolyfillState(event) {
          if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === "mousemove") {
              lastMovementX = event.screenX - lastMouseEvent.screenX;
              lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
              lastMovementX = 0;
              lastMovementY = 0;
            }
            lastMouseEvent = event;
          }
        }
        var MouseEventInterface = _assign({}, UIEventInterface, {
          screenX: 0,
          screenY: 0,
          clientX: 0,
          clientY: 0,
          pageX: 0,
          pageY: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          getModifierState: getEventModifierState,
          button: 0,
          buttons: 0,
          relatedTarget: function(event) {
            if (event.relatedTarget === void 0)
              return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
          },
          movementX: function(event) {
            if ("movementX" in event) {
              return event.movementX;
            }
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
          },
          movementY: function(event) {
            if ("movementY" in event) {
              return event.movementY;
            }
            return lastMovementY;
          }
        });
        var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
        var DragEventInterface = _assign({}, MouseEventInterface, {
          dataTransfer: 0
        });
        var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
        var FocusEventInterface = _assign({}, UIEventInterface, {
          relatedTarget: 0
        });
        var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
        var AnimationEventInterface = _assign({}, EventInterface, {
          animationName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
        var ClipboardEventInterface = _assign({}, EventInterface, {
          clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
          }
        });
        var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
        var CompositionEventInterface = _assign({}, EventInterface, {
          data: 0
        });
        var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
        var SyntheticInputEvent = SyntheticCompositionEvent;
        var normalizeKey = {
          Esc: "Escape",
          Spacebar: " ",
          Left: "ArrowLeft",
          Up: "ArrowUp",
          Right: "ArrowRight",
          Down: "ArrowDown",
          Del: "Delete",
          Win: "OS",
          Menu: "ContextMenu",
          Apps: "ContextMenu",
          Scroll: "ScrollLock",
          MozPrintableKey: "Unidentified"
        };
        var translateToKey = {
          "8": "Backspace",
          "9": "Tab",
          "12": "Clear",
          "13": "Enter",
          "16": "Shift",
          "17": "Control",
          "18": "Alt",
          "19": "Pause",
          "20": "CapsLock",
          "27": "Escape",
          "32": " ",
          "33": "PageUp",
          "34": "PageDown",
          "35": "End",
          "36": "Home",
          "37": "ArrowLeft",
          "38": "ArrowUp",
          "39": "ArrowRight",
          "40": "ArrowDown",
          "45": "Insert",
          "46": "Delete",
          "112": "F1",
          "113": "F2",
          "114": "F3",
          "115": "F4",
          "116": "F5",
          "117": "F6",
          "118": "F7",
          "119": "F8",
          "120": "F9",
          "121": "F10",
          "122": "F11",
          "123": "F12",
          "144": "NumLock",
          "145": "ScrollLock",
          "224": "Meta"
        };
        function getEventKey(nativeEvent) {
          if (nativeEvent.key) {
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") {
              return key;
            }
          }
          if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent);
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
          }
          if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
            return translateToKey[nativeEvent.keyCode] || "Unidentified";
          }
          return "";
        }
        var modifierKeyToProp = {
          Alt: "altKey",
          Control: "ctrlKey",
          Meta: "metaKey",
          Shift: "shiftKey"
        };
        function modifierStateGetter(keyArg) {
          var syntheticEvent = this;
          var nativeEvent = syntheticEvent.nativeEvent;
          if (nativeEvent.getModifierState) {
            return nativeEvent.getModifierState(keyArg);
          }
          var keyProp = modifierKeyToProp[keyArg];
          return keyProp ? !!nativeEvent[keyProp] : false;
        }
        function getEventModifierState(nativeEvent) {
          return modifierStateGetter;
        }
        var KeyboardEventInterface = _assign({}, UIEventInterface, {
          key: getEventKey,
          code: 0,
          location: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          repeat: 0,
          locale: 0,
          getModifierState: getEventModifierState,
          charCode: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            return 0;
          },
          keyCode: function(event) {
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          },
          which: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          }
        });
        var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
        var PointerEventInterface = _assign({}, MouseEventInterface, {
          pointerId: 0,
          width: 0,
          height: 0,
          pressure: 0,
          tangentialPressure: 0,
          tiltX: 0,
          tiltY: 0,
          twist: 0,
          pointerType: 0,
          isPrimary: 0
        });
        var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
        var TouchEventInterface = _assign({}, UIEventInterface, {
          touches: 0,
          targetTouches: 0,
          changedTouches: 0,
          altKey: 0,
          metaKey: 0,
          ctrlKey: 0,
          shiftKey: 0,
          getModifierState: getEventModifierState
        });
        var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
        var TransitionEventInterface = _assign({}, EventInterface, {
          propertyName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
        var WheelEventInterface = _assign({}, MouseEventInterface, {
          deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
          },
          deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
          },
          deltaZ: 0,
          deltaMode: 0
        });
        var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
        var END_KEYCODES = [9, 13, 27, 32];
        var START_KEYCODE = 229;
        var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
        var documentMode = null;
        if (canUseDOM && "documentMode" in document) {
          documentMode = document.documentMode;
        }
        var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode;
        var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
        var SPACEBAR_CODE = 32;
        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
        function registerEvents() {
          registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
          registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
        }
        var hasSpaceKeypress = false;
        function isKeypressCommand(nativeEvent) {
          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
        }
        function getCompositionEventType(domEventName) {
          switch (domEventName) {
            case "compositionstart":
              return "onCompositionStart";
            case "compositionend":
              return "onCompositionEnd";
            case "compositionupdate":
              return "onCompositionUpdate";
          }
        }
        function isFallbackCompositionStart(domEventName, nativeEvent) {
          return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
        }
        function isFallbackCompositionEnd(domEventName, nativeEvent) {
          switch (domEventName) {
            case "keyup":
              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
              return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
              return true;
            default:
              return false;
          }
        }
        function getDataFromCustomEvent(nativeEvent) {
          var detail = nativeEvent.detail;
          if (typeof detail === "object" && "data" in detail) {
            return detail.data;
          }
          return null;
        }
        function isUsingKoreanIME(nativeEvent) {
          return nativeEvent.locale === "ko";
        }
        var isComposing = false;
        function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var eventType;
          var fallbackData;
          if (canUseCompositionEvent) {
            eventType = getCompositionEventType(domEventName);
          } else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) {
              eventType = "onCompositionStart";
            }
          } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
            eventType = "onCompositionEnd";
          }
          if (!eventType) {
            return null;
          }
          if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            if (!isComposing && eventType === "onCompositionStart") {
              isComposing = initialize(nativeEventTarget);
            } else if (eventType === "onCompositionEnd") {
              if (isComposing) {
                fallbackData = getData();
              }
            }
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
          if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            if (fallbackData) {
              event.data = fallbackData;
            } else {
              var customData = getDataFromCustomEvent(nativeEvent);
              if (customData !== null) {
                event.data = customData;
              }
            }
          }
        }
        function getNativeBeforeInputChars(domEventName, nativeEvent) {
          switch (domEventName) {
            case "compositionend":
              return getDataFromCustomEvent(nativeEvent);
            case "keypress":
              var which = nativeEvent.which;
              if (which !== SPACEBAR_CODE) {
                return null;
              }
              hasSpaceKeypress = true;
              return SPACEBAR_CHAR;
            case "textInput":
              var chars = nativeEvent.data;
              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                return null;
              }
              return chars;
            default:
              return null;
          }
        }
        function getFallbackBeforeInputChars(domEventName, nativeEvent) {
          if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
              var chars = getData();
              reset();
              isComposing = false;
              return chars;
            }
            return null;
          }
          switch (domEventName) {
            case "paste":
              return null;
            case "keypress":
              if (!isKeypressCommand(nativeEvent)) {
                if (nativeEvent.char && nativeEvent.char.length > 1) {
                  return nativeEvent.char;
                } else if (nativeEvent.which) {
                  return String.fromCharCode(nativeEvent.which);
                }
              }
              return null;
            case "compositionend":
              return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
              return null;
          }
        }
        function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var chars;
          if (canUseTextInputEvent) {
            chars = getNativeBeforeInputChars(domEventName, nativeEvent);
          } else {
            chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
          }
          if (!chars) {
            return null;
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
          if (listeners.length > 0) {
            var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            event.data = chars;
          }
        }
        function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
        var supportedInputTypes = {
          color: true,
          date: true,
          datetime: true,
          "datetime-local": true,
          email: true,
          month: true,
          number: true,
          password: true,
          range: true,
          search: true,
          tel: true,
          text: true,
          time: true,
          url: true,
          week: true
        };
        function isTextInputElement(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          if (nodeName === "input") {
            return !!supportedInputTypes[elem.type];
          }
          if (nodeName === "textarea") {
            return true;
          }
          return false;
        }
        function isEventSupported(eventNameSuffix) {
          if (!canUseDOM) {
            return false;
          }
          var eventName = "on" + eventNameSuffix;
          var isSupported = eventName in document;
          if (!isSupported) {
            var element = document.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
          }
          return isSupported;
        }
        function registerEvents$1() {
          registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
        }
        function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
          enqueueStateRestore(target);
          var listeners = accumulateTwoPhaseListeners(inst, "onChange");
          if (listeners.length > 0) {
            var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        var activeElement = null;
        var activeElementInst = null;
        function shouldUseChangeEvent(elem) {
          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName === "select" || nodeName === "input" && elem.type === "file";
        }
        function manualDispatchChangeEvent(nativeEvent) {
          var dispatchQueue = [];
          createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
          batchedUpdates(runEventInBatch, dispatchQueue);
        }
        function runEventInBatch(dispatchQueue) {
          processDispatchQueue(dispatchQueue, 0);
        }
        function getInstIfValueChanged(targetInst) {
          var targetNode = getNodeFromInstance(targetInst);
          if (updateValueIfChanged(targetNode)) {
            return targetInst;
          }
        }
        function getTargetInstForChangeEvent(domEventName, targetInst) {
          if (domEventName === "change") {
            return targetInst;
          }
        }
        var isInputEventSupported = false;
        if (canUseDOM) {
          isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
        }
        function startWatchingForValueChange(target, targetInst) {
          activeElement = target;
          activeElementInst = targetInst;
          activeElement.attachEvent("onpropertychange", handlePropertyChange);
        }
        function stopWatchingForValueChange() {
          if (!activeElement) {
            return;
          }
          activeElement.detachEvent("onpropertychange", handlePropertyChange);
          activeElement = null;
          activeElementInst = null;
        }
        function handlePropertyChange(nativeEvent) {
          if (nativeEvent.propertyName !== "value") {
            return;
          }
          if (getInstIfValueChanged(activeElementInst)) {
            manualDispatchChangeEvent(nativeEvent);
          }
        }
        function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
          if (domEventName === "focusin") {
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
          } else if (domEventName === "focusout") {
            stopWatchingForValueChange();
          }
        }
        function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
          if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
            return getInstIfValueChanged(activeElementInst);
          }
        }
        function shouldUseClickEvent(elem) {
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
        }
        function getTargetInstForClickEvent(domEventName, targetInst) {
          if (domEventName === "click") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
          if (domEventName === "input" || domEventName === "change") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function handleControlledInputBlur(node) {
          var state = node._wrapperState;
          if (!state || !state.controlled || node.type !== "number") {
            return;
          }
          {
            setDefaultValue(node, "number", node.value);
          }
        }
        function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          var getTargetInstFunc, handleEventFunc;
          if (shouldUseChangeEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) {
              getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            } else {
              getTargetInstFunc = getTargetInstForInputEventPolyfill;
              handleEventFunc = handleEventsForInputEventPolyfill;
            }
          } else if (shouldUseClickEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForClickEvent;
          }
          if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
              createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
              return;
            }
          }
          if (handleEventFunc) {
            handleEventFunc(domEventName, targetNode, targetInst);
          }
          if (domEventName === "focusout") {
            handleControlledInputBlur(targetNode);
          }
        }
        function registerEvents$2() {
          registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
          registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
          registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
          registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
        }
        function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
          var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
          if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
              if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                return;
              }
            }
          }
          if (!isOutEvent && !isOverEvent) {
            return;
          }
          var win;
          if (nativeEventTarget.window === nativeEventTarget) {
            win = nativeEventTarget;
          } else {
            var doc = nativeEventTarget.ownerDocument;
            if (doc) {
              win = doc.defaultView || doc.parentWindow;
            } else {
              win = window;
            }
          }
          var from;
          var to2;
          if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to2 = _related ? getClosestInstanceFromNode(_related) : null;
            if (to2 !== null) {
              var nearestMounted = getNearestMountedFiber(to2);
              if (to2 !== nearestMounted || to2.tag !== HostComponent && to2.tag !== HostText) {
                to2 = null;
              }
            }
          } else {
            from = null;
            to2 = targetInst;
          }
          if (from === to2) {
            return;
          }
          var SyntheticEventCtor = SyntheticMouseEvent;
          var leaveEventType = "onMouseLeave";
          var enterEventType = "onMouseEnter";
          var eventTypePrefix = "mouse";
          if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
          }
          var fromNode = from == null ? win : getNodeFromInstance(from);
          var toNode = to2 == null ? win : getNodeFromInstance(to2);
          var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
          leave.target = fromNode;
          leave.relatedTarget = toNode;
          var enter = null;
          var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to2, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
          }
          accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to2);
        }
        function is2(x, y2) {
          return x === y2 && (x !== 0 || 1 / x === 1 / y2) || x !== x && y2 !== y2;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is2;
        var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
        function shallowEqual(objA, objB) {
          if (objectIs(objA, objB)) {
            return true;
          }
          if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
            return false;
          }
          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);
          if (keysA.length !== keysB.length) {
            return false;
          }
          for (var i = 0; i < keysA.length; i++) {
            if (!hasOwnProperty$2.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) {
              return false;
            }
          }
          return true;
        }
        function getLeafNode(node) {
          while (node && node.firstChild) {
            node = node.firstChild;
          }
          return node;
        }
        function getSiblingNode(node) {
          while (node) {
            if (node.nextSibling) {
              return node.nextSibling;
            }
            node = node.parentNode;
          }
        }
        function getNodeForCharacterOffset(root2, offset) {
          var node = getLeafNode(root2);
          var nodeStart = 0;
          var nodeEnd = 0;
          while (node) {
            if (node.nodeType === TEXT_NODE) {
              nodeEnd = nodeStart + node.textContent.length;
              if (nodeStart <= offset && nodeEnd >= offset) {
                return {
                  node,
                  offset: offset - nodeStart
                };
              }
              nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
          }
        }
        function getOffsets(outerNode) {
          var ownerDocument = outerNode.ownerDocument;
          var win = ownerDocument && ownerDocument.defaultView || window;
          var selection = win.getSelection && win.getSelection();
          if (!selection || selection.rangeCount === 0) {
            return null;
          }
          var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
          try {
            anchorNode.nodeType;
            focusNode.nodeType;
          } catch (e2) {
            return null;
          }
          return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
        }
        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
          var length = 0;
          var start = -1;
          var end = -1;
          var indexWithinAnchor = 0;
          var indexWithinFocus = 0;
          var node = outerNode;
          var parentNode = null;
          outer:
            while (true) {
              var next = null;
              while (true) {
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                  start = length + anchorOffset;
                }
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                  end = length + focusOffset;
                }
                if (node.nodeType === TEXT_NODE) {
                  length += node.nodeValue.length;
                }
                if ((next = node.firstChild) === null) {
                  break;
                }
                parentNode = node;
                node = next;
              }
              while (true) {
                if (node === outerNode) {
                  break outer;
                }
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                  start = length;
                }
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                  end = length;
                }
                if ((next = node.nextSibling) !== null) {
                  break;
                }
                node = parentNode;
                parentNode = node.parentNode;
              }
              node = next;
            }
          if (start === -1 || end === -1) {
            return null;
          }
          return {
            start,
            end
          };
        }
        function setOffsets(node, offsets) {
          var doc = node.ownerDocument || document;
          var win = doc && doc.defaultView || window;
          if (!win.getSelection) {
            return;
          }
          var selection = win.getSelection();
          var length = node.textContent.length;
          var start = Math.min(offsets.start, length);
          var end = offsets.end === void 0 ? start : Math.min(offsets.end, length);
          if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
          }
          var startMarker = getNodeForCharacterOffset(node, start);
          var endMarker = getNodeForCharacterOffset(node, end);
          if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
              return;
            }
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
              selection.addRange(range);
              selection.extend(endMarker.node, endMarker.offset);
            } else {
              range.setEnd(endMarker.node, endMarker.offset);
              selection.addRange(range);
            }
          }
        }
        function isTextNode(node) {
          return node && node.nodeType === TEXT_NODE;
        }
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ("contains" in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }
        function isInDocument(node) {
          return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
        }
        function isSameOriginFrame(iframe) {
          try {
            return typeof iframe.contentWindow.location.href === "string";
          } catch (err) {
            return false;
          }
        }
        function getActiveElementDeep() {
          var win = window;
          var element = getActiveElement();
          while (element instanceof win.HTMLIFrameElement) {
            if (isSameOriginFrame(element)) {
              win = element.contentWindow;
            } else {
              return element;
            }
            element = getActiveElement(win.document);
          }
          return element;
        }
        function hasSelectionCapabilities(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
        }
        function getSelectionInformation() {
          var focusedElem = getActiveElementDeep();
          return {
            focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
          };
        }
        function restoreSelection(priorSelectionInformation) {
          var curFocusedElem = getActiveElementDeep();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
              setSelection(priorFocusedElem, priorSelectionRange);
            }
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while (ancestor = ancestor.parentNode) {
              if (ancestor.nodeType === ELEMENT_NODE) {
                ancestors.push({
                  element: ancestor,
                  left: ancestor.scrollLeft,
                  top: ancestor.scrollTop
                });
              }
            }
            if (typeof priorFocusedElem.focus === "function") {
              priorFocusedElem.focus();
            }
            for (var i = 0; i < ancestors.length; i++) {
              var info = ancestors[i];
              info.element.scrollLeft = info.left;
              info.element.scrollTop = info.top;
            }
          }
        }
        function getSelection(input) {
          var selection;
          if ("selectionStart" in input) {
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd
            };
          } else {
            selection = getOffsets(input);
          }
          return selection || {
            start: 0,
            end: 0
          };
        }
        function setSelection(input, offsets) {
          var start = offsets.start;
          var end = offsets.end;
          if (end === void 0) {
            end = start;
          }
          if ("selectionStart" in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
          } else {
            setOffsets(input, offsets);
          }
        }
        var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
        function registerEvents$3() {
          registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
        }
        var activeElement$1 = null;
        var activeElementInst$1 = null;
        var lastSelection = null;
        var mouseDown = false;
        function getSelection$1(node) {
          if ("selectionStart" in node && hasSelectionCapabilities(node)) {
            return {
              start: node.selectionStart,
              end: node.selectionEnd
            };
          } else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
              anchorNode: selection.anchorNode,
              anchorOffset: selection.anchorOffset,
              focusNode: selection.focusNode,
              focusOffset: selection.focusOffset
            };
          }
        }
        function getEventTargetDocument(eventTarget) {
          return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
        }
        function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
          var doc = getEventTargetDocument(nativeEventTarget);
          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
            return;
          }
          var currentSelection = getSelection$1(activeElement$1);
          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
              var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              event.target = activeElement$1;
            }
          }
        }
        function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          switch (domEventName) {
            case "focusin":
              if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                activeElement$1 = targetNode;
                activeElementInst$1 = targetInst;
                lastSelection = null;
              }
              break;
            case "focusout":
              activeElement$1 = null;
              activeElementInst$1 = null;
              lastSelection = null;
              break;
            case "mousedown":
              mouseDown = true;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              mouseDown = false;
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
              break;
            case "selectionchange":
              if (skipSelectionChangeEvent) {
                break;
              }
            case "keydown":
            case "keyup":
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
          }
        }
        function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var reactName = topLevelEventsToReactNames.get(domEventName);
          if (reactName === void 0) {
            return;
          }
          var SyntheticEventCtor = SyntheticEvent;
          var reactEventType = domEventName;
          switch (domEventName) {
            case "keypress":
              if (getEventCharCode(nativeEvent) === 0) {
                return;
              }
            case "keydown":
            case "keyup":
              SyntheticEventCtor = SyntheticKeyboardEvent;
              break;
            case "focusin":
              reactEventType = "focus";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "focusout":
              reactEventType = "blur";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "beforeblur":
            case "afterblur":
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "click":
              if (nativeEvent.button === 2) {
                return;
              }
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              SyntheticEventCtor = SyntheticMouseEvent;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              SyntheticEventCtor = SyntheticDragEvent;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              SyntheticEventCtor = SyntheticTouchEvent;
              break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
              SyntheticEventCtor = SyntheticAnimationEvent;
              break;
            case TRANSITION_END:
              SyntheticEventCtor = SyntheticTransitionEvent;
              break;
            case "scroll":
              SyntheticEventCtor = SyntheticUIEvent;
              break;
            case "wheel":
              SyntheticEventCtor = SyntheticWheelEvent;
              break;
            case "copy":
            case "cut":
            case "paste":
              SyntheticEventCtor = SyntheticClipboardEvent;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              SyntheticEventCtor = SyntheticPointerEvent;
              break;
          }
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          {
            var accumulateTargetOnly = !inCapturePhase && domEventName === "scroll";
            var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
            if (_listeners.length > 0) {
              var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event: _event,
                listeners: _listeners
              });
            }
          }
        }
        registerSimpleEvents();
        registerEvents$2();
        registerEvents$1();
        registerEvents$3();
        registerEvents();
        function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
          if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          }
        }
        var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
        var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
        function executeDispatch(event, listener, currentTarget) {
          var type = event.type || "unknown-event";
          event.currentTarget = currentTarget;
          invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event);
          event.currentTarget = null;
        }
        function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
          var previousInstance;
          if (inCapturePhase) {
            for (var i = dispatchListeners.length - 1; i >= 0; i--) {
              var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
              if (instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, listener, currentTarget);
              previousInstance = instance;
            }
          } else {
            for (var _i2 = 0; _i2 < dispatchListeners.length; _i2++) {
              var _dispatchListeners$_i = dispatchListeners[_i2], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
              if (_instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, _listener, _currentTarget);
              previousInstance = _instance;
            }
          }
        }
        function processDispatchQueue(dispatchQueue, eventSystemFlags) {
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          for (var i = 0; i < dispatchQueue.length; i++) {
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
          }
          rethrowCaughtError();
        }
        function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var nativeEventTarget = getEventTarget(nativeEvent);
          var dispatchQueue = [];
          extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          processDispatchQueue(dispatchQueue, eventSystemFlags);
        }
        function listenToNonDelegatedEvent(domEventName, targetElement) {
          var isCapturePhaseListener = false;
          var listenerSet = getEventListenerSet(targetElement);
          var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
          if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
          }
        }
        var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
        function listenToAllSupportedEvents(rootContainerElement) {
          {
            if (rootContainerElement[listeningMarker]) {
              return;
            }
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
              if (!nonDelegatedEvents.has(domEventName)) {
                listenToNativeEvent(domEventName, false, rootContainerElement, null);
              }
              listenToNativeEvent(domEventName, true, rootContainerElement, null);
            });
          }
        }
        function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
          var eventSystemFlags = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
          var target = rootContainerElement;
          if (domEventName === "selectionchange" && rootContainerElement.nodeType !== DOCUMENT_NODE) {
            target = rootContainerElement.ownerDocument;
          }
          if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
            if (domEventName !== "scroll") {
              return;
            }
            eventSystemFlags |= IS_NON_DELEGATED;
            target = targetElement;
          }
          var listenerSet = getEventListenerSet(target);
          var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
          if (!listenerSet.has(listenerSetKey)) {
            if (isCapturePhaseListener) {
              eventSystemFlags |= IS_CAPTURE_PHASE;
            }
            addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
          }
        }
        function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
          var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
          var isPassiveListener = void 0;
          if (passiveBrowserEventsSupported) {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
              isPassiveListener = true;
            }
          }
          targetContainer = targetContainer;
          var unsubscribeListener;
          if (isCapturePhaseListener) {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
            }
          } else {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
            }
          }
        }
        function isMatchingRootContainer(grandContainer, targetContainer) {
          return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
        }
        function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var ancestorInst = targetInst;
          if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer;
            if (targetInst !== null) {
              var node = targetInst;
              mainLoop:
                while (true) {
                  if (node === null) {
                    return;
                  }
                  var nodeTag = node.tag;
                  if (nodeTag === HostRoot || nodeTag === HostPortal) {
                    var container = node.stateNode.containerInfo;
                    if (isMatchingRootContainer(container, targetContainerNode)) {
                      break;
                    }
                    if (nodeTag === HostPortal) {
                      var grandNode = node.return;
                      while (grandNode !== null) {
                        var grandTag = grandNode.tag;
                        if (grandTag === HostRoot || grandTag === HostPortal) {
                          var grandContainer = grandNode.stateNode.containerInfo;
                          if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                            return;
                          }
                        }
                        grandNode = grandNode.return;
                      }
                    }
                    while (container !== null) {
                      var parentNode = getClosestInstanceFromNode(container);
                      if (parentNode === null) {
                        return;
                      }
                      var parentTag = parentNode.tag;
                      if (parentTag === HostComponent || parentTag === HostText) {
                        node = ancestorInst = parentNode;
                        continue mainLoop;
                      }
                      container = container.parentNode;
                    }
                  }
                  node = node.return;
                }
            }
          }
          batchedEventUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
          });
        }
        function createDispatchListener(instance, listener, currentTarget) {
          return {
            instance,
            listener,
            currentTarget
          };
        }
        function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
          var captureName = reactName !== null ? reactName + "Capture" : null;
          var reactEventName = inCapturePhase ? captureName : reactName;
          var listeners = [];
          var instance = targetFiber;
          var lastHostComponent = null;
          while (instance !== null) {
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag;
            if (tag === HostComponent && stateNode !== null) {
              lastHostComponent = stateNode;
              if (reactEventName !== null) {
                var listener = getListener(instance, reactEventName);
                if (listener != null) {
                  listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
              }
            }
            if (accumulateTargetOnly) {
              break;
            }
            instance = instance.return;
          }
          return listeners;
        }
        function accumulateTwoPhaseListeners(targetFiber, reactName) {
          var captureName = reactName + "Capture";
          var listeners = [];
          var instance = targetFiber;
          while (instance !== null) {
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag;
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              var captureListener = getListener(instance, captureName);
              if (captureListener != null) {
                listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
              }
              var bubbleListener = getListener(instance, reactName);
              if (bubbleListener != null) {
                listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
              }
            }
            instance = instance.return;
          }
          return listeners;
        }
        function getParent(inst) {
          if (inst === null) {
            return null;
          }
          do {
            inst = inst.return;
          } while (inst && inst.tag !== HostComponent);
          if (inst) {
            return inst;
          }
          return null;
        }
        function getLowestCommonAncestor(instA, instB) {
          var nodeA = instA;
          var nodeB = instB;
          var depthA = 0;
          for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
            depthB++;
          }
          while (depthA - depthB > 0) {
            nodeA = getParent(nodeA);
            depthA--;
          }
          while (depthB - depthA > 0) {
            nodeB = getParent(nodeB);
            depthB--;
          }
          var depth = depthA;
          while (depth--) {
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
              return nodeA;
            }
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
          }
          return null;
        }
        function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
          var registrationName = event._reactName;
          var listeners = [];
          var instance = target;
          while (instance !== null) {
            if (instance === common) {
              break;
            }
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) {
              break;
            }
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              if (inCapturePhase) {
                var captureListener = getListener(instance, registrationName);
                if (captureListener != null) {
                  listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                }
              } else if (!inCapturePhase) {
                var bubbleListener = getListener(instance, registrationName);
                if (bubbleListener != null) {
                  listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
              }
            }
            instance = instance.return;
          }
          if (listeners.length !== 0) {
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to2) {
          var common = from && to2 ? getLowestCommonAncestor(from, to2) : null;
          if (from !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
          }
          if (to2 !== null && enterEvent !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to2, common, true);
          }
        }
        function getListenerSetKey(domEventName, capture) {
          return domEventName + "__" + (capture ? "capture" : "bubble");
        }
        var didWarnInvalidHydration = false;
        var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
        var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
        var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
        var AUTOFOCUS = "autoFocus";
        var CHILDREN = "children";
        var STYLE = "style";
        var HTML$1 = "__html";
        var HTML_NAMESPACE$1 = Namespaces.html;
        var warnedUnknownTags;
        var suppressHydrationWarning;
        var validatePropertiesInDevelopment;
        var warnForTextDifference;
        var warnForPropDifference;
        var warnForExtraAttributes;
        var warnForInvalidEventListener;
        var canDiffStyleForHydrationWarning;
        var normalizeMarkupForTextOrAttribute;
        var normalizeHTML;
        {
          warnedUnknownTags = {
            dialog: true,
            webview: true
          };
          validatePropertiesInDevelopment = function(type, props) {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, {
              registrationNameDependencies,
              possibleRegistrationNames
            });
          };
          canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
          var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
          var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
          normalizeMarkupForTextOrAttribute = function(markup) {
            var markupString = typeof markup === "string" ? markup : "" + markup;
            return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
          };
          warnForTextDifference = function(serverText, clientText) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
            var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
            if (normalizedServerText === normalizedClientText) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
          };
          warnForPropDifference = function(propName, serverValue, clientValue) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
            var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
            if (normalizedServerValue === normalizedClientValue) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
          };
          warnForExtraAttributes = function(attributeNames) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            var names = [];
            attributeNames.forEach(function(name) {
              names.push(name);
            });
            error("Extra attributes from the server: %s", names);
          };
          warnForInvalidEventListener = function(registrationName, listener) {
            if (listener === false) {
              error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
            } else {
              error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
            }
          };
          normalizeHTML = function(parent, html2) {
            var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
            testElement.innerHTML = html2;
            return testElement.innerHTML;
          };
        }
        function getOwnerDocumentFromRootContainer(rootContainerElement) {
          return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
        }
        function noop() {
        }
        function trapClickOnNonInteractiveElement(node) {
          node.onclick = noop;
        }
        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
          for (var propKey in nextProps) {
            if (!nextProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              if (nextHtml != null) {
                setInnerHTML(domElement, nextHtml);
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                var canSetTextContent = tag !== "textarea" || nextProp !== "";
                if (canSetTextContent) {
                  setTextContent(domElement, nextProp);
                }
              } else if (typeof nextProp === "number") {
                setTextContent(domElement, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (nextProp != null) {
              setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
            }
          }
        }
        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
          for (var i = 0; i < updatePayload.length; i += 2) {
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) {
              setValueForStyles(domElement, propValue);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              setInnerHTML(domElement, propValue);
            } else if (propKey === CHILDREN) {
              setTextContent(domElement, propValue);
            } else {
              setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
            }
          }
        }
        function createElement(type, props, rootContainerElement, parentNamespace) {
          var isCustomComponentTag;
          var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
          var domElement;
          var namespaceURI = parentNamespace;
          if (namespaceURI === HTML_NAMESPACE$1) {
            namespaceURI = getIntrinsicNamespace(type);
          }
          if (namespaceURI === HTML_NAMESPACE$1) {
            {
              isCustomComponentTag = isCustomComponent(type, props);
              if (!isCustomComponentTag && type !== type.toLowerCase()) {
                error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
            if (type === "script") {
              var div = ownerDocument.createElement("div");
              div.innerHTML = "<script><\/script>";
              var firstChild = div.firstChild;
              domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") {
              domElement = ownerDocument.createElement(type, {
                is: props.is
              });
            } else {
              domElement = ownerDocument.createElement(type);
              if (type === "select") {
                var node = domElement;
                if (props.multiple) {
                  node.multiple = true;
                } else if (props.size) {
                  node.size = props.size;
                }
              }
            }
          } else {
            domElement = ownerDocument.createElementNS(namespaceURI, type);
          }
          {
            if (namespaceURI === HTML_NAMESPACE$1) {
              if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
              }
            }
          }
          return domElement;
        }
        function createTextNode(text, rootContainerElement) {
          return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
        }
        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
          var isCustomComponentTag = isCustomComponent(tag, rawProps);
          {
            validatePropertiesInDevelopment(tag, rawProps);
          }
          var props;
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              props = rawProps;
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              props = rawProps;
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              props = rawProps;
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              props = rawProps;
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              props = getHostProps(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              props = getHostProps$1(domElement, rawProps);
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              props = getHostProps$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              props = getHostProps$3(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            default:
              props = rawProps;
          }
          assertValidProps(tag, props);
          setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, false);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "option":
              postMountWrapper$1(domElement, rawProps);
              break;
            case "select":
              postMountWrapper$2(domElement, rawProps);
              break;
            default:
              if (typeof props.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
        }
        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
          {
            validatePropertiesInDevelopment(tag, nextRawProps);
          }
          var updatePayload = null;
          var lastProps;
          var nextProps;
          switch (tag) {
            case "input":
              lastProps = getHostProps(domElement, lastRawProps);
              nextProps = getHostProps(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "option":
              lastProps = getHostProps$1(domElement, lastRawProps);
              nextProps = getHostProps$1(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "select":
              lastProps = getHostProps$2(domElement, lastRawProps);
              nextProps = getHostProps$2(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "textarea":
              lastProps = getHostProps$3(domElement, lastRawProps);
              nextProps = getHostProps$3(domElement, nextRawProps);
              updatePayload = [];
              break;
            default:
              lastProps = lastRawProps;
              nextProps = nextRawProps;
              if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          assertValidProps(tag, nextProps);
          var propKey;
          var styleName;
          var styleUpdates = null;
          for (propKey in lastProps) {
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
              continue;
            }
            if (propKey === STYLE) {
              var lastStyle = lastProps[propKey];
              for (styleName in lastStyle) {
                if (lastStyle.hasOwnProperty(styleName)) {
                  if (!styleUpdates) {
                    styleUpdates = {};
                  }
                  styleUpdates[styleName] = "";
                }
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
              ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (!updatePayload) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, null);
            }
          }
          for (propKey in nextProps) {
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : void 0;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
              continue;
            }
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              if (lastProp) {
                for (styleName in lastProp) {
                  if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
                for (styleName in nextProp) {
                  if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = nextProp[styleName];
                  }
                }
              } else {
                if (!styleUpdates) {
                  if (!updatePayload) {
                    updatePayload = [];
                  }
                  updatePayload.push(propKey, styleUpdates);
                }
                styleUpdates = nextProp;
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
              if (nextHtml != null) {
                if (lastHtml !== nextHtml) {
                  (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string" || typeof nextProp === "number") {
                (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
              if (!updatePayload && lastProp !== nextProp) {
                updatePayload = [];
              }
            } else if (typeof nextProp === "object" && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) {
              nextProp.toString();
            } else {
              (updatePayload = updatePayload || []).push(propKey, nextProp);
            }
          }
          if (styleUpdates) {
            {
              validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            }
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
          }
          return updatePayload;
        }
        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
          if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
            updateChecked(domElement, nextRawProps);
          }
          var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
          var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
          updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
          switch (tag) {
            case "input":
              updateWrapper(domElement, nextRawProps);
              break;
            case "textarea":
              updateWrapper$1(domElement, nextRawProps);
              break;
            case "select":
              postUpdateWrapper(domElement, nextRawProps);
              break;
          }
        }
        function getPossibleStandardName(propName) {
          {
            var lowerCasedName = propName.toLowerCase();
            if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              return null;
            }
            return possibleStandardNames[lowerCasedName] || null;
          }
        }
        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
          var isCustomComponentTag;
          var extraAttributeNames;
          {
            suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
            isCustomComponentTag = isCustomComponent(tag, rawProps);
            validatePropertiesInDevelopment(tag, rawProps);
          }
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
          }
          assertValidProps(tag, rawProps);
          {
            extraAttributeNames = new Set();
            var attributes = domElement.attributes;
            for (var _i2 = 0; _i2 < attributes.length; _i2++) {
              var name = attributes[_i2].name.toLowerCase();
              switch (name) {
                case "data-reactroot":
                  break;
                case "value":
                  break;
                case "checked":
                  break;
                case "selected":
                  break;
                default:
                  extraAttributeNames.add(attributes[_i2].name);
              }
            }
          }
          var updatePayload = null;
          for (var propKey in rawProps) {
            if (!rawProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                if (domElement.textContent !== nextProp) {
                  if (!suppressHydrationWarning) {
                    warnForTextDifference(domElement.textContent, nextProp);
                  }
                  updatePayload = [CHILDREN, nextProp];
                }
              } else if (typeof nextProp === "number") {
                if (domElement.textContent !== "" + nextProp) {
                  if (!suppressHydrationWarning) {
                    warnForTextDifference(domElement.textContent, nextProp);
                  }
                  updatePayload = [CHILDREN, "" + nextProp];
                }
              }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (typeof isCustomComponentTag === "boolean") {
              var serverValue = void 0;
              var propertyInfo = getPropertyInfo(propKey);
              if (suppressHydrationWarning)
                ;
              else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === "value" || propKey === "checked" || propKey === "selected")
                ;
              else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var serverHTML = domElement.innerHTML;
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  var expectedHTML = normalizeHTML(domElement, nextHtml);
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                }
              } else if (propKey === STYLE) {
                extraAttributeNames.delete(propKey);
                if (canDiffStyleForHydrationWarning) {
                  var expectedStyle = createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute("style");
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                }
              } else if (isCustomComponentTag) {
                extraAttributeNames.delete(propKey.toLowerCase());
                serverValue = getValueForAttribute(domElement, propKey, nextProp);
                if (nextProp !== serverValue) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                var isMismatchDueToBadCasing = false;
                if (propertyInfo !== null) {
                  extraAttributeNames.delete(propertyInfo.attributeName);
                  serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                } else {
                  var ownNamespace = parentNamespace;
                  if (ownNamespace === HTML_NAMESPACE$1) {
                    ownNamespace = getIntrinsicNamespace(tag);
                  }
                  if (ownNamespace === HTML_NAMESPACE$1) {
                    extraAttributeNames.delete(propKey.toLowerCase());
                  } else {
                    var standardName = getPossibleStandardName(propKey);
                    if (standardName !== null && standardName !== propKey) {
                      isMismatchDueToBadCasing = true;
                      extraAttributeNames.delete(standardName);
                    }
                    extraAttributeNames.delete(propKey);
                  }
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                }
                if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              }
            }
          }
          {
            if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
              warnForExtraAttributes(extraAttributeNames);
            }
          }
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, true);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "select":
            case "option":
              break;
            default:
              if (typeof rawProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          return updatePayload;
        }
        function diffHydratedText(textNode, text) {
          var isDifferent = textNode.nodeValue !== text;
          return isDifferent;
        }
        function warnForUnmatchedText(textNode, text) {
          {
            warnForTextDifference(textNode.nodeValue, text);
          }
        }
        function warnForDeletedHydratableElement(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
          }
        }
        function warnForDeletedHydratableText(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedElement(parentNode, tag, props) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedText(parentNode, text) {
          {
            if (text === "") {
              return;
            }
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
          }
        }
        function restoreControlledState$3(domElement, tag, props) {
          switch (tag) {
            case "input":
              restoreControlledState(domElement, props);
              return;
            case "textarea":
              restoreControlledState$2(domElement, props);
              return;
            case "select":
              restoreControlledState$1(domElement, props);
              return;
          }
        }
        var validateDOMNesting = function() {
        };
        var updatedAncestorInfo = function() {
        };
        {
          var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
          var inScopeTags = [
            "applet",
            "caption",
            "html",
            "table",
            "td",
            "th",
            "marquee",
            "object",
            "template",
            "foreignObject",
            "desc",
            "title"
          ];
          var buttonScopeTags = inScopeTags.concat(["button"]);
          var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
          var emptyAncestorInfo = {
            current: null,
            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,
            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null
          };
          updatedAncestorInfo = function(oldInfo, tag) {
            var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
            var info = {
              tag
            };
            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }
            if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }
            ancestorInfo.current = info;
            if (tag === "form") {
              ancestorInfo.formTag = info;
            }
            if (tag === "a") {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === "button") {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === "nobr") {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === "p") {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === "li") {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === "dd" || tag === "dt") {
              ancestorInfo.dlItemTagAutoclosing = info;
            }
            return ancestorInfo;
          };
          var isTagValidWithParent = function(tag, parentTag) {
            switch (parentTag) {
              case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
              case "optgroup":
                return tag === "option" || tag === "#text";
              case "option":
                return tag === "#text";
              case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
              case "tbody":
              case "thead":
              case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
              case "colgroup":
                return tag === "col" || tag === "template";
              case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
              case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
              case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
              case "frameset":
                return tag === "frame";
              case "#document":
                return tag === "html";
            }
            switch (tag) {
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
              case "rp":
              case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
              case "body":
              case "caption":
              case "col":
              case "colgroup":
              case "frameset":
              case "frame":
              case "head":
              case "html":
              case "tbody":
              case "td":
              case "tfoot":
              case "th":
              case "thead":
              case "tr":
                return parentTag == null;
            }
            return true;
          };
          var findInvalidAncestorForTag = function(tag, ancestorInfo) {
            switch (tag) {
              case "address":
              case "article":
              case "aside":
              case "blockquote":
              case "center":
              case "details":
              case "dialog":
              case "dir":
              case "div":
              case "dl":
              case "fieldset":
              case "figcaption":
              case "figure":
              case "footer":
              case "header":
              case "hgroup":
              case "main":
              case "menu":
              case "nav":
              case "ol":
              case "p":
              case "section":
              case "summary":
              case "ul":
              case "pre":
              case "listing":
              case "table":
              case "hr":
              case "xmp":
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return ancestorInfo.pTagInButtonScope;
              case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
              case "li":
                return ancestorInfo.listItemTagAutoclosing;
              case "dd":
              case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
              case "button":
                return ancestorInfo.buttonTagInScope;
              case "a":
                return ancestorInfo.aTagInScope;
              case "nobr":
                return ancestorInfo.nobrTagInScope;
            }
            return null;
          };
          var didWarn$1 = {};
          validateDOMNesting = function(childTag, childText, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            if (childText != null) {
              if (childTag != null) {
                error("validateDOMNesting: when childText is passed, childTag should be null");
              }
              childTag = "#text";
            }
            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
            var invalidParentOrAncestor = invalidParent || invalidAncestor;
            if (!invalidParentOrAncestor) {
              return;
            }
            var ancestorTag = invalidParentOrAncestor.tag;
            var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
            if (didWarn$1[warnKey]) {
              return;
            }
            didWarn$1[warnKey] = true;
            var tagDisplayName = childTag;
            var whitespaceInfo = "";
            if (childTag === "#text") {
              if (/\S/.test(childText)) {
                tagDisplayName = "Text nodes";
              } else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
              }
            } else {
              tagDisplayName = "<" + childTag + ">";
            }
            if (invalidParent) {
              var info = "";
              if (ancestorTag === "table" && childTag === "tr") {
                info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
              }
              error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
            } else {
              error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
            }
          };
        }
        var SUPPRESS_HYDRATION_WARNING$1;
        {
          SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
        }
        var SUSPENSE_START_DATA = "$";
        var SUSPENSE_END_DATA = "/$";
        var SUSPENSE_PENDING_START_DATA = "$?";
        var SUSPENSE_FALLBACK_START_DATA = "$!";
        var STYLE$1 = "style";
        var eventsEnabled = null;
        var selectionInformation = null;
        function shouldAutoFocusHostComponent(type, props) {
          switch (type) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              return !!props.autoFocus;
          }
          return false;
        }
        function getRootHostContext(rootContainerInstance) {
          var type;
          var namespace;
          var nodeType = rootContainerInstance.nodeType;
          switch (nodeType) {
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE: {
              type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
              var root2 = rootContainerInstance.documentElement;
              namespace = root2 ? root2.namespaceURI : getChildNamespace(null, "");
              break;
            }
            default: {
              var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
              var ownNamespace = container.namespaceURI || null;
              type = container.tagName;
              namespace = getChildNamespace(ownNamespace, type);
              break;
            }
          }
          {
            var validatedTag = type.toLowerCase();
            var ancestorInfo = updatedAncestorInfo(null, validatedTag);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getChildHostContext(parentHostContext, type, rootContainerInstance) {
          {
            var parentHostContextDev = parentHostContext;
            var namespace = getChildNamespace(parentHostContextDev.namespace, type);
            var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getPublicInstance(instance) {
          return instance;
        }
        function prepareForCommit(containerInfo) {
          eventsEnabled = isEnabled();
          selectionInformation = getSelectionInformation();
          var activeInstance = null;
          setEnabled(false);
          return activeInstance;
        }
        function resetAfterCommit(containerInfo) {
          restoreSelection(selectionInformation);
          setEnabled(eventsEnabled);
          eventsEnabled = null;
          selectionInformation = null;
        }
        function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            validateDOMNesting(type, null, hostContextDev.ancestorInfo);
            if (typeof props.children === "string" || typeof props.children === "number") {
              var string = "" + props.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
            parentNamespace = hostContextDev.namespace;
          }
          var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
          precacheFiberNode(internalInstanceHandle, domElement);
          updateFiberProps(domElement, props);
          return domElement;
        }
        function appendInitialChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
          setInitialProperties(domElement, type, props, rootContainerInstance);
          return shouldAutoFocusHostComponent(type, props);
        }
        function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
          {
            var hostContextDev = hostContext;
            if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
              var string = "" + newProps.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
          }
          return diffProperties(domElement, type, oldProps, newProps);
        }
        function shouldSetTextContent(type, props) {
          return type === "textarea" || type === "option" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
        }
        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
          {
            var hostContextDev = hostContext;
            validateDOMNesting(null, text, hostContextDev.ancestorInfo);
          }
          var textNode = createTextNode(text, rootContainerInstance);
          precacheFiberNode(internalInstanceHandle, textNode);
          return textNode;
        }
        var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
        var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
        var noTimeout = -1;
        function commitMount(domElement, type, newProps, internalInstanceHandle) {
          if (shouldAutoFocusHostComponent(type, newProps)) {
            domElement.focus();
          }
        }
        function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
          updateFiberProps(domElement, newProps);
          updateProperties(domElement, updatePayload, type, oldProps, newProps);
        }
        function resetTextContent(domElement) {
          setTextContent(domElement, "");
        }
        function commitTextUpdate(textInstance, oldText, newText) {
          textInstance.nodeValue = newText;
        }
        function appendChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function appendChildToContainer(container, child) {
          var parentNode;
          if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
          } else {
            parentNode = container;
            parentNode.appendChild(child);
          }
          var reactRootContainer = container._reactRootContainer;
          if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
            trapClickOnNonInteractiveElement(parentNode);
          }
        }
        function insertBefore(parentInstance, child, beforeChild) {
          parentInstance.insertBefore(child, beforeChild);
        }
        function insertInContainerBefore(container, child, beforeChild) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.insertBefore(child, beforeChild);
          } else {
            container.insertBefore(child, beforeChild);
          }
        }
        function removeChild(parentInstance, child) {
          parentInstance.removeChild(child);
        }
        function removeChildFromContainer(container, child) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.removeChild(child);
          } else {
            container.removeChild(child);
          }
        }
        function hideInstance(instance) {
          instance = instance;
          var style2 = instance.style;
          if (typeof style2.setProperty === "function") {
            style2.setProperty("display", "none", "important");
          } else {
            style2.display = "none";
          }
        }
        function hideTextInstance(textInstance) {
          textInstance.nodeValue = "";
        }
        function unhideInstance(instance, props) {
          instance = instance;
          var styleProp = props[STYLE$1];
          var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
          instance.style.display = dangerousStyleValue("display", display);
        }
        function unhideTextInstance(textInstance, text) {
          textInstance.nodeValue = text;
        }
        function clearContainer(container) {
          if (container.nodeType === ELEMENT_NODE) {
            container.textContent = "";
          } else if (container.nodeType === DOCUMENT_NODE) {
            var body = container.body;
            if (body != null) {
              body.textContent = "";
            }
          }
        }
        function canHydrateInstance(instance, type, props) {
          if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
            return null;
          }
          return instance;
        }
        function canHydrateTextInstance(instance, text) {
          if (text === "" || instance.nodeType !== TEXT_NODE) {
            return null;
          }
          return instance;
        }
        function isSuspenseInstancePending(instance) {
          return instance.data === SUSPENSE_PENDING_START_DATA;
        }
        function isSuspenseInstanceFallback(instance) {
          return instance.data === SUSPENSE_FALLBACK_START_DATA;
        }
        function getNextHydratable(node) {
          for (; node != null; node = node.nextSibling) {
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
              break;
            }
          }
          return node;
        }
        function getNextHydratableSibling(instance) {
          return getNextHydratable(instance.nextSibling);
        }
        function getFirstHydratableChild(parentInstance) {
          return getNextHydratable(parentInstance.firstChild);
        }
        function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, instance);
          updateFiberProps(instance, props);
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            parentNamespace = hostContextDev.namespace;
          }
          return diffHydratedProperties(instance, type, props, parentNamespace);
        }
        function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, textInstance);
          return diffHydratedText(textInstance, text);
        }
        function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
          var node = suspenseInstance.nextSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  return getNextHydratableSibling(node);
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                depth++;
              }
            }
            node = node.nextSibling;
          }
          return null;
        }
        function getParentSuspenseInstance(targetInstance) {
          var node = targetInstance.previousSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                if (depth === 0) {
                  return node;
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_END_DATA) {
                depth++;
              }
            }
            node = node.previousSibling;
          }
          return null;
        }
        function commitHydratedContainer(container) {
          retryIfBlockedOn(container);
        }
        function commitHydratedSuspenseInstance(suspenseInstance) {
          retryIfBlockedOn(suspenseInstance);
        }
        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
          {
            warnForUnmatchedText(textInstance, text);
          }
        }
        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            warnForUnmatchedText(textInstance, text);
          }
        }
        function didNotHydrateContainerInstance(parentContainer, instance) {
          {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentContainer, instance);
            } else if (instance.nodeType === COMMENT_NODE)
              ;
            else {
              warnForDeletedHydratableText(parentContainer, instance);
            }
          }
        }
        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentInstance, instance);
            } else if (instance.nodeType === COMMENT_NODE)
              ;
            else {
              warnForDeletedHydratableText(parentInstance, instance);
            }
          }
        }
        function didNotFindHydratableContainerInstance(parentContainer, type, props) {
          {
            warnForInsertedHydratedElement(parentContainer, type);
          }
        }
        function didNotFindHydratableContainerTextInstance(parentContainer, text) {
          {
            warnForInsertedHydratedText(parentContainer, text);
          }
        }
        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            warnForInsertedHydratedElement(parentInstance, type);
          }
        }
        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            warnForInsertedHydratedText(parentInstance, text);
          }
        }
        function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true)
            ;
        }
        var clientId = 0;
        function makeClientIdInDEV(warnOnAccessInDEV) {
          var id = "r:" + (clientId++).toString(36);
          return {
            toString: function() {
              warnOnAccessInDEV();
              return id;
            },
            valueOf: function() {
              warnOnAccessInDEV();
              return id;
            }
          };
        }
        function isOpaqueHydratingObject(value) {
          return value !== null && typeof value === "object" && value.$$typeof === REACT_OPAQUE_ID_TYPE;
        }
        function makeOpaqueHydratingObject(attemptToReadValue) {
          return {
            $$typeof: REACT_OPAQUE_ID_TYPE,
            toString: attemptToReadValue,
            valueOf: attemptToReadValue
          };
        }
        function preparePortalMount(portalInstance) {
          {
            listenToAllSupportedEvents(portalInstance);
          }
        }
        var randomKey = Math.random().toString(36).slice(2);
        var internalInstanceKey = "__reactFiber$" + randomKey;
        var internalPropsKey = "__reactProps$" + randomKey;
        var internalContainerInstanceKey = "__reactContainer$" + randomKey;
        var internalEventHandlersKey = "__reactEvents$" + randomKey;
        function precacheFiberNode(hostInst, node) {
          node[internalInstanceKey] = hostInst;
        }
        function markContainerAsRoot(hostRoot, node) {
          node[internalContainerInstanceKey] = hostRoot;
        }
        function unmarkContainerAsRoot(node) {
          node[internalContainerInstanceKey] = null;
        }
        function isContainerMarkedAsRoot(node) {
          return !!node[internalContainerInstanceKey];
        }
        function getClosestInstanceFromNode(targetNode) {
          var targetInst = targetNode[internalInstanceKey];
          if (targetInst) {
            return targetInst;
          }
          var parentNode = targetNode.parentNode;
          while (parentNode) {
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
              var alternate = targetInst.alternate;
              if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                var suspenseInstance = getParentSuspenseInstance(targetNode);
                while (suspenseInstance !== null) {
                  var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                  if (targetSuspenseInst) {
                    return targetSuspenseInst;
                  }
                  suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                }
              }
              return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
          }
          return null;
        }
        function getInstanceFromNode(node) {
          var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
          if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
              return inst;
            } else {
              return null;
            }
          }
          return null;
        }
        function getNodeFromInstance(inst) {
          if (inst.tag === HostComponent || inst.tag === HostText) {
            return inst.stateNode;
          }
          {
            {
              throw Error("getNodeFromInstance: Invalid argument.");
            }
          }
        }
        function getFiberCurrentPropsFromNode(node) {
          return node[internalPropsKey] || null;
        }
        function updateFiberProps(node, props) {
          node[internalPropsKey] = props;
        }
        function getEventListenerSet(node) {
          var elementListenerSet = node[internalEventHandlersKey];
          if (elementListenerSet === void 0) {
            elementListenerSet = node[internalEventHandlersKey] = new Set();
          }
          return elementListenerSet;
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location2, componentName, element) {
          {
            var has2 = Function.call.bind(Object.prototype.hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has2(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location2 + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location2, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location2, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location2, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var valueStack = [];
        var fiberStack;
        {
          fiberStack = [];
        }
        var index = -1;
        function createCursor(defaultValue) {
          return {
            current: defaultValue
          };
        }
        function pop(cursor, fiber) {
          if (index < 0) {
            {
              error("Unexpected pop.");
            }
            return;
          }
          {
            if (fiber !== fiberStack[index]) {
              error("Unexpected Fiber popped.");
            }
          }
          cursor.current = valueStack[index];
          valueStack[index] = null;
          {
            fiberStack[index] = null;
          }
          index--;
        }
        function push(cursor, value, fiber) {
          index++;
          valueStack[index] = cursor.current;
          {
            fiberStack[index] = fiber;
          }
          cursor.current = value;
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        var contextStackCursor = createCursor(emptyContextObject);
        var didPerformWorkStackCursor = createCursor(false);
        var previousContext = emptyContextObject;
        function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
          {
            if (didPushOwnContextIfProvider && isContextProvider(Component)) {
              return previousContext;
            }
            return contextStackCursor.current;
          }
        }
        function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
          {
            var instance = workInProgress2.stateNode;
            instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
            instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
          }
        }
        function getMaskedContext(workInProgress2, unmaskedContext) {
          {
            var type = workInProgress2.type;
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var instance = workInProgress2.stateNode;
            if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
              return instance.__reactInternalMemoizedMaskedChildContext;
            }
            var context2 = {};
            for (var key in contextTypes) {
              context2[key] = unmaskedContext[key];
            }
            {
              var name = getComponentName(type) || "Unknown";
              checkPropTypes(contextTypes, context2, "context", name);
            }
            if (instance) {
              cacheContext(workInProgress2, unmaskedContext, context2);
            }
            return context2;
          }
        }
        function hasContextChanged() {
          {
            return didPerformWorkStackCursor.current;
          }
        }
        function isContextProvider(type) {
          {
            var childContextTypes = type.childContextTypes;
            return childContextTypes !== null && childContextTypes !== void 0;
          }
        }
        function popContext(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function popTopLevelContextObject(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function pushTopLevelContextObject(fiber, context2, didChange) {
          {
            if (!(contextStackCursor.current === emptyContextObject)) {
              {
                throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            push(contextStackCursor, context2, fiber);
            push(didPerformWorkStackCursor, didChange, fiber);
          }
        }
        function processChildContext(fiber, type, parentContext) {
          {
            var instance = fiber.stateNode;
            var childContextTypes = type.childContextTypes;
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentName(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                {
                  throw Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
                }
              }
            }
            {
              var name = getComponentName(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return _assign({}, parentContext, childContext);
          }
        }
        function pushContextProvider(workInProgress2) {
          {
            var instance = workInProgress2.stateNode;
            var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
            previousContext = contextStackCursor.current;
            push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
            push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
            return true;
          }
        }
        function invalidateContextProvider(workInProgress2, type, didChange) {
          {
            var instance = workInProgress2.stateNode;
            if (!instance) {
              {
                throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            if (didChange) {
              var mergedContext = processChildContext(workInProgress2, type, previousContext);
              instance.__reactInternalMemoizedMergedChildContext = mergedContext;
              pop(didPerformWorkStackCursor, workInProgress2);
              pop(contextStackCursor, workInProgress2);
              push(contextStackCursor, mergedContext, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            } else {
              pop(didPerformWorkStackCursor, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            }
          }
        }
        function findCurrentUnmaskedContext(fiber) {
          {
            if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
              {
                throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            var node = fiber;
            do {
              switch (node.tag) {
                case HostRoot:
                  return node.stateNode.context;
                case ClassComponent: {
                  var Component = node.type;
                  if (isContextProvider(Component)) {
                    return node.stateNode.__reactInternalMemoizedMergedChildContext;
                  }
                  break;
                }
              }
              node = node.return;
            } while (node !== null);
            {
              {
                throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
        }
        var LegacyRoot = 0;
        var BlockingRoot = 1;
        var ConcurrentRoot = 2;
        var rendererID = null;
        var injectedHook = null;
        var hasLoggedError = false;
        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
        function injectInternals(internals) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
            return false;
          }
          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (hook.isDisabled) {
            return true;
          }
          if (!hook.supportsFiber) {
            {
              error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            }
            return true;
          }
          try {
            rendererID = hook.inject(internals);
            injectedHook = hook;
          } catch (err) {
            {
              error("React instrumentation encountered an error: %s.", err);
            }
          }
          return true;
        }
        function onScheduleRoot(root2, children) {
          {
            if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
              try {
                injectedHook.onScheduleFiberRoot(rendererID, root2, children);
              } catch (err) {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function onCommitRoot(root2, priorityLevel) {
          if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
            try {
              var didError = (root2.current.flags & DidCapture) === DidCapture;
              if (enableProfilerTimer) {
                injectedHook.onCommitFiberRoot(rendererID, root2, priorityLevel, didError);
              } else {
                injectedHook.onCommitFiberRoot(rendererID, root2, void 0, didError);
              }
            } catch (err) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function onCommitUnmount(fiber) {
          if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
            try {
              injectedHook.onCommitFiberUnmount(rendererID, fiber);
            } catch (err) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority, Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback, Scheduler_cancelCallback = Scheduler.unstable_cancelCallback, Scheduler_shouldYield = Scheduler.unstable_shouldYield, Scheduler_requestPaint = Scheduler.unstable_requestPaint, Scheduler_now$1 = Scheduler.unstable_now, Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority, Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, Scheduler_NormalPriority = Scheduler.unstable_NormalPriority, Scheduler_LowPriority = Scheduler.unstable_LowPriority, Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;
        {
          if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
            {
              throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
            }
          }
        }
        var fakeCallbackNode = {};
        var ImmediatePriority$1 = 99;
        var UserBlockingPriority$2 = 98;
        var NormalPriority$1 = 97;
        var LowPriority$1 = 96;
        var IdlePriority$1 = 95;
        var NoPriority$1 = 90;
        var shouldYield = Scheduler_shouldYield;
        var requestPaint = Scheduler_requestPaint !== void 0 ? Scheduler_requestPaint : function() {
        };
        var syncQueue = null;
        var immediateQueueCallbackNode = null;
        var isFlushingSyncQueue = false;
        var initialTimeMs$1 = Scheduler_now$1();
        var now = initialTimeMs$1 < 1e4 ? Scheduler_now$1 : function() {
          return Scheduler_now$1() - initialTimeMs$1;
        };
        function getCurrentPriorityLevel() {
          switch (Scheduler_getCurrentPriorityLevel()) {
            case Scheduler_ImmediatePriority:
              return ImmediatePriority$1;
            case Scheduler_UserBlockingPriority:
              return UserBlockingPriority$2;
            case Scheduler_NormalPriority:
              return NormalPriority$1;
            case Scheduler_LowPriority:
              return LowPriority$1;
            case Scheduler_IdlePriority:
              return IdlePriority$1;
            default: {
              {
                throw Error("Unknown priority level.");
              }
            }
          }
        }
        function reactPriorityToSchedulerPriority(reactPriorityLevel) {
          switch (reactPriorityLevel) {
            case ImmediatePriority$1:
              return Scheduler_ImmediatePriority;
            case UserBlockingPriority$2:
              return Scheduler_UserBlockingPriority;
            case NormalPriority$1:
              return Scheduler_NormalPriority;
            case LowPriority$1:
              return Scheduler_LowPriority;
            case IdlePriority$1:
              return Scheduler_IdlePriority;
            default: {
              {
                throw Error("Unknown priority level.");
              }
            }
          }
        }
        function runWithPriority$1(reactPriorityLevel, fn2) {
          var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
          return Scheduler_runWithPriority(priorityLevel, fn2);
        }
        function scheduleCallback(reactPriorityLevel, callback, options3) {
          var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
          return Scheduler_scheduleCallback(priorityLevel, callback, options3);
        }
        function scheduleSyncCallback(callback) {
          if (syncQueue === null) {
            syncQueue = [callback];
            immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
          } else {
            syncQueue.push(callback);
          }
          return fakeCallbackNode;
        }
        function cancelCallback(callbackNode) {
          if (callbackNode !== fakeCallbackNode) {
            Scheduler_cancelCallback(callbackNode);
          }
        }
        function flushSyncCallbackQueue() {
          if (immediateQueueCallbackNode !== null) {
            var node = immediateQueueCallbackNode;
            immediateQueueCallbackNode = null;
            Scheduler_cancelCallback(node);
          }
          flushSyncCallbackQueueImpl();
        }
        function flushSyncCallbackQueueImpl() {
          if (!isFlushingSyncQueue && syncQueue !== null) {
            isFlushingSyncQueue = true;
            var i = 0;
            {
              try {
                var _isSync2 = true;
                var _queue = syncQueue;
                runWithPriority$1(ImmediatePriority$1, function() {
                  for (; i < _queue.length; i++) {
                    var callback = _queue[i];
                    do {
                      callback = callback(_isSync2);
                    } while (callback !== null);
                  }
                });
                syncQueue = null;
              } catch (error2) {
                if (syncQueue !== null) {
                  syncQueue = syncQueue.slice(i + 1);
                }
                Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
                throw error2;
              } finally {
                isFlushingSyncQueue = false;
              }
            }
          }
        }
        var ReactVersion = "17.0.2";
        var NoMode = 0;
        var StrictMode = 1;
        var BlockingMode = 2;
        var ConcurrentMode = 4;
        var ProfileMode = 8;
        var DebugTracingMode = 16;
        var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
        var NoTransition = 0;
        function requestCurrentTransition() {
          return ReactCurrentBatchConfig.transition;
        }
        var ReactStrictModeWarnings = {
          recordUnsafeLifecycleWarnings: function(fiber, instance) {
          },
          flushPendingUnsafeLifecycleWarnings: function() {
          },
          recordLegacyContextWarning: function(fiber, instance) {
          },
          flushLegacyContextWarning: function() {
          },
          discardPendingWarnings: function() {
          }
        };
        {
          var findStrictRoot = function(fiber) {
            var maybeStrictRoot = null;
            var node = fiber;
            while (node !== null) {
              if (node.mode & StrictMode) {
                maybeStrictRoot = node;
              }
              node = node.return;
            }
            return maybeStrictRoot;
          };
          var setToSortedString = function(set2) {
            var array = [];
            set2.forEach(function(value) {
              array.push(value);
            });
            return array.sort().join(", ");
          };
          var pendingComponentWillMountWarnings = [];
          var pendingUNSAFE_ComponentWillMountWarnings = [];
          var pendingComponentWillReceivePropsWarnings = [];
          var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
          var pendingComponentWillUpdateWarnings = [];
          var pendingUNSAFE_ComponentWillUpdateWarnings = [];
          var didWarnAboutUnsafeLifecycles = new Set();
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
            if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
              return;
            }
            if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
              pendingComponentWillMountWarnings.push(fiber);
            }
            if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === "function") {
              pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
            }
            if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
              pendingComponentWillReceivePropsWarnings.push(fiber);
            }
            if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
            }
            if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
              pendingComponentWillUpdateWarnings.push(fiber);
            }
            if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === "function") {
              pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
            var componentWillMountUniqueNames = new Set();
            if (pendingComponentWillMountWarnings.length > 0) {
              pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillMountWarnings = [];
            }
            var UNSAFE_componentWillMountUniqueNames = new Set();
            if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
              pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillMountWarnings = [];
            }
            var componentWillReceivePropsUniqueNames = new Set();
            if (pendingComponentWillReceivePropsWarnings.length > 0) {
              pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillReceivePropsWarnings = [];
            }
            var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
            if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            }
            var componentWillUpdateUniqueNames = new Set();
            if (pendingComponentWillUpdateWarnings.length > 0) {
              pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillUpdateWarnings = [];
            }
            var UNSAFE_componentWillUpdateUniqueNames = new Set();
            if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
              pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
            }
            if (UNSAFE_componentWillMountUniqueNames.size > 0) {
              var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
              error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
            }
            if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
              error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
            }
            if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
              error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
            }
            if (componentWillMountUniqueNames.size > 0) {
              var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
              warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
            }
            if (componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
              warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
            }
            if (componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
              warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
            }
          };
          var pendingLegacyContextWarning = new Map();
          var didWarnAboutLegacyContext = new Set();
          ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
            var strictRoot = findStrictRoot(fiber);
            if (strictRoot === null) {
              error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
              return;
            }
            if (didWarnAboutLegacyContext.has(fiber.type)) {
              return;
            }
            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
            if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
              if (warningsForRoot === void 0) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
              }
              warningsForRoot.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushLegacyContextWarning = function() {
            pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
              if (fiberArray.length === 0) {
                return;
              }
              var firstFiber = fiberArray[0];
              var uniqueNames = new Set();
              fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
              } finally {
                resetCurrentFiber();
              }
            });
          };
          ReactStrictModeWarnings.discardPendingWarnings = function() {
            pendingComponentWillMountWarnings = [];
            pendingUNSAFE_ComponentWillMountWarnings = [];
            pendingComponentWillReceivePropsWarnings = [];
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            pendingComponentWillUpdateWarnings = [];
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
            pendingLegacyContextWarning = new Map();
          };
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = _assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        var MAX_SIGNED_31_BIT_INT = 1073741823;
        var valueCursor = createCursor(null);
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var currentlyRenderingFiber = null;
        var lastContextDependency = null;
        var lastContextWithAllBitsObserved = null;
        var isDisallowedContextReadInDEV = false;
        function resetContextDependencies() {
          currentlyRenderingFiber = null;
          lastContextDependency = null;
          lastContextWithAllBitsObserved = null;
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function enterDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = true;
          }
        }
        function exitDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function pushProvider(providerFiber, nextValue) {
          var context2 = providerFiber.type._context;
          {
            push(valueCursor, context2._currentValue, providerFiber);
            context2._currentValue = nextValue;
            {
              if (context2._currentRenderer !== void 0 && context2._currentRenderer !== null && context2._currentRenderer !== rendererSigil) {
                error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context2._currentRenderer = rendererSigil;
            }
          }
        }
        function popProvider(providerFiber) {
          var currentValue = valueCursor.current;
          pop(valueCursor, providerFiber);
          var context2 = providerFiber.type._context;
          {
            context2._currentValue = currentValue;
          }
        }
        function calculateChangedBits(context2, newValue, oldValue) {
          if (objectIs(oldValue, newValue)) {
            return 0;
          } else {
            var changedBits = typeof context2._calculateChangedBits === "function" ? context2._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
            {
              if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {
                error("calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
              }
            }
            return changedBits | 0;
          }
        }
        function scheduleWorkOnParentPath(parent, renderLanes2) {
          var node = parent;
          while (node !== null) {
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes2)) {
              node.childLanes = mergeLanes(node.childLanes, renderLanes2);
              if (alternate !== null) {
                alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
              }
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
              alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
            } else {
              break;
            }
            node = node.return;
          }
        }
        function propagateContextChange(workInProgress2, context2, changedBits, renderLanes2) {
          var fiber = workInProgress2.child;
          if (fiber !== null) {
            fiber.return = workInProgress2;
          }
          while (fiber !== null) {
            var nextFiber = void 0;
            var list = fiber.dependencies;
            if (list !== null) {
              nextFiber = fiber.child;
              var dependency = list.firstContext;
              while (dependency !== null) {
                if (dependency.context === context2 && (dependency.observedBits & changedBits) !== 0) {
                  if (fiber.tag === ClassComponent) {
                    var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes2));
                    update.tag = ForceUpdate;
                    enqueueUpdate(fiber, update);
                  }
                  fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                  var alternate = fiber.alternate;
                  if (alternate !== null) {
                    alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                  }
                  scheduleWorkOnParentPath(fiber.return, renderLanes2);
                  list.lanes = mergeLanes(list.lanes, renderLanes2);
                  break;
                }
                dependency = dependency.next;
              }
            } else if (fiber.tag === ContextProvider) {
              nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
            } else {
              nextFiber = fiber.child;
            }
            if (nextFiber !== null) {
              nextFiber.return = fiber;
            } else {
              nextFiber = fiber;
              while (nextFiber !== null) {
                if (nextFiber === workInProgress2) {
                  nextFiber = null;
                  break;
                }
                var sibling = nextFiber.sibling;
                if (sibling !== null) {
                  sibling.return = nextFiber.return;
                  nextFiber = sibling;
                  break;
                }
                nextFiber = nextFiber.return;
              }
            }
            fiber = nextFiber;
          }
        }
        function prepareToReadContext(workInProgress2, renderLanes2) {
          currentlyRenderingFiber = workInProgress2;
          lastContextDependency = null;
          lastContextWithAllBitsObserved = null;
          var dependencies = workInProgress2.dependencies;
          if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
              if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                markWorkInProgressReceivedUpdate();
              }
              dependencies.firstContext = null;
            }
          }
        }
        function readContext(context2, observedBits) {
          {
            if (isDisallowedContextReadInDEV) {
              error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          if (lastContextWithAllBitsObserved === context2)
            ;
          else if (observedBits === false || observedBits === 0)
            ;
          else {
            var resolvedObservedBits;
            if (typeof observedBits !== "number" || observedBits === MAX_SIGNED_31_BIT_INT) {
              lastContextWithAllBitsObserved = context2;
              resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
            } else {
              resolvedObservedBits = observedBits;
            }
            var contextItem = {
              context: context2,
              observedBits: resolvedObservedBits,
              next: null
            };
            if (lastContextDependency === null) {
              if (!(currentlyRenderingFiber !== null)) {
                {
                  throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                }
              }
              lastContextDependency = contextItem;
              currentlyRenderingFiber.dependencies = {
                lanes: NoLanes,
                firstContext: contextItem,
                responders: null
              };
            } else {
              lastContextDependency = lastContextDependency.next = contextItem;
            }
          }
          return context2._currentValue;
        }
        var UpdateState = 0;
        var ReplaceState = 1;
        var ForceUpdate = 2;
        var CaptureUpdate = 3;
        var hasForceUpdate = false;
        var didWarnUpdateInsideUpdate;
        var currentlyProcessingQueue;
        {
          didWarnUpdateInsideUpdate = false;
          currentlyProcessingQueue = null;
        }
        function initializeUpdateQueue(fiber) {
          var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
              pending: null
            },
            effects: null
          };
          fiber.updateQueue = queue;
        }
        function cloneUpdateQueue(current2, workInProgress2) {
          var queue = workInProgress2.updateQueue;
          var currentQueue = current2.updateQueue;
          if (queue === currentQueue) {
            var clone = {
              baseState: currentQueue.baseState,
              firstBaseUpdate: currentQueue.firstBaseUpdate,
              lastBaseUpdate: currentQueue.lastBaseUpdate,
              shared: currentQueue.shared,
              effects: currentQueue.effects
            };
            workInProgress2.updateQueue = clone;
          }
        }
        function createUpdate(eventTime, lane) {
          var update = {
            eventTime,
            lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
          };
          return update;
        }
        function enqueueUpdate(fiber, update) {
          var updateQueue = fiber.updateQueue;
          if (updateQueue === null) {
            return;
          }
          var sharedQueue = updateQueue.shared;
          var pending = sharedQueue.pending;
          if (pending === null) {
            update.next = update;
          } else {
            update.next = pending.next;
            pending.next = update;
          }
          sharedQueue.pending = update;
          {
            if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
              error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
              didWarnUpdateInsideUpdate = true;
            }
          }
        }
        function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
          var queue = workInProgress2.updateQueue;
          var current2 = workInProgress2.alternate;
          if (current2 !== null) {
            var currentQueue = current2.updateQueue;
            if (queue === currentQueue) {
              var newFirst = null;
              var newLast = null;
              var firstBaseUpdate = queue.firstBaseUpdate;
              if (firstBaseUpdate !== null) {
                var update = firstBaseUpdate;
                do {
                  var clone = {
                    eventTime: update.eventTime,
                    lane: update.lane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  if (newLast === null) {
                    newFirst = newLast = clone;
                  } else {
                    newLast.next = clone;
                    newLast = clone;
                  }
                  update = update.next;
                } while (update !== null);
                if (newLast === null) {
                  newFirst = newLast = capturedUpdate;
                } else {
                  newLast.next = capturedUpdate;
                  newLast = capturedUpdate;
                }
              } else {
                newFirst = newLast = capturedUpdate;
              }
              queue = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: currentQueue.shared,
                effects: currentQueue.effects
              };
              workInProgress2.updateQueue = queue;
              return;
            }
          }
          var lastBaseUpdate = queue.lastBaseUpdate;
          if (lastBaseUpdate === null) {
            queue.firstBaseUpdate = capturedUpdate;
          } else {
            lastBaseUpdate.next = capturedUpdate;
          }
          queue.lastBaseUpdate = capturedUpdate;
        }
        function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance) {
          switch (update.tag) {
            case ReplaceState: {
              var payload = update.payload;
              if (typeof payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                var nextState = payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictMode) {
                    disableLogs();
                    try {
                      payload.call(instance, prevState, nextProps);
                    } finally {
                      reenableLogs();
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
                return nextState;
              }
              return payload;
            }
            case CaptureUpdate: {
              workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
            }
            case UpdateState: {
              var _payload = update.payload;
              var partialState;
              if (typeof _payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                partialState = _payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictMode) {
                    disableLogs();
                    try {
                      _payload.call(instance, prevState, nextProps);
                    } finally {
                      reenableLogs();
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
              } else {
                partialState = _payload;
              }
              if (partialState === null || partialState === void 0) {
                return prevState;
              }
              return _assign({}, prevState, partialState);
            }
            case ForceUpdate: {
              hasForceUpdate = true;
              return prevState;
            }
          }
          return prevState;
        }
        function processUpdateQueue(workInProgress2, props, instance, renderLanes2) {
          var queue = workInProgress2.updateQueue;
          hasForceUpdate = false;
          {
            currentlyProcessingQueue = queue.shared;
          }
          var firstBaseUpdate = queue.firstBaseUpdate;
          var lastBaseUpdate = queue.lastBaseUpdate;
          var pendingQueue = queue.shared.pending;
          if (pendingQueue !== null) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            if (lastBaseUpdate === null) {
              firstBaseUpdate = firstPendingUpdate;
            } else {
              lastBaseUpdate.next = firstPendingUpdate;
            }
            lastBaseUpdate = lastPendingUpdate;
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              var currentQueue = current2.updateQueue;
              var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
              if (currentLastBaseUpdate !== lastBaseUpdate) {
                if (currentLastBaseUpdate === null) {
                  currentQueue.firstBaseUpdate = firstPendingUpdate;
                } else {
                  currentLastBaseUpdate.next = firstPendingUpdate;
                }
                currentQueue.lastBaseUpdate = lastPendingUpdate;
              }
            }
          }
          if (firstBaseUpdate !== null) {
            var newState = queue.baseState;
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
              var updateLane = update.lane;
              var updateEventTime = update.eventTime;
              if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                var clone = {
                  eventTime: updateEventTime,
                  lane: updateLane,
                  tag: update.tag,
                  payload: update.payload,
                  callback: update.callback,
                  next: null
                };
                if (newLastBaseUpdate === null) {
                  newFirstBaseUpdate = newLastBaseUpdate = clone;
                  newBaseState = newState;
                } else {
                  newLastBaseUpdate = newLastBaseUpdate.next = clone;
                }
                newLanes = mergeLanes(newLanes, updateLane);
              } else {
                if (newLastBaseUpdate !== null) {
                  var _clone = {
                    eventTime: updateEventTime,
                    lane: NoLane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                }
                newState = getStateFromUpdate(workInProgress2, queue, update, newState, props, instance);
                var callback = update.callback;
                if (callback !== null) {
                  workInProgress2.flags |= Callback;
                  var effects = queue.effects;
                  if (effects === null) {
                    queue.effects = [update];
                  } else {
                    effects.push(update);
                  }
                }
              }
              update = update.next;
              if (update === null) {
                pendingQueue = queue.shared.pending;
                if (pendingQueue === null) {
                  break;
                } else {
                  var _lastPendingUpdate = pendingQueue;
                  var _firstPendingUpdate = _lastPendingUpdate.next;
                  _lastPendingUpdate.next = null;
                  update = _firstPendingUpdate;
                  queue.lastBaseUpdate = _lastPendingUpdate;
                  queue.shared.pending = null;
                }
              }
            } while (true);
            if (newLastBaseUpdate === null) {
              newBaseState = newState;
            }
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate;
            markSkippedUpdateLanes(newLanes);
            workInProgress2.lanes = newLanes;
            workInProgress2.memoizedState = newState;
          }
          {
            currentlyProcessingQueue = null;
          }
        }
        function callCallback(callback, context2) {
          if (!(typeof callback === "function")) {
            {
              throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
            }
          }
          callback.call(context2);
        }
        function resetHasForceUpdateBeforeProcessing() {
          hasForceUpdate = false;
        }
        function checkHasForceUpdateAfterProcessing() {
          return hasForceUpdate;
        }
        function commitUpdateQueue(finishedWork, finishedQueue, instance) {
          var effects = finishedQueue.effects;
          finishedQueue.effects = null;
          if (effects !== null) {
            for (var i = 0; i < effects.length; i++) {
              var effect = effects[i];
              var callback = effect.callback;
              if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
              }
            }
          }
        }
        var fakeInternalInstance = {};
        var isArray = Array.isArray;
        var emptyRefsObject = new React.Component().refs;
        var didWarnAboutStateAssignmentForComponent;
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutStateAssignmentForComponent = new Set();
          didWarnAboutUninitializedState = new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
          didWarnAboutDirectlyAssigningPropsToState = new Set();
          didWarnAboutUndefinedDerivedState = new Set();
          didWarnAboutContextTypeAndContextTypes = new Set();
          didWarnAboutInvalidateContextType = new Set();
          var didWarnOnInvalidCallback = new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentName(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
          Object.defineProperty(fakeInternalInstance, "_processChildContext", {
            enumerable: false,
            value: function() {
              {
                {
                  throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
                }
              }
            }
          });
          Object.freeze(fakeInternalInstance);
        }
        function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
          var prevState = workInProgress2.memoizedState;
          {
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                getDerivedStateFromProps(nextProps, prevState);
              } finally {
                reenableLogs();
              }
            }
          }
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var memoizedState = partialState === null || partialState === void 0 ? prevState : _assign({}, prevState, partialState);
          workInProgress2.memoizedState = memoizedState;
          if (workInProgress2.lanes === NoLanes) {
            var updateQueue = workInProgress2.updateQueue;
            updateQueue.baseState = memoizedState;
          }
        }
        var classComponentUpdater = {
          isMounted,
          enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "setState");
              }
              update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "replaceState");
              }
              update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          },
          enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "forceUpdate");
              }
              update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          }
        };
        function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
          var instance = workInProgress2.stateNode;
          if (typeof instance.shouldComponentUpdate === "function") {
            {
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally {
                  reenableLogs();
                }
              }
            }
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            {
              if (shouldUpdate === void 0) {
                error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentName(ctor) || "Component");
              }
            }
            return shouldUpdate;
          }
          if (ctor.prototype && ctor.prototype.isPureReactComponent) {
            return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
          }
          return true;
        }
        function checkClassInstance(workInProgress2, ctor, newProps) {
          var instance = workInProgress2.stateNode;
          {
            var name = getComponentName(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentName(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentName(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray(_state))) {
              error("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function adoptClassInstance(workInProgress2, instance) {
          instance.updater = classComponentUpdater;
          workInProgress2.stateNode = instance;
          set(instance, workInProgress2);
          {
            instance._reactInternalInstance = fakeInternalInstance;
          }
        }
        function constructClassInstance(workInProgress2, ctor, props) {
          var isLegacyContextConsumer = false;
          var unmaskedContext = emptyContextObject;
          var context2 = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentName(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context2 = readContext(contextType);
          } else {
            unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
            context2 = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
          }
          {
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                new ctor(props, context2);
              } finally {
                reenableLogs();
              }
            }
          }
          var instance = new ctor(props, context2);
          var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
          adoptClassInstance(workInProgress2, instance);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
              var componentName = getComponentName(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentName(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          if (isLegacyContextConsumer) {
            cacheContext(workInProgress2, unmaskedContext, context2);
          }
          return instance;
        }
        function callComponentWillMount(workInProgress2, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentName(workInProgress2.type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
          var oldState = instance.state;
          if (typeof instance.componentWillReceiveProps === "function") {
            instance.componentWillReceiveProps(newProps, nextContext);
          }
          if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
            instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
          }
          if (instance.state !== oldState) {
            {
              var componentName = getComponentName(workInProgress2.type) || "Component";
              if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
              }
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          {
            checkClassInstance(workInProgress2, ctor, newProps);
          }
          var instance = workInProgress2.stateNode;
          instance.props = newProps;
          instance.state = workInProgress2.memoizedState;
          instance.refs = emptyRefsObject;
          initializeUpdateQueue(workInProgress2);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            instance.context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentName(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
            if (workInProgress2.mode & StrictMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance);
            }
            {
              ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
            }
          }
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          instance.state = workInProgress2.memoizedState;
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(workInProgress2, instance);
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof instance.componentDidMount === "function") {
            workInProgress2.flags |= Update;
          }
        }
        function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          var oldProps = workInProgress2.memoizedProps;
          instance.props = oldProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.flags |= Update;
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
              if (typeof instance.componentWillMount === "function") {
                instance.componentWillMount();
              }
              if (typeof instance.UNSAFE_componentWillMount === "function") {
                instance.UNSAFE_componentWillMount();
              }
            }
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.flags |= Update;
            }
          } else {
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.flags |= Update;
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          cloneUpdateQueue(current2, workInProgress2);
          var unresolvedOldProps = workInProgress2.memoizedProps;
          var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
          instance.props = oldProps;
          var unresolvedNewProps = workInProgress2.pendingProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
              if (typeof instance.componentWillUpdate === "function") {
                instance.componentWillUpdate(newProps, newState, nextContext);
              }
              if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
              }
            }
            if (typeof instance.componentDidUpdate === "function") {
              workInProgress2.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              workInProgress2.flags |= Snapshot;
            }
          } else {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        var didWarnAboutMaps;
        var didWarnAboutGenerators;
        var didWarnAboutStringRefs;
        var ownerHasKeyUseWarning;
        var ownerHasFunctionTypeWarning;
        var warnForMissingKey = function(child, returnFiber) {
        };
        {
          didWarnAboutMaps = false;
          didWarnAboutGenerators = false;
          didWarnAboutStringRefs = {};
          ownerHasKeyUseWarning = {};
          ownerHasFunctionTypeWarning = {};
          warnForMissingKey = function(child, returnFiber) {
            if (child === null || typeof child !== "object") {
              return;
            }
            if (!child._store || child._store.validated || child.key != null) {
              return;
            }
            if (!(typeof child._store === "object")) {
              {
                throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            child._store.validated = true;
            var componentName = getComponentName(returnFiber.type) || "Component";
            if (ownerHasKeyUseWarning[componentName]) {
              return;
            }
            ownerHasKeyUseWarning[componentName] = true;
            error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
          };
        }
        var isArray$1 = Array.isArray;
        function coerceRef(returnFiber, current2, element) {
          var mixedRef = element.ref;
          if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            {
              if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentName(returnFiber.type) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                  {
                    error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                  }
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
            if (element._owner) {
              var owner = element._owner;
              var inst;
              if (owner) {
                var ownerFiber = owner;
                if (!(ownerFiber.tag === ClassComponent)) {
                  {
                    throw Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                  }
                }
                inst = ownerFiber.stateNode;
              }
              if (!inst) {
                {
                  throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              var stringRef = "" + mixedRef;
              if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref._stringRef === stringRef) {
                return current2.ref;
              }
              var ref = function(value) {
                var refs = inst.refs;
                if (refs === emptyRefsObject) {
                  refs = inst.refs = {};
                }
                if (value === null) {
                  delete refs[stringRef];
                } else {
                  refs[stringRef] = value;
                }
              };
              ref._stringRef = stringRef;
              return ref;
            } else {
              if (!(typeof mixedRef === "string")) {
                {
                  throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                }
              }
              if (!element._owner) {
                {
                  throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
                }
              }
            }
          }
          return mixedRef;
        }
        function throwOnInvalidObjectType(returnFiber, newChild) {
          if (returnFiber.type !== "textarea") {
            {
              {
                throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + "). If you meant to render a collection of children, use an array instead.");
              }
            }
          }
        }
        function warnOnFunctionType(returnFiber) {
          {
            var componentName = getComponentName(returnFiber.type) || "Component";
            if (ownerHasFunctionTypeWarning[componentName]) {
              return;
            }
            ownerHasFunctionTypeWarning[componentName] = true;
            error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
          }
        }
        function ChildReconciler(shouldTrackSideEffects) {
          function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) {
              return;
            }
            var last = returnFiber.lastEffect;
            if (last !== null) {
              last.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
            childToDelete.nextEffect = null;
            childToDelete.flags = Deletion;
          }
          function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) {
              return null;
            }
            var childToDelete = currentFirstChild;
            while (childToDelete !== null) {
              deleteChild(returnFiber, childToDelete);
              childToDelete = childToDelete.sibling;
            }
            return null;
          }
          function mapRemainingChildren(returnFiber, currentFirstChild) {
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while (existingChild !== null) {
              if (existingChild.key !== null) {
                existingChildren.set(existingChild.key, existingChild);
              } else {
                existingChildren.set(existingChild.index, existingChild);
              }
              existingChild = existingChild.sibling;
            }
            return existingChildren;
          }
          function useFiber(fiber, pendingProps) {
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
          }
          function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
              return lastPlacedIndex;
            }
            var current2 = newFiber.alternate;
            if (current2 !== null) {
              var oldIndex = current2.index;
              if (oldIndex < lastPlacedIndex) {
                newFiber.flags = Placement;
                return lastPlacedIndex;
              } else {
                return oldIndex;
              }
            } else {
              newFiber.flags = Placement;
              return lastPlacedIndex;
            }
          }
          function placeSingleChild(newFiber) {
            if (shouldTrackSideEffects && newFiber.alternate === null) {
              newFiber.flags = Placement;
            }
            return newFiber;
          }
          function updateTextNode(returnFiber, current2, textContent, lanes) {
            if (current2 === null || current2.tag !== HostText) {
              var created = createFiberFromText(textContent, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, textContent);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateElement(returnFiber, current2, element, lanes) {
            if (current2 !== null) {
              if (current2.elementType === element.type || isCompatibleFamilyForHotReloading(current2, element)) {
                var existing = useFiber(current2, element.props);
                existing.ref = coerceRef(returnFiber, current2, element);
                existing.return = returnFiber;
                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }
                return existing;
              }
            }
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current2, element);
            created.return = returnFiber;
            return created;
          }
          function updatePortal(returnFiber, current2, portal, lanes) {
            if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
              var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, portal.children || []);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateFragment2(returnFiber, current2, fragment, lanes, key) {
            if (current2 === null || current2.tag !== Fragment) {
              var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, fragment);
              existing.return = returnFiber;
              return existing;
            }
          }
          function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" || typeof newChild === "number") {
              var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                  _created.ref = coerceRef(returnFiber, null, newChild);
                  _created.return = returnFiber;
                  return _created;
                }
                case REACT_PORTAL_TYPE: {
                  var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                  _created2.return = returnFiber;
                  return _created2;
                }
              }
              if (isArray$1(newChild) || getIteratorFn(newChild)) {
                var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                _created3.return = returnFiber;
                return _created3;
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" || typeof newChild === "number") {
              if (key !== null) {
                return null;
              }
              return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  if (newChild.key === key) {
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      return updateFragment2(returnFiber, oldFiber, newChild.props.children, lanes, key);
                    }
                    return updateElement(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_PORTAL_TYPE: {
                  if (newChild.key === key) {
                    return updatePortal(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
              }
              if (isArray$1(newChild) || getIteratorFn(newChild)) {
                if (key !== null) {
                  return null;
                }
                return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" || typeof newChild === "number") {
              var matchedFiber = existingChildren.get(newIdx) || null;
              return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  if (newChild.type === REACT_FRAGMENT_TYPE) {
                    return updateFragment2(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
                  }
                  return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                }
                case REACT_PORTAL_TYPE: {
                  var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                }
              }
              if (isArray$1(newChild) || getIteratorFn(newChild)) {
                var _matchedFiber3 = existingChildren.get(newIdx) || null;
                return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function warnOnInvalidKey(child, knownKeys, returnFiber) {
            {
              if (typeof child !== "object" || child === null) {
                return knownKeys;
              }
              switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  warnForMissingKey(child, returnFiber);
                  var key = child.key;
                  if (typeof key !== "string") {
                    break;
                  }
                  if (knownKeys === null) {
                    knownKeys = new Set();
                    knownKeys.add(key);
                    break;
                  }
                  if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                  }
                  error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                  break;
              }
            }
            return knownKeys;
          }
          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            {
              var knownKeys = null;
              for (var i = 0; i < newChildren.length; i++) {
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                if (_newFiber === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber;
                } else {
                  previousNewFiber.sibling = _newFiber;
                }
                previousNewFiber = _newFiber;
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
              if (_newFiber2 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber2.alternate !== null) {
                    existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber2;
                } else {
                  previousNewFiber.sibling = _newFiber2;
                }
                previousNewFiber = _newFiber2;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            return resultingFirstChild;
          }
          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (!(typeof iteratorFn === "function")) {
              {
                throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            {
              if (typeof Symbol === "function" && newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) {
                  error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                }
                didWarnAboutGenerators = true;
              }
              if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) {
                  error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                }
                didWarnAboutMaps = true;
              }
              var _newChildren = iteratorFn.call(newChildrenIterable);
              if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for (; !_step.done; _step = _newChildren.next()) {
                  var child = _step.value;
                  knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
              }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (!(newChildren != null)) {
              {
                throw Error("An iterable object provided no iterator.");
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (step.done) {
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, lanes);
                if (_newFiber3 === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber3;
                } else {
                  previousNewFiber.sibling = _newFiber3;
                }
                previousNewFiber = _newFiber3;
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
              if (_newFiber4 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber4.alternate !== null) {
                    existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber4;
                } else {
                  previousNewFiber.sibling = _newFiber4;
                }
                previousNewFiber = _newFiber4;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            return resultingFirstChild;
          }
          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
              var existing = useFiber(currentFirstChild, textContent);
              existing.return = returnFiber;
              return existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                switch (child.tag) {
                  case Fragment: {
                    if (element.type === REACT_FRAGMENT_TYPE) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var existing = useFiber(child, element.props.children);
                      existing.return = returnFiber;
                      {
                        existing._debugSource = element._source;
                        existing._debugOwner = element._owner;
                      }
                      return existing;
                    }
                    break;
                  }
                  case Block:
                  default: {
                    if (child.elementType === element.type || isCompatibleFamilyForHotReloading(child, element)) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var _existing3 = useFiber(child, element.props);
                      _existing3.ref = coerceRef(returnFiber, child, element);
                      _existing3.return = returnFiber;
                      {
                        _existing3._debugSource = element._source;
                        _existing3._debugOwner = element._owner;
                      }
                      return _existing3;
                    }
                    break;
                  }
                }
                deleteRemainingChildren(returnFiber, child);
                break;
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
              var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
              created.return = returnFiber;
              return created;
            } else {
              var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
              _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
              _created4.return = returnFiber;
              return _created4;
            }
          }
          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, portal.children || []);
                  existing.return = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) {
              newChild = newChild.props.children;
            }
            var isObject = typeof newChild === "object" && newChild !== null;
            if (isObject) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_PORTAL_TYPE:
                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
              }
            }
            if (typeof newChild === "string" || typeof newChild === "number") {
              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            }
            if (isArray$1(newChild)) {
              return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
            }
            if (getIteratorFn(newChild)) {
              return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
            }
            if (isObject) {
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            if (typeof newChild === "undefined" && !isUnkeyedTopLevelFragment) {
              switch (returnFiber.tag) {
                case ClassComponent: {
                  {
                    var instance = returnFiber.stateNode;
                    if (instance.render._isMockFunction) {
                      break;
                    }
                  }
                }
                case Block:
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  {
                    {
                      throw Error((getComponentName(returnFiber.type) || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
                    }
                  }
                }
              }
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
          }
          return reconcileChildFibers2;
        }
        var reconcileChildFibers = ChildReconciler(true);
        var mountChildFibers = ChildReconciler(false);
        function cloneChildFibers(current2, workInProgress2) {
          if (!(current2 === null || workInProgress2.child === current2.child)) {
            {
              throw Error("Resuming work not yet implemented.");
            }
          }
          if (workInProgress2.child === null) {
            return;
          }
          var currentChild = workInProgress2.child;
          var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
          workInProgress2.child = newChild;
          newChild.return = workInProgress2;
          while (currentChild.sibling !== null) {
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress2;
          }
          newChild.sibling = null;
        }
        function resetChildFibers(workInProgress2, lanes) {
          var child = workInProgress2.child;
          while (child !== null) {
            resetWorkInProgress(child, lanes);
            child = child.sibling;
          }
        }
        var NO_CONTEXT = {};
        var contextStackCursor$1 = createCursor(NO_CONTEXT);
        var contextFiberStackCursor = createCursor(NO_CONTEXT);
        var rootInstanceStackCursor = createCursor(NO_CONTEXT);
        function requiredContext(c) {
          if (!(c !== NO_CONTEXT)) {
            {
              throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          return c;
        }
        function getRootHostContainer() {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          return rootInstance;
        }
        function pushHostContainer(fiber, nextRootInstance) {
          push(rootInstanceStackCursor, nextRootInstance, fiber);
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, NO_CONTEXT, fiber);
          var nextRootContext = getRootHostContext(nextRootInstance);
          pop(contextStackCursor$1, fiber);
          push(contextStackCursor$1, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
          pop(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
          var context2 = requiredContext(contextStackCursor$1.current);
          return context2;
        }
        function pushHostContext(fiber) {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          var context2 = requiredContext(contextStackCursor$1.current);
          var nextContext = getChildHostContext(context2, fiber.type);
          if (context2 === nextContext) {
            return;
          }
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, nextContext, fiber);
        }
        function popHostContext(fiber) {
          if (contextFiberStackCursor.current !== fiber) {
            return;
          }
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
        }
        var DefaultSuspenseContext = 0;
        var SubtreeSuspenseContextMask = 1;
        var InvisibleParentSuspenseContext = 1;
        var ForceSuspenseFallback = 2;
        var suspenseStackCursor = createCursor(DefaultSuspenseContext);
        function hasSuspenseContext(parentContext, flag) {
          return (parentContext & flag) !== 0;
        }
        function setDefaultShallowSuspenseContext(parentContext) {
          return parentContext & SubtreeSuspenseContextMask;
        }
        function setShallowSuspenseContext(parentContext, shallowContext) {
          return parentContext & SubtreeSuspenseContextMask | shallowContext;
        }
        function addSubtreeSuspenseContext(parentContext, subtreeContext) {
          return parentContext | subtreeContext;
        }
        function pushSuspenseContext(fiber, newContext) {
          push(suspenseStackCursor, newContext, fiber);
        }
        function popSuspenseContext(fiber) {
          pop(suspenseStackCursor, fiber);
        }
        function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
          var nextState = workInProgress2.memoizedState;
          if (nextState !== null) {
            if (nextState.dehydrated !== null) {
              return true;
            }
            return false;
          }
          var props = workInProgress2.memoizedProps;
          if (props.fallback === void 0) {
            return false;
          }
          if (props.unstable_avoidThisFallback !== true) {
            return true;
          }
          if (hasInvisibleParent) {
            return false;
          }
          return true;
        }
        function findFirstSuspended(row) {
          var node = row;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                var dehydrated = state.dehydrated;
                if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                  return node;
                }
              }
            } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== void 0) {
              var didSuspend = (node.flags & DidCapture) !== NoFlags;
              if (didSuspend) {
                return node;
              }
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === row) {
              return null;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === row) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        var NoFlags$1 = 0;
        var HasEffect = 1;
        var Layout = 2;
        var Passive$1 = 4;
        var hydrationParentFiber = null;
        var nextHydratableInstance = null;
        var isHydrating = false;
        function enterHydrationState(fiber) {
          var parentInstance = fiber.stateNode.containerInfo;
          nextHydratableInstance = getFirstHydratableChild(parentInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          return true;
        }
        function deleteHydratableInstance(returnFiber, instance) {
          {
            switch (returnFiber.tag) {
              case HostRoot:
                didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
                break;
              case HostComponent:
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
                break;
            }
          }
          var childToDelete = createFiberFromHostInstanceForDeletion();
          childToDelete.stateNode = instance;
          childToDelete.return = returnFiber;
          childToDelete.flags = Deletion;
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = childToDelete;
            returnFiber.lastEffect = childToDelete;
          } else {
            returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
          }
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
          fiber.flags = fiber.flags & ~Hydrating | Placement;
          {
            switch (returnFiber.tag) {
              case HostRoot: {
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch (fiber.tag) {
                  case HostComponent:
                    var type = fiber.type;
                    var props = fiber.pendingProps;
                    didNotFindHydratableContainerInstance(parentContainer, type);
                    break;
                  case HostText:
                    var text = fiber.pendingProps;
                    didNotFindHydratableContainerTextInstance(parentContainer, text);
                    break;
                }
                break;
              }
              case HostComponent: {
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch (fiber.tag) {
                  case HostComponent:
                    var _type = fiber.type;
                    var _props = fiber.pendingProps;
                    didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
                    break;
                  case HostText:
                    var _text = fiber.pendingProps;
                    didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                    break;
                  case SuspenseComponent:
                    didNotFindHydratableSuspenseInstance(parentType, parentProps);
                    break;
                }
                break;
              }
              default:
                return;
            }
          }
        }
        function tryHydrate(fiber, nextInstance) {
          switch (fiber.tag) {
            case HostComponent: {
              var type = fiber.type;
              var props = fiber.pendingProps;
              var instance = canHydrateInstance(nextInstance, type);
              if (instance !== null) {
                fiber.stateNode = instance;
                return true;
              }
              return false;
            }
            case HostText: {
              var text = fiber.pendingProps;
              var textInstance = canHydrateTextInstance(nextInstance, text);
              if (textInstance !== null) {
                fiber.stateNode = textInstance;
                return true;
              }
              return false;
            }
            case SuspenseComponent: {
              return false;
            }
            default:
              return false;
          }
        }
        function tryToClaimNextHydratableInstance(fiber) {
          if (!isHydrating) {
            return;
          }
          var nextInstance = nextHydratableInstance;
          if (!nextInstance) {
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
          }
          var firstAttemptedInstance = nextInstance;
          if (!tryHydrate(fiber, nextInstance)) {
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
          }
          hydrationParentFiber = fiber;
          nextHydratableInstance = getFirstHydratableChild(nextInstance);
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
          var instance = fiber.stateNode;
          var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
          fiber.updateQueue = updatePayload;
          if (updatePayload !== null) {
            return true;
          }
          return false;
        }
        function prepareToHydrateHostTextInstance(fiber) {
          var textInstance = fiber.stateNode;
          var textContent = fiber.memoizedProps;
          var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
          {
            if (shouldUpdate) {
              var returnFiber = hydrationParentFiber;
              if (returnFiber !== null) {
                switch (returnFiber.tag) {
                  case HostRoot: {
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                    break;
                  }
                  case HostComponent: {
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                    break;
                  }
                }
              }
            }
          }
          return shouldUpdate;
        }
        function skipPastDehydratedSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            {
              throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
        }
        function popToNextHostParent(fiber) {
          var parent = fiber.return;
          while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
            parent = parent.return;
          }
          hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
          if (fiber !== hydrationParentFiber) {
            return false;
          }
          if (!isHydrating) {
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
          }
          var type = fiber.type;
          if (fiber.tag !== HostComponent || type !== "head" && type !== "body" && !shouldSetTextContent(type, fiber.memoizedProps)) {
            var nextInstance = nextHydratableInstance;
            while (nextInstance) {
              deleteHydratableInstance(fiber, nextInstance);
              nextInstance = getNextHydratableSibling(nextInstance);
            }
          }
          popToNextHostParent(fiber);
          if (fiber.tag === SuspenseComponent) {
            nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
          } else {
            nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
          }
          return true;
        }
        function resetHydrationState() {
          hydrationParentFiber = null;
          nextHydratableInstance = null;
          isHydrating = false;
        }
        function getIsHydrating() {
          return isHydrating;
        }
        var workInProgressSources = [];
        var rendererSigil$1;
        {
          rendererSigil$1 = {};
        }
        function markSourceAsDirty(mutableSource) {
          workInProgressSources.push(mutableSource);
        }
        function resetWorkInProgressVersions() {
          for (var i = 0; i < workInProgressSources.length; i++) {
            var mutableSource = workInProgressSources[i];
            {
              mutableSource._workInProgressVersionPrimary = null;
            }
          }
          workInProgressSources.length = 0;
        }
        function getWorkInProgressVersion(mutableSource) {
          {
            return mutableSource._workInProgressVersionPrimary;
          }
        }
        function setWorkInProgressVersion(mutableSource, version) {
          {
            mutableSource._workInProgressVersionPrimary = version;
          }
          workInProgressSources.push(mutableSource);
        }
        function warnAboutMultipleRenderersDEV(mutableSource) {
          {
            {
              if (mutableSource._currentPrimaryRenderer == null) {
                mutableSource._currentPrimaryRenderer = rendererSigil$1;
              } else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) {
                error("Detected multiple renderers concurrently rendering the same mutable source. This is currently unsupported.");
              }
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
        var didWarnAboutMismatchedHooksForComponent;
        var didWarnAboutUseOpaqueIdentifier;
        {
          didWarnAboutUseOpaqueIdentifier = {};
          didWarnAboutMismatchedHooksForComponent = new Set();
        }
        var renderLanes = NoLanes;
        var currentlyRenderingFiber$1 = null;
        var currentHook = null;
        var workInProgressHook = null;
        var didScheduleRenderPhaseUpdate = false;
        var didScheduleRenderPhaseUpdateDuringThisPass = false;
        var RE_RENDER_LIMIT = 25;
        var currentHookNameInDev = null;
        var hookTypesDev = null;
        var hookTypesUpdateIndexDev = -1;
        var ignorePreviousDependencies = false;
        function mountHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev === null) {
              hookTypesDev = [hookName];
            } else {
              hookTypesDev.push(hookName);
            }
          }
        }
        function updateHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev !== null) {
              hookTypesUpdateIndexDev++;
              if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                warnOnHookMismatchInDev(hookName);
              }
            }
          }
        }
        function checkDepsAreArrayDev(deps) {
          {
            if (deps !== void 0 && deps !== null && !Array.isArray(deps)) {
              error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
            }
          }
        }
        function warnOnHookMismatchInDev(currentHookName) {
          {
            var componentName = getComponentName(currentlyRenderingFiber$1.type);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
              didWarnAboutMismatchedHooksForComponent.add(componentName);
              if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
                  var oldHookName = hookTypesDev[i];
                  var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                  var row = i + 1 + ". " + oldHookName;
                  while (row.length < secondColumnStart) {
                    row += " ";
                  }
                  row += newHookName + "\n";
                  table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
              }
            }
          }
        }
        function throwInvalidHookError() {
          {
            {
              throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          {
            if (ignorePreviousDependencies) {
              return false;
            }
          }
          if (prevDeps === null) {
            {
              error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function renderWithHooks(current2, workInProgress2, Component, props, secondArg, nextRenderLanes) {
          renderLanes = nextRenderLanes;
          currentlyRenderingFiber$1 = workInProgress2;
          {
            hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
            hookTypesUpdateIndexDev = -1;
            ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
          }
          workInProgress2.memoizedState = null;
          workInProgress2.updateQueue = null;
          workInProgress2.lanes = NoLanes;
          {
            if (current2 !== null && current2.memoizedState !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
            } else if (hookTypesDev !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
            } else {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
            }
          }
          var children = Component(props, secondArg);
          if (didScheduleRenderPhaseUpdateDuringThisPass) {
            var numberOfReRenders = 0;
            do {
              didScheduleRenderPhaseUpdateDuringThisPass = false;
              if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
                {
                  throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                }
              }
              numberOfReRenders += 1;
              {
                ignorePreviousDependencies = false;
              }
              currentHook = null;
              workInProgressHook = null;
              workInProgress2.updateQueue = null;
              {
                hookTypesUpdateIndexDev = -1;
              }
              ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
              children = Component(props, secondArg);
            } while (didScheduleRenderPhaseUpdateDuringThisPass);
          }
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          {
            workInProgress2._debugHookTypes = hookTypesDev;
          }
          var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            currentHookNameInDev = null;
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
          }
          didScheduleRenderPhaseUpdate = false;
          if (!!didRenderTooFewHooks) {
            {
              throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
            }
          }
          return children;
        }
        function bailoutHooks(current2, workInProgress2, lanes) {
          workInProgress2.updateQueue = current2.updateQueue;
          workInProgress2.flags &= ~(Passive | Update);
          current2.lanes = removeLanes(current2.lanes, lanes);
        }
        function resetHooksAfterThrow() {
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          if (didScheduleRenderPhaseUpdate) {
            var hook = currentlyRenderingFiber$1.memoizedState;
            while (hook !== null) {
              var queue = hook.queue;
              if (queue !== null) {
                queue.pending = null;
              }
              hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
          }
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            currentHookNameInDev = null;
            isUpdatingOpaqueValueInRenderPhase = false;
          }
          didScheduleRenderPhaseUpdateDuringThisPass = false;
        }
        function mountWorkInProgressHook() {
          var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
          };
          if (workInProgressHook === null) {
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
          } else {
            workInProgressHook = workInProgressHook.next = hook;
          }
          return workInProgressHook;
        }
        function updateWorkInProgressHook() {
          var nextCurrentHook;
          if (currentHook === null) {
            var current2 = currentlyRenderingFiber$1.alternate;
            if (current2 !== null) {
              nextCurrentHook = current2.memoizedState;
            } else {
              nextCurrentHook = null;
            }
          } else {
            nextCurrentHook = currentHook.next;
          }
          var nextWorkInProgressHook;
          if (workInProgressHook === null) {
            nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
          } else {
            nextWorkInProgressHook = workInProgressHook.next;
          }
          if (nextWorkInProgressHook !== null) {
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
          } else {
            if (!(nextCurrentHook !== null)) {
              {
                throw Error("Rendered more hooks than during the previous render.");
              }
            }
            currentHook = nextCurrentHook;
            var newHook = {
              memoizedState: currentHook.memoizedState,
              baseState: currentHook.baseState,
              baseQueue: currentHook.baseQueue,
              queue: currentHook.queue,
              next: null
            };
            if (workInProgressHook === null) {
              currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            } else {
              workInProgressHook = workInProgressHook.next = newHook;
            }
          }
          return workInProgressHook;
        }
        function createFunctionComponentUpdateQueue() {
          return {
            lastEffect: null
          };
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function mountReducer(reducer, initialArg, init) {
          var hook = mountWorkInProgressHook();
          var initialState;
          if (init !== void 0) {
            initialState = init(initialArg);
          } else {
            initialState = initialArg;
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
          };
          var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (!(queue !== null)) {
            {
              throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
            }
          }
          queue.lastRenderedReducer = reducer;
          var current2 = currentHook;
          var baseQueue = current2.baseQueue;
          var pendingQueue = queue.pending;
          if (pendingQueue !== null) {
            if (baseQueue !== null) {
              var baseFirst = baseQueue.next;
              var pendingFirst = pendingQueue.next;
              baseQueue.next = pendingFirst;
              pendingQueue.next = baseFirst;
            }
            {
              if (current2.baseQueue !== baseQueue) {
                error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
              }
            }
            current2.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
          }
          if (baseQueue !== null) {
            var first = baseQueue.next;
            var newState = current2.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
              var updateLane = update.lane;
              if (!isSubsetOfLanes(renderLanes, updateLane)) {
                var clone = {
                  lane: updateLane,
                  action: update.action,
                  eagerReducer: update.eagerReducer,
                  eagerState: update.eagerState,
                  next: null
                };
                if (newBaseQueueLast === null) {
                  newBaseQueueFirst = newBaseQueueLast = clone;
                  newBaseState = newState;
                } else {
                  newBaseQueueLast = newBaseQueueLast.next = clone;
                }
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                markSkippedUpdateLanes(updateLane);
              } else {
                if (newBaseQueueLast !== null) {
                  var _clone = {
                    lane: NoLane,
                    action: update.action,
                    eagerReducer: update.eagerReducer,
                    eagerState: update.eagerState,
                    next: null
                  };
                  newBaseQueueLast = newBaseQueueLast.next = _clone;
                }
                if (update.eagerReducer === reducer) {
                  newState = update.eagerState;
                } else {
                  var action = update.action;
                  newState = reducer(newState, action);
                }
              }
              update = update.next;
            } while (update !== null && update !== first);
            if (newBaseQueueLast === null) {
              newBaseState = newState;
            } else {
              newBaseQueueLast.next = newBaseQueueFirst;
            }
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
          }
          var dispatch = queue.dispatch;
          return [hook.memoizedState, dispatch];
        }
        function rerenderReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (!(queue !== null)) {
            {
              throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
            }
          }
          queue.lastRenderedReducer = reducer;
          var dispatch = queue.dispatch;
          var lastRenderPhaseUpdate = queue.pending;
          var newState = hook.memoizedState;
          if (lastRenderPhaseUpdate !== null) {
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
              var action = update.action;
              newState = reducer(newState, action);
              update = update.next;
            } while (update !== firstRenderPhaseUpdate);
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            if (hook.baseQueue === null) {
              hook.baseState = newState;
            }
            queue.lastRenderedState = newState;
          }
          return [newState, dispatch];
        }
        function readFromUnsubcribedMutableSource(root2, source, getSnapshot) {
          {
            warnAboutMultipleRenderersDEV(source);
          }
          var getVersion = source._getVersion;
          var version = getVersion(source._source);
          var isSafeToReadFromSource = false;
          var currentRenderVersion = getWorkInProgressVersion(source);
          if (currentRenderVersion !== null) {
            isSafeToReadFromSource = currentRenderVersion === version;
          } else {
            isSafeToReadFromSource = isSubsetOfLanes(renderLanes, root2.mutableReadLanes);
            if (isSafeToReadFromSource) {
              setWorkInProgressVersion(source, version);
            }
          }
          if (isSafeToReadFromSource) {
            var snapshot = getSnapshot(source._source);
            {
              if (typeof snapshot === "function") {
                error("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
              }
            }
            return snapshot;
          } else {
            markSourceAsDirty(source);
            {
              {
                throw Error("Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.");
              }
            }
          }
        }
        function useMutableSource(hook, source, getSnapshot, subscribe) {
          var root2 = getWorkInProgressRoot();
          if (!(root2 !== null)) {
            {
              throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
          }
          var getVersion = source._getVersion;
          var version = getVersion(source._source);
          var dispatcher = ReactCurrentDispatcher$1.current;
          var _dispatcher$useState = dispatcher.useState(function() {
            return readFromUnsubcribedMutableSource(root2, source, getSnapshot);
          }), currentSnapshot = _dispatcher$useState[0], setSnapshot = _dispatcher$useState[1];
          var snapshot = currentSnapshot;
          var stateHook = workInProgressHook;
          var memoizedState = hook.memoizedState;
          var refs = memoizedState.refs;
          var prevGetSnapshot = refs.getSnapshot;
          var prevSource = memoizedState.source;
          var prevSubscribe = memoizedState.subscribe;
          var fiber = currentlyRenderingFiber$1;
          hook.memoizedState = {
            refs,
            source,
            subscribe
          };
          dispatcher.useEffect(function() {
            refs.getSnapshot = getSnapshot;
            refs.setSnapshot = setSnapshot;
            var maybeNewVersion = getVersion(source._source);
            if (!objectIs(version, maybeNewVersion)) {
              var maybeNewSnapshot = getSnapshot(source._source);
              {
                if (typeof maybeNewSnapshot === "function") {
                  error("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
                }
              }
              if (!objectIs(snapshot, maybeNewSnapshot)) {
                setSnapshot(maybeNewSnapshot);
                var lane = requestUpdateLane(fiber);
                markRootMutableRead(root2, lane);
              }
              markRootEntangled(root2, root2.mutableReadLanes);
            }
          }, [getSnapshot, source, subscribe]);
          dispatcher.useEffect(function() {
            var handleChange = function() {
              var latestGetSnapshot = refs.getSnapshot;
              var latestSetSnapshot = refs.setSnapshot;
              try {
                latestSetSnapshot(latestGetSnapshot(source._source));
                var lane = requestUpdateLane(fiber);
                markRootMutableRead(root2, lane);
              } catch (error2) {
                latestSetSnapshot(function() {
                  throw error2;
                });
              }
            };
            var unsubscribe = subscribe(source._source, handleChange);
            {
              if (typeof unsubscribe !== "function") {
                error("Mutable source subscribe function must return an unsubscribe function.");
              }
            }
            return unsubscribe;
          }, [source, subscribe]);
          if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
            var newQueue = {
              pending: null,
              dispatch: null,
              lastRenderedReducer: basicStateReducer,
              lastRenderedState: snapshot
            };
            newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
            stateHook.queue = newQueue;
            stateHook.baseQueue = null;
            snapshot = readFromUnsubcribedMutableSource(root2, source, getSnapshot);
            stateHook.memoizedState = stateHook.baseState = snapshot;
          }
          return snapshot;
        }
        function mountMutableSource(source, getSnapshot, subscribe) {
          var hook = mountWorkInProgressHook();
          hook.memoizedState = {
            refs: {
              getSnapshot,
              setSnapshot: null
            },
            source,
            subscribe
          };
          return useMutableSource(hook, source, getSnapshot, subscribe);
        }
        function updateMutableSource(source, getSnapshot, subscribe) {
          var hook = updateWorkInProgressHook();
          return useMutableSource(hook, source, getSnapshot, subscribe);
        }
        function mountState(initialState) {
          var hook = mountWorkInProgressHook();
          if (typeof initialState === "function") {
            initialState = initialState();
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
          };
          var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateState(initialState) {
          return updateReducer(basicStateReducer);
        }
        function rerenderState(initialState) {
          return rerenderReducer(basicStateReducer);
        }
        function pushEffect(tag, create, destroy, deps) {
          var effect = {
            tag,
            create,
            destroy,
            deps,
            next: null
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
          } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) {
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var firstEffect = lastEffect.next;
              lastEffect.next = effect;
              effect.next = firstEffect;
              componentUpdateQueue.lastEffect = effect;
            }
          }
          return effect;
        }
        function mountRef(initialValue) {
          var hook = mountWorkInProgressHook();
          var ref = {
            current: initialValue
          };
          {
            Object.seal(ref);
          }
          hook.memoizedState = ref;
          return ref;
        }
        function updateRef(initialValue) {
          var hook = updateWorkInProgressHook();
          return hook.memoizedState;
        }
        function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
        }
        function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var destroy = void 0;
          if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
              var prevDeps = prevEffect.deps;
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                pushEffect(hookFlags, create, destroy, nextDeps);
                return;
              }
            }
          }
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
        }
        function mountEffect(create, deps) {
          {
            if (typeof jest !== "undefined") {
              warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
            }
          }
          return mountEffectImpl(Update | Passive, Passive$1, create, deps);
        }
        function updateEffect(create, deps) {
          {
            if (typeof jest !== "undefined") {
              warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
            }
          }
          return updateEffectImpl(Update | Passive, Passive$1, create, deps);
        }
        function mountLayoutEffect(create, deps) {
          return mountEffectImpl(Update, Layout, create, deps);
        }
        function updateLayoutEffect(create, deps) {
          return updateEffectImpl(Update, Layout, create, deps);
        }
        function imperativeHandleEffect(create, ref) {
          if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
              refCallback(null);
            };
          } else if (ref !== null && ref !== void 0) {
            var refObject = ref;
            {
              if (!refObject.hasOwnProperty("current")) {
                error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
              }
            }
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
              refObject.current = null;
            };
          }
        }
        function mountImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function updateImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function mountDebugValue(value, formatterFn) {
        }
        var updateDebugValue = mountDebugValue;
        function mountCallback(callback, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function updateCallback(callback, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function mountMemo(nextCreate, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function updateMemo(nextCreate, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function mountDeferredValue(value) {
          var _mountState = mountState(value), prevValue = _mountState[0], setValue = _mountState[1];
          mountEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
              setValue(value);
            } finally {
              ReactCurrentBatchConfig$1.transition = prevTransition;
            }
          }, [value]);
          return prevValue;
        }
        function updateDeferredValue(value) {
          var _updateState = updateState(), prevValue = _updateState[0], setValue = _updateState[1];
          updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
              setValue(value);
            } finally {
              ReactCurrentBatchConfig$1.transition = prevTransition;
            }
          }, [value]);
          return prevValue;
        }
        function rerenderDeferredValue(value) {
          var _rerenderState = rerenderState(), prevValue = _rerenderState[0], setValue = _rerenderState[1];
          updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
              setValue(value);
            } finally {
              ReactCurrentBatchConfig$1.transition = prevTransition;
            }
          }, [value]);
          return prevValue;
        }
        function startTransition(setPending, callback) {
          var priorityLevel = getCurrentPriorityLevel();
          {
            runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function() {
              setPending(true);
            });
            runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function() {
              var prevTransition = ReactCurrentBatchConfig$1.transition;
              ReactCurrentBatchConfig$1.transition = 1;
              try {
                setPending(false);
                callback();
              } finally {
                ReactCurrentBatchConfig$1.transition = prevTransition;
              }
            });
          }
        }
        function mountTransition() {
          var _mountState2 = mountState(false), isPending = _mountState2[0], setPending = _mountState2[1];
          var start = startTransition.bind(null, setPending);
          mountRef(start);
          return [start, isPending];
        }
        function updateTransition() {
          var _updateState2 = updateState(), isPending = _updateState2[0];
          var startRef = updateRef();
          var start = startRef.current;
          return [start, isPending];
        }
        function rerenderTransition() {
          var _rerenderState2 = rerenderState(), isPending = _rerenderState2[0];
          var startRef = updateRef();
          var start = startRef.current;
          return [start, isPending];
        }
        var isUpdatingOpaqueValueInRenderPhase = false;
        function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
          {
            return isUpdatingOpaqueValueInRenderPhase;
          }
        }
        function warnOnOpaqueIdentifierAccessInDEV(fiber) {
          {
            var name = getComponentName(fiber.type) || "Unknown";
            if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
              error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
              didWarnAboutUseOpaqueIdentifier[name] = true;
            }
          }
        }
        function mountOpaqueIdentifier() {
          var makeId = makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1));
          if (getIsHydrating()) {
            var didUpgrade = false;
            var fiber = currentlyRenderingFiber$1;
            var readValue = function() {
              if (!didUpgrade) {
                didUpgrade = true;
                {
                  isUpdatingOpaqueValueInRenderPhase = true;
                  setId(makeId());
                  isUpdatingOpaqueValueInRenderPhase = false;
                  warnOnOpaqueIdentifierAccessInDEV(fiber);
                }
              }
              {
                {
                  throw Error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
                }
              }
            };
            var id = makeOpaqueHydratingObject(readValue);
            var setId = mountState(id)[1];
            if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
              currentlyRenderingFiber$1.flags |= Update | Passive;
              pushEffect(HasEffect | Passive$1, function() {
                setId(makeId());
              }, void 0, null);
            }
            return id;
          } else {
            var _id = makeId();
            mountState(_id);
            return _id;
          }
        }
        function updateOpaqueIdentifier() {
          var id = updateState()[0];
          return id;
        }
        function rerenderOpaqueIdentifier() {
          var id = rerenderState()[0];
          return id;
        }
        function dispatchAction(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(fiber);
          var update = {
            lane,
            action,
            eagerReducer: null,
            eagerState: null,
            next: null
          };
          var pending = queue.pending;
          if (pending === null) {
            update.next = update;
          } else {
            update.next = pending.next;
            pending.next = update;
          }
          queue.pending = update;
          var alternate = fiber.alternate;
          if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
            didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
          } else {
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
              var lastRenderedReducer = queue.lastRenderedReducer;
              if (lastRenderedReducer !== null) {
                var prevDispatcher;
                {
                  prevDispatcher = ReactCurrentDispatcher$1.current;
                  ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                }
                try {
                  var currentState = queue.lastRenderedState;
                  var eagerState = lastRenderedReducer(currentState, action);
                  update.eagerReducer = lastRenderedReducer;
                  update.eagerState = eagerState;
                  if (objectIs(eagerState, currentState)) {
                    return;
                  }
                } catch (error2) {
                } finally {
                  {
                    ReactCurrentDispatcher$1.current = prevDispatcher;
                  }
                }
              }
            }
            {
              if (typeof jest !== "undefined") {
                warnIfNotScopedWithMatchingAct(fiber);
                warnIfNotCurrentlyActingUpdatesInDev(fiber);
              }
            }
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          }
        }
        var ContextOnlyDispatcher = {
          readContext,
          useCallback: throwInvalidHookError,
          useContext: throwInvalidHookError,
          useEffect: throwInvalidHookError,
          useImperativeHandle: throwInvalidHookError,
          useLayoutEffect: throwInvalidHookError,
          useMemo: throwInvalidHookError,
          useReducer: throwInvalidHookError,
          useRef: throwInvalidHookError,
          useState: throwInvalidHookError,
          useDebugValue: throwInvalidHookError,
          useDeferredValue: throwInvalidHookError,
          useTransition: throwInvalidHookError,
          useMutableSource: throwInvalidHookError,
          useOpaqueIdentifier: throwInvalidHookError,
          unstable_isNewReconciler: enableNewReconciler
        };
        var HooksDispatcherOnMountInDEV = null;
        var HooksDispatcherOnMountWithHookTypesInDEV = null;
        var HooksDispatcherOnUpdateInDEV = null;
        var HooksDispatcherOnRerenderInDEV = null;
        var InvalidNestedHooksDispatcherOnMountInDEV = null;
        var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
        var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
        {
          var warnInvalidContextAccess = function() {
            error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          };
          var warnInvalidHookAccess = function() {
            error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
          };
          HooksDispatcherOnMountInDEV = {
            readContext: function(context2, observedBits) {
              return readContext(context2, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountCallback(callback, deps);
            },
            useContext: function(context2, observedBits) {
              currentHookNameInDev = "useContext";
              mountHookTypesDev();
              return readContext(context2, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              mountHookTypesDev();
              return mountMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              mountHookTypesDev();
              return mountOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnMountWithHookTypesInDEV = {
            readContext: function(context2, observedBits) {
              return readContext(context2, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context2, observedBits) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context2, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return mountMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              updateHookTypesDev();
              return mountOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnUpdateInDEV = {
            readContext: function(context2, observedBits) {
              return readContext(context2, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2, observedBits) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context2, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              updateHookTypesDev();
              return updateOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnRerenderInDEV = {
            readContext: function(context2, observedBits) {
              return readContext(context2, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2, observedBits) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context2, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              updateHookTypesDev();
              return rerenderOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnMountInDEV = {
            readContext: function(context2, observedBits) {
              warnInvalidContextAccess();
              return readContext(context2, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context2, observedBits) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return readContext(context2, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnUpdateInDEV = {
            readContext: function(context2, observedBits) {
              warnInvalidContextAccess();
              return readContext(context2, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2, observedBits) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context2, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnRerenderInDEV = {
            readContext: function(context2, observedBits) {
              warnInvalidContextAccess();
              return readContext(context2, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2, observedBits) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context2, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
        }
        var now$1 = Scheduler.unstable_now;
        var commitTime = 0;
        var profilerStartTime = -1;
        function getCommitTime() {
          return commitTime;
        }
        function recordCommitTime() {
          commitTime = now$1();
        }
        function startProfilerTimer(fiber) {
          profilerStartTime = now$1();
          if (fiber.actualStartTime < 0) {
            fiber.actualStartTime = now$1();
          }
        }
        function stopProfilerTimerIfRunning(fiber) {
          profilerStartTime = -1;
        }
        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
          if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) {
              fiber.selfBaseDuration = elapsedTime;
            }
            profilerStartTime = -1;
          }
        }
        function transferActualDuration(fiber) {
          var child = fiber.child;
          while (child) {
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var didReceiveUpdate = false;
        var didWarnAboutBadClass;
        var didWarnAboutModulePatternComponent;
        var didWarnAboutContextTypeOnFunctionComponent;
        var didWarnAboutGetDerivedStateOnFunctionComponent;
        var didWarnAboutFunctionRefs;
        var didWarnAboutReassigningProps;
        var didWarnAboutRevealOrder;
        var didWarnAboutTailOptions;
        {
          didWarnAboutBadClass = {};
          didWarnAboutModulePatternComponent = {};
          didWarnAboutContextTypeOnFunctionComponent = {};
          didWarnAboutGetDerivedStateOnFunctionComponent = {};
          didWarnAboutFunctionRefs = {};
          didWarnAboutReassigningProps = false;
          didWarnAboutRevealOrder = {};
          didWarnAboutTailOptions = {};
        }
        function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
          if (current2 === null) {
            workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
          }
        }
        function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
          workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
        }
        function updateForwardRef(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
              }
            }
          }
          var render2 = Component.render;
          var ref = workInProgress2.ref;
          var nextChildren;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
              } finally {
                reenableLogs();
              }
            }
            setIsRendering(false);
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMemoComponent(current2, workInProgress2, Component, nextProps, updateLanes, renderLanes2) {
          if (current2 === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === void 0) {
              var resolvedType = type;
              {
                resolvedType = resolveFunctionForHotReloading(type);
              }
              workInProgress2.tag = SimpleMemoComponent;
              workInProgress2.type = resolvedType;
              {
                validateFunctionComponentInDev(workInProgress2, type);
              }
              return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, updateLanes, renderLanes2);
            }
            {
              var innerPropTypes = type.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(type));
              }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
            child.ref = workInProgress2.ref;
            child.return = workInProgress2;
            workInProgress2.child = child;
            return child;
          }
          {
            var _type = Component.type;
            var _innerPropTypes = _type.propTypes;
            if (_innerPropTypes) {
              checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentName(_type));
            }
          }
          var currentChild = current2.child;
          if (!includesSomeLane(updateLanes, renderLanes2)) {
            var prevProps = currentChild.memoizedProps;
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
          }
          workInProgress2.flags |= PerformedWork;
          var newChild = createWorkInProgress(currentChild, nextProps);
          newChild.ref = workInProgress2.ref;
          newChild.return = workInProgress2;
          workInProgress2.child = newChild;
          return newChild;
        }
        function updateSimpleMemoComponent(current2, workInProgress2, Component, nextProps, updateLanes, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var outerMemoType = workInProgress2.elementType;
              if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  outerMemoType = init(payload);
                } catch (x) {
                  outerMemoType = null;
                }
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, nextProps, "prop", getComponentName(outerMemoType));
                }
              }
            }
          }
          if (current2 !== null) {
            var prevProps = current2.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && workInProgress2.type === current2.type) {
              didReceiveUpdate = false;
              if (!includesSomeLane(renderLanes2, updateLanes)) {
                workInProgress2.lanes = current2.lanes;
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              }
            }
          }
          return updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2);
        }
        function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          var prevState = current2 !== null ? current2.memoizedState : null;
          if (nextProps.mode === "hidden" || nextProps.mode === "unstable-defer-without-hiding") {
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              var nextState = {
                baseLanes: NoLanes
              };
              workInProgress2.memoizedState = nextState;
              pushRenderLanes(workInProgress2, renderLanes2);
            } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
              var nextBaseLanes;
              if (prevState !== null) {
                var prevBaseLanes = prevState.baseLanes;
                nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
              } else {
                nextBaseLanes = renderLanes2;
              }
              {
                markSpawnedWork(OffscreenLane);
              }
              workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
              var _nextState = {
                baseLanes: nextBaseLanes
              };
              workInProgress2.memoizedState = _nextState;
              pushRenderLanes(workInProgress2, nextBaseLanes);
              return null;
            } else {
              var _nextState2 = {
                baseLanes: NoLanes
              };
              workInProgress2.memoizedState = _nextState2;
              var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
              pushRenderLanes(workInProgress2, subtreeRenderLanes2);
            }
          } else {
            var _subtreeRenderLanes;
            if (prevState !== null) {
              _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
              workInProgress2.memoizedState = null;
            } else {
              _subtreeRenderLanes = renderLanes2;
            }
            pushRenderLanes(workInProgress2, _subtreeRenderLanes);
          }
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        var updateLegacyHiddenComponent = updateOffscreenComponent;
        function updateFragment(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMode(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateProfiler(current2, workInProgress2, renderLanes2) {
          {
            workInProgress2.flags |= Update;
            var stateNode = workInProgress2.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
          }
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markRef(current2, workInProgress2) {
          var ref = workInProgress2.ref;
          if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
            workInProgress2.flags |= Ref;
          }
        }
        function updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
              }
            }
          }
          var context2;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
            context2 = getMaskedContext(workInProgress2, unmaskedContext);
          }
          var nextChildren;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context2, renderLanes2);
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context2, renderLanes2);
              } finally {
                reenableLogs();
              }
            }
            setIsRendering(false);
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateClassComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
              }
            }
          }
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var instance = workInProgress2.stateNode;
          var shouldUpdate;
          if (instance === null) {
            if (current2 !== null) {
              current2.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
            constructClassInstance(workInProgress2, Component, nextProps);
            mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            shouldUpdate = true;
          } else if (current2 === null) {
            shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          } else {
            shouldUpdate = updateClassInstance(current2, workInProgress2, Component, nextProps, renderLanes2);
          }
          var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2);
          {
            var inst = workInProgress2.stateNode;
            if (shouldUpdate && inst.props !== nextProps) {
              if (!didWarnAboutReassigningProps) {
                error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentName(workInProgress2.type) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          return nextUnitOfWork;
        }
        function finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2) {
          markRef(current2, workInProgress2);
          var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (!shouldUpdate && !didCaptureError) {
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component, false);
            }
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          var instance = workInProgress2.stateNode;
          ReactCurrentOwner$1.current = workInProgress2;
          var nextChildren;
          if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
            nextChildren = null;
            {
              stopProfilerTimerIfRunning();
            }
          } else {
            {
              setIsRendering(true);
              nextChildren = instance.render();
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  instance.render();
                } finally {
                  reenableLogs();
                }
              }
              setIsRendering(false);
            }
          }
          workInProgress2.flags |= PerformedWork;
          if (current2 !== null && didCaptureError) {
            forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          workInProgress2.memoizedState = instance.state;
          if (hasContext) {
            invalidateContextProvider(workInProgress2, Component, true);
          }
          return workInProgress2.child;
        }
        function pushHostRootContext(workInProgress2) {
          var root2 = workInProgress2.stateNode;
          if (root2.pendingContext) {
            pushTopLevelContextObject(workInProgress2, root2.pendingContext, root2.pendingContext !== root2.context);
          } else if (root2.context) {
            pushTopLevelContextObject(workInProgress2, root2.context, false);
          }
          pushHostContainer(workInProgress2, root2.containerInfo);
        }
        function updateHostRoot(current2, workInProgress2, renderLanes2) {
          pushHostRootContext(workInProgress2);
          var updateQueue = workInProgress2.updateQueue;
          if (!(current2 !== null && updateQueue !== null)) {
            {
              throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          var nextProps = workInProgress2.pendingProps;
          var prevState = workInProgress2.memoizedState;
          var prevChildren = prevState !== null ? prevState.element : null;
          cloneUpdateQueue(current2, workInProgress2);
          processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
          var nextState = workInProgress2.memoizedState;
          var nextChildren = nextState.element;
          if (nextChildren === prevChildren) {
            resetHydrationState();
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          var root2 = workInProgress2.stateNode;
          if (root2.hydrate && enterHydrationState(workInProgress2)) {
            {
              var mutableSourceEagerHydrationData = root2.mutableSourceEagerHydrationData;
              if (mutableSourceEagerHydrationData != null) {
                for (var i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {
                  var mutableSource = mutableSourceEagerHydrationData[i];
                  var version = mutableSourceEagerHydrationData[i + 1];
                  setWorkInProgressVersion(mutableSource, version);
                }
              }
            }
            var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
            workInProgress2.child = child;
            var node = child;
            while (node) {
              node.flags = node.flags & ~Placement | Hydrating;
              node = node.sibling;
            }
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            resetHydrationState();
          }
          return workInProgress2.child;
        }
        function updateHostComponent(current2, workInProgress2, renderLanes2) {
          pushHostContext(workInProgress2);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          var type = workInProgress2.type;
          var nextProps = workInProgress2.pendingProps;
          var prevProps = current2 !== null ? current2.memoizedProps : null;
          var nextChildren = nextProps.children;
          var isDirectTextChild = shouldSetTextContent(type, nextProps);
          if (isDirectTextChild) {
            nextChildren = null;
          } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
            workInProgress2.flags |= ContentReset;
          }
          markRef(current2, workInProgress2);
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostText(current2, workInProgress2) {
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          return null;
        }
        function mountLazyComponent(_current, workInProgress2, elementType, updateLanes, renderLanes2) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress2.alternate = null;
            workInProgress2.flags |= Placement;
          }
          var props = workInProgress2.pendingProps;
          var lazyComponent = elementType;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;
          var Component = init(payload);
          workInProgress2.type = Component;
          var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
          var resolvedProps = resolveDefaultProps(Component, props);
          var child;
          switch (resolvedTag) {
            case FunctionComponent: {
              {
                validateFunctionComponentInDev(workInProgress2, Component);
                workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
              }
              child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ClassComponent: {
              {
                workInProgress2.type = Component = resolveClassForHotReloading(Component);
              }
              child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ForwardRef: {
              {
                workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
              }
              child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case MemoComponent: {
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = Component.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentName(Component));
                  }
                }
              }
              child = updateMemoComponent(null, workInProgress2, Component, resolveDefaultProps(Component.type, resolvedProps), updateLanes, renderLanes2);
              return child;
            }
          }
          var hint = "";
          {
            if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
              hint = " Did you wrap a component in React.lazy() more than once?";
            }
          }
          {
            {
              throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
            }
          }
        }
        function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderLanes2) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress2.alternate = null;
            workInProgress2.flags |= Placement;
          }
          workInProgress2.tag = ClassComponent;
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          constructClassInstance(workInProgress2, Component, nextProps);
          mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
        }
        function mountIndeterminateComponent(_current, workInProgress2, Component, renderLanes2) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress2.alternate = null;
            workInProgress2.flags |= Placement;
          }
          var props = workInProgress2.pendingProps;
          var context2;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
            context2 = getMaskedContext(workInProgress2, unmaskedContext);
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var value;
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentName(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
            if (workInProgress2.mode & StrictMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
            }
            setIsRendering(true);
            ReactCurrentOwner$1.current = workInProgress2;
            value = renderWithHooks(null, workInProgress2, Component, props, context2, renderLanes2);
            setIsRendering(false);
          }
          workInProgress2.flags |= PerformedWork;
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentName(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
            {
              var _componentName2 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            workInProgress2.tag = ClassComponent;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            var hasContext = false;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
            initializeUpdateQueue(workInProgress2);
            var getDerivedStateFromProps = Component.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, Component, getDerivedStateFromProps, props);
            }
            adoptClassInstance(workInProgress2, value);
            mountClassInstance(workInProgress2, Component, props, renderLanes2);
            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
          } else {
            workInProgress2.tag = FunctionComponent;
            {
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  value = renderWithHooks(null, workInProgress2, Component, props, context2, renderLanes2);
                } finally {
                  reenableLogs();
                }
              }
            }
            reconcileChildren(null, workInProgress2, value, renderLanes2);
            {
              validateFunctionComponentInDev(workInProgress2, Component);
            }
            return workInProgress2.child;
          }
        }
        function validateFunctionComponentInDev(workInProgress2, Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (workInProgress2.ref !== null) {
              var info = "";
              var ownerName = getCurrentFiberOwnerNameInDevOrNull();
              if (ownerName) {
                info += "\n\nCheck the render method of `" + ownerName + "`.";
              }
              var warningKey = ownerName || workInProgress2._debugID || "";
              var debugSource = workInProgress2._debugSource;
              if (debugSource) {
                warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
              }
              if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        var SUSPENDED_MARKER = {
          dehydrated: null,
          retryLane: NoLane
        };
        function mountSuspenseOffscreenState(renderLanes2) {
          return {
            baseLanes: renderLanes2
          };
        }
        function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
          return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2)
          };
        }
        function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            var suspenseState = current2.memoizedState;
            if (suspenseState === null) {
              return false;
            }
          }
          return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        }
        function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
          return removeLanes(current2.childLanes, renderLanes2);
        }
        function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          {
            if (shouldSuspend(workInProgress2)) {
              workInProgress2.flags |= DidCapture;
            }
          }
          var suspenseContext = suspenseStackCursor.current;
          var showFallback = false;
          var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
            showFallback = true;
            workInProgress2.flags &= ~DidCapture;
          } else {
            if (current2 === null || current2.memoizedState !== null) {
              if (nextProps.fallback !== void 0 && nextProps.unstable_avoidThisFallback !== true) {
                suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
              }
            }
          }
          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          pushSuspenseContext(workInProgress2, suspenseContext);
          if (current2 === null) {
            if (nextProps.fallback !== void 0) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
              var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var primaryChildFragment = workInProgress2.child;
              primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackFragment;
            } else if (typeof nextProps.unstable_expectedLoadTime === "number") {
              var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var _primaryChildFragment = workInProgress2.child;
              _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              workInProgress2.lanes = SomeRetryLane;
              {
                markSpawnedWork(SomeRetryLane);
              }
              return _fallbackFragment;
            } else {
              return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren, renderLanes2);
            }
          } else {
            var prevState = current2.memoizedState;
            if (prevState !== null) {
              if (showFallback) {
                var _nextFallbackChildren2 = nextProps.fallback;
                var _nextPrimaryChildren2 = nextProps.children;
                var _fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes2);
                var _primaryChildFragment3 = workInProgress2.child;
                var prevOffscreenState = current2.child.memoizedState;
                _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
                _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return _fallbackChildFragment;
              } else {
                var _nextPrimaryChildren3 = nextProps.children;
                var _primaryChildFragment4 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren3, renderLanes2);
                workInProgress2.memoizedState = null;
                return _primaryChildFragment4;
              }
            } else {
              if (showFallback) {
                var _nextFallbackChildren3 = nextProps.fallback;
                var _nextPrimaryChildren4 = nextProps.children;
                var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes2);
                var _primaryChildFragment5 = workInProgress2.child;
                var _prevOffscreenState = current2.child.memoizedState;
                _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes2);
                _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return _fallbackChildFragment2;
              } else {
                var _nextPrimaryChildren5 = nextProps.children;
                var _primaryChildFragment6 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren5, renderLanes2);
                workInProgress2.memoizedState = null;
                return _primaryChildFragment6;
              }
            }
          }
        }
        function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes2, null);
          primaryChildFragment.return = workInProgress2;
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var progressedPrimaryFragment = workInProgress2.child;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          var fallbackChildFragment;
          if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = 0;
              primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          } else {
            primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          }
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function createWorkInProgressOffscreenFiber(current2, offscreenProps) {
          return createWorkInProgress(current2, offscreenProps);
        }
        function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
          });
          if ((workInProgress2.mode & BlockingMode) === NoMode) {
            primaryChildFragment.lanes = renderLanes2;
          }
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = null;
          if (currentFallbackChildFragment !== null) {
            currentFallbackChildFragment.nextEffect = null;
            currentFallbackChildFragment.flags = Deletion;
            workInProgress2.firstEffect = workInProgress2.lastEffect = currentFallbackChildFragment;
          }
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          if ((mode & BlockingMode) === NoMode && workInProgress2.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress2.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
              primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            }
            var progressedLastEffect = primaryChildFragment.lastEffect;
            if (progressedLastEffect !== null) {
              workInProgress2.firstEffect = primaryChildFragment.firstEffect;
              workInProgress2.lastEffect = progressedLastEffect;
              progressedLastEffect.nextEffect = null;
            } else {
              workInProgress2.firstEffect = workInProgress2.lastEffect = null;
            }
          } else {
            primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
          }
          var fallbackChildFragment;
          if (currentFallbackChildFragment !== null) {
            fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
          } else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            fallbackChildFragment.flags |= Placement;
          }
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function scheduleWorkOnFiber(fiber, renderLanes2) {
          fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
          }
          scheduleWorkOnParentPath(fiber.return, renderLanes2);
        }
        function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
          var node = firstChild;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                scheduleWorkOnFiber(node, renderLanes2);
              }
            } else if (node.tag === SuspenseListComponent) {
              scheduleWorkOnFiber(node, renderLanes2);
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === workInProgress2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === workInProgress2) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function findLastContentRow(firstChild) {
          var row = firstChild;
          var lastContentRow = null;
          while (row !== null) {
            var currentRow = row.alternate;
            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              lastContentRow = row;
            }
            row = row.sibling;
          }
          return lastContentRow;
        }
        function validateRevealOrder(revealOrder) {
          {
            if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
              didWarnAboutRevealOrder[revealOrder] = true;
              if (typeof revealOrder === "string") {
                switch (revealOrder.toLowerCase()) {
                  case "together":
                  case "forwards":
                  case "backwards": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  case "forward":
                  case "backward": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
                }
              } else {
                error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
              }
            }
          }
        }
        function validateTailOptions(tailMode, revealOrder) {
          {
            if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
              if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
              } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
              }
            }
          }
        }
        function validateSuspenseListNestedChild(childSlot, index2) {
          {
            var isArray2 = Array.isArray(childSlot);
            var isIterable = !isArray2 && typeof getIteratorFn(childSlot) === "function";
            if (isArray2 || isIterable) {
              var type = isArray2 ? "array" : "iterable";
              error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index2, type);
              return false;
            }
          }
          return true;
        }
        function validateSuspenseListChildren(children, revealOrder) {
          {
            if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
              if (Array.isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                  if (!validateSuspenseListNestedChild(children[i], i)) {
                    return;
                  }
                }
              } else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                  var childrenIterator = iteratorFn.call(children);
                  if (childrenIterator) {
                    var step = childrenIterator.next();
                    var _i2 = 0;
                    for (; !step.done; step = childrenIterator.next()) {
                      if (!validateSuspenseListNestedChild(step.value, _i2)) {
                        return;
                      }
                      _i2++;
                    }
                  }
                } else {
                  error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                }
              }
            }
          }
        }
        function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
          var renderState = workInProgress2.memoizedState;
          if (renderState === null) {
            workInProgress2.memoizedState = {
              isBackwards,
              rendering: null,
              renderingStartTime: 0,
              last: lastContentRow,
              tail,
              tailMode,
              lastEffect: lastEffectBeforeRendering
            };
          } else {
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
            renderState.lastEffect = lastEffectBeforeRendering;
          }
        }
        function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var revealOrder = nextProps.revealOrder;
          var tailMode = nextProps.tail;
          var newChildren = nextProps.children;
          validateRevealOrder(revealOrder);
          validateTailOptions(tailMode, revealOrder);
          validateSuspenseListChildren(newChildren, revealOrder);
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          var suspenseContext = suspenseStackCursor.current;
          var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
          if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress2.flags |= DidCapture;
          } else {
            var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) {
              propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }
          pushSuspenseContext(workInProgress2, suspenseContext);
          if ((workInProgress2.mode & BlockingMode) === NoMode) {
            workInProgress2.memoizedState = null;
          } else {
            switch (revealOrder) {
              case "forwards": {
                var lastContentRow = findLastContentRow(workInProgress2.child);
                var tail;
                if (lastContentRow === null) {
                  tail = workInProgress2.child;
                  workInProgress2.child = null;
                } else {
                  tail = lastContentRow.sibling;
                  lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress2, false, tail, lastContentRow, tailMode, workInProgress2.lastEffect);
                break;
              }
              case "backwards": {
                var _tail = null;
                var row = workInProgress2.child;
                workInProgress2.child = null;
                while (row !== null) {
                  var currentRow = row.alternate;
                  if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                    workInProgress2.child = row;
                    break;
                  }
                  var nextRow = row.sibling;
                  row.sibling = _tail;
                  _tail = row;
                  row = nextRow;
                }
                initSuspenseListRenderState(workInProgress2, true, _tail, null, tailMode, workInProgress2.lastEffect);
                break;
              }
              case "together": {
                initSuspenseListRenderState(workInProgress2, false, null, null, void 0, workInProgress2.lastEffect);
                break;
              }
              default: {
                workInProgress2.memoizedState = null;
              }
            }
          }
          return workInProgress2.child;
        }
        function updatePortalComponent(current2, workInProgress2, renderLanes2) {
          pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
          var nextChildren = workInProgress2.pendingProps;
          if (current2 === null) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
        function updateContextProvider(current2, workInProgress2, renderLanes2) {
          var providerType = workInProgress2.type;
          var context2 = providerType._context;
          var newProps = workInProgress2.pendingProps;
          var oldProps = workInProgress2.memoizedProps;
          var newValue = newProps.value;
          {
            if (!("value" in newProps)) {
              if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
              }
            }
            var providerPropTypes = workInProgress2.type.propTypes;
            if (providerPropTypes) {
              checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
            }
          }
          pushProvider(workInProgress2, newValue);
          if (oldProps !== null) {
            var oldValue = oldProps.value;
            var changedBits = calculateChangedBits(context2, newValue, oldValue);
            if (changedBits === 0) {
              if (oldProps.children === newProps.children && !hasContextChanged()) {
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              }
            } else {
              propagateContextChange(workInProgress2, context2, changedBits, renderLanes2);
            }
          }
          var newChildren = newProps.children;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingContextAsConsumer = false;
        function updateContextConsumer(current2, workInProgress2, renderLanes2) {
          var context2 = workInProgress2.type;
          {
            if (context2._context === void 0) {
              if (context2 !== context2.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context2 = context2._context;
            }
          }
          var newProps = workInProgress2.pendingProps;
          var render2 = newProps.children;
          {
            if (typeof render2 !== "function") {
              error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var newValue = readContext(context2, newProps.unstable_observedBits);
          var newChildren;
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            newChildren = render2(newValue);
            setIsRendering(false);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markWorkInProgressReceivedUpdate() {
          didReceiveUpdate = true;
        }
        function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            workInProgress2.dependencies = current2.dependencies;
          }
          {
            stopProfilerTimerIfRunning();
          }
          markSkippedUpdateLanes(workInProgress2.lanes);
          if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
            return null;
          } else {
            cloneChildFibers(current2, workInProgress2);
            return workInProgress2.child;
          }
        }
        function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
          {
            var returnFiber = oldWorkInProgress.return;
            if (returnFiber === null) {
              throw new Error("Cannot swap the root fiber.");
            }
            current2.alternate = null;
            oldWorkInProgress.alternate = null;
            newWorkInProgress.index = oldWorkInProgress.index;
            newWorkInProgress.sibling = oldWorkInProgress.sibling;
            newWorkInProgress.return = oldWorkInProgress.return;
            newWorkInProgress.ref = oldWorkInProgress.ref;
            if (oldWorkInProgress === returnFiber.child) {
              returnFiber.child = newWorkInProgress;
            } else {
              var prevSibling = returnFiber.child;
              if (prevSibling === null) {
                throw new Error("Expected parent to have a child.");
              }
              while (prevSibling.sibling !== oldWorkInProgress) {
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) {
                  throw new Error("Expected to find the previous sibling.");
                }
              }
              prevSibling.sibling = newWorkInProgress;
            }
            var last = returnFiber.lastEffect;
            if (last !== null) {
              last.nextEffect = current2;
              returnFiber.lastEffect = current2;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = current2;
            }
            current2.nextEffect = null;
            current2.flags = Deletion;
            newWorkInProgress.flags |= Placement;
            return newWorkInProgress;
          }
        }
        function beginWork(current2, workInProgress2, renderLanes2) {
          var updateLanes = workInProgress2.lanes;
          {
            if (workInProgress2._debugNeedsRemount && current2 !== null) {
              return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
            }
          }
          if (current2 !== null) {
            var oldProps = current2.memoizedProps;
            var newProps = workInProgress2.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress2.type !== current2.type) {
              didReceiveUpdate = true;
            } else if (!includesSomeLane(renderLanes2, updateLanes)) {
              didReceiveUpdate = false;
              switch (workInProgress2.tag) {
                case HostRoot:
                  pushHostRootContext(workInProgress2);
                  resetHydrationState();
                  break;
                case HostComponent:
                  pushHostContext(workInProgress2);
                  break;
                case ClassComponent: {
                  var Component = workInProgress2.type;
                  if (isContextProvider(Component)) {
                    pushContextProvider(workInProgress2);
                  }
                  break;
                }
                case HostPortal:
                  pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
                  break;
                case ContextProvider: {
                  var newValue = workInProgress2.memoizedProps.value;
                  pushProvider(workInProgress2, newValue);
                  break;
                }
                case Profiler:
                  {
                    var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                    if (hasChildWork) {
                      workInProgress2.flags |= Update;
                    }
                    var stateNode = workInProgress2.stateNode;
                    stateNode.effectDuration = 0;
                    stateNode.passiveEffectDuration = 0;
                  }
                  break;
                case SuspenseComponent: {
                  var state = workInProgress2.memoizedState;
                  if (state !== null) {
                    var primaryChildFragment = workInProgress2.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                      return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                    } else {
                      pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                      var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                      if (child !== null) {
                        return child.sibling;
                      } else {
                        return null;
                      }
                    }
                  } else {
                    pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  }
                  break;
                }
                case SuspenseListComponent: {
                  var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
                  var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                  if (didSuspendBefore) {
                    if (_hasChildWork) {
                      return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                    }
                    workInProgress2.flags |= DidCapture;
                  }
                  var renderState = workInProgress2.memoizedState;
                  if (renderState !== null) {
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                  }
                  pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
                  if (_hasChildWork) {
                    break;
                  } else {
                    return null;
                  }
                }
                case OffscreenComponent:
                case LegacyHiddenComponent: {
                  workInProgress2.lanes = NoLanes;
                  return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
                }
              }
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            } else {
              if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              } else {
                didReceiveUpdate = false;
              }
            }
          } else {
            didReceiveUpdate = false;
          }
          workInProgress2.lanes = NoLanes;
          switch (workInProgress2.tag) {
            case IndeterminateComponent: {
              return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
            }
            case LazyComponent: {
              var elementType = workInProgress2.elementType;
              return mountLazyComponent(current2, workInProgress2, elementType, updateLanes, renderLanes2);
            }
            case FunctionComponent: {
              var _Component = workInProgress2.type;
              var unresolvedProps = workInProgress2.pendingProps;
              var resolvedProps = workInProgress2.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
              return updateFunctionComponent(current2, workInProgress2, _Component, resolvedProps, renderLanes2);
            }
            case ClassComponent: {
              var _Component2 = workInProgress2.type;
              var _unresolvedProps = workInProgress2.pendingProps;
              var _resolvedProps = workInProgress2.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
              return updateClassComponent(current2, workInProgress2, _Component2, _resolvedProps, renderLanes2);
            }
            case HostRoot:
              return updateHostRoot(current2, workInProgress2, renderLanes2);
            case HostComponent:
              return updateHostComponent(current2, workInProgress2, renderLanes2);
            case HostText:
              return updateHostText(current2, workInProgress2);
            case SuspenseComponent:
              return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
            case HostPortal:
              return updatePortalComponent(current2, workInProgress2, renderLanes2);
            case ForwardRef: {
              var type = workInProgress2.type;
              var _unresolvedProps2 = workInProgress2.pendingProps;
              var _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
              return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
            }
            case Fragment:
              return updateFragment(current2, workInProgress2, renderLanes2);
            case Mode:
              return updateMode(current2, workInProgress2, renderLanes2);
            case Profiler:
              return updateProfiler(current2, workInProgress2, renderLanes2);
            case ContextProvider:
              return updateContextProvider(current2, workInProgress2, renderLanes2);
            case ContextConsumer:
              return updateContextConsumer(current2, workInProgress2, renderLanes2);
            case MemoComponent: {
              var _type2 = workInProgress2.type;
              var _unresolvedProps3 = workInProgress2.pendingProps;
              var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = _type2.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentName(_type2));
                  }
                }
              }
              _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
              return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, updateLanes, renderLanes2);
            }
            case SimpleMemoComponent: {
              return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, updateLanes, renderLanes2);
            }
            case IncompleteClassComponent: {
              var _Component3 = workInProgress2.type;
              var _unresolvedProps4 = workInProgress2.pendingProps;
              var _resolvedProps4 = workInProgress2.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
              return mountIncompleteClassComponent(current2, workInProgress2, _Component3, _resolvedProps4, renderLanes2);
            }
            case SuspenseListComponent: {
              return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
            }
            case FundamentalComponent: {
              break;
            }
            case ScopeComponent: {
              break;
            }
            case Block: {
              break;
            }
            case OffscreenComponent: {
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
            case LegacyHiddenComponent: {
              return updateLegacyHiddenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          {
            {
              throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function markUpdate(workInProgress2) {
          workInProgress2.flags |= Update;
        }
        function markRef$1(workInProgress2) {
          workInProgress2.flags |= Ref;
        }
        var appendAllChildren;
        var updateHostContainer;
        var updateHostComponent$1;
        var updateHostText$1;
        {
          appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
            var node = workInProgress2.child;
            while (node !== null) {
              if (node.tag === HostComponent || node.tag === HostText) {
                appendInitialChild(parent, node.stateNode);
              } else if (node.tag === HostPortal)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          };
          updateHostContainer = function(workInProgress2) {
          };
          updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
            var oldProps = current2.memoizedProps;
            if (oldProps === newProps) {
              return;
            }
            var instance = workInProgress2.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
            workInProgress2.updateQueue = updatePayload;
            if (updatePayload) {
              markUpdate(workInProgress2);
            }
          };
          updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
            if (oldText !== newText) {
              markUpdate(workInProgress2);
            }
          };
        }
        function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
          if (getIsHydrating()) {
            return;
          }
          switch (renderState.tailMode) {
            case "hidden": {
              var tailNode = renderState.tail;
              var lastTailNode = null;
              while (tailNode !== null) {
                if (tailNode.alternate !== null) {
                  lastTailNode = tailNode;
                }
                tailNode = tailNode.sibling;
              }
              if (lastTailNode === null) {
                renderState.tail = null;
              } else {
                lastTailNode.sibling = null;
              }
              break;
            }
            case "collapsed": {
              var _tailNode = renderState.tail;
              var _lastTailNode = null;
              while (_tailNode !== null) {
                if (_tailNode.alternate !== null) {
                  _lastTailNode = _tailNode;
                }
                _tailNode = _tailNode.sibling;
              }
              if (_lastTailNode === null) {
                if (!hasRenderedATailFallback && renderState.tail !== null) {
                  renderState.tail.sibling = null;
                } else {
                  renderState.tail = null;
                }
              } else {
                _lastTailNode.sibling = null;
              }
              break;
            }
          }
        }
        function completeWork(current2, workInProgress2, renderLanes2) {
          var newProps = workInProgress2.pendingProps;
          switch (workInProgress2.tag) {
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
              return null;
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              return null;
            }
            case HostRoot: {
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              var fiberRoot = workInProgress2.stateNode;
              if (fiberRoot.pendingContext) {
                fiberRoot.context = fiberRoot.pendingContext;
                fiberRoot.pendingContext = null;
              }
              if (current2 === null || current2.child === null) {
                var wasHydrated = popHydrationState(workInProgress2);
                if (wasHydrated) {
                  markUpdate(workInProgress2);
                } else if (!fiberRoot.hydrate) {
                  workInProgress2.flags |= Snapshot;
                }
              }
              updateHostContainer(workInProgress2);
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              var rootContainerInstance = getRootHostContainer();
              var type = workInProgress2.type;
              if (current2 !== null && workInProgress2.stateNode != null) {
                updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance);
                if (current2.ref !== workInProgress2.ref) {
                  markRef$1(workInProgress2);
                }
              } else {
                if (!newProps) {
                  if (!(workInProgress2.stateNode !== null)) {
                    {
                      throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                  return null;
                }
                var currentHostContext = getHostContext();
                var _wasHydrated = popHydrationState(workInProgress2);
                if (_wasHydrated) {
                  if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                  appendAllChildren(instance, workInProgress2, false, false);
                  workInProgress2.stateNode = instance;
                  if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
                    markUpdate(workInProgress2);
                  }
                }
                if (workInProgress2.ref !== null) {
                  markRef$1(workInProgress2);
                }
              }
              return null;
            }
            case HostText: {
              var newText = newProps;
              if (current2 && workInProgress2.stateNode != null) {
                var oldText = current2.memoizedProps;
                updateHostText$1(current2, workInProgress2, oldText, newText);
              } else {
                if (typeof newText !== "string") {
                  if (!(workInProgress2.stateNode !== null)) {
                    {
                      throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                }
                var _rootContainerInstance = getRootHostContainer();
                var _currentHostContext = getHostContext();
                var _wasHydrated2 = popHydrationState(workInProgress2);
                if (_wasHydrated2) {
                  if (prepareToHydrateHostTextInstance(workInProgress2)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                }
              }
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var nextState = workInProgress2.memoizedState;
              if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                workInProgress2.lanes = renderLanes2;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              var nextDidTimeout = nextState !== null;
              var prevDidTimeout = false;
              if (current2 === null) {
                if (workInProgress2.memoizedProps.fallback !== void 0) {
                  popHydrationState(workInProgress2);
                }
              } else {
                var prevState = current2.memoizedState;
                prevDidTimeout = prevState !== null;
              }
              if (nextDidTimeout && !prevDidTimeout) {
                if ((workInProgress2.mode & BlockingMode) !== NoMode) {
                  var hasInvisibleChildContext = current2 === null && workInProgress2.memoizedProps.unstable_avoidThisFallback !== true;
                  if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                    renderDidSuspend();
                  } else {
                    renderDidSuspendDelayIfPossible();
                  }
                }
              }
              {
                if (nextDidTimeout || prevDidTimeout) {
                  workInProgress2.flags |= Update;
                }
              }
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              updateHostContainer(workInProgress2);
              if (current2 === null) {
                preparePortalMount(workInProgress2.stateNode.containerInfo);
              }
              return null;
            case ContextProvider:
              popProvider(workInProgress2);
              return null;
            case IncompleteClassComponent: {
              var _Component = workInProgress2.type;
              if (isContextProvider(_Component)) {
                popContext(workInProgress2);
              }
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              var renderState = workInProgress2.memoizedState;
              if (renderState === null) {
                return null;
              }
              var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
              var renderedTail = renderState.rendering;
              if (renderedTail === null) {
                if (!didSuspendAlready) {
                  var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                  if (!cannotBeSuspended) {
                    var row = workInProgress2.child;
                    while (row !== null) {
                      var suspended = findFirstSuspended(row);
                      if (suspended !== null) {
                        didSuspendAlready = true;
                        workInProgress2.flags |= DidCapture;
                        cutOffTailIfNeeded(renderState, false);
                        var newThennables = suspended.updateQueue;
                        if (newThennables !== null) {
                          workInProgress2.updateQueue = newThennables;
                          workInProgress2.flags |= Update;
                        }
                        if (renderState.lastEffect === null) {
                          workInProgress2.firstEffect = null;
                        }
                        workInProgress2.lastEffect = renderState.lastEffect;
                        resetChildFibers(workInProgress2, renderLanes2);
                        pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                        return workInProgress2.child;
                      }
                      row = row.sibling;
                    }
                  }
                  if (renderState.tail !== null && now() > getRenderTargetTime()) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                    {
                      markSpawnedWork(SomeRetryLane);
                    }
                  }
                } else {
                  cutOffTailIfNeeded(renderState, false);
                }
              } else {
                if (!didSuspendAlready) {
                  var _suspended = findFirstSuspended(renderedTail);
                  if (_suspended !== null) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    var _newThennables = _suspended.updateQueue;
                    if (_newThennables !== null) {
                      workInProgress2.updateQueue = _newThennables;
                      workInProgress2.flags |= Update;
                    }
                    cutOffTailIfNeeded(renderState, true);
                    if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                      var lastEffect = workInProgress2.lastEffect = renderState.lastEffect;
                      if (lastEffect !== null) {
                        lastEffect.nextEffect = null;
                      }
                      return null;
                    }
                  } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                    {
                      markSpawnedWork(SomeRetryLane);
                    }
                  }
                }
                if (renderState.isBackwards) {
                  renderedTail.sibling = workInProgress2.child;
                  workInProgress2.child = renderedTail;
                } else {
                  var previousSibling = renderState.last;
                  if (previousSibling !== null) {
                    previousSibling.sibling = renderedTail;
                  } else {
                    workInProgress2.child = renderedTail;
                  }
                  renderState.last = renderedTail;
                }
              }
              if (renderState.tail !== null) {
                var next = renderState.tail;
                renderState.rendering = next;
                renderState.tail = next.sibling;
                renderState.lastEffect = workInProgress2.lastEffect;
                renderState.renderingStartTime = now();
                next.sibling = null;
                var suspenseContext = suspenseStackCursor.current;
                if (didSuspendAlready) {
                  suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                } else {
                  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                }
                pushSuspenseContext(workInProgress2, suspenseContext);
                return next;
              }
              return null;
            }
            case FundamentalComponent: {
              break;
            }
            case ScopeComponent: {
              break;
            }
            case Block:
              break;
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              popRenderLanes(workInProgress2);
              if (current2 !== null) {
                var _nextState = workInProgress2.memoizedState;
                var _prevState = current2.memoizedState;
                var prevIsHidden = _prevState !== null;
                var nextIsHidden = _nextState !== null;
                if (prevIsHidden !== nextIsHidden && newProps.mode !== "unstable-defer-without-hiding") {
                  workInProgress2.flags |= Update;
                }
              }
              return null;
            }
          }
          {
            {
              throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function unwindWork(workInProgress2, renderLanes2) {
          switch (workInProgress2.tag) {
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              var flags = workInProgress2.flags;
              if (flags & ShouldCapture) {
                workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case HostRoot: {
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              var _flags = workInProgress2.flags;
              if (!((_flags & DidCapture) === NoFlags)) {
                {
                  throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
                }
              }
              workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
              return workInProgress2;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var _flags2 = workInProgress2.flags;
              if (_flags2 & ShouldCapture) {
                workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              return null;
            case ContextProvider:
              popProvider(workInProgress2);
              return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(workInProgress2);
              return null;
            default:
              return null;
          }
        }
        function unwindInterruptedWork(interruptedWork) {
          switch (interruptedWork.tag) {
            case ClassComponent: {
              var childContextTypes = interruptedWork.type.childContextTypes;
              if (childContextTypes !== null && childContextTypes !== void 0) {
                popContext(interruptedWork);
              }
              break;
            }
            case HostRoot: {
              popHostContainer(interruptedWork);
              popTopLevelContextObject(interruptedWork);
              resetWorkInProgressVersions();
              break;
            }
            case HostComponent: {
              popHostContext(interruptedWork);
              break;
            }
            case HostPortal:
              popHostContainer(interruptedWork);
              break;
            case SuspenseComponent:
              popSuspenseContext(interruptedWork);
              break;
            case SuspenseListComponent:
              popSuspenseContext(interruptedWork);
              break;
            case ContextProvider:
              popProvider(interruptedWork);
              break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(interruptedWork);
              break;
          }
        }
        function createCapturedValue(value, source) {
          return {
            value,
            source,
            stack: getStackByFiberInDevAndProd(source)
          };
        }
        function showErrorDialog(boundary, errorInfo) {
          return true;
        }
        function logCapturedError(boundary, errorInfo) {
          try {
            var logError = showErrorDialog(boundary, errorInfo);
            if (logError === false) {
              return;
            }
            var error2 = errorInfo.value;
            if (true) {
              var source = errorInfo.source;
              var stack = errorInfo.stack;
              var componentStack = stack !== null ? stack : "";
              if (error2 != null && error2._suppressLogging) {
                if (boundary.tag === ClassComponent) {
                  return;
                }
                console["error"](error2);
              }
              var componentName = source ? getComponentName(source.type) : null;
              var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
              var errorBoundaryMessage;
              var errorBoundaryName = getComponentName(boundary.type);
              if (errorBoundaryName) {
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
              } else {
                errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
              }
              var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
              console["error"](combinedMessage);
            } else {
              console["error"](error2);
            }
          } catch (e2) {
            setTimeout(function() {
              throw e2;
            });
          }
        }
        var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
        function createRootErrorUpdate(fiber, errorInfo, lane) {
          var update = createUpdate(NoTimestamp, lane);
          update.tag = CaptureUpdate;
          update.payload = {
            element: null
          };
          var error2 = errorInfo.value;
          update.callback = function() {
            onUncaughtError(error2);
            logCapturedError(fiber, errorInfo);
          };
          return update;
        }
        function createClassErrorUpdate(fiber, errorInfo, lane) {
          var update = createUpdate(NoTimestamp, lane);
          update.tag = CaptureUpdate;
          var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
          if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update.payload = function() {
              logCapturedError(fiber, errorInfo);
              return getDerivedStateFromError(error$1);
            };
          }
          var inst = fiber.stateNode;
          if (inst !== null && typeof inst.componentDidCatch === "function") {
            update.callback = function callback() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              if (typeof getDerivedStateFromError !== "function") {
                markLegacyErrorBoundaryAsFailed(this);
                logCapturedError(fiber, errorInfo);
              }
              var error$12 = errorInfo.value;
              var stack = errorInfo.stack;
              this.componentDidCatch(error$12, {
                componentStack: stack !== null ? stack : ""
              });
              {
                if (typeof getDerivedStateFromError !== "function") {
                  if (!includesSomeLane(fiber.lanes, SyncLane)) {
                    error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentName(fiber.type) || "Unknown");
                  }
                }
              }
            };
          } else {
            update.callback = function() {
              markFailedErrorBoundaryForHotReloading(fiber);
            };
          }
          return update;
        }
        function attachPingListener(root2, wakeable, lanes) {
          var pingCache = root2.pingCache;
          var threadIDs;
          if (pingCache === null) {
            pingCache = root2.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
          } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === void 0) {
              threadIDs = new Set();
              pingCache.set(wakeable, threadIDs);
            }
          }
          if (!threadIDs.has(lanes)) {
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root2, wakeable, lanes);
            wakeable.then(ping, ping);
          }
        }
        function throwException(root2, returnFiber, sourceFiber, value, rootRenderLanes) {
          sourceFiber.flags |= Incomplete;
          sourceFiber.firstEffect = sourceFiber.lastEffect = null;
          if (value !== null && typeof value === "object" && typeof value.then === "function") {
            var wakeable = value;
            if ((sourceFiber.mode & BlockingMode) === NoMode) {
              var currentSource = sourceFiber.alternate;
              if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
              } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
              }
            }
            var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext);
            var _workInProgress = returnFiber;
            do {
              if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
                var wakeables = _workInProgress.updateQueue;
                if (wakeables === null) {
                  var updateQueue = new Set();
                  updateQueue.add(wakeable);
                  _workInProgress.updateQueue = updateQueue;
                } else {
                  wakeables.add(wakeable);
                }
                if ((_workInProgress.mode & BlockingMode) === NoMode) {
                  _workInProgress.flags |= DidCapture;
                  sourceFiber.flags |= ForceUpdateForLegacySuspense;
                  sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                  if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) {
                      sourceFiber.tag = IncompleteClassComponent;
                    } else {
                      var update = createUpdate(NoTimestamp, SyncLane);
                      update.tag = ForceUpdate;
                      enqueueUpdate(sourceFiber, update);
                    }
                  }
                  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
                  return;
                }
                attachPingListener(root2, wakeable, rootRenderLanes);
                _workInProgress.flags |= ShouldCapture;
                _workInProgress.lanes = rootRenderLanes;
                return;
              }
              _workInProgress = _workInProgress.return;
            } while (_workInProgress !== null);
            value = new Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
          }
          renderDidError();
          value = createCapturedValue(value, sourceFiber);
          var workInProgress2 = returnFiber;
          do {
            switch (workInProgress2.tag) {
              case HostRoot: {
                var _errorInfo = value;
                workInProgress2.flags |= ShouldCapture;
                var lane = pickArbitraryLane(rootRenderLanes);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var _update = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                enqueueCapturedUpdate(workInProgress2, _update);
                return;
              }
              case ClassComponent:
                var errorInfo = value;
                var ctor = workInProgress2.type;
                var instance = workInProgress2.stateNode;
                if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                  workInProgress2.flags |= ShouldCapture;
                  var _lane = pickArbitraryLane(rootRenderLanes);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                  var _update2 = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                  enqueueCapturedUpdate(workInProgress2, _update2);
                  return;
                }
                break;
            }
            workInProgress2 = workInProgress2.return;
          } while (workInProgress2 !== null);
        }
        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
        {
          didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
        }
        var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
        var callComponentWillUnmountWithTimer = function(current2, instance) {
          instance.props = current2.memoizedProps;
          instance.state = current2.memoizedState;
          {
            instance.componentWillUnmount();
          }
        };
        function safelyCallComponentWillUnmount(current2, instance) {
          {
            invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current2, instance);
            if (hasCaughtError()) {
              var unmountError = clearCaughtError();
              captureCommitPhaseError(current2, unmountError);
            }
          }
        }
        function safelyDetachRef(current2) {
          var ref = current2.ref;
          if (ref !== null) {
            if (typeof ref === "function") {
              {
                invokeGuardedCallback(null, ref, null, null);
                if (hasCaughtError()) {
                  var refError = clearCaughtError();
                  captureCommitPhaseError(current2, refError);
                }
              }
            } else {
              ref.current = null;
            }
          }
        }
        function safelyCallDestroy(current2, destroy) {
          {
            invokeGuardedCallback(null, destroy, null);
            if (hasCaughtError()) {
              var error2 = clearCaughtError();
              captureCommitPhaseError(current2, error2);
            }
          }
        }
        function commitBeforeMutationLifeCycles(current2, finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block: {
              return;
            }
            case ClassComponent: {
              if (finishedWork.flags & Snapshot) {
                if (current2 !== null) {
                  var prevProps = current2.memoizedProps;
                  var prevState = current2.memoizedState;
                  var instance = finishedWork.stateNode;
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                    }
                  }
                  var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                  {
                    var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                    if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                      didWarnSet.add(finishedWork.type);
                      error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentName(finishedWork.type));
                    }
                  }
                  instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                }
              }
              return;
            }
            case HostRoot: {
              {
                if (finishedWork.flags & Snapshot) {
                  var root2 = finishedWork.stateNode;
                  clearContainer(root2.containerInfo);
                }
              }
              return;
            }
            case HostComponent:
            case HostText:
            case HostPortal:
            case IncompleteClassComponent:
              return;
          }
          {
            {
              throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function commitHookEffectListUnmount(tag, finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & tag) === tag) {
                var destroy = effect.destroy;
                effect.destroy = void 0;
                if (destroy !== void 0) {
                  destroy();
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitHookEffectListMount(tag, finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & tag) === tag) {
                var create = effect.create;
                effect.destroy = create();
                {
                  var destroy = effect.destroy;
                  if (destroy !== void 0 && typeof destroy !== "function") {
                    var addendum = void 0;
                    if (destroy === null) {
                      addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                    } else if (typeof destroy.then === "function") {
                      addendum = "\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                    } else {
                      addendum = " You returned: " + destroy;
                    }
                    error("An effect function must not return anything besides a function, which is used for clean-up.%s", addendum);
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function schedulePassiveEffects(finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              var _effect = effect, next = _effect.next, tag = _effect.tag;
              if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
                enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
                enqueuePendingPassiveHookEffectMount(finishedWork, effect);
              }
              effect = next;
            } while (effect !== firstEffect);
          }
        }
        function commitLifeCycles(finishedRoot, current2, finishedWork, committedLanes) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block: {
              {
                commitHookEffectListMount(Layout | HasEffect, finishedWork);
              }
              schedulePassiveEffects(finishedWork);
              return;
            }
            case ClassComponent: {
              var instance = finishedWork.stateNode;
              if (finishedWork.flags & Update) {
                if (current2 === null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                    }
                  }
                  {
                    instance.componentDidMount();
                  }
                } else {
                  var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                  var prevState = current2.memoizedState;
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                    }
                  }
                  {
                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                  }
                }
              }
              var updateQueue = finishedWork.updateQueue;
              if (updateQueue !== null) {
                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                    }
                    if (instance.state !== finishedWork.memoizedState) {
                      error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                    }
                  }
                }
                commitUpdateQueue(finishedWork, updateQueue, instance);
              }
              return;
            }
            case HostRoot: {
              var _updateQueue = finishedWork.updateQueue;
              if (_updateQueue !== null) {
                var _instance = null;
                if (finishedWork.child !== null) {
                  switch (finishedWork.child.tag) {
                    case HostComponent:
                      _instance = getPublicInstance(finishedWork.child.stateNode);
                      break;
                    case ClassComponent:
                      _instance = finishedWork.child.stateNode;
                      break;
                  }
                }
                commitUpdateQueue(finishedWork, _updateQueue, _instance);
              }
              return;
            }
            case HostComponent: {
              var _instance2 = finishedWork.stateNode;
              if (current2 === null && finishedWork.flags & Update) {
                var type = finishedWork.type;
                var props = finishedWork.memoizedProps;
                commitMount(_instance2, type, props);
              }
              return;
            }
            case HostText: {
              return;
            }
            case HostPortal: {
              return;
            }
            case Profiler: {
              {
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime2 = getCommitTime();
                if (typeof onRender === "function") {
                  {
                    onRender(finishedWork.memoizedProps.id, current2 === null ? "mount" : "update", finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2, finishedRoot.memoizedInteractions);
                  }
                }
              }
              return;
            }
            case SuspenseComponent: {
              commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
              return;
            }
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case FundamentalComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
              return;
          }
          {
            {
              throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function hideOrUnhideAllChildren(finishedWork, isHidden) {
          {
            var node = finishedWork;
            while (true) {
              if (node.tag === HostComponent) {
                var instance = node.stateNode;
                if (isHidden) {
                  hideInstance(instance);
                } else {
                  unhideInstance(node.stateNode, node.memoizedProps);
                }
              } else if (node.tag === HostText) {
                var _instance3 = node.stateNode;
                if (isHidden) {
                  hideTextInstance(_instance3);
                } else {
                  unhideTextInstance(_instance3, node.memoizedProps);
                }
              } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
        }
        function commitAttachRef(finishedWork) {
          var ref = finishedWork.ref;
          if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch (finishedWork.tag) {
              case HostComponent:
                instanceToUse = getPublicInstance(instance);
                break;
              default:
                instanceToUse = instance;
            }
            if (typeof ref === "function") {
              ref(instanceToUse);
            } else {
              {
                if (!ref.hasOwnProperty("current")) {
                  error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentName(finishedWork.type));
                }
              }
              ref.current = instanceToUse;
            }
          }
        }
        function commitDetachRef(current2) {
          var currentRef = current2.ref;
          if (currentRef !== null) {
            if (typeof currentRef === "function") {
              currentRef(null);
            } else {
              currentRef.current = null;
            }
          }
        }
        function commitUnmount(finishedRoot, current2, renderPriorityLevel) {
          onCommitUnmount(current2);
          switch (current2.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block: {
              var updateQueue = current2.updateQueue;
              if (updateQueue !== null) {
                var lastEffect = updateQueue.lastEffect;
                if (lastEffect !== null) {
                  var firstEffect = lastEffect.next;
                  var effect = firstEffect;
                  do {
                    var _effect2 = effect, destroy = _effect2.destroy, tag = _effect2.tag;
                    if (destroy !== void 0) {
                      if ((tag & Passive$1) !== NoFlags$1) {
                        enqueuePendingPassiveHookEffectUnmount(current2, effect);
                      } else {
                        {
                          safelyCallDestroy(current2, destroy);
                        }
                      }
                    }
                    effect = effect.next;
                  } while (effect !== firstEffect);
                }
              }
              return;
            }
            case ClassComponent: {
              safelyDetachRef(current2);
              var instance = current2.stateNode;
              if (typeof instance.componentWillUnmount === "function") {
                safelyCallComponentWillUnmount(current2, instance);
              }
              return;
            }
            case HostComponent: {
              safelyDetachRef(current2);
              return;
            }
            case HostPortal: {
              {
                unmountHostComponents(finishedRoot, current2);
              }
              return;
            }
            case FundamentalComponent: {
              return;
            }
            case DehydratedFragment: {
              return;
            }
            case ScopeComponent: {
              return;
            }
          }
        }
        function commitNestedUnmounts(finishedRoot, root2, renderPriorityLevel) {
          var node = root2;
          while (true) {
            commitUnmount(finishedRoot, node);
            if (node.child !== null && node.tag !== HostPortal) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === root2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === root2) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function detachFiberMutation(fiber) {
          fiber.alternate = null;
          fiber.child = null;
          fiber.dependencies = null;
          fiber.firstEffect = null;
          fiber.lastEffect = null;
          fiber.memoizedProps = null;
          fiber.memoizedState = null;
          fiber.pendingProps = null;
          fiber.return = null;
          fiber.updateQueue = null;
          {
            fiber._debugOwner = null;
          }
        }
        function getHostParentFiber(fiber) {
          var parent = fiber.return;
          while (parent !== null) {
            if (isHostParent(parent)) {
              return parent;
            }
            parent = parent.return;
          }
          {
            {
              throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function isHostParent(fiber) {
          return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
        }
        function getHostSibling(fiber) {
          var node = fiber;
          siblings:
            while (true) {
              while (node.sibling === null) {
                if (node.return === null || isHostParent(node.return)) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
              while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                if (node.flags & Placement) {
                  continue siblings;
                }
                if (node.child === null || node.tag === HostPortal) {
                  continue siblings;
                } else {
                  node.child.return = node;
                  node = node.child;
                }
              }
              if (!(node.flags & Placement)) {
                return node.stateNode;
              }
            }
        }
        function commitPlacement(finishedWork) {
          var parentFiber = getHostParentFiber(finishedWork);
          var parent;
          var isContainer;
          var parentStateNode = parentFiber.stateNode;
          switch (parentFiber.tag) {
            case HostComponent:
              parent = parentStateNode;
              isContainer = false;
              break;
            case HostRoot:
              parent = parentStateNode.containerInfo;
              isContainer = true;
              break;
            case HostPortal:
              parent = parentStateNode.containerInfo;
              isContainer = true;
              break;
            case FundamentalComponent:
            default: {
              {
                throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          if (parentFiber.flags & ContentReset) {
            resetTextContent(parent);
            parentFiber.flags &= ~ContentReset;
          }
          var before = getHostSibling(finishedWork);
          if (isContainer) {
            insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
          } else {
            insertOrAppendPlacementNode(finishedWork, before, parent);
          }
        }
        function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) {
              insertInContainerBefore(parent, stateNode, before);
            } else {
              appendChildToContainer(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNodeIntoContainer(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        function insertOrAppendPlacementNode(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) {
              insertBefore(parent, stateNode, before);
            } else {
              appendChild(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNode(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNode(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        function unmountHostComponents(finishedRoot, current2, renderPriorityLevel) {
          var node = current2;
          var currentParentIsValid = false;
          var currentParent;
          var currentParentIsContainer;
          while (true) {
            if (!currentParentIsValid) {
              var parent = node.return;
              findParent:
                while (true) {
                  if (!(parent !== null)) {
                    {
                      throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                  var parentStateNode = parent.stateNode;
                  switch (parent.tag) {
                    case HostComponent:
                      currentParent = parentStateNode;
                      currentParentIsContainer = false;
                      break findParent;
                    case HostRoot:
                      currentParent = parentStateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                    case HostPortal:
                      currentParent = parentStateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                  }
                  parent = parent.return;
                }
              currentParentIsValid = true;
            }
            if (node.tag === HostComponent || node.tag === HostText) {
              commitNestedUnmounts(finishedRoot, node);
              if (currentParentIsContainer) {
                removeChildFromContainer(currentParent, node.stateNode);
              } else {
                removeChild(currentParent, node.stateNode);
              }
            } else if (node.tag === HostPortal) {
              if (node.child !== null) {
                currentParent = node.stateNode.containerInfo;
                currentParentIsContainer = true;
                node.child.return = node;
                node = node.child;
                continue;
              }
            } else {
              commitUnmount(finishedRoot, node);
              if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
            }
            if (node === current2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === current2) {
                return;
              }
              node = node.return;
              if (node.tag === HostPortal) {
                currentParentIsValid = false;
              }
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function commitDeletion(finishedRoot, current2, renderPriorityLevel) {
          {
            unmountHostComponents(finishedRoot, current2);
          }
          var alternate = current2.alternate;
          detachFiberMutation(current2);
          if (alternate !== null) {
            detachFiberMutation(alternate);
          }
        }
        function commitWork(current2, finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block: {
              {
                commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
              }
              return;
            }
            case ClassComponent: {
              return;
            }
            case HostComponent: {
              var instance = finishedWork.stateNode;
              if (instance != null) {
                var newProps = finishedWork.memoizedProps;
                var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                var type = finishedWork.type;
                var updatePayload = finishedWork.updateQueue;
                finishedWork.updateQueue = null;
                if (updatePayload !== null) {
                  commitUpdate(instance, updatePayload, type, oldProps, newProps);
                }
              }
              return;
            }
            case HostText: {
              if (!(finishedWork.stateNode !== null)) {
                {
                  throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              var textInstance = finishedWork.stateNode;
              var newText = finishedWork.memoizedProps;
              var oldText = current2 !== null ? current2.memoizedProps : newText;
              commitTextUpdate(textInstance, oldText, newText);
              return;
            }
            case HostRoot: {
              {
                var _root = finishedWork.stateNode;
                if (_root.hydrate) {
                  _root.hydrate = false;
                  commitHydratedContainer(_root.containerInfo);
                }
              }
              return;
            }
            case Profiler: {
              return;
            }
            case SuspenseComponent: {
              commitSuspenseComponent(finishedWork);
              attachSuspenseRetryListeners(finishedWork);
              return;
            }
            case SuspenseListComponent: {
              attachSuspenseRetryListeners(finishedWork);
              return;
            }
            case IncompleteClassComponent: {
              return;
            }
            case FundamentalComponent: {
              break;
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              var newState = finishedWork.memoizedState;
              var isHidden = newState !== null;
              hideOrUnhideAllChildren(finishedWork, isHidden);
              return;
            }
          }
          {
            {
              throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function commitSuspenseComponent(finishedWork) {
          var newState = finishedWork.memoizedState;
          if (newState !== null) {
            markCommitTimeOfFallback();
            {
              var primaryChildParent = finishedWork.child;
              hideOrUnhideAllChildren(primaryChildParent, true);
            }
          }
        }
        function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
          var newState = finishedWork.memoizedState;
          if (newState === null) {
            var current2 = finishedWork.alternate;
            if (current2 !== null) {
              var prevState = current2.memoizedState;
              if (prevState !== null) {
                var suspenseInstance = prevState.dehydrated;
                if (suspenseInstance !== null) {
                  commitHydratedSuspenseInstance(suspenseInstance);
                }
              }
            }
          }
        }
        function attachSuspenseRetryListeners(finishedWork) {
          var wakeables = finishedWork.updateQueue;
          if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) {
              retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            }
            wakeables.forEach(function(wakeable) {
              var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
              if (!retryCache.has(wakeable)) {
                {
                  if (wakeable.__reactDoNotTraceInteractions !== true) {
                    retry = tracing.unstable_wrap(retry);
                  }
                }
                retryCache.add(wakeable);
                wakeable.then(retry, retry);
              }
            });
          }
        }
        function isSuspenseBoundaryBeingHidden(current2, finishedWork) {
          if (current2 !== null) {
            var oldState = current2.memoizedState;
            if (oldState === null || oldState.dehydrated !== null) {
              var newState = finishedWork.memoizedState;
              return newState !== null && newState.dehydrated === null;
            }
          }
          return false;
        }
        function commitResetTextContent(current2) {
          resetTextContent(current2.stateNode);
        }
        var COMPONENT_TYPE = 0;
        var HAS_PSEUDO_CLASS_TYPE = 1;
        var ROLE_TYPE = 2;
        var TEST_NAME_TYPE = 3;
        var TEXT_TYPE = 4;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor$1 = Symbol.for;
          COMPONENT_TYPE = symbolFor$1("selector.component");
          HAS_PSEUDO_CLASS_TYPE = symbolFor$1("selector.has_pseudo_class");
          ROLE_TYPE = symbolFor$1("selector.role");
          TEST_NAME_TYPE = symbolFor$1("selector.test_id");
          TEXT_TYPE = symbolFor$1("selector.text");
        }
        var commitHooks = [];
        function onCommitRoot$1() {
          {
            commitHooks.forEach(function(commitHook) {
              return commitHook();
            });
          }
        }
        var ceil = Math.ceil;
        var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
        var NoContext = 0;
        var BatchedContext = 1;
        var EventContext = 2;
        var DiscreteEventContext = 4;
        var LegacyUnbatchedContext = 8;
        var RenderContext = 16;
        var CommitContext = 32;
        var RetryAfterError = 64;
        var RootIncomplete = 0;
        var RootFatalErrored = 1;
        var RootErrored = 2;
        var RootSuspended = 3;
        var RootSuspendedWithDelay = 4;
        var RootCompleted = 5;
        var executionContext = NoContext;
        var workInProgressRoot = null;
        var workInProgress = null;
        var workInProgressRootRenderLanes = NoLanes;
        var subtreeRenderLanes = NoLanes;
        var subtreeRenderLanesCursor = createCursor(NoLanes);
        var workInProgressRootExitStatus = RootIncomplete;
        var workInProgressRootFatalError = null;
        var workInProgressRootIncludedLanes = NoLanes;
        var workInProgressRootSkippedLanes = NoLanes;
        var workInProgressRootUpdatedLanes = NoLanes;
        var workInProgressRootPingedLanes = NoLanes;
        var mostRecentlyUpdatedRoot = null;
        var globalMostRecentFallbackTime = 0;
        var FALLBACK_THROTTLE_MS = 500;
        var workInProgressRootRenderTargetTime = Infinity;
        var RENDER_TIMEOUT_MS = 500;
        function resetRenderTimer() {
          workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
        }
        function getRenderTargetTime() {
          return workInProgressRootRenderTargetTime;
        }
        var nextEffect = null;
        var hasUncaughtError = false;
        var firstUncaughtError = null;
        var legacyErrorBoundariesThatAlreadyFailed = null;
        var rootDoesHavePassiveEffects = false;
        var rootWithPendingPassiveEffects = null;
        var pendingPassiveEffectsRenderPriority = NoPriority$1;
        var pendingPassiveEffectsLanes = NoLanes;
        var pendingPassiveHookEffectsMount = [];
        var pendingPassiveHookEffectsUnmount = [];
        var rootsWithPendingDiscreteUpdates = null;
        var NESTED_UPDATE_LIMIT = 50;
        var nestedUpdateCount = 0;
        var rootWithNestedUpdates = null;
        var NESTED_PASSIVE_UPDATE_LIMIT = 50;
        var nestedPassiveUpdateCount = 0;
        var spawnedWorkDuringRender = null;
        var currentEventTime = NoTimestamp;
        var currentEventWipLanes = NoLanes;
        var currentEventPendingLanes = NoLanes;
        var isFlushingPassiveEffects = false;
        var focusedInstanceHandle = null;
        var shouldFireAfterActiveInstanceBlur = false;
        function getWorkInProgressRoot() {
          return workInProgressRoot;
        }
        function requestEventTime() {
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            return now();
          }
          if (currentEventTime !== NoTimestamp) {
            return currentEventTime;
          }
          currentEventTime = now();
          return currentEventTime;
        }
        function requestUpdateLane(fiber) {
          var mode = fiber.mode;
          if ((mode & BlockingMode) === NoMode) {
            return SyncLane;
          } else if ((mode & ConcurrentMode) === NoMode) {
            return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
          }
          if (currentEventWipLanes === NoLanes) {
            currentEventWipLanes = workInProgressRootIncludedLanes;
          }
          var isTransition = requestCurrentTransition() !== NoTransition;
          if (isTransition) {
            if (currentEventPendingLanes !== NoLanes) {
              currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
            }
            return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
          }
          var schedulerPriority = getCurrentPriorityLevel();
          var lane;
          if ((executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) {
            lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
          } else {
            var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);
            lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
          }
          return lane;
        }
        function requestRetryLane(fiber) {
          var mode = fiber.mode;
          if ((mode & BlockingMode) === NoMode) {
            return SyncLane;
          } else if ((mode & ConcurrentMode) === NoMode) {
            return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
          }
          if (currentEventWipLanes === NoLanes) {
            currentEventWipLanes = workInProgressRootIncludedLanes;
          }
          return findRetryLane(currentEventWipLanes);
        }
        function scheduleUpdateOnFiber(fiber, lane, eventTime) {
          checkForNestedUpdates();
          warnAboutRenderPhaseUpdatesInDEV(fiber);
          var root2 = markUpdateLaneFromFiberToRoot(fiber, lane);
          if (root2 === null) {
            warnAboutUpdateOnUnmountedFiberInDEV(fiber);
            return null;
          }
          markRootUpdated(root2, lane, eventTime);
          if (root2 === workInProgressRoot) {
            {
              workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
            }
            if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
              markRootSuspended$1(root2, workInProgressRootRenderLanes);
            }
          }
          var priorityLevel = getCurrentPriorityLevel();
          if (lane === SyncLane) {
            if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & (RenderContext | CommitContext)) === NoContext) {
              schedulePendingInteractions(root2, lane);
              performSyncWorkOnRoot(root2);
            } else {
              ensureRootIsScheduled(root2, eventTime);
              schedulePendingInteractions(root2, lane);
              if (executionContext === NoContext) {
                resetRenderTimer();
                flushSyncCallbackQueue();
              }
            }
          } else {
            if ((executionContext & DiscreteEventContext) !== NoContext && (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
              if (rootsWithPendingDiscreteUpdates === null) {
                rootsWithPendingDiscreteUpdates = new Set([root2]);
              } else {
                rootsWithPendingDiscreteUpdates.add(root2);
              }
            }
            ensureRootIsScheduled(root2, eventTime);
            schedulePendingInteractions(root2, lane);
          }
          mostRecentlyUpdatedRoot = root2;
        }
        function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
          var alternate = sourceFiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, lane);
          }
          {
            if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            }
          }
          var node = sourceFiber;
          var parent = sourceFiber.return;
          while (parent !== null) {
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) {
              alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            } else {
              {
                if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                  warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                }
              }
            }
            node = parent;
            parent = parent.return;
          }
          if (node.tag === HostRoot) {
            var root2 = node.stateNode;
            return root2;
          } else {
            return null;
          }
        }
        function ensureRootIsScheduled(root2, currentTime) {
          var existingCallbackNode = root2.callbackNode;
          markStarvedLanesAsExpired(root2, currentTime);
          var nextLanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          var newCallbackPriority = returnNextLanesPriority();
          if (nextLanes === NoLanes) {
            if (existingCallbackNode !== null) {
              cancelCallback(existingCallbackNode);
              root2.callbackNode = null;
              root2.callbackPriority = NoLanePriority;
            }
            return;
          }
          if (existingCallbackNode !== null) {
            var existingCallbackPriority = root2.callbackPriority;
            if (existingCallbackPriority === newCallbackPriority) {
              return;
            }
            cancelCallback(existingCallbackNode);
          }
          var newCallbackNode;
          if (newCallbackPriority === SyncLanePriority) {
            newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root2));
          } else if (newCallbackPriority === SyncBatchedLanePriority) {
            newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root2));
          } else {
            var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
            newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root2));
          }
          root2.callbackPriority = newCallbackPriority;
          root2.callbackNode = newCallbackNode;
        }
        function performConcurrentWorkOnRoot(root2) {
          currentEventTime = NoTimestamp;
          currentEventWipLanes = NoLanes;
          currentEventPendingLanes = NoLanes;
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Should not already be working.");
            }
          }
          var originalCallbackNode = root2.callbackNode;
          var didFlushPassiveEffects = flushPassiveEffects();
          if (didFlushPassiveEffects) {
            if (root2.callbackNode !== originalCallbackNode) {
              return null;
            }
          }
          var lanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (lanes === NoLanes) {
            return null;
          }
          var exitStatus = renderRootConcurrent(root2, lanes);
          if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
            prepareFreshStack(root2, NoLanes);
          } else if (exitStatus !== RootIncomplete) {
            if (exitStatus === RootErrored) {
              executionContext |= RetryAfterError;
              if (root2.hydrate) {
                root2.hydrate = false;
                clearContainer(root2.containerInfo);
              }
              lanes = getLanesToRetrySynchronouslyOnError(root2);
              if (lanes !== NoLanes) {
                exitStatus = renderRootSync(root2, lanes);
              }
            }
            if (exitStatus === RootFatalErrored) {
              var fatalError = workInProgressRootFatalError;
              prepareFreshStack(root2, NoLanes);
              markRootSuspended$1(root2, lanes);
              ensureRootIsScheduled(root2, now());
              throw fatalError;
            }
            var finishedWork = root2.current.alternate;
            root2.finishedWork = finishedWork;
            root2.finishedLanes = lanes;
            finishConcurrentRender(root2, exitStatus, lanes);
          }
          ensureRootIsScheduled(root2, now());
          if (root2.callbackNode === originalCallbackNode) {
            return performConcurrentWorkOnRoot.bind(null, root2);
          }
          return null;
        }
        function finishConcurrentRender(root2, exitStatus, lanes) {
          switch (exitStatus) {
            case RootIncomplete:
            case RootFatalErrored: {
              {
                {
                  throw Error("Root did not complete. This is a bug in React.");
                }
              }
            }
            case RootErrored: {
              commitRoot(root2);
              break;
            }
            case RootSuspended: {
              markRootSuspended$1(root2, lanes);
              if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
                if (msUntilTimeout > 10) {
                  var nextLanes = getNextLanes(root2, NoLanes);
                  if (nextLanes !== NoLanes) {
                    break;
                  }
                  var suspendedLanes = root2.suspendedLanes;
                  if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                    var eventTime = requestEventTime();
                    markRootPinged(root2, suspendedLanes);
                    break;
                  }
                  root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2), msUntilTimeout);
                  break;
                }
              }
              commitRoot(root2);
              break;
            }
            case RootSuspendedWithDelay: {
              markRootSuspended$1(root2, lanes);
              if (includesOnlyTransitions(lanes)) {
                break;
              }
              if (!shouldForceFlushFallbacksInDEV()) {
                var mostRecentEventTime = getMostRecentEventTime(root2, lanes);
                var eventTimeMs = mostRecentEventTime;
                var timeElapsedMs = now() - eventTimeMs;
                var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                if (_msUntilTimeout > 10) {
                  root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2), _msUntilTimeout);
                  break;
                }
              }
              commitRoot(root2);
              break;
            }
            case RootCompleted: {
              commitRoot(root2);
              break;
            }
            default: {
              {
                {
                  throw Error("Unknown root exit status.");
                }
              }
            }
          }
        }
        function markRootSuspended$1(root2, suspendedLanes) {
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
          markRootSuspended(root2, suspendedLanes);
        }
        function performSyncWorkOnRoot(root2) {
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Should not already be working.");
            }
          }
          flushPassiveEffects();
          var lanes;
          var exitStatus;
          if (root2 === workInProgressRoot && includesSomeLane(root2.expiredLanes, workInProgressRootRenderLanes)) {
            lanes = workInProgressRootRenderLanes;
            exitStatus = renderRootSync(root2, lanes);
            if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
              lanes = getNextLanes(root2, lanes);
              exitStatus = renderRootSync(root2, lanes);
            }
          } else {
            lanes = getNextLanes(root2, NoLanes);
            exitStatus = renderRootSync(root2, lanes);
          }
          if (root2.tag !== LegacyRoot && exitStatus === RootErrored) {
            executionContext |= RetryAfterError;
            if (root2.hydrate) {
              root2.hydrate = false;
              clearContainer(root2.containerInfo);
            }
            lanes = getLanesToRetrySynchronouslyOnError(root2);
            if (lanes !== NoLanes) {
              exitStatus = renderRootSync(root2, lanes);
            }
          }
          if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root2, NoLanes);
            markRootSuspended$1(root2, lanes);
            ensureRootIsScheduled(root2, now());
            throw fatalError;
          }
          var finishedWork = root2.current.alternate;
          root2.finishedWork = finishedWork;
          root2.finishedLanes = lanes;
          commitRoot(root2);
          ensureRootIsScheduled(root2, now());
          return null;
        }
        function flushDiscreteUpdates() {
          if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
            {
              if ((executionContext & RenderContext) !== NoContext) {
                error("unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering.");
              }
            }
            return;
          }
          flushPendingDiscreteUpdates();
          flushPassiveEffects();
        }
        function flushPendingDiscreteUpdates() {
          if (rootsWithPendingDiscreteUpdates !== null) {
            var roots = rootsWithPendingDiscreteUpdates;
            rootsWithPendingDiscreteUpdates = null;
            roots.forEach(function(root2) {
              markDiscreteUpdatesExpired(root2);
              ensureRootIsScheduled(root2, now());
            });
          }
          flushSyncCallbackQueue();
        }
        function batchedUpdates$1(fn2, a) {
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          try {
            return fn2(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
              resetRenderTimer();
              flushSyncCallbackQueue();
            }
          }
        }
        function batchedEventUpdates$1(fn2, a) {
          var prevExecutionContext = executionContext;
          executionContext |= EventContext;
          try {
            return fn2(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
              resetRenderTimer();
              flushSyncCallbackQueue();
            }
          }
        }
        function discreteUpdates$1(fn2, a, b, c, d2) {
          var prevExecutionContext = executionContext;
          executionContext |= DiscreteEventContext;
          {
            try {
              return runWithPriority$1(UserBlockingPriority$2, fn2.bind(null, a, b, c, d2));
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                resetRenderTimer();
                flushSyncCallbackQueue();
              }
            }
          }
        }
        function unbatchedUpdates(fn2, a) {
          var prevExecutionContext = executionContext;
          executionContext &= ~BatchedContext;
          executionContext |= LegacyUnbatchedContext;
          try {
            return fn2(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
              resetRenderTimer();
              flushSyncCallbackQueue();
            }
          }
        }
        function flushSync(fn2, a) {
          var prevExecutionContext = executionContext;
          if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
            {
              error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
            }
            return fn2(a);
          }
          executionContext |= BatchedContext;
          {
            try {
              if (fn2) {
                return runWithPriority$1(ImmediatePriority$1, fn2.bind(null, a));
              } else {
                return void 0;
              }
            } finally {
              executionContext = prevExecutionContext;
              flushSyncCallbackQueue();
            }
          }
        }
        function pushRenderLanes(fiber, lanes) {
          push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
          subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
          workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
        }
        function popRenderLanes(fiber) {
          subtreeRenderLanes = subtreeRenderLanesCursor.current;
          pop(subtreeRenderLanesCursor, fiber);
        }
        function prepareFreshStack(root2, lanes) {
          root2.finishedWork = null;
          root2.finishedLanes = NoLanes;
          var timeoutHandle = root2.timeoutHandle;
          if (timeoutHandle !== noTimeout) {
            root2.timeoutHandle = noTimeout;
            cancelTimeout(timeoutHandle);
          }
          if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while (interruptedWork !== null) {
              unwindInterruptedWork(interruptedWork);
              interruptedWork = interruptedWork.return;
            }
          }
          workInProgressRoot = root2;
          workInProgress = createWorkInProgress(root2.current, null);
          workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
          workInProgressRootExitStatus = RootIncomplete;
          workInProgressRootFatalError = null;
          workInProgressRootSkippedLanes = NoLanes;
          workInProgressRootUpdatedLanes = NoLanes;
          workInProgressRootPingedLanes = NoLanes;
          {
            spawnedWorkDuringRender = null;
          }
          {
            ReactStrictModeWarnings.discardPendingWarnings();
          }
        }
        function handleError(root2, thrownValue) {
          do {
            var erroredWork = workInProgress;
            try {
              resetContextDependencies();
              resetHooksAfterThrow();
              resetCurrentFiber();
              ReactCurrentOwner$2.current = null;
              if (erroredWork === null || erroredWork.return === null) {
                workInProgressRootExitStatus = RootFatalErrored;
                workInProgressRootFatalError = thrownValue;
                workInProgress = null;
                return;
              }
              if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
              }
              throwException(root2, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
              completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
              thrownValue = yetAnotherThrownValue;
              if (workInProgress === erroredWork && erroredWork !== null) {
                erroredWork = erroredWork.return;
                workInProgress = erroredWork;
              } else {
                erroredWork = workInProgress;
              }
              continue;
            }
            return;
          } while (true);
        }
        function pushDispatcher() {
          var prevDispatcher = ReactCurrentDispatcher$2.current;
          ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
          if (prevDispatcher === null) {
            return ContextOnlyDispatcher;
          } else {
            return prevDispatcher;
          }
        }
        function popDispatcher(prevDispatcher) {
          ReactCurrentDispatcher$2.current = prevDispatcher;
        }
        function pushInteractions(root2) {
          {
            var prevInteractions = tracing.__interactionsRef.current;
            tracing.__interactionsRef.current = root2.memoizedInteractions;
            return prevInteractions;
          }
        }
        function popInteractions(prevInteractions) {
          {
            tracing.__interactionsRef.current = prevInteractions;
          }
        }
        function markCommitTimeOfFallback() {
          globalMostRecentFallbackTime = now();
        }
        function markSkippedUpdateLanes(lane) {
          workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
        }
        function renderDidSuspend() {
          if (workInProgressRootExitStatus === RootIncomplete) {
            workInProgressRootExitStatus = RootSuspended;
          }
        }
        function renderDidSuspendDelayIfPossible() {
          if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
            workInProgressRootExitStatus = RootSuspendedWithDelay;
          }
          if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) {
            markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
          }
        }
        function renderDidError() {
          if (workInProgressRootExitStatus !== RootCompleted) {
            workInProgressRootExitStatus = RootErrored;
          }
        }
        function renderHasNotSuspendedYet() {
          return workInProgressRootExitStatus === RootIncomplete;
        }
        function renderRootSync(root2, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
            prepareFreshStack(root2, lanes);
            startWorkOnPendingInteractions(root2, lanes);
          }
          var prevInteractions = pushInteractions(root2);
          do {
            try {
              workLoopSync();
              break;
            } catch (thrownValue) {
              handleError(root2, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          {
            popInteractions(prevInteractions);
          }
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);
          if (workInProgress !== null) {
            {
              {
                throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          workInProgressRoot = null;
          workInProgressRootRenderLanes = NoLanes;
          return workInProgressRootExitStatus;
        }
        function workLoopSync() {
          while (workInProgress !== null) {
            performUnitOfWork(workInProgress);
          }
        }
        function renderRootConcurrent(root2, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
            resetRenderTimer();
            prepareFreshStack(root2, lanes);
            startWorkOnPendingInteractions(root2, lanes);
          }
          var prevInteractions = pushInteractions(root2);
          do {
            try {
              workLoopConcurrent();
              break;
            } catch (thrownValue) {
              handleError(root2, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          {
            popInteractions(prevInteractions);
          }
          popDispatcher(prevDispatcher);
          executionContext = prevExecutionContext;
          if (workInProgress !== null) {
            return RootIncomplete;
          } else {
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes;
            return workInProgressRootExitStatus;
          }
        }
        function workLoopConcurrent() {
          while (workInProgress !== null && !shouldYield()) {
            performUnitOfWork(workInProgress);
          }
        }
        function performUnitOfWork(unitOfWork) {
          var current2 = unitOfWork.alternate;
          setCurrentFiber(unitOfWork);
          var next;
          if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
          } else {
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
          }
          resetCurrentFiber();
          unitOfWork.memoizedProps = unitOfWork.pendingProps;
          if (next === null) {
            completeUnitOfWork(unitOfWork);
          } else {
            workInProgress = next;
          }
          ReactCurrentOwner$2.current = null;
        }
        function completeUnitOfWork(unitOfWork) {
          var completedWork = unitOfWork;
          do {
            var current2 = completedWork.alternate;
            var returnFiber = completedWork.return;
            if ((completedWork.flags & Incomplete) === NoFlags) {
              setCurrentFiber(completedWork);
              var next = void 0;
              if ((completedWork.mode & ProfileMode) === NoMode) {
                next = completeWork(current2, completedWork, subtreeRenderLanes);
              } else {
                startProfilerTimer(completedWork);
                next = completeWork(current2, completedWork, subtreeRenderLanes);
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
              }
              resetCurrentFiber();
              if (next !== null) {
                workInProgress = next;
                return;
              }
              resetChildLanes(completedWork);
              if (returnFiber !== null && (returnFiber.flags & Incomplete) === NoFlags) {
                if (returnFiber.firstEffect === null) {
                  returnFiber.firstEffect = completedWork.firstEffect;
                }
                if (completedWork.lastEffect !== null) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
                  }
                  returnFiber.lastEffect = completedWork.lastEffect;
                }
                var flags = completedWork.flags;
                if (flags > PerformedWork) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = completedWork;
                  } else {
                    returnFiber.firstEffect = completedWork;
                  }
                  returnFiber.lastEffect = completedWork;
                }
              }
            } else {
              var _next = unwindWork(completedWork);
              if (_next !== null) {
                _next.flags &= HostEffectMask;
                workInProgress = _next;
                return;
              }
              if ((completedWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                var actualDuration = completedWork.actualDuration;
                var child = completedWork.child;
                while (child !== null) {
                  actualDuration += child.actualDuration;
                  child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
              }
              if (returnFiber !== null) {
                returnFiber.firstEffect = returnFiber.lastEffect = null;
                returnFiber.flags |= Incomplete;
              }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
              workInProgress = siblingFiber;
              return;
            }
            completedWork = returnFiber;
            workInProgress = completedWork;
          } while (completedWork !== null);
          if (workInProgressRootExitStatus === RootIncomplete) {
            workInProgressRootExitStatus = RootCompleted;
          }
        }
        function resetChildLanes(completedWork) {
          if ((completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) {
            return;
          }
          var newChildLanes = NoLanes;
          if ((completedWork.mode & ProfileMode) !== NoMode) {
            var actualDuration = completedWork.actualDuration;
            var treeBaseDuration = completedWork.selfBaseDuration;
            var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
            var child = completedWork.child;
            while (child !== null) {
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
              if (shouldBubbleActualDurations) {
                actualDuration += child.actualDuration;
              }
              treeBaseDuration += child.treeBaseDuration;
              child = child.sibling;
            }
            var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;
            if (isTimedOutSuspense) {
              var primaryChildFragment = completedWork.child;
              if (primaryChildFragment !== null) {
                treeBaseDuration -= primaryChildFragment.treeBaseDuration;
              }
            }
            completedWork.actualDuration = actualDuration;
            completedWork.treeBaseDuration = treeBaseDuration;
          } else {
            var _child = completedWork.child;
            while (_child !== null) {
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
              _child = _child.sibling;
            }
          }
          completedWork.childLanes = newChildLanes;
        }
        function commitRoot(root2) {
          var renderPriorityLevel = getCurrentPriorityLevel();
          runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root2, renderPriorityLevel));
          return null;
        }
        function commitRootImpl(root2, renderPriorityLevel) {
          do {
            flushPassiveEffects();
          } while (rootWithPendingPassiveEffects !== null);
          flushRenderPhaseStrictModeWarningsInDEV();
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Should not already be working.");
            }
          }
          var finishedWork = root2.finishedWork;
          var lanes = root2.finishedLanes;
          if (finishedWork === null) {
            return null;
          }
          root2.finishedWork = null;
          root2.finishedLanes = NoLanes;
          if (!(finishedWork !== root2.current)) {
            {
              throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          root2.callbackNode = null;
          var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
          markRootFinished(root2, remainingLanes);
          if (rootsWithPendingDiscreteUpdates !== null) {
            if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root2)) {
              rootsWithPendingDiscreteUpdates.delete(root2);
            }
          }
          if (root2 === workInProgressRoot) {
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
          }
          var firstEffect;
          if (finishedWork.flags > PerformedWork) {
            if (finishedWork.lastEffect !== null) {
              finishedWork.lastEffect.nextEffect = finishedWork;
              firstEffect = finishedWork.firstEffect;
            } else {
              firstEffect = finishedWork;
            }
          } else {
            firstEffect = finishedWork.firstEffect;
          }
          if (firstEffect !== null) {
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            var prevInteractions = pushInteractions(root2);
            ReactCurrentOwner$2.current = null;
            focusedInstanceHandle = prepareForCommit(root2.containerInfo);
            shouldFireAfterActiveInstanceBlur = false;
            nextEffect = firstEffect;
            do {
              {
                invokeGuardedCallback(null, commitBeforeMutationEffects, null);
                if (hasCaughtError()) {
                  if (!(nextEffect !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var error2 = clearCaughtError();
                  captureCommitPhaseError(nextEffect, error2);
                  nextEffect = nextEffect.nextEffect;
                }
              }
            } while (nextEffect !== null);
            focusedInstanceHandle = null;
            {
              recordCommitTime();
            }
            nextEffect = firstEffect;
            do {
              {
                invokeGuardedCallback(null, commitMutationEffects, null, root2, renderPriorityLevel);
                if (hasCaughtError()) {
                  if (!(nextEffect !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var _error = clearCaughtError();
                  captureCommitPhaseError(nextEffect, _error);
                  nextEffect = nextEffect.nextEffect;
                }
              }
            } while (nextEffect !== null);
            resetAfterCommit(root2.containerInfo);
            root2.current = finishedWork;
            nextEffect = firstEffect;
            do {
              {
                invokeGuardedCallback(null, commitLayoutEffects, null, root2, lanes);
                if (hasCaughtError()) {
                  if (!(nextEffect !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var _error2 = clearCaughtError();
                  captureCommitPhaseError(nextEffect, _error2);
                  nextEffect = nextEffect.nextEffect;
                }
              }
            } while (nextEffect !== null);
            nextEffect = null;
            requestPaint();
            {
              popInteractions(prevInteractions);
            }
            executionContext = prevExecutionContext;
          } else {
            root2.current = finishedWork;
            {
              recordCommitTime();
            }
          }
          var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
          if (rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root2;
            pendingPassiveEffectsLanes = lanes;
            pendingPassiveEffectsRenderPriority = renderPriorityLevel;
          } else {
            nextEffect = firstEffect;
            while (nextEffect !== null) {
              var nextNextEffect = nextEffect.nextEffect;
              nextEffect.nextEffect = null;
              if (nextEffect.flags & Deletion) {
                detachFiberAfterEffects(nextEffect);
              }
              nextEffect = nextNextEffect;
            }
          }
          remainingLanes = root2.pendingLanes;
          if (remainingLanes !== NoLanes) {
            {
              if (spawnedWorkDuringRender !== null) {
                var expirationTimes = spawnedWorkDuringRender;
                spawnedWorkDuringRender = null;
                for (var i = 0; i < expirationTimes.length; i++) {
                  scheduleInteractions(root2, expirationTimes[i], root2.memoizedInteractions);
                }
              }
              schedulePendingInteractions(root2, remainingLanes);
            }
          } else {
            legacyErrorBoundariesThatAlreadyFailed = null;
          }
          {
            if (!rootDidHavePassiveEffects) {
              finishPendingInteractions(root2, lanes);
            }
          }
          if (remainingLanes === SyncLane) {
            if (root2 === rootWithNestedUpdates) {
              nestedUpdateCount++;
            } else {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = root2;
            }
          } else {
            nestedUpdateCount = 0;
          }
          onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
          {
            onCommitRoot$1();
          }
          ensureRootIsScheduled(root2, now());
          if (hasUncaughtError) {
            hasUncaughtError = false;
            var _error3 = firstUncaughtError;
            firstUncaughtError = null;
            throw _error3;
          }
          if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
            return null;
          }
          flushSyncCallbackQueue();
          return null;
        }
        function commitBeforeMutationEffects() {
          while (nextEffect !== null) {
            var current2 = nextEffect.alternate;
            if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
              if ((nextEffect.flags & Deletion) !== NoFlags) {
                if (doesFiberContain(nextEffect, focusedInstanceHandle)) {
                  shouldFireAfterActiveInstanceBlur = true;
                }
              } else {
                if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current2, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) {
                  shouldFireAfterActiveInstanceBlur = true;
                }
              }
            }
            var flags = nextEffect.flags;
            if ((flags & Snapshot) !== NoFlags) {
              setCurrentFiber(nextEffect);
              commitBeforeMutationLifeCycles(current2, nextEffect);
              resetCurrentFiber();
            }
            if ((flags & Passive) !== NoFlags) {
              if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                scheduleCallback(NormalPriority$1, function() {
                  flushPassiveEffects();
                  return null;
                });
              }
            }
            nextEffect = nextEffect.nextEffect;
          }
        }
        function commitMutationEffects(root2, renderPriorityLevel) {
          while (nextEffect !== null) {
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & ContentReset) {
              commitResetTextContent(nextEffect);
            }
            if (flags & Ref) {
              var current2 = nextEffect.alternate;
              if (current2 !== null) {
                commitDetachRef(current2);
              }
            }
            var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);
            switch (primaryFlags) {
              case Placement: {
                commitPlacement(nextEffect);
                nextEffect.flags &= ~Placement;
                break;
              }
              case PlacementAndUpdate: {
                commitPlacement(nextEffect);
                nextEffect.flags &= ~Placement;
                var _current = nextEffect.alternate;
                commitWork(_current, nextEffect);
                break;
              }
              case Hydrating: {
                nextEffect.flags &= ~Hydrating;
                break;
              }
              case HydratingAndUpdate: {
                nextEffect.flags &= ~Hydrating;
                var _current2 = nextEffect.alternate;
                commitWork(_current2, nextEffect);
                break;
              }
              case Update: {
                var _current3 = nextEffect.alternate;
                commitWork(_current3, nextEffect);
                break;
              }
              case Deletion: {
                commitDeletion(root2, nextEffect);
                break;
              }
            }
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
          }
        }
        function commitLayoutEffects(root2, committedLanes) {
          while (nextEffect !== null) {
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & (Update | Callback)) {
              var current2 = nextEffect.alternate;
              commitLifeCycles(root2, current2, nextEffect);
            }
            {
              if (flags & Ref) {
                commitAttachRef(nextEffect);
              }
            }
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
          }
        }
        function flushPassiveEffects() {
          if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
            var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
            pendingPassiveEffectsRenderPriority = NoPriority$1;
            {
              return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
            }
          }
          return false;
        }
        function enqueuePendingPassiveHookEffectMount(fiber, effect) {
          pendingPassiveHookEffectsMount.push(effect, fiber);
          if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
              flushPassiveEffects();
              return null;
            });
          }
        }
        function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
          pendingPassiveHookEffectsUnmount.push(effect, fiber);
          {
            fiber.flags |= PassiveUnmountPendingDev;
            var alternate = fiber.alternate;
            if (alternate !== null) {
              alternate.flags |= PassiveUnmountPendingDev;
            }
          }
          if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
              flushPassiveEffects();
              return null;
            });
          }
        }
        function invokePassiveEffectCreate(effect) {
          var create = effect.create;
          effect.destroy = create();
        }
        function flushPassiveEffectsImpl() {
          if (rootWithPendingPassiveEffects === null) {
            return false;
          }
          var root2 = rootWithPendingPassiveEffects;
          var lanes = pendingPassiveEffectsLanes;
          rootWithPendingPassiveEffects = null;
          pendingPassiveEffectsLanes = NoLanes;
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Cannot flush passive effects while already rendering.");
            }
          }
          {
            isFlushingPassiveEffects = true;
          }
          var prevExecutionContext = executionContext;
          executionContext |= CommitContext;
          var prevInteractions = pushInteractions(root2);
          var unmountEffects = pendingPassiveHookEffectsUnmount;
          pendingPassiveHookEffectsUnmount = [];
          for (var i = 0; i < unmountEffects.length; i += 2) {
            var _effect = unmountEffects[i];
            var fiber = unmountEffects[i + 1];
            var destroy = _effect.destroy;
            _effect.destroy = void 0;
            {
              fiber.flags &= ~PassiveUnmountPendingDev;
              var alternate = fiber.alternate;
              if (alternate !== null) {
                alternate.flags &= ~PassiveUnmountPendingDev;
              }
            }
            if (typeof destroy === "function") {
              {
                setCurrentFiber(fiber);
                {
                  invokeGuardedCallback(null, destroy, null);
                }
                if (hasCaughtError()) {
                  if (!(fiber !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var error2 = clearCaughtError();
                  captureCommitPhaseError(fiber, error2);
                }
                resetCurrentFiber();
              }
            }
          }
          var mountEffects = pendingPassiveHookEffectsMount;
          pendingPassiveHookEffectsMount = [];
          for (var _i2 = 0; _i2 < mountEffects.length; _i2 += 2) {
            var _effect2 = mountEffects[_i2];
            var _fiber = mountEffects[_i2 + 1];
            {
              setCurrentFiber(_fiber);
              {
                invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
              }
              if (hasCaughtError()) {
                if (!(_fiber !== null)) {
                  {
                    throw Error("Should be working on an effect.");
                  }
                }
                var _error4 = clearCaughtError();
                captureCommitPhaseError(_fiber, _error4);
              }
              resetCurrentFiber();
            }
          }
          var effect = root2.current.firstEffect;
          while (effect !== null) {
            var nextNextEffect = effect.nextEffect;
            effect.nextEffect = null;
            if (effect.flags & Deletion) {
              detachFiberAfterEffects(effect);
            }
            effect = nextNextEffect;
          }
          {
            popInteractions(prevInteractions);
            finishPendingInteractions(root2, lanes);
          }
          {
            isFlushingPassiveEffects = false;
          }
          executionContext = prevExecutionContext;
          flushSyncCallbackQueue();
          nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
          return true;
        }
        function isAlreadyFailedLegacyErrorBoundary(instance) {
          return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
        }
        function markLegacyErrorBoundaryAsFailed(instance) {
          if (legacyErrorBoundariesThatAlreadyFailed === null) {
            legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
          } else {
            legacyErrorBoundariesThatAlreadyFailed.add(instance);
          }
        }
        function prepareToThrowUncaughtError(error2) {
          if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error2;
          }
        }
        var onUncaughtError = prepareToThrowUncaughtError;
        function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
          var errorInfo = createCapturedValue(error2, sourceFiber);
          var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
          enqueueUpdate(rootFiber, update);
          var eventTime = requestEventTime();
          var root2 = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);
          if (root2 !== null) {
            markRootUpdated(root2, SyncLane, eventTime);
            ensureRootIsScheduled(root2, eventTime);
            schedulePendingInteractions(root2, SyncLane);
          }
        }
        function captureCommitPhaseError(sourceFiber, error2) {
          if (sourceFiber.tag === HostRoot) {
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error2);
            return;
          }
          var fiber = sourceFiber.return;
          while (fiber !== null) {
            if (fiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error2);
              return;
            } else if (fiber.tag === ClassComponent) {
              var ctor = fiber.type;
              var instance = fiber.stateNode;
              if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                var errorInfo = createCapturedValue(error2, sourceFiber);
                var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                enqueueUpdate(fiber, update);
                var eventTime = requestEventTime();
                var root2 = markUpdateLaneFromFiberToRoot(fiber, SyncLane);
                if (root2 !== null) {
                  markRootUpdated(root2, SyncLane, eventTime);
                  ensureRootIsScheduled(root2, eventTime);
                  schedulePendingInteractions(root2, SyncLane);
                } else {
                  if (typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    try {
                      instance.componentDidCatch(error2, errorInfo);
                    } catch (errorToIgnore) {
                    }
                  }
                }
                return;
              }
            }
            fiber = fiber.return;
          }
        }
        function pingSuspendedRoot(root2, wakeable, pingedLanes) {
          var pingCache = root2.pingCache;
          if (pingCache !== null) {
            pingCache.delete(wakeable);
          }
          var eventTime = requestEventTime();
          markRootPinged(root2, pingedLanes);
          if (workInProgressRoot === root2 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
              prepareFreshStack(root2, NoLanes);
            } else {
              workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
            }
          }
          ensureRootIsScheduled(root2, eventTime);
          schedulePendingInteractions(root2, pingedLanes);
        }
        function retryTimedOutBoundary(boundaryFiber, retryLane) {
          if (retryLane === NoLane) {
            retryLane = requestRetryLane(boundaryFiber);
          }
          var eventTime = requestEventTime();
          var root2 = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);
          if (root2 !== null) {
            markRootUpdated(root2, retryLane, eventTime);
            ensureRootIsScheduled(root2, eventTime);
            schedulePendingInteractions(root2, retryLane);
          }
        }
        function resolveRetryWakeable(boundaryFiber, wakeable) {
          var retryLane = NoLane;
          var retryCache;
          {
            retryCache = boundaryFiber.stateNode;
          }
          if (retryCache !== null) {
            retryCache.delete(wakeable);
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function jnd(timeElapsed) {
          return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
        }
        function checkForNestedUpdates() {
          if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            {
              {
                throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
              }
            }
          }
          {
            if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
              nestedPassiveUpdateCount = 0;
              error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
            }
          }
        }
        function flushRenderPhaseStrictModeWarningsInDEV() {
          {
            ReactStrictModeWarnings.flushLegacyContextWarning();
            {
              ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
            }
          }
        }
        var didWarnStateUpdateForNotYetMountedComponent = null;
        function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
          {
            if ((executionContext & RenderContext) !== NoContext) {
              return;
            }
            if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {
              return;
            }
            var tag = fiber.tag;
            if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
              return;
            }
            var componentName = getComponentName(fiber.type) || "ReactComponent";
            if (didWarnStateUpdateForNotYetMountedComponent !== null) {
              if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                return;
              }
              didWarnStateUpdateForNotYetMountedComponent.add(componentName);
            } else {
              didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);
            }
            var previousFiber = current;
            try {
              setCurrentFiber(fiber);
              error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
            } finally {
              if (previousFiber) {
                setCurrentFiber(fiber);
              } else {
                resetCurrentFiber();
              }
            }
          }
        }
        var didWarnStateUpdateForUnmountedComponent = null;
        function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
          {
            var tag = fiber.tag;
            if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
              return;
            }
            if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {
              return;
            }
            var componentName = getComponentName(fiber.type) || "ReactComponent";
            if (didWarnStateUpdateForUnmountedComponent !== null) {
              if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
                return;
              }
              didWarnStateUpdateForUnmountedComponent.add(componentName);
            } else {
              didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
            }
            if (isFlushingPassiveEffects)
              ;
            else {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in %s.", tag === ClassComponent ? "the componentWillUnmount method" : "a useEffect cleanup function");
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        var beginWork$1;
        {
          var dummyFiber = null;
          beginWork$1 = function(current2, unitOfWork, lanes) {
            var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
            try {
              return beginWork(current2, unitOfWork, lanes);
            } catch (originalError) {
              if (originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                throw originalError;
              }
              resetContextDependencies();
              resetHooksAfterThrow();
              unwindInterruptedWork(unitOfWork);
              assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
              if (unitOfWork.mode & ProfileMode) {
                startProfilerTimer(unitOfWork);
              }
              invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
              if (hasCaughtError()) {
                var replayError = clearCaughtError();
                throw replayError;
              } else {
                throw originalError;
              }
            }
          };
        }
        var didWarnAboutUpdateInRender = false;
        var didWarnAboutUpdateInRenderForAnotherComponent;
        {
          didWarnAboutUpdateInRenderForAnotherComponent = new Set();
        }
        function warnAboutRenderPhaseUpdatesInDEV(fiber) {
          {
            if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  var renderingComponentName = workInProgress && getComponentName(workInProgress.type) || "Unknown";
                  var dedupeKey = renderingComponentName;
                  if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentName(fiber.type) || "Unknown";
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                  }
                  break;
                }
                case ClassComponent: {
                  if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                  }
                  break;
                }
              }
            }
          }
        }
        var IsThisRendererActing = {
          current: false
        };
        function warnIfNotScopedWithMatchingAct(fiber) {
          {
            if (IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("It looks like you're using the wrong act() around your test interactions.\nBe sure to use the matching version of act() corresponding to your renderer:\n\n// for react-dom:\nimport {act} from 'react-dom/test-utils';\n// ...\nact(() => ...);\n\n// for react-test-renderer:\nimport TestRenderer from react-test-renderer';\nconst {act} = TestRenderer;\n// ...\nact(() => ...);");
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
          {
            if ((fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
              error("An update to %s ran an effect, but was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
            }
          }
        }
        function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
          {
            if (executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;
        var didWarnAboutUnmockedScheduler = false;
        function warnIfUnmockedScheduler(fiber) {
          {
            if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === void 0) {
              if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
                didWarnAboutUnmockedScheduler = true;
                error(`In Concurrent or Sync modes, the "scheduler" module needs to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: 
jest.mock('scheduler', () => require('scheduler/unstable_mock'));

For more info, visit https://reactjs.org/link/mock-scheduler`);
              }
            }
          }
        }
        function computeThreadID(root2, lane) {
          return lane * 1e3 + root2.interactionThreadID;
        }
        function markSpawnedWork(lane) {
          if (spawnedWorkDuringRender === null) {
            spawnedWorkDuringRender = [lane];
          } else {
            spawnedWorkDuringRender.push(lane);
          }
        }
        function scheduleInteractions(root2, lane, interactions) {
          if (interactions.size > 0) {
            var pendingInteractionMap = root2.pendingInteractionMap;
            var pendingInteractions = pendingInteractionMap.get(lane);
            if (pendingInteractions != null) {
              interactions.forEach(function(interaction) {
                if (!pendingInteractions.has(interaction)) {
                  interaction.__count++;
                }
                pendingInteractions.add(interaction);
              });
            } else {
              pendingInteractionMap.set(lane, new Set(interactions));
              interactions.forEach(function(interaction) {
                interaction.__count++;
              });
            }
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
              var threadID = computeThreadID(root2, lane);
              subscriber.onWorkScheduled(interactions, threadID);
            }
          }
        }
        function schedulePendingInteractions(root2, lane) {
          scheduleInteractions(root2, lane, tracing.__interactionsRef.current);
        }
        function startWorkOnPendingInteractions(root2, lanes) {
          var interactions = new Set();
          root2.pendingInteractionMap.forEach(function(scheduledInteractions, scheduledLane) {
            if (includesSomeLane(lanes, scheduledLane)) {
              scheduledInteractions.forEach(function(interaction) {
                return interactions.add(interaction);
              });
            }
          });
          root2.memoizedInteractions = interactions;
          if (interactions.size > 0) {
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
              var threadID = computeThreadID(root2, lanes);
              try {
                subscriber.onWorkStarted(interactions, threadID);
              } catch (error2) {
                scheduleCallback(ImmediatePriority$1, function() {
                  throw error2;
                });
              }
            }
          }
        }
        function finishPendingInteractions(root2, committedLanes) {
          var remainingLanesAfterCommit = root2.pendingLanes;
          var subscriber;
          try {
            subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null && root2.memoizedInteractions.size > 0) {
              var threadID = computeThreadID(root2, committedLanes);
              subscriber.onWorkStopped(root2.memoizedInteractions, threadID);
            }
          } catch (error2) {
            scheduleCallback(ImmediatePriority$1, function() {
              throw error2;
            });
          } finally {
            var pendingInteractionMap = root2.pendingInteractionMap;
            pendingInteractionMap.forEach(function(scheduledInteractions, lane) {
              if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
                pendingInteractionMap.delete(lane);
                scheduledInteractions.forEach(function(interaction) {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    try {
                      subscriber.onInteractionScheduledWorkCompleted(interaction);
                    } catch (error2) {
                      scheduleCallback(ImmediatePriority$1, function() {
                        throw error2;
                      });
                    }
                  }
                });
              }
            });
          }
        }
        function shouldForceFlushFallbacksInDEV() {
          return actingUpdatesScopeDepth > 0;
        }
        var actingUpdatesScopeDepth = 0;
        function detachFiberAfterEffects(fiber) {
          fiber.sibling = null;
          fiber.stateNode = null;
        }
        var resolveFamily = null;
        var failedBoundaries = null;
        var setRefreshHandler = function(handler) {
          {
            resolveFamily = handler;
          }
        };
        function resolveFunctionForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              return type;
            }
            return family.current;
          }
        }
        function resolveClassForHotReloading(type) {
          return resolveFunctionForHotReloading(type);
        }
        function resolveForwardRefForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              if (type !== null && type !== void 0 && typeof type.render === "function") {
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                  var syntheticType = {
                    $$typeof: REACT_FORWARD_REF_TYPE,
                    render: currentRender
                  };
                  if (type.displayName !== void 0) {
                    syntheticType.displayName = type.displayName;
                  }
                  return syntheticType;
                }
              }
              return type;
            }
            return family.current;
          }
        }
        function isCompatibleFamilyForHotReloading(fiber, element) {
          {
            if (resolveFamily === null) {
              return false;
            }
            var prevType = fiber.elementType;
            var nextType = element.type;
            var needsCompareFamilies = false;
            var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
            switch (fiber.tag) {
              case ClassComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                }
                break;
              }
              case FunctionComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case ForwardRef: {
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case MemoComponent:
              case SimpleMemoComponent: {
                if ($$typeofNextType === REACT_MEMO_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              default:
                return false;
            }
            if (needsCompareFamilies) {
              var prevFamily = resolveFamily(prevType);
              if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                return true;
              }
            }
            return false;
          }
        }
        function markFailedErrorBoundaryForHotReloading(fiber) {
          {
            if (resolveFamily === null) {
              return;
            }
            if (typeof WeakSet !== "function") {
              return;
            }
            if (failedBoundaries === null) {
              failedBoundaries = new WeakSet();
            }
            failedBoundaries.add(fiber);
          }
        }
        var scheduleRefresh = function(root2, update) {
          {
            if (resolveFamily === null) {
              return;
            }
            var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
            flushPassiveEffects();
            flushSync(function() {
              scheduleFibersWithFamiliesRecursively(root2.current, updatedFamilies, staleFamilies);
            });
          }
        };
        var scheduleRoot = function(root2, element) {
          {
            if (root2.context !== emptyContextObject) {
              return;
            }
            flushPassiveEffects();
            flushSync(function() {
              updateContainer(element, root2, null, null);
            });
          }
        };
        function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
          {
            var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            if (resolveFamily === null) {
              throw new Error("Expected resolveFamily to be set during hot reload.");
            }
            var needsRender = false;
            var needsRemount = false;
            if (candidateType !== null) {
              var family = resolveFamily(candidateType);
              if (family !== void 0) {
                if (staleFamilies.has(family)) {
                  needsRemount = true;
                } else if (updatedFamilies.has(family)) {
                  if (tag === ClassComponent) {
                    needsRemount = true;
                  } else {
                    needsRender = true;
                  }
                }
              }
            }
            if (failedBoundaries !== null) {
              if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                needsRemount = true;
              }
            }
            if (needsRemount) {
              fiber._debugNeedsRemount = true;
            }
            if (needsRemount || needsRender) {
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
            if (child !== null && !needsRemount) {
              scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
            }
            if (sibling !== null) {
              scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
            }
          }
        }
        var findHostInstancesForRefresh = function(root2, families) {
          {
            var hostInstances = new Set();
            var types = new Set(families.map(function(family) {
              return family.current;
            }));
            findHostInstancesForMatchingFibersRecursively(root2.current, types, hostInstances);
            return hostInstances;
          }
        };
        function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
          {
            var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            var didMatch = false;
            if (candidateType !== null) {
              if (types.has(candidateType)) {
                didMatch = true;
              }
            }
            if (didMatch) {
              findHostInstancesForFiberShallowly(fiber, hostInstances);
            } else {
              if (child !== null) {
                findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
              }
            }
            if (sibling !== null) {
              findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
            }
          }
        }
        function findHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
            if (foundHostInstances) {
              return;
            }
            var node = fiber;
            while (true) {
              switch (node.tag) {
                case HostComponent:
                  hostInstances.add(node.stateNode);
                  return;
                case HostPortal:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
                case HostRoot:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
              }
              if (node.return === null) {
                throw new Error("Expected to reach root first.");
              }
              node = node.return;
            }
          }
        }
        function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var node = fiber;
            var foundHostInstances = false;
            while (true) {
              if (node.tag === HostComponent) {
                foundHostInstances = true;
                hostInstances.add(node.stateNode);
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === fiber) {
                return foundHostInstances;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === fiber) {
                  return foundHostInstances;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          return false;
        }
        var hasBadMapPolyfill;
        {
          hasBadMapPolyfill = false;
          try {
            var nonExtensibleObject = Object.preventExtensions({});
            new Map([[nonExtensibleObject, null]]);
            new Set([nonExtensibleObject]);
          } catch (e2) {
            hasBadMapPolyfill = true;
          }
        }
        var debugCounter = 1;
        function FiberNode(tag, pendingProps, key, mode) {
          this.tag = tag;
          this.key = key;
          this.elementType = null;
          this.type = null;
          this.stateNode = null;
          this.return = null;
          this.child = null;
          this.sibling = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = pendingProps;
          this.memoizedProps = null;
          this.updateQueue = null;
          this.memoizedState = null;
          this.dependencies = null;
          this.mode = mode;
          this.flags = NoFlags;
          this.nextEffect = null;
          this.firstEffect = null;
          this.lastEffect = null;
          this.lanes = NoLanes;
          this.childLanes = NoLanes;
          this.alternate = null;
          {
            this.actualDuration = Number.NaN;
            this.actualStartTime = Number.NaN;
            this.selfBaseDuration = Number.NaN;
            this.treeBaseDuration = Number.NaN;
            this.actualDuration = 0;
            this.actualStartTime = -1;
            this.selfBaseDuration = 0;
            this.treeBaseDuration = 0;
          }
          {
            this._debugID = debugCounter++;
            this._debugSource = null;
            this._debugOwner = null;
            this._debugNeedsRemount = false;
            this._debugHookTypes = null;
            if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
              Object.preventExtensions(this);
            }
          }
        }
        var createFiber = function(tag, pendingProps, key, mode) {
          return new FiberNode(tag, pendingProps, key, mode);
        };
        function shouldConstruct$1(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function isSimpleFunctionComponent(type) {
          return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
        }
        function resolveLazyComponentTag(Component) {
          if (typeof Component === "function") {
            return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
          } else if (Component !== void 0 && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) {
              return ForwardRef;
            }
            if ($$typeof === REACT_MEMO_TYPE) {
              return MemoComponent;
            }
          }
          return IndeterminateComponent;
        }
        function createWorkInProgress(current2, pendingProps) {
          var workInProgress2 = current2.alternate;
          if (workInProgress2 === null) {
            workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
            workInProgress2.elementType = current2.elementType;
            workInProgress2.type = current2.type;
            workInProgress2.stateNode = current2.stateNode;
            {
              workInProgress2._debugID = current2._debugID;
              workInProgress2._debugSource = current2._debugSource;
              workInProgress2._debugOwner = current2._debugOwner;
              workInProgress2._debugHookTypes = current2._debugHookTypes;
            }
            workInProgress2.alternate = current2;
            current2.alternate = workInProgress2;
          } else {
            workInProgress2.pendingProps = pendingProps;
            workInProgress2.type = current2.type;
            workInProgress2.flags = NoFlags;
            workInProgress2.nextEffect = null;
            workInProgress2.firstEffect = null;
            workInProgress2.lastEffect = null;
            {
              workInProgress2.actualDuration = 0;
              workInProgress2.actualStartTime = -1;
            }
          }
          workInProgress2.childLanes = current2.childLanes;
          workInProgress2.lanes = current2.lanes;
          workInProgress2.child = current2.child;
          workInProgress2.memoizedProps = current2.memoizedProps;
          workInProgress2.memoizedState = current2.memoizedState;
          workInProgress2.updateQueue = current2.updateQueue;
          var currentDependencies = current2.dependencies;
          workInProgress2.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
          };
          workInProgress2.sibling = current2.sibling;
          workInProgress2.index = current2.index;
          workInProgress2.ref = current2.ref;
          {
            workInProgress2.selfBaseDuration = current2.selfBaseDuration;
            workInProgress2.treeBaseDuration = current2.treeBaseDuration;
          }
          {
            workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
              case FunctionComponent:
              case SimpleMemoComponent:
                workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                break;
              case ClassComponent:
                workInProgress2.type = resolveClassForHotReloading(current2.type);
                break;
              case ForwardRef:
                workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                break;
            }
          }
          return workInProgress2;
        }
        function resetWorkInProgress(workInProgress2, renderLanes2) {
          workInProgress2.flags &= Placement;
          workInProgress2.nextEffect = null;
          workInProgress2.firstEffect = null;
          workInProgress2.lastEffect = null;
          var current2 = workInProgress2.alternate;
          if (current2 === null) {
            workInProgress2.childLanes = NoLanes;
            workInProgress2.lanes = renderLanes2;
            workInProgress2.child = null;
            workInProgress2.memoizedProps = null;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            workInProgress2.dependencies = null;
            workInProgress2.stateNode = null;
            {
              workInProgress2.selfBaseDuration = 0;
              workInProgress2.treeBaseDuration = 0;
            }
          } else {
            workInProgress2.childLanes = current2.childLanes;
            workInProgress2.lanes = current2.lanes;
            workInProgress2.child = current2.child;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            workInProgress2.type = current2.type;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              lanes: currentDependencies.lanes,
              firstContext: currentDependencies.firstContext
            };
            {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
          }
          return workInProgress2;
        }
        function createHostRootFiber(tag) {
          var mode;
          if (tag === ConcurrentRoot) {
            mode = ConcurrentMode | BlockingMode | StrictMode;
          } else if (tag === BlockingRoot) {
            mode = BlockingMode | StrictMode;
          } else {
            mode = NoMode;
          }
          if (isDevToolsPresent) {
            mode |= ProfileMode;
          }
          return createFiber(HostRoot, null, null, mode);
        }
        function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
          var fiberTag = IndeterminateComponent;
          var resolvedType = type;
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              fiberTag = ClassComponent;
              {
                resolvedType = resolveClassForHotReloading(resolvedType);
              }
            } else {
              {
                resolvedType = resolveFunctionForHotReloading(resolvedType);
              }
            }
          } else if (typeof type === "string") {
            fiberTag = HostComponent;
          } else {
            getTag:
              switch (type) {
                case REACT_FRAGMENT_TYPE:
                  return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                case REACT_DEBUG_TRACING_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= DebugTracingMode;
                  break;
                case REACT_STRICT_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= StrictMode;
                  break;
                case REACT_PROFILER_TYPE:
                  return createFiberFromProfiler(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_TYPE:
                  return createFiberFromSuspense(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_LIST_TYPE:
                  return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                case REACT_OFFSCREEN_TYPE:
                  return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                case REACT_LEGACY_HIDDEN_TYPE:
                  return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);
                case REACT_SCOPE_TYPE:
                default: {
                  if (typeof type === "object" && type !== null) {
                    switch (type.$$typeof) {
                      case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                      case REACT_CONTEXT_TYPE:
                        fiberTag = ContextConsumer;
                        break getTag;
                      case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        {
                          resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        }
                        break getTag;
                      case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                      case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                      case REACT_BLOCK_TYPE:
                        fiberTag = Block;
                        break getTag;
                    }
                  }
                  var info = "";
                  {
                    if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                      info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                    }
                    var ownerName = owner ? getComponentName(owner.type) : null;
                    if (ownerName) {
                      info += "\n\nCheck the render method of `" + ownerName + "`.";
                    }
                  }
                  {
                    {
                      throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
                    }
                  }
                }
              }
          }
          var fiber = createFiber(fiberTag, pendingProps, key, mode);
          fiber.elementType = type;
          fiber.type = resolvedType;
          fiber.lanes = lanes;
          {
            fiber._debugOwner = owner;
          }
          return fiber;
        }
        function createFiberFromElement(element, mode, lanes) {
          var owner = null;
          {
            owner = element._owner;
          }
          var type = element.type;
          var key = element.key;
          var pendingProps = element.props;
          var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
          {
            fiber._debugSource = element._source;
            fiber._debugOwner = element._owner;
          }
          return fiber;
        }
        function createFiberFromFragment(elements, mode, lanes, key) {
          var fiber = createFiber(Fragment, elements, key, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromProfiler(pendingProps, mode, lanes, key) {
          {
            if (typeof pendingProps.id !== "string") {
              error('Profiler must specify an "id" as a prop');
            }
          }
          var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
          fiber.elementType = REACT_PROFILER_TYPE;
          fiber.type = REACT_PROFILER_TYPE;
          fiber.lanes = lanes;
          {
            fiber.stateNode = {
              effectDuration: 0,
              passiveEffectDuration: 0
            };
          }
          return fiber;
        }
        function createFiberFromSuspense(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
          fiber.type = REACT_SUSPENSE_TYPE;
          fiber.elementType = REACT_SUSPENSE_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
          {
            fiber.type = REACT_SUSPENSE_LIST_TYPE;
          }
          fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
          var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
          {
            fiber.type = REACT_OFFSCREEN_TYPE;
          }
          fiber.elementType = REACT_OFFSCREEN_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
          var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);
          {
            fiber.type = REACT_LEGACY_HIDDEN_TYPE;
          }
          fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromText(content, mode, lanes) {
          var fiber = createFiber(HostText, content, null, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromHostInstanceForDeletion() {
          var fiber = createFiber(HostComponent, null, null, NoMode);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          return fiber;
        }
        function createFiberFromPortal(portal, mode, lanes) {
          var pendingProps = portal.children !== null ? portal.children : [];
          var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
          fiber.lanes = lanes;
          fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
          };
          return fiber;
        }
        function assignFiberPropertiesInDEV(target, source) {
          if (target === null) {
            target = createFiber(IndeterminateComponent, null, null, NoMode);
          }
          target.tag = source.tag;
          target.key = source.key;
          target.elementType = source.elementType;
          target.type = source.type;
          target.stateNode = source.stateNode;
          target.return = source.return;
          target.child = source.child;
          target.sibling = source.sibling;
          target.index = source.index;
          target.ref = source.ref;
          target.pendingProps = source.pendingProps;
          target.memoizedProps = source.memoizedProps;
          target.updateQueue = source.updateQueue;
          target.memoizedState = source.memoizedState;
          target.dependencies = source.dependencies;
          target.mode = source.mode;
          target.flags = source.flags;
          target.nextEffect = source.nextEffect;
          target.firstEffect = source.firstEffect;
          target.lastEffect = source.lastEffect;
          target.lanes = source.lanes;
          target.childLanes = source.childLanes;
          target.alternate = source.alternate;
          {
            target.actualDuration = source.actualDuration;
            target.actualStartTime = source.actualStartTime;
            target.selfBaseDuration = source.selfBaseDuration;
            target.treeBaseDuration = source.treeBaseDuration;
          }
          target._debugID = source._debugID;
          target._debugSource = source._debugSource;
          target._debugOwner = source._debugOwner;
          target._debugNeedsRemount = source._debugNeedsRemount;
          target._debugHookTypes = source._debugHookTypes;
          return target;
        }
        function FiberRootNode(containerInfo, tag, hydrate2) {
          this.tag = tag;
          this.containerInfo = containerInfo;
          this.pendingChildren = null;
          this.current = null;
          this.pingCache = null;
          this.finishedWork = null;
          this.timeoutHandle = noTimeout;
          this.context = null;
          this.pendingContext = null;
          this.hydrate = hydrate2;
          this.callbackNode = null;
          this.callbackPriority = NoLanePriority;
          this.eventTimes = createLaneMap(NoLanes);
          this.expirationTimes = createLaneMap(NoTimestamp);
          this.pendingLanes = NoLanes;
          this.suspendedLanes = NoLanes;
          this.pingedLanes = NoLanes;
          this.expiredLanes = NoLanes;
          this.mutableReadLanes = NoLanes;
          this.finishedLanes = NoLanes;
          this.entangledLanes = NoLanes;
          this.entanglements = createLaneMap(NoLanes);
          {
            this.mutableSourceEagerHydrationData = null;
          }
          {
            this.interactionThreadID = tracing.unstable_getThreadID();
            this.memoizedInteractions = new Set();
            this.pendingInteractionMap = new Map();
          }
          {
            switch (tag) {
              case BlockingRoot:
                this._debugRootType = "createBlockingRoot()";
                break;
              case ConcurrentRoot:
                this._debugRootType = "createRoot()";
                break;
              case LegacyRoot:
                this._debugRootType = "createLegacyRoot()";
                break;
            }
          }
        }
        function createFiberRoot(containerInfo, tag, hydrate2, hydrationCallbacks) {
          var root2 = new FiberRootNode(containerInfo, tag, hydrate2);
          var uninitializedFiber = createHostRootFiber(tag);
          root2.current = uninitializedFiber;
          uninitializedFiber.stateNode = root2;
          initializeUpdateQueue(uninitializedFiber);
          return root2;
        }
        function registerMutableSourceForHydration(root2, mutableSource) {
          var getVersion = mutableSource._getVersion;
          var version = getVersion(mutableSource._source);
          if (root2.mutableSourceEagerHydrationData == null) {
            root2.mutableSourceEagerHydrationData = [mutableSource, version];
          } else {
            root2.mutableSourceEagerHydrationData.push(mutableSource, version);
          }
        }
        function createPortal(children, containerInfo, implementation) {
          var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
          return {
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children,
            containerInfo,
            implementation
          };
        }
        var didWarnAboutNestedUpdates;
        var didWarnAboutFindNodeInStrictMode;
        {
          didWarnAboutNestedUpdates = false;
          didWarnAboutFindNodeInStrictMode = {};
        }
        function getContextForSubtree(parentComponent) {
          if (!parentComponent) {
            return emptyContextObject;
          }
          var fiber = get(parentComponent);
          var parentContext = findCurrentUnmaskedContext(fiber);
          if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) {
              return processChildContext(fiber, Component, parentContext);
            }
          }
          return parentContext;
        }
        function findHostInstanceWithWarning(component, methodName) {
          {
            var fiber = get(component);
            if (fiber === void 0) {
              if (typeof component.render === "function") {
                {
                  {
                    throw Error("Unable to find node on an unmounted component.");
                  }
                }
              } else {
                {
                  {
                    throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
                  }
                }
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.mode & StrictMode) {
              var componentName = getComponentName(fiber.type) || "Component";
              if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                  setCurrentFiber(hostFiber);
                  if (fiber.mode & StrictMode) {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  } else {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  }
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(previousFiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
            return hostFiber.stateNode;
          }
        }
        function createContainer(containerInfo, tag, hydrate2, hydrationCallbacks) {
          return createFiberRoot(containerInfo, tag, hydrate2);
        }
        function updateContainer(element, container, parentComponent, callback) {
          {
            onScheduleRoot(container, element);
          }
          var current$1 = container.current;
          var eventTime = requestEventTime();
          {
            if (typeof jest !== "undefined") {
              warnIfUnmockedScheduler(current$1);
              warnIfNotScopedWithMatchingAct(current$1);
            }
          }
          var lane = requestUpdateLane(current$1);
          var context2 = getContextForSubtree(parentComponent);
          if (container.context === null) {
            container.context = context2;
          } else {
            container.pendingContext = context2;
          }
          {
            if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
              didWarnAboutNestedUpdates = true;
              error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentName(current.type) || "Unknown");
            }
          }
          var update = createUpdate(eventTime, lane);
          update.payload = {
            element
          };
          callback = callback === void 0 ? null : callback;
          if (callback !== null) {
            {
              if (typeof callback !== "function") {
                error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
              }
            }
            update.callback = callback;
          }
          enqueueUpdate(current$1, update);
          scheduleUpdateOnFiber(current$1, lane, eventTime);
          return lane;
        }
        function getPublicRootInstance(container) {
          var containerFiber = container.current;
          if (!containerFiber.child) {
            return null;
          }
          switch (containerFiber.child.tag) {
            case HostComponent:
              return getPublicInstance(containerFiber.child.stateNode);
            default:
              return containerFiber.child.stateNode;
          }
        }
        function markRetryLaneImpl(fiber, retryLane) {
          var suspenseState = fiber.memoizedState;
          if (suspenseState !== null && suspenseState.dehydrated !== null) {
            suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
          }
        }
        function markRetryLaneIfNotHydrated(fiber, retryLane) {
          markRetryLaneImpl(fiber, retryLane);
          var alternate = fiber.alternate;
          if (alternate) {
            markRetryLaneImpl(alternate, retryLane);
          }
        }
        function attemptUserBlockingHydration$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var eventTime = requestEventTime();
          var lane = InputDiscreteHydrationLane;
          scheduleUpdateOnFiber(fiber, lane, eventTime);
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function attemptContinuousHydration$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var eventTime = requestEventTime();
          var lane = SelectiveHydrationLane;
          scheduleUpdateOnFiber(fiber, lane, eventTime);
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function attemptHydrationAtCurrentPriority$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(fiber);
          scheduleUpdateOnFiber(fiber, lane, eventTime);
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function runWithPriority$2(priority, fn2) {
          try {
            setCurrentUpdateLanePriority(priority);
            return fn2();
          } finally {
          }
        }
        function findHostInstanceWithNoPortals(fiber) {
          var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
          if (hostFiber === null) {
            return null;
          }
          if (hostFiber.tag === FundamentalComponent) {
            return hostFiber.stateNode.instance;
          }
          return hostFiber.stateNode;
        }
        var shouldSuspendImpl = function(fiber) {
          return false;
        };
        function shouldSuspend(fiber) {
          return shouldSuspendImpl(fiber);
        }
        var overrideHookState = null;
        var overrideHookStateDeletePath = null;
        var overrideHookStateRenamePath = null;
        var overrideProps = null;
        var overridePropsDeletePath = null;
        var overridePropsRenamePath = null;
        var scheduleUpdate = null;
        var setSuspenseHandler = null;
        {
          var copyWithDeleteImpl = function(obj, path, index2) {
            var key = path[index2];
            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
            if (index2 + 1 === path.length) {
              if (Array.isArray(updated)) {
                updated.splice(key, 1);
              } else {
                delete updated[key];
              }
              return updated;
            }
            updated[key] = copyWithDeleteImpl(obj[key], path, index2 + 1);
            return updated;
          };
          var copyWithDelete = function(obj, path) {
            return copyWithDeleteImpl(obj, path, 0);
          };
          var copyWithRenameImpl = function(obj, oldPath, newPath, index2) {
            var oldKey = oldPath[index2];
            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
            if (index2 + 1 === oldPath.length) {
              var newKey = newPath[index2];
              updated[newKey] = updated[oldKey];
              if (Array.isArray(updated)) {
                updated.splice(oldKey, 1);
              } else {
                delete updated[oldKey];
              }
            } else {
              updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index2 + 1);
            }
            return updated;
          };
          var copyWithRename = function(obj, oldPath, newPath) {
            if (oldPath.length !== newPath.length) {
              warn("copyWithRename() expects paths of the same length");
              return;
            } else {
              for (var i = 0; i < newPath.length - 1; i++) {
                if (oldPath[i] !== newPath[i]) {
                  warn("copyWithRename() expects paths to be the same except for the deepest key");
                  return;
                }
              }
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
          };
          var copyWithSetImpl = function(obj, path, index2, value) {
            if (index2 >= path.length) {
              return value;
            }
            var key = path[index2];
            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
            updated[key] = copyWithSetImpl(obj[key], path, index2 + 1, value);
            return updated;
          };
          var copyWithSet = function(obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
          };
          var findHook = function(fiber, id) {
            var currentHook2 = fiber.memoizedState;
            while (currentHook2 !== null && id > 0) {
              currentHook2 = currentHook2.next;
              id--;
            }
            return currentHook2;
          };
          overrideHookState = function(fiber, id, path, value) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithSet(hook.memoizedState, path, value);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = _assign({}, fiber.memoizedProps);
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
          };
          overrideHookStateDeletePath = function(fiber, id, path) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithDelete(hook.memoizedState, path);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = _assign({}, fiber.memoizedProps);
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
          };
          overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = _assign({}, fiber.memoizedProps);
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
          };
          overrideProps = function(fiber, path, value) {
            fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          overridePropsDeletePath = function(fiber, path) {
            fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          overridePropsRenamePath = function(fiber, oldPath, newPath) {
            fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          scheduleUpdate = function(fiber) {
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          setSuspenseHandler = function(newShouldSuspendImpl) {
            shouldSuspendImpl = newShouldSuspendImpl;
          };
        }
        function findHostInstanceByFiber(fiber) {
          var hostFiber = findCurrentHostFiber(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        function emptyFindFiberByHostInstance(instance) {
          return null;
        }
        function getCurrentFiberForDevTools() {
          return current;
        }
        function injectIntoDevTools(devToolsConfig) {
          var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
          var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
          return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState,
            overrideHookStateDeletePath,
            overrideHookStateRenamePath,
            overrideProps,
            overridePropsDeletePath,
            overridePropsRenamePath,
            setSuspenseHandler,
            scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher2,
            findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            findHostInstancesForRefresh,
            scheduleRefresh,
            scheduleRoot,
            setRefreshHandler,
            getCurrentFiber: getCurrentFiberForDevTools
          });
        }
        function ReactDOMRoot(container, options3) {
          this._internalRoot = createRootImpl(container, ConcurrentRoot, options3);
        }
        function ReactDOMBlockingRoot(container, tag, options3) {
          this._internalRoot = createRootImpl(container, tag, options3);
        }
        ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function(children) {
          var root2 = this._internalRoot;
          {
            if (typeof arguments[1] === "function") {
              error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            }
            var container = root2.containerInfo;
            if (container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(root2.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                }
              }
            }
          }
          updateContainer(children, root2, null, null);
        };
        ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function() {
          {
            if (typeof arguments[0] === "function") {
              error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            }
          }
          var root2 = this._internalRoot;
          var container = root2.containerInfo;
          updateContainer(null, root2, null, function() {
            unmarkContainerAsRoot(container);
          });
        };
        function createRootImpl(container, tag, options3) {
          var hydrate2 = options3 != null && options3.hydrate === true;
          var hydrationCallbacks = options3 != null && options3.hydrationOptions || null;
          var mutableSources = options3 != null && options3.hydrationOptions != null && options3.hydrationOptions.mutableSources || null;
          var root2 = createContainer(container, tag, hydrate2);
          markContainerAsRoot(root2.current, container);
          var containerNodeType = container.nodeType;
          {
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
          }
          if (mutableSources) {
            for (var i = 0; i < mutableSources.length; i++) {
              var mutableSource = mutableSources[i];
              registerMutableSourceForHydration(root2, mutableSource);
            }
          }
          return root2;
        }
        function createLegacyRoot(container, options3) {
          return new ReactDOMBlockingRoot(container, LegacyRoot, options3);
        }
        function isValidContainer(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
        }
        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
        var topLevelUpdateWarnings;
        var warnedAboutHydrateAPI = false;
        {
          topLevelUpdateWarnings = function(container) {
            if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                }
              }
            }
            var isRootRenderedBySomeReact = !!container._reactRootContainer;
            var rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
            if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
              error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
            }
            if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
              error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
            }
          };
        }
        function getReactRootElementInContainer(container) {
          if (!container) {
            return null;
          }
          if (container.nodeType === DOCUMENT_NODE) {
            return container.documentElement;
          } else {
            return container.firstChild;
          }
        }
        function shouldHydrateDueToLegacyHeuristic(container) {
          var rootElement = getReactRootElementInContainer(container);
          return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
        }
        function legacyCreateRootFromDOMContainer(container, forceHydrate) {
          var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
          if (!shouldHydrate) {
            var warned = false;
            var rootSibling;
            while (rootSibling = container.lastChild) {
              {
                if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
                  warned = true;
                  error("render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.");
                }
              }
              container.removeChild(rootSibling);
            }
          }
          {
            if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
              warnedAboutHydrateAPI = true;
              warn("render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.");
            }
          }
          return createLegacyRoot(container, shouldHydrate ? {
            hydrate: true
          } : void 0);
        }
        function warnOnInvalidCallback$1(callback, callerName) {
          {
            if (callback !== null && typeof callback !== "function") {
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          }
        }
        function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
          {
            topLevelUpdateWarnings(container);
            warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
          }
          var root2 = container._reactRootContainer;
          var fiberRoot;
          if (!root2) {
            root2 = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
            fiberRoot = root2._internalRoot;
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(fiberRoot);
                originalCallback.call(instance);
              };
            }
            unbatchedUpdates(function() {
              updateContainer(children, fiberRoot, parentComponent, callback);
            });
          } else {
            fiberRoot = root2._internalRoot;
            if (typeof callback === "function") {
              var _originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(fiberRoot);
                _originalCallback.call(instance);
              };
            }
            updateContainer(children, fiberRoot, parentComponent, callback);
          }
          return getPublicRootInstance(fiberRoot);
        }
        function findDOMNode(componentOrElement) {
          {
            var owner = ReactCurrentOwner$3.current;
            if (owner !== null && owner.stateNode !== null) {
              var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
              if (!warnedAboutRefsInRender) {
                error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(owner.type) || "A component");
              }
              owner.stateNode._warnedAboutRefsInRender = true;
            }
          }
          if (componentOrElement == null) {
            return null;
          }
          if (componentOrElement.nodeType === ELEMENT_NODE) {
            return componentOrElement;
          }
          {
            return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
          }
        }
        function hydrate(element, container, callback) {
          if (!isValidContainer(container)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call createRoot(container, {hydrate: true}).render(element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
        }
        function render(element, container, callback) {
          if (!isValidContainer(container)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.render(element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
        }
        function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          if (!isValidContainer(containerNode)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          if (!(parentComponent != null && has(parentComponent))) {
            {
              throw Error("parentComponent must be a valid React Component");
            }
          }
          return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
        }
        function unmountComponentAtNode(container) {
          if (!isValidContainer(container)) {
            {
              throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
            }
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?");
            }
          }
          if (container._reactRootContainer) {
            {
              var rootEl = getReactRootElementInContainer(container);
              var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
              if (renderedByDifferentReact) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
              }
            }
            unbatchedUpdates(function() {
              legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                container._reactRootContainer = null;
                unmarkContainerAsRoot(container);
              });
            });
            return true;
          } else {
            {
              var _rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
              var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
              if (hasNonRootReactChild) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
              }
            }
            return false;
          }
        }
        setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
        setAttemptContinuousHydration(attemptContinuousHydration$1);
        setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
        setAttemptHydrationAtPriority(runWithPriority$2);
        var didWarnAboutUnstableCreatePortal = false;
        {
          if (typeof Map !== "function" || Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
            error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
          }
        }
        setRestoreImplementation(restoreControlledState$3);
        setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);
        function createPortal$1(children, container) {
          var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          if (!isValidContainer(container)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          return createPortal(children, container, null, key);
        }
        function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
        }
        function unstable_createPortal(children, container) {
          var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          {
            if (!didWarnAboutUnstableCreatePortal) {
              didWarnAboutUnstableCreatePortal = true;
              warn('The ReactDOM.unstable_createPortal() alias has been deprecated, and will be removed in React 18+. Update your code to use ReactDOM.createPortal() instead. It has the exact same API, but without the "unstable_" prefix.');
            }
          }
          return createPortal$1(children, container, key);
        }
        var Internals = {
          Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            flushPassiveEffects,
            IsThisRendererActing
          ]
        };
        var foundDevTools = injectIntoDevTools({
          findFiberByHostInstance: getClosestInstanceFromNode,
          bundleType: 1,
          version: ReactVersion,
          rendererPackageName: "react-dom"
        });
        {
          if (!foundDevTools && canUseDOM && window.top === window.self) {
            if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
              var protocol = window.location.protocol;
              if (/^(https?|file):$/.test(protocol)) {
                console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
              }
            }
          }
        }
        exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
        exports2.createPortal = createPortal$1;
        exports2.findDOMNode = findDOMNode;
        exports2.flushSync = flushSync;
        exports2.hydrate = hydrate;
        exports2.render = render;
        exports2.unmountComponentAtNode = unmountComponentAtNode;
        exports2.unstable_batchedUpdates = batchedUpdates$1;
        exports2.unstable_createPortal = unstable_createPortal;
        exports2.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
        exports2.version = ReactVersion;
      })();
    }
  }
});

// node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "node_modules/react-dom/index.js"(exports2, module2) {
    init_define_process();
    "use strict";
    function checkDCE() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
        return;
      }
      if (define_process_default.env.NODE_ENV !== "production") {
        throw new Error("^_^");
      }
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (err) {
        console.error(err);
      }
    }
    if (define_process_default.env.NODE_ENV === "production") {
      checkDCE();
      module2.exports = __require("./cjs/react-dom.production.min.js");
    } else {
      module2.exports = require_react_dom_development();
    }
  }
});

// node_modules/@headlessui/react/dist/headlessui.prod.cjs
var require_headlessui_prod = __commonJS({
  "node_modules/@headlessui/react/dist/headlessui.prod.cjs"(exports2, module2) {
    init_define_process();
    var Ro2 = Object.create;
    var $e = Object.defineProperty;
    var Eo2 = Object.getOwnPropertyDescriptor;
    var Co2 = Object.getOwnPropertyNames;
    var So2 = Object.getPrototypeOf;
    var Ao2 = Object.prototype.hasOwnProperty;
    var Bt2 = (e2) => $e(e2, "__esModule", { value: true });
    var ho2 = (e2, t) => {
      for (var r in t)
        $e(e2, r, { get: t[r], enumerable: true });
    };
    var Nt2 = (e2, t, r, o) => {
      if (t && typeof t == "object" || typeof t == "function")
        for (let n of Co2(t))
          !Ao2.call(e2, n) && (r || n !== "default") && $e(e2, n, { get: () => t[n], enumerable: !(o = Eo2(t, n)) || o.enumerable });
      return e2;
    };
    var $ = (e2, t) => Nt2(Bt2($e(e2 != null ? Ro2(So2(e2)) : {}, "default", !t && e2 && e2.__esModule ? { get: () => e2.default, enumerable: true } : { value: e2, enumerable: true })), e2);
    var Oo2 = ((e2) => (t, r) => e2 && e2.get(t) || (r = Nt2(Bt2({}), t, 1), e2 && e2.set(t, r), r))(typeof WeakMap != "undefined" ? new WeakMap() : 0);
    var kn2 = {};
    ho2(kn2, { Combobox: () => zo2, Dialog: () => io2, Disclosure: () => Ge2, FocusTrap: () => Er2, Listbox: () => Ie, Menu: () => Ue, Popover: () => be, Portal: () => _e, RadioGroup: () => Ne2, Switch: () => at, Tab: () => Le2, Transition: () => Ke2 });
    var A = $(require_react(), 1);
    var Qe2 = require_react();
    function V() {
      let e2 = [], t = [], r = { enqueue(o) {
        t.push(o);
      }, requestAnimationFrame(...o) {
        let n = requestAnimationFrame(...o);
        r.add(() => cancelAnimationFrame(n));
      }, nextFrame(...o) {
        r.requestAnimationFrame(() => {
          r.requestAnimationFrame(...o);
        });
      }, setTimeout(...o) {
        let n = setTimeout(...o);
        r.add(() => clearTimeout(n));
      }, add(o) {
        e2.push(o);
      }, dispose() {
        for (let o of e2.splice(0))
          o();
      }, async workQueue() {
        for (let o of t.splice(0))
          await o();
      } };
      return r;
    }
    function le() {
      let [e2] = (0, Qe2.useState)(V);
      return (0, Qe2.useEffect)(() => () => e2.dispose(), [e2]), e2;
    }
    var Wt2 = require_react();
    var qe2 = require_react();
    var x = typeof window != "undefined" ? qe2.useLayoutEffect : qe2.useEffect;
    var Fe2 = require_react();
    var bt2 = { serverHandoffComplete: false };
    function ae2() {
      let [e2, t] = (0, Fe2.useState)(bt2.serverHandoffComplete);
      return (0, Fe2.useEffect)(() => {
        e2 !== true && t(true);
      }, [e2]), (0, Fe2.useEffect)(() => {
        bt2.serverHandoffComplete === false && (bt2.serverHandoffComplete = true);
      }, []), e2;
    }
    var Io2 = 0;
    function Kt2() {
      return ++Io2;
    }
    function O() {
      let e2 = ae2(), [t, r] = (0, Wt2.useState)(e2 ? Kt2 : null);
      return x(() => {
        t === null && r(Kt2());
      }, [t]), t != null ? "" + t : void 0;
    }
    var jt = require_react();
    var ze2 = require_react();
    function Ye2(e2) {
      let t = (0, ze2.useRef)(e2);
      return (0, ze2.useEffect)(() => {
        t.current = e2;
      }, [e2]), t;
    }
    function de(e2, t) {
      let [r, o] = (0, jt.useState)(e2), n = Ye2(e2);
      return x(() => o(n.current), [n, o, ...t]), r;
    }
    var ge = require_react();
    function H(...e2) {
      let t = (0, ge.useRef)(e2);
      return (0, ge.useEffect)(() => {
        t.current = e2;
      }, [e2]), (0, ge.useCallback)((r) => {
        for (let o of t.current)
          o != null && (typeof o == "function" ? o(r) : o.current = r);
      }, [t]);
    }
    var re = require_react();
    function h(e2, t, ...r) {
      if (e2 in t) {
        let n = t[e2];
        return typeof n == "function" ? n(...r) : n;
      }
      let o = new Error(`Tried to handle "${e2}" but there is no handler defined. Only defined handlers are: ${Object.keys(t).map((n) => `"${n}"`).join(", ")}.`);
      throw Error.captureStackTrace && Error.captureStackTrace(o, h), o;
    }
    function E({ props: e2, slot: t, defaultTag: r, features: o, visible: n = true, name: i }) {
      if (n)
        return Xe(e2, t, r, i);
      let a = o != null ? o : 0;
      if (a & 2) {
        let { static: l = false, ...s } = e2;
        if (l)
          return Xe(s, t, r, i);
      }
      if (a & 1) {
        let { unmount: l = true, ...s } = e2;
        return h(l ? 0 : 1, { [0]() {
          return null;
        }, [1]() {
          return Xe({ ...s, hidden: true, style: { display: "none" } }, t, r, i);
        } });
      }
      return Xe(e2, t, r, i);
    }
    function Xe(e2, t = {}, r, o) {
      let { as: n = r, children: i, refName: a = "ref", ...l } = Tt2(e2, ["unmount", "static"]), s = e2.ref !== void 0 ? { [a]: e2.ref } : {}, u = typeof i == "function" ? i(t) : i;
      if (l.className && typeof l.className == "function" && (l.className = l.className(t)), n === re.Fragment && Object.keys(l).length > 0) {
        if (!(0, re.isValidElement)(u) || Array.isArray(u) && u.length > 1)
          throw new Error(['Passing props on "Fragment"!', "", `The current component <${o} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(l).map((c) => `  - ${c}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((c) => `  - ${c}`).join(`
`)].join(`
`));
        return (0, re.cloneElement)(u, Object.assign({}, Lo2(Do2(Tt2(l, ["ref"])), u.props, ["onClick"]), s));
      }
      return (0, re.createElement)(n, Object.assign({}, Tt2(l, ["ref"]), n !== re.Fragment && s), u);
    }
    function Lo2(e2, t, r) {
      let o = Object.assign({}, e2);
      for (let n of r)
        e2[n] !== void 0 && t[n] !== void 0 && Object.assign(o, { [n](i) {
          i.defaultPrevented || e2[n](i), i.defaultPrevented || t[n](i);
        } });
      return o;
    }
    function N2(e2) {
      var t;
      return Object.assign((0, re.forwardRef)(e2), { displayName: (t = e2.displayName) != null ? t : e2.name });
    }
    function Do2(e2) {
      let t = Object.assign({}, e2);
      for (let r in t)
        t[r] === void 0 && delete t[r];
      return t;
    }
    function Tt2(e2, t = []) {
      let r = Object.assign({}, e2);
      for (let o of t)
        o in r && delete r[o];
      return r;
    }
    function Mo2(e2) {
      throw new Error("Unexpected object: " + e2);
    }
    function Pe2(e2, t) {
      let r = t.resolveItems();
      if (r.length <= 0)
        return null;
      let o = t.resolveActiveIndex(), n = o != null ? o : -1, i = (() => {
        switch (e2.focus) {
          case 0:
            return r.findIndex((a) => !t.resolveDisabled(a));
          case 1: {
            let a = r.slice().reverse().findIndex((l, s, u) => n !== -1 && u.length - s - 1 >= n ? false : !t.resolveDisabled(l));
            return a === -1 ? a : r.length - 1 - a;
          }
          case 2:
            return r.findIndex((a, l) => l <= n ? false : !t.resolveDisabled(a));
          case 3: {
            let a = r.slice().reverse().findIndex((l) => !t.resolveDisabled(l));
            return a === -1 ? a : r.length - 1 - a;
          }
          case 4:
            return r.findIndex((a) => t.resolveId(a) === e2.id);
          case 5:
            return null;
          default:
            Mo2(e2);
        }
      })();
      return i === -1 ? o : i;
    }
    function q(e2) {
      let t = e2.parentElement, r = null;
      for (; t && !(t instanceof HTMLFieldSetElement); )
        t instanceof HTMLLegendElement && (r = t), t = t.parentElement;
      let o = (t == null ? void 0 : t.getAttribute("disabled")) === "";
      return o && Fo2(r) ? false : o;
    }
    function Fo2(e2) {
      if (!e2)
        return false;
      let t = e2.previousElementSibling;
      for (; t !== null; ) {
        if (t instanceof HTMLLegendElement)
          return false;
        t = t.previousElementSibling;
      }
      return true;
    }
    var Je = require_react();
    function j2(e2, t, r) {
      let o = (0, Je.useRef)(t);
      o.current = t, (0, Je.useEffect)(() => {
        function n(i) {
          o.current.call(window, i);
        }
        return window.addEventListener(e2, n, r), () => window.removeEventListener(e2, n, r);
      }, [e2, r]);
    }
    var xe = $(require_react(), 1);
    var yt = (0, xe.createContext)(null);
    yt.displayName = "OpenClosedContext";
    function Q() {
      return (0, xe.useContext)(yt);
    }
    function te2({ value: e2, children: t }) {
      return xe.default.createElement(yt.Provider, { value: e2 }, t);
    }
    var Vt = require_react();
    function $t2(e2) {
      var r;
      if (e2.type)
        return e2.type;
      let t = (r = e2.as) != null ? r : "button";
      if (typeof t == "string" && t.toLowerCase() === "button")
        return "button";
    }
    function X(e2, t) {
      let [r, o] = (0, Vt.useState)(() => $t2(e2));
      return x(() => {
        o($t2(e2));
      }, [e2.type, e2.as]), x(() => {
        r || !t.current || t.current instanceof HTMLButtonElement && !t.current.hasAttribute("type") && o("button");
      }, [r, t]), r;
    }
    var we2 = require_react();
    function ve2({ container: e2, accept: t, walk: r, enabled: o = true }) {
      let n = (0, we2.useRef)(t), i = (0, we2.useRef)(r);
      (0, we2.useEffect)(() => {
        n.current = t, i.current = r;
      }, [t, r]), x(() => {
        if (!e2 || !o)
          return;
        let a = n.current, l = i.current, s = Object.assign((c) => a(c), { acceptNode: a }), u = document.createTreeWalker(e2, NodeFilter.SHOW_ELEMENT, s, false);
        for (; u.nextNode(); )
          l(u.currentNode);
      }, [e2, o, n, i]);
    }
    var wo2 = { [1](e2) {
      return e2.disabled || e2.comboboxState === 1 ? e2 : { ...e2, activeOptionIndex: null, comboboxState: 1 };
    }, [0](e2) {
      return e2.disabled || e2.comboboxState === 0 ? e2 : { ...e2, comboboxState: 0 };
    }, [2](e2, t) {
      return e2.disabled === t.disabled ? e2 : { ...e2, disabled: t.disabled };
    }, [3](e2, t) {
      if (e2.disabled || e2.optionsRef.current && !e2.optionsPropsRef.current.static && e2.comboboxState === 1)
        return e2;
      let r = Pe2(t, { resolveItems: () => e2.options, resolveActiveIndex: () => e2.activeOptionIndex, resolveId: (o) => o.id, resolveDisabled: (o) => o.dataRef.current.disabled });
      return e2.activeOptionIndex === r ? e2 : { ...e2, activeOptionIndex: r };
    }, [4]: (e2, t) => {
      var i;
      let r = e2.activeOptionIndex !== null ? e2.options[e2.activeOptionIndex] : null, o = Array.from((i = e2.optionsRef.current) == null ? void 0 : i.querySelectorAll('[id^="headlessui-combobox-option-"]')).reduce((a, l, s) => Object.assign(a, { [l.id]: s }), {}), n = [...e2.options, { id: t.id, dataRef: t.dataRef }].sort((a, l) => o[a.id] - o[l.id]);
      return { ...e2, options: n, activeOptionIndex: (() => r === null ? null : n.indexOf(r))() };
    }, [5]: (e2, t) => {
      let r = e2.options.slice(), o = e2.activeOptionIndex !== null ? r[e2.activeOptionIndex] : null, n = r.findIndex((i) => i.id === t.id);
      return n !== -1 && r.splice(n, 1), { ...e2, options: r, activeOptionIndex: (() => n === e2.activeOptionIndex || o === null ? null : r.indexOf(o))() };
    } };
    var gt = (0, A.createContext)(null);
    gt.displayName = "ComboboxContext";
    function Ee2(e2) {
      let t = (0, A.useContext)(gt);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <Combobox /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, Ee2), r;
      }
      return t;
    }
    var Pt = (0, A.createContext)(null);
    Pt.displayName = "ComboboxActions";
    function Ze2() {
      let e2 = (0, A.useContext)(Pt);
      if (e2 === null) {
        let t = new Error("ComboboxActions is missing a parent <Combobox /> component.");
        throw Error.captureStackTrace && Error.captureStackTrace(t, Ze2), t;
      }
      return e2;
    }
    function ko2(e2, t) {
      return h(t.type, wo2, e2, t);
    }
    var _o2 = A.Fragment;
    var Go2 = N2(function(t, r) {
      let { value: o, onChange: n, disabled: i = false, ...a } = t, l = (0, A.useRef)({ value: o, onChange: n }), s = (0, A.useRef)({ static: false, hold: false }), u = (0, A.useRef)({ displayValue: void 0 }), c = (0, A.useReducer)(ko2, { comboboxState: 1, comboboxPropsRef: l, optionsPropsRef: s, inputPropsRef: u, labelRef: (0, A.createRef)(), inputRef: (0, A.createRef)(), buttonRef: (0, A.createRef)(), optionsRef: (0, A.createRef)(), disabled: i, options: [], activeOptionIndex: null }), [{ comboboxState: m, options: b, activeOptionIndex: T, optionsRef: y2, inputRef: p, buttonRef: f }, d2] = c;
      x(() => {
        l.current.value = o;
      }, [o, l]), x(() => {
        l.current.onChange = n;
      }, [n, l]), x(() => d2({ type: 2, disabled: i }), [i]), j2("mousedown", (D2) => {
        var ee, oe2, ne;
        let U = D2.target;
        m === 0 && (((ee = f.current) == null ? void 0 : ee.contains(U)) || ((oe2 = p.current) == null ? void 0 : oe2.contains(U)) || ((ne = y2.current) == null ? void 0 : ne.contains(U)) || d2({ type: 1 }));
      });
      let P = T === null ? null : b[T].dataRef.current.value, S = (0, A.useMemo)(() => ({ open: m === 0, disabled: i, activeIndex: T, activeOption: P }), [m, i, b, T]), R = (0, A.useCallback)(() => {
        if (!p.current || o === void 0)
          return;
        let D2 = u.current.displayValue;
        typeof D2 == "function" ? p.current.value = D2(o) : typeof o == "string" && (p.current.value = o);
      }, [o, p, u]), g = (0, A.useCallback)((D2) => {
        let U = b.find((oe2) => oe2.id === D2);
        if (!U)
          return;
        let { dataRef: ee } = U;
        l.current.onChange(ee.current.value), R();
      }, [b, l, p]), v = (0, A.useCallback)(() => {
        if (T !== null) {
          let { dataRef: D2 } = b[T];
          l.current.onChange(D2.current.value), R();
        }
      }, [T, b, l, p]), I2 = (0, A.useMemo)(() => ({ selectOption: g, selectActiveOption: v }), [g, v]);
      return x(() => {
        m === 1 && R();
      }, [R, m]), x(R, [R]), A.default.createElement(Pt.Provider, { value: I2 }, A.default.createElement(gt.Provider, { value: c }, A.default.createElement(te2, { value: h(m, { [0]: 0, [1]: 1 }) }, E({ props: r === null ? a : { ...a, ref: r }, slot: S, defaultTag: _o2, name: "Combobox" }))));
    });
    var Ho2 = "input";
    var Uo2 = N2(function(t, r) {
      var R, g;
      let { value: o, onChange: n, displayValue: i, ...a } = t, [l, s] = Ee2("Combobox.Input"), u = Ze2(), c = H(l.inputRef, r), m = l.inputPropsRef, b = `headlessui-combobox-input-${O()}`, T = le(), y2 = Ye2(n);
      x(() => {
        m.current.displayValue = i;
      }, [i, m]);
      let p = (0, A.useCallback)((v) => {
        switch (v.key) {
          case "Enter":
            v.preventDefault(), v.stopPropagation(), u.selectActiveOption(), s({ type: 1 });
            break;
          case "ArrowDown":
            return v.preventDefault(), v.stopPropagation(), h(l.comboboxState, { [0]: () => s({ type: 3, focus: 2 }), [1]: () => {
              s({ type: 0 }), T.nextFrame(() => {
                l.comboboxPropsRef.current.value || s({ type: 3, focus: 0 });
              });
            } });
          case "ArrowUp":
            return v.preventDefault(), v.stopPropagation(), h(l.comboboxState, { [0]: () => s({ type: 3, focus: 1 }), [1]: () => {
              s({ type: 0 }), T.nextFrame(() => {
                l.comboboxPropsRef.current.value || s({ type: 3, focus: 3 });
              });
            } });
          case "Home":
          case "PageUp":
            return v.preventDefault(), v.stopPropagation(), s({ type: 3, focus: 0 });
          case "End":
          case "PageDown":
            return v.preventDefault(), v.stopPropagation(), s({ type: 3, focus: 3 });
          case "Escape":
            return v.preventDefault(), l.optionsRef.current && !l.optionsPropsRef.current.static && v.stopPropagation(), s({ type: 1 });
          case "Tab":
            u.selectActiveOption(), s({ type: 1 });
            break;
        }
      }, [T, s, l, u]), f = (0, A.useCallback)((v) => {
        var I2;
        s({ type: 0 }), (I2 = y2.current) == null || I2.call(y2, v);
      }, [s, y2]), d2 = de(() => {
        if (!!l.labelRef.current)
          return [l.labelRef.current.id].join(" ");
      }, [l.labelRef.current]), P = (0, A.useMemo)(() => ({ open: l.comboboxState === 0, disabled: l.disabled }), [l]), S = { ref: c, id: b, role: "combobox", type: "text", "aria-controls": (R = l.optionsRef.current) == null ? void 0 : R.id, "aria-expanded": l.disabled ? void 0 : l.comboboxState === 0, "aria-activedescendant": l.activeOptionIndex === null || (g = l.options[l.activeOptionIndex]) == null ? void 0 : g.id, "aria-labelledby": d2, disabled: l.disabled, onKeyDown: p, onChange: f };
      return E({ props: { ...a, ...S }, slot: P, defaultTag: Ho2, name: "Combobox.Input" });
    });
    var Bo2 = "button";
    var No2 = N2(function(t, r) {
      var p;
      let [o, n] = Ee2("Combobox.Button"), i = Ze2(), a = H(o.buttonRef, r), l = `headlessui-combobox-button-${O()}`, s = le(), u = (0, A.useCallback)((f) => {
        switch (f.key) {
          case "ArrowDown":
            return f.preventDefault(), f.stopPropagation(), o.comboboxState === 1 && (n({ type: 0 }), s.nextFrame(() => {
              o.comboboxPropsRef.current.value || n({ type: 3, focus: 0 });
            })), s.nextFrame(() => {
              var d2;
              return (d2 = o.inputRef.current) == null ? void 0 : d2.focus({ preventScroll: true });
            });
          case "ArrowUp":
            return f.preventDefault(), f.stopPropagation(), o.comboboxState === 1 && (n({ type: 0 }), s.nextFrame(() => {
              o.comboboxPropsRef.current.value || n({ type: 3, focus: 3 });
            })), s.nextFrame(() => {
              var d2;
              return (d2 = o.inputRef.current) == null ? void 0 : d2.focus({ preventScroll: true });
            });
          case "Escape":
            return f.preventDefault(), o.optionsRef.current && !o.optionsPropsRef.current.static && f.stopPropagation(), n({ type: 1 }), s.nextFrame(() => {
              var d2;
              return (d2 = o.inputRef.current) == null ? void 0 : d2.focus({ preventScroll: true });
            });
        }
      }, [s, n, o, i]), c = (0, A.useCallback)((f) => {
        if (q(f.currentTarget))
          return f.preventDefault();
        o.comboboxState === 0 ? n({ type: 1 }) : (f.preventDefault(), n({ type: 0 })), s.nextFrame(() => {
          var d2;
          return (d2 = o.inputRef.current) == null ? void 0 : d2.focus({ preventScroll: true });
        });
      }, [n, s, o]), m = de(() => {
        if (!!o.labelRef.current)
          return [o.labelRef.current.id, l].join(" ");
      }, [o.labelRef.current, l]), b = (0, A.useMemo)(() => ({ open: o.comboboxState === 0, disabled: o.disabled }), [o]), T = t, y2 = { ref: a, id: l, type: X(t, o.buttonRef), tabIndex: -1, "aria-haspopup": true, "aria-controls": (p = o.optionsRef.current) == null ? void 0 : p.id, "aria-expanded": o.disabled ? void 0 : o.comboboxState === 0, "aria-labelledby": m, disabled: o.disabled, onClick: c, onKeyDown: u };
      return E({ props: { ...T, ...y2 }, slot: b, defaultTag: Bo2, name: "Combobox.Button" });
    });
    var Wo2 = "label";
    function Ko2(e2) {
      let [t] = Ee2("Combobox.Label"), r = `headlessui-combobox-label-${O()}`, o = (0, A.useCallback)(() => {
        var a;
        return (a = t.inputRef.current) == null ? void 0 : a.focus({ preventScroll: true });
      }, [t.inputRef]), n = (0, A.useMemo)(() => ({ open: t.comboboxState === 0, disabled: t.disabled }), [t]), i = { ref: t.labelRef, id: r, onClick: o };
      return E({ props: { ...e2, ...i }, slot: n, defaultTag: Wo2, name: "Combobox.Label" });
    }
    var jo2 = "ul";
    var Vo2 = 1 | 2;
    var $o2 = N2(function(t, r) {
      var y2;
      let { hold: o = false, ...n } = t, [i] = Ee2("Combobox.Options"), { optionsPropsRef: a } = i, l = H(i.optionsRef, r), s = `headlessui-combobox-options-${O()}`, u = Q(), c = (() => u !== null ? u === 0 : i.comboboxState === 0)();
      x(() => {
        var p;
        a.current.static = (p = t.static) != null ? p : false;
      }, [a, t.static]), x(() => {
        a.current.hold = o;
      }, [o, a]), ve2({ container: i.optionsRef.current, enabled: i.comboboxState === 0, accept(p) {
        return p.getAttribute("role") === "option" ? NodeFilter.FILTER_REJECT : p.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
      }, walk(p) {
        p.setAttribute("role", "none");
      } });
      let m = de(() => {
        var p, f, d2;
        return (d2 = (p = i.labelRef.current) == null ? void 0 : p.id) != null ? d2 : (f = i.buttonRef.current) == null ? void 0 : f.id;
      }, [i.labelRef.current, i.buttonRef.current]), b = (0, A.useMemo)(() => ({ open: i.comboboxState === 0 }), [i]), T = { "aria-activedescendant": i.activeOptionIndex === null || (y2 = i.options[i.activeOptionIndex]) == null ? void 0 : y2.id, "aria-labelledby": m, role: "listbox", id: s, ref: l };
      return E({ props: { ...n, ...T }, slot: b, defaultTag: jo2, features: Vo2, visible: c, name: "Combobox.Options" });
    });
    var Qo2 = "li";
    function qo2(e2) {
      let { disabled: t = false, value: r, ...o } = e2, [n, i] = Ee2("Combobox.Option"), a = Ze2(), l = `headlessui-combobox-option-${O()}`, s = n.activeOptionIndex !== null ? n.options[n.activeOptionIndex].id === l : false, u = n.comboboxPropsRef.current.value === r, c = (0, A.useRef)({ disabled: t, value: r });
      x(() => {
        c.current.disabled = t;
      }, [c, t]), x(() => {
        c.current.value = r;
      }, [c, r]), x(() => {
        var P, S;
        c.current.textValue = (S = (P = document.getElementById(l)) == null ? void 0 : P.textContent) == null ? void 0 : S.toLowerCase();
      }, [c, l]);
      let m = (0, A.useCallback)(() => a.selectOption(l), [a, l]);
      x(() => (i({ type: 4, id: l, dataRef: c }), () => i({ type: 5, id: l })), [c, l]), x(() => {
        n.comboboxState === 0 && (!u || i({ type: 3, focus: 4, id: l }));
      }, [n.comboboxState, u, l]), x(() => {
        if (n.comboboxState !== 0 || !s)
          return;
        let P = V();
        return P.requestAnimationFrame(() => {
          var S, R;
          (R = (S = document.getElementById(l)) == null ? void 0 : S.scrollIntoView) == null || R.call(S, { block: "nearest" });
        }), P.dispose;
      }, [l, s, n.comboboxState, n.activeOptionIndex]);
      let b = (0, A.useCallback)((P) => {
        if (t)
          return P.preventDefault();
        m(), i({ type: 1 }), V().nextFrame(() => {
          var S;
          return (S = n.inputRef.current) == null ? void 0 : S.focus({ preventScroll: true });
        });
      }, [i, n.inputRef, t, m]), T = (0, A.useCallback)(() => {
        if (t)
          return i({ type: 3, focus: 5 });
        i({ type: 3, focus: 4, id: l });
      }, [t, l, i]), y2 = (0, A.useCallback)(() => {
        t || s || i({ type: 3, focus: 4, id: l });
      }, [t, s, l, i]), p = (0, A.useCallback)(() => {
        t || !s || n.optionsPropsRef.current.hold || i({ type: 3, focus: 5 });
      }, [t, s, i, n.comboboxState, n.comboboxPropsRef]), f = (0, A.useMemo)(() => ({ active: s, selected: u, disabled: t }), [s, u, t]);
      return E({ props: { ...o, ...{ id: l, role: "option", tabIndex: t === true ? void 0 : -1, "aria-disabled": t === true ? true : void 0, "aria-selected": u === true ? true : void 0, disabled: void 0, onClick: b, onFocus: T, onPointerMove: y2, onMouseMove: y2, onPointerLeave: p, onMouseLeave: p } }, slot: f, defaultTag: Qo2, name: "Combobox.Option" });
    }
    var zo2 = Object.assign(Go2, { Input: Uo2, Button: No2, Label: Ko2, Options: $o2, Option: qo2 });
    var M = $(require_react(), 1);
    var fe2 = require_react();
    var xt2 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e2) => `${e2}:not([tabindex='-1'])`).join(",");
    function ke(e2 = document.body) {
      return e2 == null ? [] : Array.from(e2.querySelectorAll(xt2));
    }
    function Ce(e2, t = 0) {
      return e2 === document.body ? false : h(t, { [0]() {
        return e2.matches(xt2);
      }, [1]() {
        let r = e2;
        for (; r !== null; ) {
          if (r.matches(xt2))
            return true;
          r = r.parentElement;
        }
        return false;
      } });
    }
    function Se(e2) {
      e2 == null || e2.focus({ preventScroll: true });
    }
    function W(e2, t) {
      let r = Array.isArray(e2) ? e2.slice().sort((c, m) => {
        let b = c.compareDocumentPosition(m);
        return b & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : b & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
      }) : ke(e2), o = document.activeElement, n = (() => {
        if (t & (1 | 4))
          return 1;
        if (t & (2 | 8))
          return -1;
        throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
      })(), i = (() => {
        if (t & 1)
          return 0;
        if (t & 2)
          return Math.max(0, r.indexOf(o)) - 1;
        if (t & 4)
          return Math.max(0, r.indexOf(o)) + 1;
        if (t & 8)
          return r.length - 1;
        throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
      })(), a = t & 32 ? { preventScroll: true } : {}, l = 0, s = r.length, u;
      do {
        if (l >= s || l + s <= 0)
          return 0;
        let c = i + l;
        if (t & 16)
          c = (c + s) % s;
        else {
          if (c < 0)
            return 3;
          if (c >= s)
            return 1;
        }
        u = r[c], u == null || u.focus(a), l += n;
      } while (u !== document.activeElement);
      return u.hasAttribute("tabindex") || u.setAttribute("tabindex", "0"), 2;
    }
    var et = require_react();
    function tt2() {
      let e2 = (0, et.useRef)(false);
      return (0, et.useEffect)(() => (e2.current = true, () => {
        e2.current = false;
      }), []), e2;
    }
    function ot2(e2, t = 30, { initialFocus: r, containers: o } = {}) {
      let n = (0, fe2.useRef)(typeof window != "undefined" ? document.activeElement : null), i = (0, fe2.useRef)(null), a = tt2(), l = Boolean(t & 16), s = Boolean(t & 2);
      (0, fe2.useEffect)(() => {
        !l || (n.current = document.activeElement);
      }, [l]), (0, fe2.useEffect)(() => {
        if (!!l)
          return () => {
            Se(n.current), n.current = null;
          };
      }, [l]), (0, fe2.useEffect)(() => {
        if (!s || !e2.current)
          return;
        let u = document.activeElement;
        if (r == null ? void 0 : r.current) {
          if ((r == null ? void 0 : r.current) === u) {
            i.current = u;
            return;
          }
        } else if (e2.current.contains(u)) {
          i.current = u;
          return;
        }
        (r == null ? void 0 : r.current) ? Se(r.current) : W(e2.current, 1) === 0 && console.warn("There are no focusable elements inside the <FocusTrap />"), i.current = document.activeElement;
      }, [e2, r, s]), j2("keydown", (u) => {
        !(t & 4) || !e2.current || u.key === "Tab" && (u.preventDefault(), W(e2.current, (u.shiftKey ? 2 : 4) | 16) === 2 && (i.current = document.activeElement));
      }), j2("focus", (u) => {
        if (!(t & 8))
          return;
        let c = new Set(o == null ? void 0 : o.current);
        if (c.add(e2), !c.size)
          return;
        let m = i.current;
        if (!m || !a.current)
          return;
        let b = u.target;
        b && b instanceof HTMLElement ? Yo2(c, b) ? (i.current = b, Se(b)) : (u.preventDefault(), u.stopPropagation(), Se(m)) : Se(i.current);
      }, true);
    }
    function Yo2(e2, t) {
      var r;
      for (let o of e2)
        if ((r = o.current) == null ? void 0 : r.contains(t))
          return true;
      return false;
    }
    var Ae2 = new Set();
    var ue2 = new Map();
    function zt2(e2) {
      e2.setAttribute("aria-hidden", "true"), e2.inert = true;
    }
    function Yt2(e2) {
      let t = ue2.get(e2);
      !t || (t["aria-hidden"] === null ? e2.removeAttribute("aria-hidden") : e2.setAttribute("aria-hidden", t["aria-hidden"]), e2.inert = t.inert);
    }
    function Xt2(e2, t = true) {
      x(() => {
        if (!t || !e2.current)
          return;
        let r = e2.current;
        Ae2.add(r);
        for (let o of ue2.keys())
          o.contains(r) && (Yt2(o), ue2.delete(o));
        return document.querySelectorAll("body > *").forEach((o) => {
          if (o instanceof HTMLElement) {
            for (let n of Ae2)
              if (o.contains(n))
                return;
            Ae2.size === 1 && (ue2.set(o, { "aria-hidden": o.getAttribute("aria-hidden"), inert: o.inert }), zt2(o));
          }
        }), () => {
          if (Ae2.delete(r), Ae2.size > 0)
            document.querySelectorAll("body > *").forEach((o) => {
              if (o instanceof HTMLElement && !ue2.has(o)) {
                for (let n of Ae2)
                  if (o.contains(n))
                    return;
                ue2.set(o, { "aria-hidden": o.getAttribute("aria-hidden"), inert: o.inert }), zt2(o);
              }
            });
          else
            for (let o of ue2.keys())
              Yt2(o), ue2.delete(o);
        };
      }, [t]);
    }
    var z = $(require_react(), 1);
    var eo = require_react_dom();
    var he = $(require_react(), 1);
    var Jt = (0, he.createContext)(false);
    function Zt2() {
      return (0, he.useContext)(Jt);
    }
    function Rt2(e2) {
      return he.default.createElement(Jt.Provider, { value: e2.force }, e2.children);
    }
    function Xo2() {
      let e2 = Zt2(), t = (0, z.useContext)(to2), [r, o] = (0, z.useState)(() => {
        if (!e2 && t !== null || typeof window == "undefined")
          return null;
        let n = document.getElementById("headlessui-portal-root");
        if (n)
          return n;
        let i = document.createElement("div");
        return i.setAttribute("id", "headlessui-portal-root"), document.body.appendChild(i);
      });
      return (0, z.useEffect)(() => {
        r !== null && (document.body.contains(r) || document.body.appendChild(r));
      }, [r]), (0, z.useEffect)(() => {
        e2 || t !== null && o(t.current);
      }, [t, o, e2]), r;
    }
    var Jo2 = z.Fragment;
    function _e(e2) {
      let t = e2, r = Xo2(), [o] = (0, z.useState)(() => typeof window == "undefined" ? null : document.createElement("div")), n = ae2();
      return x(() => {
        if (!!r && !!o)
          return r.appendChild(o), () => {
            var i;
            !r || !o || (r.removeChild(o), r.childNodes.length <= 0 && ((i = r.parentElement) == null || i.removeChild(r)));
          };
      }, [r, o]), n ? !r || !o ? null : (0, eo.createPortal)(E({ props: t, defaultTag: Jo2, name: "Portal" }), o) : null;
    }
    var Zo2 = z.Fragment;
    var to2 = (0, z.createContext)(null);
    function er2(e2) {
      let { target: t, ...r } = e2;
      return z.default.createElement(to2.Provider, { value: t }, E({ props: r, defaultTag: Zo2, name: "Popover.Group" }));
    }
    _e.Group = er2;
    var J = $(require_react(), 1);
    var oo2 = (0, J.createContext)(null);
    function ro2() {
      let e2 = (0, J.useContext)(oo2);
      if (e2 === null) {
        let t = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
        throw Error.captureStackTrace && Error.captureStackTrace(t, ro2), t;
      }
      return e2;
    }
    function me() {
      let [e2, t] = (0, J.useState)([]);
      return [e2.length > 0 ? e2.join(" ") : void 0, (0, J.useMemo)(() => function(o) {
        let n = (0, J.useCallback)((a) => (t((l) => [...l, a]), () => t((l) => {
          let s = l.slice(), u = s.indexOf(a);
          return u !== -1 && s.splice(u, 1), s;
        })), []), i = (0, J.useMemo)(() => ({ register: n, slot: o.slot, name: o.name, props: o.props }), [n, o.slot, o.name, o.props]);
        return J.default.createElement(oo2.Provider, { value: i }, o.children);
      }, [t])];
    }
    var tr2 = "p";
    function Oe(e2) {
      let t = ro2(), r = `headlessui-description-${O()}`;
      x(() => t.register(r), [r, t.register]);
      let o = e2, n = { ...t.props, id: r };
      return E({ props: { ...o, ...n }, slot: t.slot || {}, defaultTag: tr2, name: t.name || "Description" });
    }
    var pe = $(require_react(), 1);
    var Et = (0, pe.createContext)(() => {
    });
    Et.displayName = "StackContext";
    function or() {
      return (0, pe.useContext)(Et);
    }
    function no2({ children: e2, onUpdate: t, type: r, element: o }) {
      let n = or(), i = (0, pe.useCallback)((...a) => {
        t == null || t(...a), n(...a);
      }, [n, t]);
      return x(() => (i(0, r, o), () => i(1, r, o)), [i, r, o]), pe.default.createElement(Et.Provider, { value: i }, e2);
    }
    var nr2 = { [0](e2, t) {
      return e2.titleId === t.id ? e2 : { ...e2, titleId: t.id };
    } };
    var rt2 = (0, M.createContext)(null);
    rt2.displayName = "DialogContext";
    function Ct2(e2) {
      let t = (0, M.useContext)(rt2);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${io2.displayName} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, Ct2), r;
      }
      return t;
    }
    function ir2(e2, t) {
      return h(t.type, nr2, e2, t);
    }
    var lr2 = "div";
    var ar = 1 | 2;
    var sr = N2(function(t, r) {
      let { open: o, onClose: n, initialFocus: i, ...a } = t, [l, s] = (0, M.useState)(0), u = Q();
      o === void 0 && u !== null && (o = h(u, { [0]: true, [1]: false }));
      let c = (0, M.useRef)(new Set()), m = (0, M.useRef)(null), b = H(m, r), T = t.hasOwnProperty("open") || u !== null, y2 = t.hasOwnProperty("onClose");
      if (!T && !y2)
        throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
      if (!T)
        throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
      if (!y2)
        throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
      if (typeof o != "boolean")
        throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${o}`);
      if (typeof n != "function")
        throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${n}`);
      let p = o ? 0 : 1, f = (() => u !== null ? u === 0 : p === 0)(), [d2, P] = (0, M.useReducer)(ir2, { titleId: null, descriptionId: null }), S = (0, M.useCallback)(() => n(false), [n]), R = (0, M.useCallback)((K2) => P({ type: 0, id: K2 }), [P]), v = ae2() && p === 0, I2 = l > 1, D2 = (0, M.useContext)(rt2) !== null;
      ot2(m, v ? h(I2 ? "parent" : "leaf", { parent: 16, leaf: 30 }) : 1, { initialFocus: i, containers: c }), Xt2(m, I2 ? v : false), j2("mousedown", (K2) => {
        var Y;
        let ie = K2.target;
        p === 0 && (I2 || ((Y = m.current) == null ? void 0 : Y.contains(ie)) || S());
      }), j2("keydown", (K2) => {
        K2.key === "Escape" && p === 0 && (I2 || (K2.preventDefault(), K2.stopPropagation(), S()));
      }), (0, M.useEffect)(() => {
        if (p !== 0 || D2)
          return;
        let K2 = document.documentElement.style.overflow, ie = document.documentElement.style.paddingRight, Y = window.innerWidth - document.documentElement.clientWidth;
        return document.documentElement.style.overflow = "hidden", document.documentElement.style.paddingRight = `${Y}px`, () => {
          document.documentElement.style.overflow = K2, document.documentElement.style.paddingRight = ie;
        };
      }, [p, D2]), (0, M.useEffect)(() => {
        if (p !== 0 || !m.current)
          return;
        let K2 = new IntersectionObserver((ie) => {
          for (let Y of ie)
            Y.boundingClientRect.x === 0 && Y.boundingClientRect.y === 0 && Y.boundingClientRect.width === 0 && Y.boundingClientRect.height === 0 && S();
        });
        return K2.observe(m.current), () => K2.disconnect();
      }, [p, m, S]);
      let [ee, oe2] = me(), ne = `headlessui-dialog-${O()}`, je2 = (0, M.useMemo)(() => [{ dialogState: p, close: S, setTitleId: R }, d2], [p, d2, S, R]), De = (0, M.useMemo)(() => ({ open: p === 0 }), [p]), Ve2 = { ref: b, id: ne, role: "dialog", "aria-modal": p === 0 ? true : void 0, "aria-labelledby": d2.titleId, "aria-describedby": ee, onClick(K2) {
        K2.stopPropagation();
      } }, se = a;
      return M.default.createElement(no2, { type: "Dialog", element: m, onUpdate: (0, M.useCallback)((K2, ie, Y) => {
        ie === "Dialog" && h(K2, { [0]() {
          c.current.add(Y), s((Me2) => Me2 + 1);
        }, [1]() {
          c.current.add(Y), s((Me2) => Me2 - 1);
        } });
      }, []) }, M.default.createElement(Rt2, { force: true }, M.default.createElement(_e, null, M.default.createElement(rt2.Provider, { value: je2 }, M.default.createElement(_e.Group, { target: m }, M.default.createElement(Rt2, { force: false }, M.default.createElement(oe2, { slot: De, name: "Dialog.Description" }, E({ props: { ...se, ...Ve2 }, slot: De, defaultTag: lr2, features: ar, visible: f, name: "Dialog" }))))))));
    });
    var ur = "div";
    var pr2 = N2(function(t, r) {
      let [{ dialogState: o, close: n }] = Ct2("Dialog.Overlay"), i = H(r), a = `headlessui-dialog-overlay-${O()}`, l = (0, M.useCallback)((m) => {
        if (m.target === m.currentTarget) {
          if (q(m.currentTarget))
            return m.preventDefault();
          m.preventDefault(), m.stopPropagation(), n();
        }
      }, [n]), s = (0, M.useMemo)(() => ({ open: o === 0 }), [o]);
      return E({ props: { ...t, ...{ ref: i, id: a, "aria-hidden": true, onClick: l } }, slot: s, defaultTag: ur, name: "Dialog.Overlay" });
    });
    var dr2 = "h2";
    function cr2(e2) {
      let [{ dialogState: t, setTitleId: r }] = Ct2("Dialog.Title"), o = `headlessui-dialog-title-${O()}`;
      (0, M.useEffect)(() => (r(o), () => r(null)), [o, r]);
      let n = (0, M.useMemo)(() => ({ open: t === 0 }), [t]);
      return E({ props: { ...e2, ...{ id: o } }, slot: n, defaultTag: dr2, name: "Dialog.Title" });
    }
    var io2 = Object.assign(sr, { Overlay: pr2, Title: cr2, Description: Oe });
    var F = $(require_react(), 1);
    var fr2 = { [0]: (e2) => ({ ...e2, disclosureState: h(e2.disclosureState, { [0]: 1, [1]: 0 }) }), [1]: (e2) => e2.disclosureState === 1 ? e2 : { ...e2, disclosureState: 1 }, [4](e2) {
      return e2.linkedPanel === true ? e2 : { ...e2, linkedPanel: true };
    }, [5](e2) {
      return e2.linkedPanel === false ? e2 : { ...e2, linkedPanel: false };
    }, [2](e2, t) {
      return e2.buttonId === t.buttonId ? e2 : { ...e2, buttonId: t.buttonId };
    }, [3](e2, t) {
      return e2.panelId === t.panelId ? e2 : { ...e2, panelId: t.panelId };
    } };
    var St2 = (0, F.createContext)(null);
    St2.displayName = "DisclosureContext";
    function At(e2) {
      let t = (0, F.useContext)(St2);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${Ge2.name} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, At), r;
      }
      return t;
    }
    var ht = (0, F.createContext)(null);
    ht.displayName = "DisclosureAPIContext";
    function lo2(e2) {
      let t = (0, F.useContext)(ht);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${Ge2.name} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, lo2), r;
      }
      return t;
    }
    var Ot2 = (0, F.createContext)(null);
    Ot2.displayName = "DisclosurePanelContext";
    function mr2() {
      return (0, F.useContext)(Ot2);
    }
    function br2(e2, t) {
      return h(t.type, fr2, e2, t);
    }
    var Tr2 = F.Fragment;
    function Ge2(e2) {
      let { defaultOpen: t = false, ...r } = e2, o = `headlessui-disclosure-button-${O()}`, n = `headlessui-disclosure-panel-${O()}`, i = (0, F.useReducer)(br2, { disclosureState: t ? 0 : 1, linkedPanel: false, buttonId: o, panelId: n }), [{ disclosureState: a }, l] = i;
      (0, F.useEffect)(() => l({ type: 2, buttonId: o }), [o, l]), (0, F.useEffect)(() => l({ type: 3, panelId: n }), [n, l]);
      let s = (0, F.useCallback)((m) => {
        l({ type: 1 });
        let b = (() => m ? m instanceof HTMLElement ? m : m.current instanceof HTMLElement ? m.current : document.getElementById(o) : document.getElementById(o))();
        b == null || b.focus();
      }, [l, o]), u = (0, F.useMemo)(() => ({ close: s }), [s]), c = (0, F.useMemo)(() => ({ open: a === 0, close: s }), [a, s]);
      return F.default.createElement(St2.Provider, { value: i }, F.default.createElement(ht.Provider, { value: u }, F.default.createElement(te2, { value: h(a, { [0]: 0, [1]: 1 }) }, E({ props: r, slot: c, defaultTag: Tr2, name: "Disclosure" }))));
    }
    var yr2 = "button";
    var gr2 = N2(function(t, r) {
      let [o, n] = At("Disclosure.Button"), i = (0, F.useRef)(null), a = H(i, r), l = mr2(), s = l === null ? false : l === o.panelId, u = (0, F.useCallback)((f) => {
        var d2;
        if (s) {
          if (o.disclosureState === 1)
            return;
          switch (f.key) {
            case " ":
            case "Enter":
              f.preventDefault(), f.stopPropagation(), n({ type: 0 }), (d2 = document.getElementById(o.buttonId)) == null || d2.focus();
              break;
          }
        } else
          switch (f.key) {
            case " ":
            case "Enter":
              f.preventDefault(), f.stopPropagation(), n({ type: 0 });
              break;
          }
      }, [n, s, o.disclosureState, o.buttonId]), c = (0, F.useCallback)((f) => {
        switch (f.key) {
          case " ":
            f.preventDefault();
            break;
        }
      }, []), m = (0, F.useCallback)((f) => {
        var d2;
        q(f.currentTarget) || t.disabled || (s ? (n({ type: 0 }), (d2 = document.getElementById(o.buttonId)) == null || d2.focus()) : n({ type: 0 }));
      }, [n, t.disabled, o.buttonId, s]), b = (0, F.useMemo)(() => ({ open: o.disclosureState === 0 }), [o]), T = X(t, i), y2 = t, p = s ? { ref: a, type: T, onKeyDown: u, onClick: m } : { ref: a, id: o.buttonId, type: T, "aria-expanded": t.disabled ? void 0 : o.disclosureState === 0, "aria-controls": o.linkedPanel ? o.panelId : void 0, onKeyDown: u, onKeyUp: c, onClick: m };
      return E({ props: { ...y2, ...p }, slot: b, defaultTag: yr2, name: "Disclosure.Button" });
    });
    var Pr2 = "div";
    var xr2 = 1 | 2;
    var vr2 = N2(function(t, r) {
      let [o, n] = At("Disclosure.Panel"), { close: i } = lo2("Disclosure.Panel"), a = H(r, () => {
        o.linkedPanel || n({ type: 4 });
      }), l = Q(), s = (() => l !== null ? l === 0 : o.disclosureState === 0)();
      (0, F.useEffect)(() => () => n({ type: 5 }), [n]), (0, F.useEffect)(() => {
        var b;
        o.disclosureState === 1 && ((b = t.unmount) != null ? b : true) && n({ type: 5 });
      }, [o.disclosureState, t.unmount, n]);
      let u = (0, F.useMemo)(() => ({ open: o.disclosureState === 0, close: i }), [o, i]), c = { ref: a, id: o.panelId }, m = t;
      return F.default.createElement(Ot2.Provider, { value: o.panelId }, E({ props: { ...m, ...c }, slot: u, defaultTag: Pr2, features: xr2, visible: s, name: "Disclosure.Panel" }));
    });
    Ge2.Button = gr2;
    Ge2.Panel = vr2;
    var ao2 = require_react();
    var Rr2 = "div";
    function Er2(e2) {
      let t = (0, ao2.useRef)(null), { initialFocus: r, ...o } = e2, n = ae2();
      return ot2(t, n ? 30 : 1, { initialFocus: r }), E({ props: { ...o, ...{ ref: t } }, defaultTag: Rr2, name: "FocusTrap" });
    }
    var w = $(require_react(), 1);
    var Cr2 = { [1](e2) {
      return e2.disabled || e2.listboxState === 1 ? e2 : { ...e2, activeOptionIndex: null, listboxState: 1 };
    }, [0](e2) {
      return e2.disabled || e2.listboxState === 0 ? e2 : { ...e2, listboxState: 0 };
    }, [2](e2, t) {
      return e2.disabled === t.disabled ? e2 : { ...e2, disabled: t.disabled };
    }, [3](e2, t) {
      return e2.orientation === t.orientation ? e2 : { ...e2, orientation: t.orientation };
    }, [4](e2, t) {
      if (e2.disabled || e2.listboxState === 1)
        return e2;
      let r = Pe2(t, { resolveItems: () => e2.options, resolveActiveIndex: () => e2.activeOptionIndex, resolveId: (o) => o.id, resolveDisabled: (o) => o.dataRef.current.disabled });
      return e2.searchQuery === "" && e2.activeOptionIndex === r ? e2 : { ...e2, searchQuery: "", activeOptionIndex: r };
    }, [5]: (e2, t) => {
      if (e2.disabled || e2.listboxState === 1)
        return e2;
      let o = e2.searchQuery !== "" ? 0 : 1, n = e2.searchQuery + t.value.toLowerCase(), a = (e2.activeOptionIndex !== null ? e2.options.slice(e2.activeOptionIndex + o).concat(e2.options.slice(0, e2.activeOptionIndex + o)) : e2.options).find((s) => {
        var u;
        return !s.dataRef.current.disabled && ((u = s.dataRef.current.textValue) == null ? void 0 : u.startsWith(n));
      }), l = a ? e2.options.indexOf(a) : -1;
      return l === -1 || l === e2.activeOptionIndex ? { ...e2, searchQuery: n } : { ...e2, searchQuery: n, activeOptionIndex: l };
    }, [6](e2) {
      return e2.disabled || e2.listboxState === 1 || e2.searchQuery === "" ? e2 : { ...e2, searchQuery: "" };
    }, [7]: (e2, t) => {
      var n;
      let r = Array.from((n = e2.optionsRef.current) == null ? void 0 : n.querySelectorAll('[id^="headlessui-listbox-option-"]')).reduce((i, a, l) => Object.assign(i, { [a.id]: l }), {}), o = [...e2.options, { id: t.id, dataRef: t.dataRef }].sort((i, a) => r[i.id] - r[a.id]);
      return { ...e2, options: o };
    }, [8]: (e2, t) => {
      let r = e2.options.slice(), o = e2.activeOptionIndex !== null ? r[e2.activeOptionIndex] : null, n = r.findIndex((i) => i.id === t.id);
      return n !== -1 && r.splice(n, 1), { ...e2, options: r, activeOptionIndex: (() => n === e2.activeOptionIndex || o === null ? null : r.indexOf(o))() };
    } };
    var It = (0, w.createContext)(null);
    It.displayName = "ListboxContext";
    function He2(e2) {
      let t = (0, w.useContext)(It);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${Ie.name} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, He2), r;
      }
      return t;
    }
    function Sr2(e2, t) {
      return h(t.type, Cr2, e2, t);
    }
    var Ar2 = w.Fragment;
    function Ie(e2) {
      let { value: t, onChange: r, disabled: o = false, horizontal: n = false, ...i } = e2, a = n ? "horizontal" : "vertical", l = (0, w.useReducer)(Sr2, { listboxState: 1, propsRef: { current: { value: t, onChange: r } }, labelRef: (0, w.createRef)(), buttonRef: (0, w.createRef)(), optionsRef: (0, w.createRef)(), disabled: o, orientation: a, options: [], searchQuery: "", activeOptionIndex: null }), [{ listboxState: s, propsRef: u, optionsRef: c, buttonRef: m }, b] = l;
      x(() => {
        u.current.value = t;
      }, [t, u]), x(() => {
        u.current.onChange = r;
      }, [r, u]), x(() => b({ type: 2, disabled: o }), [o]), x(() => b({ type: 3, orientation: a }), [a]), j2("mousedown", (y2) => {
        var f, d2, P;
        let p = y2.target;
        s === 0 && (((f = m.current) == null ? void 0 : f.contains(p)) || ((d2 = c.current) == null ? void 0 : d2.contains(p)) || (b({ type: 1 }), Ce(p, 1) || (y2.preventDefault(), (P = m.current) == null || P.focus())));
      });
      let T = (0, w.useMemo)(() => ({ open: s === 0, disabled: o }), [s, o]);
      return w.default.createElement(It.Provider, { value: l }, w.default.createElement(te2, { value: h(s, { [0]: 0, [1]: 1 }) }, E({ props: i, slot: T, defaultTag: Ar2, name: "Listbox" })));
    }
    var hr2 = "button";
    var Or2 = N2(function(t, r) {
      var p;
      let [o, n] = He2("Listbox.Button"), i = H(o.buttonRef, r), a = `headlessui-listbox-button-${O()}`, l = le(), s = (0, w.useCallback)((f) => {
        switch (f.key) {
          case " ":
          case "Enter":
          case "ArrowDown":
            f.preventDefault(), n({ type: 0 }), l.nextFrame(() => {
              o.propsRef.current.value || n({ type: 4, focus: 0 });
            });
            break;
          case "ArrowUp":
            f.preventDefault(), n({ type: 0 }), l.nextFrame(() => {
              o.propsRef.current.value || n({ type: 4, focus: 3 });
            });
            break;
        }
      }, [n, o, l]), u = (0, w.useCallback)((f) => {
        switch (f.key) {
          case " ":
            f.preventDefault();
            break;
        }
      }, []), c = (0, w.useCallback)((f) => {
        if (q(f.currentTarget))
          return f.preventDefault();
        o.listboxState === 0 ? (n({ type: 1 }), l.nextFrame(() => {
          var d2;
          return (d2 = o.buttonRef.current) == null ? void 0 : d2.focus({ preventScroll: true });
        })) : (f.preventDefault(), n({ type: 0 }));
      }, [n, l, o]), m = de(() => {
        if (!!o.labelRef.current)
          return [o.labelRef.current.id, a].join(" ");
      }, [o.labelRef.current, a]), b = (0, w.useMemo)(() => ({ open: o.listboxState === 0, disabled: o.disabled }), [o]), T = t, y2 = { ref: i, id: a, type: X(t, o.buttonRef), "aria-haspopup": true, "aria-controls": (p = o.optionsRef.current) == null ? void 0 : p.id, "aria-expanded": o.disabled ? void 0 : o.listboxState === 0, "aria-labelledby": m, disabled: o.disabled, onKeyDown: s, onKeyUp: u, onClick: c };
      return E({ props: { ...T, ...y2 }, slot: b, defaultTag: hr2, name: "Listbox.Button" });
    });
    var Ir2 = "label";
    function Lr2(e2) {
      let [t] = He2("Listbox.Label"), r = `headlessui-listbox-label-${O()}`, o = (0, w.useCallback)(() => {
        var a;
        return (a = t.buttonRef.current) == null ? void 0 : a.focus({ preventScroll: true });
      }, [t.buttonRef]), n = (0, w.useMemo)(() => ({ open: t.listboxState === 0, disabled: t.disabled }), [t]), i = { ref: t.labelRef, id: r, onClick: o };
      return E({ props: { ...e2, ...i }, slot: n, defaultTag: Ir2, name: "Listbox.Label" });
    }
    var Dr2 = "ul";
    var Mr2 = 1 | 2;
    var Fr2 = N2(function(t, r) {
      var f;
      let [o, n] = He2("Listbox.Options"), i = H(o.optionsRef, r), a = `headlessui-listbox-options-${O()}`, l = le(), s = le(), u = Q(), c = (() => u !== null ? u === 0 : o.listboxState === 0)();
      x(() => {
        let d2 = o.optionsRef.current;
        !d2 || o.listboxState === 0 && d2 !== document.activeElement && d2.focus({ preventScroll: true });
      }, [o.listboxState, o.optionsRef]);
      let m = (0, w.useCallback)((d2) => {
        switch (s.dispose(), d2.key) {
          case " ":
            if (o.searchQuery !== "")
              return d2.preventDefault(), d2.stopPropagation(), n({ type: 5, value: d2.key });
          case "Enter":
            if (d2.preventDefault(), d2.stopPropagation(), n({ type: 1 }), o.activeOptionIndex !== null) {
              let { dataRef: P } = o.options[o.activeOptionIndex];
              o.propsRef.current.onChange(P.current.value);
            }
            V().nextFrame(() => {
              var P;
              return (P = o.buttonRef.current) == null ? void 0 : P.focus({ preventScroll: true });
            });
            break;
          case h(o.orientation, { vertical: "ArrowDown", horizontal: "ArrowRight" }):
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 4, focus: 2 });
          case h(o.orientation, { vertical: "ArrowUp", horizontal: "ArrowLeft" }):
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 4, focus: 1 });
          case "Home":
          case "PageUp":
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 4, focus: 0 });
          case "End":
          case "PageDown":
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 4, focus: 3 });
          case "Escape":
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 1 }), l.nextFrame(() => {
              var P;
              return (P = o.buttonRef.current) == null ? void 0 : P.focus({ preventScroll: true });
            });
          case "Tab":
            d2.preventDefault(), d2.stopPropagation();
            break;
          default:
            d2.key.length === 1 && (n({ type: 5, value: d2.key }), s.setTimeout(() => n({ type: 6 }), 350));
            break;
        }
      }, [l, n, s, o]), b = de(() => {
        var d2, P, S;
        return (S = (d2 = o.labelRef.current) == null ? void 0 : d2.id) != null ? S : (P = o.buttonRef.current) == null ? void 0 : P.id;
      }, [o.labelRef.current, o.buttonRef.current]), T = (0, w.useMemo)(() => ({ open: o.listboxState === 0 }), [o]), y2 = { "aria-activedescendant": o.activeOptionIndex === null || (f = o.options[o.activeOptionIndex]) == null ? void 0 : f.id, "aria-labelledby": b, "aria-orientation": o.orientation, id: a, onKeyDown: m, role: "listbox", tabIndex: 0, ref: i };
      return E({ props: { ...t, ...y2 }, slot: T, defaultTag: Dr2, features: Mr2, visible: c, name: "Listbox.Options" });
    });
    var wr2 = "li";
    function kr2(e2) {
      let { disabled: t = false, value: r, ...o } = e2, [n, i] = He2("Listbox.Option"), a = `headlessui-listbox-option-${O()}`, l = n.activeOptionIndex !== null ? n.options[n.activeOptionIndex].id === a : false, s = n.propsRef.current.value === r, u = (0, w.useRef)({ disabled: t, value: r });
      x(() => {
        u.current.disabled = t;
      }, [u, t]), x(() => {
        u.current.value = r;
      }, [u, r]), x(() => {
        var d2, P;
        u.current.textValue = (P = (d2 = document.getElementById(a)) == null ? void 0 : d2.textContent) == null ? void 0 : P.toLowerCase();
      }, [u, a]);
      let c = (0, w.useCallback)(() => n.propsRef.current.onChange(r), [n.propsRef, r]);
      x(() => (i({ type: 7, id: a, dataRef: u }), () => i({ type: 8, id: a })), [u, a]), x(() => {
        var d2, P;
        n.listboxState === 0 && (!s || (i({ type: 4, focus: 4, id: a }), (P = (d2 = document.getElementById(a)) == null ? void 0 : d2.focus) == null || P.call(d2)));
      }, [n.listboxState]), x(() => {
        if (n.listboxState !== 0 || !l)
          return;
        let d2 = V();
        return d2.requestAnimationFrame(() => {
          var P, S;
          (S = (P = document.getElementById(a)) == null ? void 0 : P.scrollIntoView) == null || S.call(P, { block: "nearest" });
        }), d2.dispose;
      }, [a, l, n.listboxState, n.activeOptionIndex]);
      let m = (0, w.useCallback)((d2) => {
        if (t)
          return d2.preventDefault();
        c(), i({ type: 1 }), V().nextFrame(() => {
          var P;
          return (P = n.buttonRef.current) == null ? void 0 : P.focus({ preventScroll: true });
        });
      }, [i, n.buttonRef, t, c]), b = (0, w.useCallback)(() => {
        if (t)
          return i({ type: 4, focus: 5 });
        i({ type: 4, focus: 4, id: a });
      }, [t, a, i]), T = (0, w.useCallback)(() => {
        t || l || i({ type: 4, focus: 4, id: a });
      }, [t, l, a, i]), y2 = (0, w.useCallback)(() => {
        t || !l || i({ type: 4, focus: 5 });
      }, [t, l, i]), p = (0, w.useMemo)(() => ({ active: l, selected: s, disabled: t }), [l, s, t]);
      return E({ props: { ...o, ...{ id: a, role: "option", tabIndex: t === true ? void 0 : -1, "aria-disabled": t === true ? true : void 0, "aria-selected": s === true ? true : void 0, disabled: void 0, onClick: m, onFocus: b, onPointerMove: T, onMouseMove: T, onPointerLeave: y2, onMouseLeave: y2 } }, slot: p, defaultTag: wr2, name: "Listbox.Option" });
    }
    Ie.Button = Or2;
    Ie.Label = Lr2;
    Ie.Options = Fr2;
    Ie.Option = kr2;
    var k2 = $(require_react(), 1);
    var _r2 = { [1](e2) {
      return e2.menuState === 1 ? e2 : { ...e2, activeItemIndex: null, menuState: 1 };
    }, [0](e2) {
      return e2.menuState === 0 ? e2 : { ...e2, menuState: 0 };
    }, [2]: (e2, t) => {
      let r = Pe2(t, { resolveItems: () => e2.items, resolveActiveIndex: () => e2.activeItemIndex, resolveId: (o) => o.id, resolveDisabled: (o) => o.dataRef.current.disabled });
      return e2.searchQuery === "" && e2.activeItemIndex === r ? e2 : { ...e2, searchQuery: "", activeItemIndex: r };
    }, [3]: (e2, t) => {
      let o = e2.searchQuery !== "" ? 0 : 1, n = e2.searchQuery + t.value.toLowerCase(), a = (e2.activeItemIndex !== null ? e2.items.slice(e2.activeItemIndex + o).concat(e2.items.slice(0, e2.activeItemIndex + o)) : e2.items).find((s) => {
        var u;
        return ((u = s.dataRef.current.textValue) == null ? void 0 : u.startsWith(n)) && !s.dataRef.current.disabled;
      }), l = a ? e2.items.indexOf(a) : -1;
      return l === -1 || l === e2.activeItemIndex ? { ...e2, searchQuery: n } : { ...e2, searchQuery: n, activeItemIndex: l };
    }, [4](e2) {
      return e2.searchQuery === "" ? e2 : { ...e2, searchQuery: "", searchActiveItemIndex: null };
    }, [5]: (e2, t) => {
      var n;
      let r = Array.from((n = e2.itemsRef.current) == null ? void 0 : n.querySelectorAll('[id^="headlessui-menu-item-"]')).reduce((i, a, l) => Object.assign(i, { [a.id]: l }), {}), o = [...e2.items, { id: t.id, dataRef: t.dataRef }].sort((i, a) => r[i.id] - r[a.id]);
      return { ...e2, items: o };
    }, [6]: (e2, t) => {
      let r = e2.items.slice(), o = e2.activeItemIndex !== null ? r[e2.activeItemIndex] : null, n = r.findIndex((i) => i.id === t.id);
      return n !== -1 && r.splice(n, 1), { ...e2, items: r, activeItemIndex: (() => n === e2.activeItemIndex || o === null ? null : r.indexOf(o))() };
    } };
    var Lt2 = (0, k2.createContext)(null);
    Lt2.displayName = "MenuContext";
    function nt2(e2) {
      let t = (0, k2.useContext)(Lt2);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${Ue.name} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, nt2), r;
      }
      return t;
    }
    function Gr2(e2, t) {
      return h(t.type, _r2, e2, t);
    }
    var Hr2 = k2.Fragment;
    function Ue(e2) {
      let t = (0, k2.useReducer)(Gr2, { menuState: 1, buttonRef: (0, k2.createRef)(), itemsRef: (0, k2.createRef)(), items: [], searchQuery: "", activeItemIndex: null }), [{ menuState: r, itemsRef: o, buttonRef: n }, i] = t;
      j2("mousedown", (l) => {
        var u, c, m;
        let s = l.target;
        r === 0 && (((u = n.current) == null ? void 0 : u.contains(s)) || ((c = o.current) == null ? void 0 : c.contains(s)) || (i({ type: 1 }), Ce(s, 1) || (l.preventDefault(), (m = n.current) == null || m.focus())));
      });
      let a = (0, k2.useMemo)(() => ({ open: r === 0 }), [r]);
      return k2.default.createElement(Lt2.Provider, { value: t }, k2.default.createElement(te2, { value: h(r, { [0]: 0, [1]: 1 }) }, E({ props: e2, slot: a, defaultTag: Hr2, name: "Menu" })));
    }
    var Ur2 = "button";
    var Br2 = N2(function(t, r) {
      var y2;
      let [o, n] = nt2("Menu.Button"), i = H(o.buttonRef, r), a = `headlessui-menu-button-${O()}`, l = le(), s = (0, k2.useCallback)((p) => {
        switch (p.key) {
          case " ":
          case "Enter":
          case "ArrowDown":
            p.preventDefault(), p.stopPropagation(), n({ type: 0 }), l.nextFrame(() => n({ type: 2, focus: 0 }));
            break;
          case "ArrowUp":
            p.preventDefault(), p.stopPropagation(), n({ type: 0 }), l.nextFrame(() => n({ type: 2, focus: 3 }));
            break;
        }
      }, [n, l]), u = (0, k2.useCallback)((p) => {
        switch (p.key) {
          case " ":
            p.preventDefault();
            break;
        }
      }, []), c = (0, k2.useCallback)((p) => {
        if (q(p.currentTarget))
          return p.preventDefault();
        t.disabled || (o.menuState === 0 ? (n({ type: 1 }), l.nextFrame(() => {
          var f;
          return (f = o.buttonRef.current) == null ? void 0 : f.focus({ preventScroll: true });
        })) : (p.preventDefault(), p.stopPropagation(), n({ type: 0 })));
      }, [n, l, o, t.disabled]), m = (0, k2.useMemo)(() => ({ open: o.menuState === 0 }), [o]), b = t, T = { ref: i, id: a, type: X(t, o.buttonRef), "aria-haspopup": true, "aria-controls": (y2 = o.itemsRef.current) == null ? void 0 : y2.id, "aria-expanded": t.disabled ? void 0 : o.menuState === 0, onKeyDown: s, onKeyUp: u, onClick: c };
      return E({ props: { ...b, ...T }, slot: m, defaultTag: Ur2, name: "Menu.Button" });
    });
    var Nr2 = "div";
    var Wr2 = 1 | 2;
    var Kr2 = N2(function(t, r) {
      var p, f;
      let [o, n] = nt2("Menu.Items"), i = H(o.itemsRef, r), a = `headlessui-menu-items-${O()}`, l = le(), s = Q(), u = (() => s !== null ? s === 0 : o.menuState === 0)();
      (0, k2.useEffect)(() => {
        let d2 = o.itemsRef.current;
        !d2 || o.menuState === 0 && d2 !== document.activeElement && d2.focus({ preventScroll: true });
      }, [o.menuState, o.itemsRef]), ve2({ container: o.itemsRef.current, enabled: o.menuState === 0, accept(d2) {
        return d2.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : d2.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
      }, walk(d2) {
        d2.setAttribute("role", "none");
      } });
      let c = (0, k2.useCallback)((d2) => {
        var P;
        switch (l.dispose(), d2.key) {
          case " ":
            if (o.searchQuery !== "")
              return d2.preventDefault(), d2.stopPropagation(), n({ type: 3, value: d2.key });
          case "Enter":
            if (d2.preventDefault(), d2.stopPropagation(), n({ type: 1 }), o.activeItemIndex !== null) {
              let { id: S } = o.items[o.activeItemIndex];
              (P = document.getElementById(S)) == null || P.click();
            }
            V().nextFrame(() => {
              var S;
              return (S = o.buttonRef.current) == null ? void 0 : S.focus({ preventScroll: true });
            });
            break;
          case "ArrowDown":
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 2, focus: 2 });
          case "ArrowUp":
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 2, focus: 1 });
          case "Home":
          case "PageUp":
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 2, focus: 0 });
          case "End":
          case "PageDown":
            return d2.preventDefault(), d2.stopPropagation(), n({ type: 2, focus: 3 });
          case "Escape":
            d2.preventDefault(), d2.stopPropagation(), n({ type: 1 }), V().nextFrame(() => {
              var S;
              return (S = o.buttonRef.current) == null ? void 0 : S.focus({ preventScroll: true });
            });
            break;
          case "Tab":
            d2.preventDefault(), d2.stopPropagation();
            break;
          default:
            d2.key.length === 1 && (n({ type: 3, value: d2.key }), l.setTimeout(() => n({ type: 4 }), 350));
            break;
        }
      }, [n, l, o]), m = (0, k2.useCallback)((d2) => {
        switch (d2.key) {
          case " ":
            d2.preventDefault();
            break;
        }
      }, []), b = (0, k2.useMemo)(() => ({ open: o.menuState === 0 }), [o]), T = { "aria-activedescendant": o.activeItemIndex === null || (p = o.items[o.activeItemIndex]) == null ? void 0 : p.id, "aria-labelledby": (f = o.buttonRef.current) == null ? void 0 : f.id, id: a, onKeyDown: c, onKeyUp: m, role: "menu", tabIndex: 0, ref: i };
      return E({ props: { ...t, ...T }, slot: b, defaultTag: Nr2, features: Wr2, visible: u, name: "Menu.Items" });
    });
    var jr2 = k2.Fragment;
    function Vr2(e2) {
      let { disabled: t = false, onClick: r, ...o } = e2, [n, i] = nt2("Menu.Item"), a = `headlessui-menu-item-${O()}`, l = n.activeItemIndex !== null ? n.items[n.activeItemIndex].id === a : false;
      x(() => {
        if (n.menuState !== 0 || !l)
          return;
        let p = V();
        return p.requestAnimationFrame(() => {
          var f, d2;
          (d2 = (f = document.getElementById(a)) == null ? void 0 : f.scrollIntoView) == null || d2.call(f, { block: "nearest" });
        }), p.dispose;
      }, [a, l, n.menuState, n.activeItemIndex]);
      let s = (0, k2.useRef)({ disabled: t });
      x(() => {
        s.current.disabled = t;
      }, [s, t]), x(() => {
        var p, f;
        s.current.textValue = (f = (p = document.getElementById(a)) == null ? void 0 : p.textContent) == null ? void 0 : f.toLowerCase();
      }, [s, a]), x(() => (i({ type: 5, id: a, dataRef: s }), () => i({ type: 6, id: a })), [s, a]);
      let u = (0, k2.useCallback)((p) => {
        if (t)
          return p.preventDefault();
        if (i({ type: 1 }), V().nextFrame(() => {
          var f;
          return (f = n.buttonRef.current) == null ? void 0 : f.focus({ preventScroll: true });
        }), r)
          return r(p);
      }, [i, n.buttonRef, t, r]), c = (0, k2.useCallback)(() => {
        if (t)
          return i({ type: 2, focus: 5 });
        i({ type: 2, focus: 4, id: a });
      }, [t, a, i]), m = (0, k2.useCallback)(() => {
        t || l || i({ type: 2, focus: 4, id: a });
      }, [t, l, a, i]), b = (0, k2.useCallback)(() => {
        t || !l || i({ type: 2, focus: 5 });
      }, [t, l, i]), T = (0, k2.useMemo)(() => ({ active: l, disabled: t }), [l, t]);
      return E({ props: { ...o, ...{ id: a, role: "menuitem", tabIndex: t === true ? void 0 : -1, "aria-disabled": t === true ? true : void 0, disabled: void 0, onClick: u, onFocus: c, onPointerMove: m, onMouseMove: m, onPointerLeave: b, onMouseLeave: b } }, slot: T, defaultTag: jr2, name: "Menu.Item" });
    }
    Ue.Button = Br2;
    Ue.Items = Kr2;
    Ue.Item = Vr2;
    var C = $(require_react(), 1);
    var $r2 = { [0]: (e2) => ({ ...e2, popoverState: h(e2.popoverState, { [0]: 1, [1]: 0 }) }), [1](e2) {
      return e2.popoverState === 1 ? e2 : { ...e2, popoverState: 1 };
    }, [2](e2, t) {
      return e2.button === t.button ? e2 : { ...e2, button: t.button };
    }, [3](e2, t) {
      return e2.buttonId === t.buttonId ? e2 : { ...e2, buttonId: t.buttonId };
    }, [4](e2, t) {
      return e2.panel === t.panel ? e2 : { ...e2, panel: t.panel };
    }, [5](e2, t) {
      return e2.panelId === t.panelId ? e2 : { ...e2, panelId: t.panelId };
    } };
    var Dt = (0, C.createContext)(null);
    Dt.displayName = "PopoverContext";
    function it2(e2) {
      let t = (0, C.useContext)(Dt);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${be.name} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, it2), r;
      }
      return t;
    }
    var Mt2 = (0, C.createContext)(null);
    Mt2.displayName = "PopoverAPIContext";
    function uo2(e2) {
      let t = (0, C.useContext)(Mt2);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${be.name} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, uo2), r;
      }
      return t;
    }
    var Ft2 = (0, C.createContext)(null);
    Ft2.displayName = "PopoverGroupContext";
    function po2() {
      return (0, C.useContext)(Ft2);
    }
    var wt = (0, C.createContext)(null);
    wt.displayName = "PopoverPanelContext";
    function Qr2() {
      return (0, C.useContext)(wt);
    }
    function qr2(e2, t) {
      return h(t.type, $r2, e2, t);
    }
    var zr2 = "div";
    function be(e2) {
      let t = `headlessui-popover-button-${O()}`, r = `headlessui-popover-panel-${O()}`, o = (0, C.useReducer)(qr2, { popoverState: 1, button: null, buttonId: t, panel: null, panelId: r }), [{ popoverState: n, button: i, panel: a }, l] = o;
      (0, C.useEffect)(() => l({ type: 3, buttonId: t }), [t, l]), (0, C.useEffect)(() => l({ type: 5, panelId: r }), [r, l]);
      let s = (0, C.useMemo)(() => ({ buttonId: t, panelId: r, close: () => l({ type: 1 }) }), [t, r, l]), u = po2(), c = u == null ? void 0 : u.registerPopover, m = (0, C.useCallback)(() => {
        var p;
        return (p = u == null ? void 0 : u.isFocusWithinPopoverGroup()) != null ? p : (i == null ? void 0 : i.contains(document.activeElement)) || (a == null ? void 0 : a.contains(document.activeElement));
      }, [u, i, a]);
      (0, C.useEffect)(() => c == null ? void 0 : c(s), [c, s]), j2("focus", () => {
        n === 0 && (m() || !i || !a || l({ type: 1 }));
      }, true), j2("mousedown", (p) => {
        let f = p.target;
        n === 0 && ((i == null ? void 0 : i.contains(f)) || (a == null ? void 0 : a.contains(f)) || (l({ type: 1 }), Ce(f, 1) || (p.preventDefault(), i == null || i.focus())));
      });
      let b = (0, C.useCallback)((p) => {
        l({ type: 1 });
        let f = (() => p ? p instanceof HTMLElement ? p : p.current instanceof HTMLElement ? p.current : i : i)();
        f == null || f.focus();
      }, [l, i]), T = (0, C.useMemo)(() => ({ close: b }), [b]), y2 = (0, C.useMemo)(() => ({ open: n === 0, close: b }), [n, b]);
      return C.default.createElement(Dt.Provider, { value: o }, C.default.createElement(Mt2.Provider, { value: T }, C.default.createElement(te2, { value: h(n, { [0]: 0, [1]: 1 }) }, E({ props: e2, slot: y2, defaultTag: zr2, name: "Popover" }))));
    }
    var Yr2 = "button";
    var Xr2 = N2(function(t, r) {
      let [o, n] = it2("Popover.Button"), i = (0, C.useRef)(null), a = po2(), l = a == null ? void 0 : a.closeOthers, s = Qr2(), u = s === null ? false : s === o.panelId, c = H(i, r, u ? null : (g) => n({ type: 2, button: g })), m = H(i, r), b = (0, C.useRef)(null), T = (0, C.useRef)(typeof window == "undefined" ? null : document.activeElement);
      j2("focus", () => {
        T.current = b.current, b.current = document.activeElement;
      }, true);
      let y2 = (0, C.useCallback)((g) => {
        var v, I2;
        if (u) {
          if (o.popoverState === 1)
            return;
          switch (g.key) {
            case " ":
            case "Enter":
              g.preventDefault(), g.stopPropagation(), n({ type: 1 }), (v = o.button) == null || v.focus();
              break;
          }
        } else
          switch (g.key) {
            case " ":
            case "Enter":
              g.preventDefault(), g.stopPropagation(), o.popoverState === 1 && (l == null || l(o.buttonId)), n({ type: 0 });
              break;
            case "Escape":
              if (o.popoverState !== 0)
                return l == null ? void 0 : l(o.buttonId);
              if (!i.current || !i.current.contains(document.activeElement))
                return;
              g.preventDefault(), g.stopPropagation(), n({ type: 1 });
              break;
            case "Tab":
              if (o.popoverState !== 0 || !o.panel || !o.button)
                return;
              if (g.shiftKey) {
                if (!T.current || ((I2 = o.button) == null ? void 0 : I2.contains(T.current)) || o.panel.contains(T.current))
                  return;
                let D2 = ke(), U = D2.indexOf(T.current);
                if (D2.indexOf(o.button) > U)
                  return;
                g.preventDefault(), g.stopPropagation(), W(o.panel, 8);
              } else
                g.preventDefault(), g.stopPropagation(), W(o.panel, 1);
              break;
          }
      }, [n, o.popoverState, o.buttonId, o.button, o.panel, i, l, u]), p = (0, C.useCallback)((g) => {
        var v;
        if (!u && (g.key === " " && g.preventDefault(), o.popoverState === 0 && !!o.panel && !!o.button))
          switch (g.key) {
            case "Tab":
              if (!T.current || ((v = o.button) == null ? void 0 : v.contains(T.current)) || o.panel.contains(T.current))
                return;
              let I2 = ke(), D2 = I2.indexOf(T.current);
              if (I2.indexOf(o.button) > D2)
                return;
              g.preventDefault(), g.stopPropagation(), W(o.panel, 8);
              break;
          }
      }, [o.popoverState, o.panel, o.button, u]), f = (0, C.useCallback)((g) => {
        var v, I2;
        q(g.currentTarget) || t.disabled || (u ? (n({ type: 1 }), (v = o.button) == null || v.focus()) : (o.popoverState === 1 && (l == null || l(o.buttonId)), (I2 = o.button) == null || I2.focus(), n({ type: 0 })));
      }, [n, o.button, o.popoverState, o.buttonId, t.disabled, l, u]), d2 = (0, C.useMemo)(() => ({ open: o.popoverState === 0 }), [o]), P = X(t, i), S = t, R = u ? { ref: m, type: P, onKeyDown: y2, onClick: f } : { ref: c, id: o.buttonId, type: P, "aria-expanded": t.disabled ? void 0 : o.popoverState === 0, "aria-controls": o.panel ? o.panelId : void 0, onKeyDown: y2, onKeyUp: p, onClick: f };
      return E({ props: { ...S, ...R }, slot: d2, defaultTag: Yr2, name: "Popover.Button" });
    });
    var Jr2 = "div";
    var Zr2 = 1 | 2;
    var en2 = N2(function(t, r) {
      let [{ popoverState: o }, n] = it2("Popover.Overlay"), i = H(r), a = `headlessui-popover-overlay-${O()}`, l = Q(), s = (() => l !== null ? l === 0 : o === 0)(), u = (0, C.useCallback)((T) => {
        if (q(T.currentTarget))
          return T.preventDefault();
        n({ type: 1 });
      }, [n]), c = (0, C.useMemo)(() => ({ open: o === 0 }), [o]);
      return E({ props: { ...t, ...{ ref: i, id: a, "aria-hidden": true, onClick: u } }, slot: c, defaultTag: Jr2, features: Zr2, visible: s, name: "Popover.Overlay" });
    });
    var tn2 = "div";
    var on2 = 1 | 2;
    var rn2 = N2(function(t, r) {
      let { focus: o = false, ...n } = t, [i, a] = it2("Popover.Panel"), { close: l } = uo2("Popover.Panel"), s = (0, C.useRef)(null), u = H(s, r, (p) => {
        a({ type: 4, panel: p });
      }), c = Q(), m = (() => c !== null ? c === 0 : i.popoverState === 0)(), b = (0, C.useCallback)((p) => {
        var f;
        switch (p.key) {
          case "Escape":
            if (i.popoverState !== 0 || !s.current || !s.current.contains(document.activeElement))
              return;
            p.preventDefault(), p.stopPropagation(), a({ type: 1 }), (f = i.button) == null || f.focus();
            break;
        }
      }, [i, s, a]);
      (0, C.useEffect)(() => () => a({ type: 4, panel: null }), [a]), (0, C.useEffect)(() => {
        var p;
        t.static || i.popoverState === 1 && ((p = t.unmount) != null ? p : true) && a({ type: 4, panel: null });
      }, [i.popoverState, t.unmount, t.static, a]), (0, C.useEffect)(() => {
        if (!o || i.popoverState !== 0 || !s.current)
          return;
        let p = document.activeElement;
        s.current.contains(p) || W(s.current, 1);
      }, [o, s, i.popoverState]), j2("keydown", (p) => {
        var d2;
        if (i.popoverState !== 0 || !s.current || p.key !== "Tab" || !document.activeElement || !s.current || !s.current.contains(document.activeElement))
          return;
        p.preventDefault();
        let f = W(s.current, p.shiftKey ? 2 : 4);
        if (f === 3)
          return (d2 = i.button) == null ? void 0 : d2.focus();
        if (f === 1) {
          if (!i.button)
            return;
          let P = ke(), S = P.indexOf(i.button), R = P.splice(S + 1).filter((g) => {
            var v;
            return !((v = s.current) == null ? void 0 : v.contains(g));
          });
          W(R, 1) === 0 && W(document.body, 1);
        }
      }), j2("focus", () => {
        var p;
        !o || i.popoverState === 0 && (!s.current || ((p = s.current) == null ? void 0 : p.contains(document.activeElement)) || a({ type: 1 }));
      }, true);
      let T = (0, C.useMemo)(() => ({ open: i.popoverState === 0, close: l }), [i, l]), y2 = { ref: u, id: i.panelId, onKeyDown: b };
      return C.default.createElement(wt.Provider, { value: i.panelId }, E({ props: { ...n, ...y2 }, slot: T, defaultTag: tn2, features: on2, visible: m, name: "Popover.Panel" }));
    });
    var nn2 = "div";
    function ln2(e2) {
      let t = (0, C.useRef)(null), [r, o] = (0, C.useState)([]), n = (0, C.useCallback)((b) => {
        o((T) => {
          let y2 = T.indexOf(b);
          if (y2 !== -1) {
            let p = T.slice();
            return p.splice(y2, 1), p;
          }
          return T;
        });
      }, [o]), i = (0, C.useCallback)((b) => (o((T) => [...T, b]), () => n(b)), [o, n]), a = (0, C.useCallback)(() => {
        var T;
        let b = document.activeElement;
        return ((T = t.current) == null ? void 0 : T.contains(b)) ? true : r.some((y2) => {
          var p, f;
          return ((p = document.getElementById(y2.buttonId)) == null ? void 0 : p.contains(b)) || ((f = document.getElementById(y2.panelId)) == null ? void 0 : f.contains(b));
        });
      }, [t, r]), l = (0, C.useCallback)((b) => {
        for (let T of r)
          T.buttonId !== b && T.close();
      }, [r]), s = (0, C.useMemo)(() => ({ registerPopover: i, unregisterPopover: n, isFocusWithinPopoverGroup: a, closeOthers: l }), [i, n, a, l]), u = (0, C.useMemo)(() => ({}), []), c = { ref: t }, m = e2;
      return C.default.createElement(Ft2.Provider, { value: s }, E({ props: { ...m, ...c }, slot: u, defaultTag: nn2, name: "Popover.Group" }));
    }
    be.Button = Xr2;
    be.Overlay = en2;
    be.Panel = rn2;
    be.Group = ln2;
    var G = $(require_react(), 1);
    var Te = require_react();
    function co2(e2 = 0) {
      let [t, r] = (0, Te.useState)(e2), o = (0, Te.useCallback)((l) => r((s) => s | l), [r]), n = (0, Te.useCallback)((l) => Boolean(t & l), [t]), i = (0, Te.useCallback)((l) => r((s) => s & ~l), [r]), a = (0, Te.useCallback)((l) => r((s) => s ^ l), [r]);
      return { addFlag: o, hasFlag: n, removeFlag: i, toggleFlag: a };
    }
    var Z = $(require_react(), 1);
    var fo2 = (0, Z.createContext)(null);
    function mo2() {
      let e2 = (0, Z.useContext)(fo2);
      if (e2 === null) {
        let t = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
        throw Error.captureStackTrace && Error.captureStackTrace(t, mo2), t;
      }
      return e2;
    }
    function Be() {
      let [e2, t] = (0, Z.useState)([]);
      return [e2.length > 0 ? e2.join(" ") : void 0, (0, Z.useMemo)(() => function(o) {
        let n = (0, Z.useCallback)((a) => (t((l) => [...l, a]), () => t((l) => {
          let s = l.slice(), u = s.indexOf(a);
          return u !== -1 && s.splice(u, 1), s;
        })), []), i = (0, Z.useMemo)(() => ({ register: n, slot: o.slot, name: o.name, props: o.props }), [n, o.slot, o.name, o.props]);
        return Z.default.createElement(fo2.Provider, { value: i }, o.children);
      }, [t])];
    }
    var an2 = "label";
    function lt(e2) {
      let { passive: t = false, ...r } = e2, o = mo2(), n = `headlessui-label-${O()}`;
      x(() => o.register(n), [n, o.register]);
      let i = { ...o.props, id: n }, a = { ...r, ...i };
      return t && delete a.onClick, E({ props: a, slot: o.slot || {}, defaultTag: an2, name: o.name || "Label" });
    }
    var sn2 = { [0](e2, t) {
      return { ...e2, options: [...e2.options, { id: t.id, element: t.element, propsRef: t.propsRef }] };
    }, [1](e2, t) {
      let r = e2.options.slice(), o = e2.options.findIndex((n) => n.id === t.id);
      return o === -1 ? e2 : (r.splice(o, 1), { ...e2, options: r });
    } };
    var kt = (0, G.createContext)(null);
    kt.displayName = "RadioGroupContext";
    function bo2(e2) {
      let t = (0, G.useContext)(kt);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <${Ne2.name} /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, bo2), r;
      }
      return t;
    }
    function un2(e2, t) {
      return h(t.type, sn2, e2, t);
    }
    var pn2 = "div";
    function Ne2(e2) {
      let { value: t, onChange: r, disabled: o = false, ...n } = e2, [{ options: i }, a] = (0, G.useReducer)(un2, { options: [] }), [l, s] = Be(), [u, c] = me(), m = `headlessui-radiogroup-${O()}`, b = (0, G.useRef)(null), T = (0, G.useMemo)(() => i.find((R) => !R.propsRef.current.disabled), [i]), y2 = (0, G.useMemo)(() => i.some((R) => R.propsRef.current.value === t), [i, t]), p = (0, G.useCallback)((R) => {
        var v;
        if (o || R === t)
          return false;
        let g = (v = i.find((I2) => I2.propsRef.current.value === R)) == null ? void 0 : v.propsRef.current;
        return (g == null ? void 0 : g.disabled) ? false : (r(R), true);
      }, [r, t, o, i]);
      ve2({ container: b.current, accept(R) {
        return R.getAttribute("role") === "radio" ? NodeFilter.FILTER_REJECT : R.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
      }, walk(R) {
        R.setAttribute("role", "none");
      } });
      let f = (0, G.useCallback)((R) => {
        if (!b.current)
          return;
        let v = i.filter((I2) => I2.propsRef.current.disabled === false).map((I2) => I2.element.current);
        switch (R.key) {
          case "ArrowLeft":
          case "ArrowUp":
            if (R.preventDefault(), R.stopPropagation(), W(v, 2 | 16) === 2) {
              let D2 = i.find((U) => U.element.current === document.activeElement);
              D2 && p(D2.propsRef.current.value);
            }
            break;
          case "ArrowRight":
          case "ArrowDown":
            if (R.preventDefault(), R.stopPropagation(), W(v, 4 | 16) === 2) {
              let D2 = i.find((U) => U.element.current === document.activeElement);
              D2 && p(D2.propsRef.current.value);
            }
            break;
          case " ":
            {
              R.preventDefault(), R.stopPropagation();
              let I2 = i.find((D2) => D2.element.current === document.activeElement);
              I2 && p(I2.propsRef.current.value);
            }
            break;
        }
      }, [b, i, p]), d2 = (0, G.useCallback)((R) => (a({ type: 0, ...R }), () => a({ type: 1, id: R.id })), [a]), P = (0, G.useMemo)(() => ({ registerOption: d2, firstOption: T, containsCheckedOption: y2, change: p, disabled: o, value: t }), [d2, T, y2, p, o, t]), S = { ref: b, id: m, role: "radiogroup", "aria-labelledby": l, "aria-describedby": u, onKeyDown: f };
      return G.default.createElement(c, { name: "RadioGroup.Description" }, G.default.createElement(s, { name: "RadioGroup.Label" }, G.default.createElement(kt.Provider, { value: P }, E({ props: { ...n, ...S }, defaultTag: pn2, name: "RadioGroup" }))));
    }
    var dn2 = "div";
    function cn2(e2) {
      let t = (0, G.useRef)(null), r = `headlessui-radiogroup-option-${O()}`, [o, n] = Be(), [i, a] = me(), { addFlag: l, removeFlag: s, hasFlag: u } = co2(1), { value: c, disabled: m = false, ...b } = e2, T = (0, G.useRef)({ value: c, disabled: m });
      x(() => {
        T.current.value = c;
      }, [c, T]), x(() => {
        T.current.disabled = m;
      }, [m, T]);
      let { registerOption: y2, disabled: p, change: f, firstOption: d2, containsCheckedOption: P, value: S } = bo2("RadioGroup.Option");
      x(() => y2({ id: r, element: t, propsRef: T }), [r, y2, t, e2]);
      let R = (0, G.useCallback)(() => {
        var ne;
        !f(c) || (l(2), (ne = t.current) == null || ne.focus());
      }, [l, f, c]), g = (0, G.useCallback)(() => l(2), [l]), v = (0, G.useCallback)(() => s(2), [s]), I2 = (d2 == null ? void 0 : d2.id) === r, D2 = p || m, U = S === c, ee = { ref: t, id: r, role: "radio", "aria-checked": U ? "true" : "false", "aria-labelledby": o, "aria-describedby": i, "aria-disabled": D2 ? true : void 0, tabIndex: (() => D2 ? -1 : U || !P && I2 ? 0 : -1)(), onClick: D2 ? void 0 : R, onFocus: D2 ? void 0 : g, onBlur: D2 ? void 0 : v }, oe2 = (0, G.useMemo)(() => ({ checked: U, disabled: D2, active: u(2) }), [U, D2, u]);
      return G.default.createElement(a, { name: "RadioGroup.Description" }, G.default.createElement(n, { name: "RadioGroup.Label" }, E({ props: { ...b, ...ee }, slot: oe2, defaultTag: dn2, name: "RadioGroup.Option" })));
    }
    Ne2.Option = cn2;
    Ne2.Label = lt;
    Ne2.Description = Oe;
    var B = $(require_react(), 1);
    var _t = (0, B.createContext)(null);
    _t.displayName = "GroupContext";
    var fn2 = B.Fragment;
    function mn2(e2) {
      let [t, r] = (0, B.useState)(null), [o, n] = Be(), [i, a] = me(), l = (0, B.useMemo)(() => ({ switch: t, setSwitch: r, labelledby: o, describedby: i }), [t, r, o, i]);
      return B.default.createElement(a, { name: "Switch.Description" }, B.default.createElement(n, { name: "Switch.Label", props: { onClick() {
        !t || (t.click(), t.focus({ preventScroll: true }));
      } } }, B.default.createElement(_t.Provider, { value: l }, E({ props: e2, defaultTag: fn2, name: "Switch.Group" }))));
    }
    var bn = "button";
    function at(e2) {
      let { checked: t, onChange: r, ...o } = e2, n = `headlessui-switch-${O()}`, i = (0, B.useContext)(_t), a = (0, B.useRef)(null), l = H(a, i === null ? null : i.setSwitch), s = (0, B.useCallback)(() => r(!t), [r, t]), u = (0, B.useCallback)((y2) => {
        if (q(y2.currentTarget))
          return y2.preventDefault();
        y2.preventDefault(), s();
      }, [s]), c = (0, B.useCallback)((y2) => {
        y2.key !== "Tab" && y2.preventDefault(), y2.key === " " && s();
      }, [s]), m = (0, B.useCallback)((y2) => y2.preventDefault(), []), b = (0, B.useMemo)(() => ({ checked: t }), [t]), T = { id: n, ref: l, role: "switch", type: X(e2, a), tabIndex: 0, "aria-checked": t, "aria-labelledby": i == null ? void 0 : i.labelledby, "aria-describedby": i == null ? void 0 : i.describedby, onClick: u, onKeyUp: c, onKeyPress: m };
      return E({ props: { ...o, ...T }, slot: b, defaultTag: bn, name: "Switch" });
    }
    at.Group = mn2;
    at.Label = lt;
    at.Description = Oe;
    var _ = $(require_react(), 1);
    var Tn2 = { [0](e2, t) {
      return e2.selectedIndex === t.index ? e2 : { ...e2, selectedIndex: t.index };
    }, [1](e2, t) {
      return e2.orientation === t.orientation ? e2 : { ...e2, orientation: t.orientation };
    }, [2](e2, t) {
      return e2.activation === t.activation ? e2 : { ...e2, activation: t.activation };
    }, [3](e2, t) {
      return e2.tabs.includes(t.tab) ? e2 : { ...e2, tabs: [...e2.tabs, t.tab] };
    }, [4](e2, t) {
      return { ...e2, tabs: e2.tabs.filter((r) => r !== t.tab) };
    }, [5](e2, t) {
      return e2.panels.includes(t.panel) ? e2 : { ...e2, panels: [...e2.panels, t.panel] };
    }, [6](e2, t) {
      return { ...e2, panels: e2.panels.filter((r) => r !== t.panel) };
    }, [7](e2) {
      return { ...e2 };
    } };
    var Gt = (0, _.createContext)(null);
    Gt.displayName = "TabsContext";
    function We(e2) {
      let t = (0, _.useContext)(Gt);
      if (t === null) {
        let r = new Error(`<${e2} /> is missing a parent <Tab.Group /> component.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, We), r;
      }
      return t;
    }
    function yn2(e2, t) {
      return h(t.type, Tn2, e2, t);
    }
    var gn2 = _.Fragment;
    function Pn2(e2) {
      let { defaultIndex: t = 0, vertical: r = false, manual: o = false, onChange: n, selectedIndex: i = null, ...a } = e2, l = r ? "vertical" : "horizontal", s = o ? "manual" : "auto", [u, c] = (0, _.useReducer)(yn2, { selectedIndex: null, tabs: [], panels: [], orientation: l, activation: s }), m = (0, _.useMemo)(() => ({ selectedIndex: u.selectedIndex }), [u.selectedIndex]), b = (0, _.useRef)(() => {
      });
      (0, _.useEffect)(() => {
        c({ type: 1, orientation: l });
      }, [l]), (0, _.useEffect)(() => {
        c({ type: 2, activation: s });
      }, [s]), (0, _.useEffect)(() => {
        typeof n == "function" && (b.current = n);
      }, [n]), (0, _.useEffect)(() => {
        if (u.tabs.length <= 0 || i === null && u.selectedIndex !== null)
          return;
        let p = u.tabs.map((P) => P.current).filter(Boolean), f = p.filter((P) => !P.hasAttribute("disabled")), d2 = i != null ? i : t;
        if (d2 < 0)
          c({ type: 0, index: p.indexOf(f[0]) });
        else if (d2 > u.tabs.length)
          c({ type: 0, index: p.indexOf(f[f.length - 1]) });
        else {
          let P = p.slice(0, d2), R = [...p.slice(d2), ...P].find((g) => f.includes(g));
          if (!R)
            return;
          c({ type: 0, index: p.indexOf(R) });
        }
      }, [t, i, u.tabs, u.selectedIndex]);
      let T = (0, _.useRef)(u.selectedIndex);
      (0, _.useEffect)(() => {
        T.current = u.selectedIndex;
      }, [u.selectedIndex]);
      let y2 = (0, _.useMemo)(() => [u, { dispatch: c, change(p) {
        T.current !== p && b.current(p), T.current = p, c({ type: 0, index: p });
      } }], [u, c]);
      return _.default.createElement(Gt.Provider, { value: y2 }, E({ props: { ...a }, slot: m, defaultTag: gn2, name: "Tabs" }));
    }
    var xn2 = "div";
    function vn(e2) {
      let [{ selectedIndex: t, orientation: r }] = We("Tab.List"), o = { selectedIndex: t };
      return E({ props: { ...e2, ...{ role: "tablist", "aria-orientation": r } }, slot: o, defaultTag: xn2, name: "Tabs.List" });
    }
    var Rn2 = "button";
    function Le2(e2) {
      var S, R;
      let t = `headlessui-tabs-tab-${O()}`, [{ selectedIndex: r, tabs: o, panels: n, orientation: i, activation: a }, { dispatch: l, change: s }] = We(Le2.name), u = (0, _.useRef)(null), c = H(u, (g) => {
        !g || l({ type: 7 });
      });
      x(() => (l({ type: 3, tab: u }), () => l({ type: 4, tab: u })), [l, u]);
      let m = o.indexOf(u), b = m === r, T = (0, _.useCallback)((g) => {
        let v = o.map((I2) => I2.current).filter(Boolean);
        if (g.key === " " || g.key === "Enter") {
          g.preventDefault(), g.stopPropagation(), s(m);
          return;
        }
        switch (g.key) {
          case "Home":
          case "PageUp":
            return g.preventDefault(), g.stopPropagation(), W(v, 1);
          case "End":
          case "PageDown":
            return g.preventDefault(), g.stopPropagation(), W(v, 8);
        }
        return h(i, { vertical() {
          if (g.key === "ArrowUp")
            return W(v, 2 | 16);
          if (g.key === "ArrowDown")
            return W(v, 4 | 16);
        }, horizontal() {
          if (g.key === "ArrowLeft")
            return W(v, 2 | 16);
          if (g.key === "ArrowRight")
            return W(v, 4 | 16);
        } });
      }, [o, i, m, s]), y2 = (0, _.useCallback)(() => {
        var g;
        (g = u.current) == null || g.focus();
      }, [u]), p = (0, _.useCallback)(() => {
        var g;
        (g = u.current) == null || g.focus(), s(m);
      }, [s, m, u]), f = (0, _.useMemo)(() => ({ selected: b }), [b]), d2 = { ref: c, onKeyDown: T, onFocus: a === "manual" ? y2 : p, onClick: p, id: t, role: "tab", type: X(e2, u), "aria-controls": (R = (S = n[m]) == null ? void 0 : S.current) == null ? void 0 : R.id, "aria-selected": b, tabIndex: b ? 0 : -1 };
      return E({ props: { ...e2, ...d2 }, slot: f, defaultTag: Rn2, name: "Tabs.Tab" });
    }
    var En = "div";
    function Cn2(e2) {
      let [{ selectedIndex: t }] = We("Tab.Panels"), r = (0, _.useMemo)(() => ({ selectedIndex: t }), [t]);
      return E({ props: e2, slot: r, defaultTag: En, name: "Tabs.Panels" });
    }
    var Sn2 = "div";
    var An = 1 | 2;
    function hn2(e2) {
      var T, y2;
      let [{ selectedIndex: t, tabs: r, panels: o }, { dispatch: n }] = We("Tab.Panel"), i = `headlessui-tabs-panel-${O()}`, a = (0, _.useRef)(null), l = H(a, (p) => {
        !p || n({ type: 7 });
      });
      x(() => (n({ type: 5, panel: a }), () => n({ type: 6, panel: a })), [n, a]);
      let s = o.indexOf(a), u = s === t, c = (0, _.useMemo)(() => ({ selected: u }), [u]), m = { ref: l, id: i, role: "tabpanel", "aria-labelledby": (y2 = (T = r[s]) == null ? void 0 : T.current) == null ? void 0 : y2.id, tabIndex: u ? 0 : -1 };
      return E({ props: { ...e2, ...m }, slot: c, defaultTag: Sn2, features: An, visible: u, name: "Tabs.Panel" });
    }
    Le2.Group = Pn2;
    Le2.List = vn;
    Le2.Panels = Cn2;
    Le2.Panel = hn2;
    var L = $(require_react(), 1);
    var st = require_react();
    function To2() {
      let e2 = (0, st.useRef)(true);
      return (0, st.useEffect)(() => {
        e2.current = false;
      }, []), e2.current;
    }
    function yo2(e2) {
      let t = { called: false };
      return (...r) => {
        if (!t.called)
          return t.called = true, e2(...r);
      };
    }
    function Ht2(e2, ...t) {
      e2 && t.length > 0 && e2.classList.add(...t);
    }
    function ut(e2, ...t) {
      e2 && t.length > 0 && e2.classList.remove(...t);
    }
    function On2(e2, t) {
      let r = V();
      if (!e2)
        return r.dispose;
      let { transitionDuration: o, transitionDelay: n } = getComputedStyle(e2), [i, a] = [o, n].map((l) => {
        let [s = 0] = l.split(",").filter(Boolean).map((u) => u.includes("ms") ? parseFloat(u) : parseFloat(u) * 1e3).sort((u, c) => c - u);
        return s;
      });
      return i !== 0 ? r.setTimeout(() => {
        t("finished");
      }, i + a) : t("finished"), r.add(() => t("cancelled")), r.dispose;
    }
    function Ut2(e2, t, r, o, n, i) {
      let a = V(), l = i !== void 0 ? yo2(i) : () => {
      };
      return ut(e2, ...n), Ht2(e2, ...t, ...r), a.nextFrame(() => {
        ut(e2, ...r), Ht2(e2, ...o), a.add(On2(e2, (s) => (ut(e2, ...o, ...t), Ht2(e2, ...n), l(s))));
      }), a.add(() => ut(e2, ...t, ...r, ...o, ...n)), a.add(() => l("cancelled")), a.dispose;
    }
    function ye(e2 = "") {
      return (0, L.useMemo)(() => e2.split(" ").filter((t) => t.trim().length > 1), [e2]);
    }
    var pt = (0, L.createContext)(null);
    pt.displayName = "TransitionContext";
    function In2() {
      let e2 = (0, L.useContext)(pt);
      if (e2 === null)
        throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
      return e2;
    }
    function Ln2() {
      let e2 = (0, L.useContext)(dt);
      if (e2 === null)
        throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
      return e2;
    }
    var dt = (0, L.createContext)(null);
    dt.displayName = "NestingContext";
    function ct2(e2) {
      return "children" in e2 ? ct2(e2.children) : e2.current.filter(({ state: t }) => t === "visible").length > 0;
    }
    function go2(e2) {
      let t = (0, L.useRef)(e2), r = (0, L.useRef)([]), o = tt2();
      (0, L.useEffect)(() => {
        t.current = e2;
      }, [e2]);
      let n = (0, L.useCallback)((a, l = 1) => {
        var u;
        let s = r.current.findIndex(({ id: c }) => c === a);
        s !== -1 && (h(l, { [0]() {
          r.current.splice(s, 1);
        }, [1]() {
          r.current[s].state = "hidden";
        } }), !ct2(r) && o.current && ((u = t.current) == null || u.call(t)));
      }, [t, o, r]), i = (0, L.useCallback)((a) => {
        let l = r.current.find(({ id: s }) => s === a);
        return l ? l.state !== "visible" && (l.state = "visible") : r.current.push({ id: a, state: "visible" }), () => n(a, 0);
      }, [r, n]);
      return (0, L.useMemo)(() => ({ children: r, register: i, unregister: n }), [i, n, r]);
    }
    function Dn2() {
    }
    var Mn2 = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
    function Po2(e2) {
      var r;
      let t = {};
      for (let o of Mn2)
        t[o] = (r = e2[o]) != null ? r : Dn2;
      return t;
    }
    function Fn2(e2) {
      let t = (0, L.useRef)(Po2(e2));
      return (0, L.useEffect)(() => {
        t.current = Po2(e2);
      }, [e2]), t;
    }
    var wn = "div";
    var xo2 = 1;
    function vo2(e2) {
      let { beforeEnter: t, afterEnter: r, beforeLeave: o, afterLeave: n, enter: i, enterFrom: a, enterTo: l, entered: s, leave: u, leaveFrom: c, leaveTo: m, ...b } = e2, T = (0, L.useRef)(null), [y2, p] = (0, L.useState)("visible"), f = b.unmount ? 0 : 1, { show: d2, appear: P, initial: S } = In2(), { register: R, unregister: g } = Ln2(), v = O(), I2 = (0, L.useRef)(false), D2 = go2(() => {
        I2.current || (p("hidden"), g(v), se.current.afterLeave());
      });
      x(() => {
        if (!!v)
          return R(v);
      }, [R, v]), x(() => {
        if (f === 1 && !!v) {
          if (d2 && y2 !== "visible") {
            p("visible");
            return;
          }
          h(y2, { hidden: () => g(v), visible: () => R(v) });
        }
      }, [y2, v, R, g, d2, f]);
      let U = ye(i), ee = ye(a), oe2 = ye(l), ne = ye(s), je2 = ye(u), De = ye(c), Ve2 = ye(m), se = Fn2({ beforeEnter: t, afterEnter: r, beforeLeave: o, afterLeave: n }), K2 = ae2();
      (0, L.useEffect)(() => {
        if (K2 && y2 === "visible" && T.current === null)
          throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
      }, [T, y2, K2]);
      let ie = S && !P;
      x(() => {
        let ft2 = T.current;
        if (!!ft2 && !ie)
          return I2.current = true, d2 && se.current.beforeEnter(), d2 || se.current.beforeLeave(), d2 ? Ut2(ft2, U, ee, oe2, ne, (mt2) => {
            I2.current = false, mt2 === "finished" && se.current.afterEnter();
          }) : Ut2(ft2, je2, De, Ve2, ne, (mt2) => {
            I2.current = false, mt2 === "finished" && (ct2(D2) || (p("hidden"), g(v), se.current.afterLeave()));
          });
      }, [se, v, I2, g, D2, T, ie, d2, U, ee, oe2, je2, De, Ve2]);
      let Y = { ref: T }, Me2 = b;
      return L.default.createElement(dt.Provider, { value: D2 }, L.default.createElement(te2, { value: h(y2, { visible: 0, hidden: 1 }) }, E({ props: { ...Me2, ...Y }, defaultTag: wn, features: xo2, visible: y2 === "visible", name: "Transition.Child" })));
    }
    function Ke2(e2) {
      let { show: t, appear: r = false, unmount: o, ...n } = e2, i = Q();
      if (t === void 0 && i !== null && (t = h(i, { [0]: true, [1]: false })), ![true, false].includes(t))
        throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
      let [a, l] = (0, L.useState)(t ? "visible" : "hidden"), s = go2(() => {
        l("hidden");
      }), u = To2(), c = (0, L.useMemo)(() => ({ show: t, appear: r || !u, initial: u }), [t, r, u]);
      (0, L.useEffect)(() => {
        t ? l("visible") : ct2(s) || l("hidden");
      }, [t, s]);
      let m = { unmount: o };
      return L.default.createElement(dt.Provider, { value: s }, L.default.createElement(pt.Provider, { value: c }, E({ props: { ...m, as: L.Fragment, children: L.default.createElement(vo2, { ...m, ...n }) }, defaultTag: L.Fragment, features: xo2, visible: a === "visible", name: "Transition" })));
    }
    Ke2.Child = function(t) {
      let r = (0, L.useContext)(pt) !== null, o = Q() !== null;
      return !r && o ? L.default.createElement(Ke2, { ...t }) : L.default.createElement(vo2, { ...t });
    };
    Ke2.Root = Ke2;
    module2.exports = Oo2(kn2);
  }
});

// node_modules/@headlessui/react/dist/headlessui.dev.cjs
var require_headlessui_dev = __commonJS({
  "node_modules/@headlessui/react/dist/headlessui.dev.cjs"(exports2, module2) {
    init_define_process();
    var __create2 = Object.create;
    var __defProp2 = Object.defineProperty;
    var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames2 = Object.getOwnPropertyNames;
    var __getProtoOf2 = Object.getPrototypeOf;
    var __hasOwnProp2 = Object.prototype.hasOwnProperty;
    var __markAsModule2 = (target) => __defProp2(target, "__esModule", { value: true });
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: true });
    };
    var __reExport2 = (target, module22, copyDefault, desc) => {
      if (module22 && typeof module22 === "object" || typeof module22 === "function") {
        for (let key of __getOwnPropNames2(module22))
          if (!__hasOwnProp2.call(target, key) && (copyDefault || key !== "default"))
            __defProp2(target, key, { get: () => module22[key], enumerable: !(desc = __getOwnPropDesc2(module22, key)) || desc.enumerable });
      }
      return target;
    };
    var __toESM = (module22, isNodeMode) => {
      return __reExport2(__markAsModule2(__defProp2(module22 != null ? __create2(__getProtoOf2(module22)) : {}, "default", !isNodeMode && module22 && module22.__esModule ? { get: () => module22.default, enumerable: true } : { value: module22, enumerable: true })), module22);
    };
    var __toCommonJS = /* @__PURE__ */ ((cache) => {
      return (module22, temp) => {
        return cache && cache.get(module22) || (temp = __reExport2(__markAsModule2({}), module22, 1), cache && cache.set(module22, temp), temp);
      };
    })(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
    var src_exports = {};
    __export2(src_exports, {
      Combobox: () => Combobox2,
      Dialog: () => Dialog2,
      Disclosure: () => Disclosure,
      FocusTrap: () => FocusTrap,
      Listbox: () => Listbox,
      Menu: () => Menu,
      Popover: () => Popover,
      Portal: () => Portal,
      RadioGroup: () => RadioGroup,
      Switch: () => Switch,
      Tab: () => Tab,
      Transition: () => Transition
    });
    var import_react13 = __toESM(require_react(), 1);
    var import_react12 = require_react();
    function disposables() {
      let disposables2 = [];
      let queue = [];
      let api = {
        enqueue(fn2) {
          queue.push(fn2);
        },
        requestAnimationFrame(...args) {
          let raf = requestAnimationFrame(...args);
          api.add(() => cancelAnimationFrame(raf));
        },
        nextFrame(...args) {
          api.requestAnimationFrame(() => {
            api.requestAnimationFrame(...args);
          });
        },
        setTimeout(...args) {
          let timer = setTimeout(...args);
          api.add(() => clearTimeout(timer));
        },
        add(cb) {
          disposables2.push(cb);
        },
        dispose() {
          for (let dispose of disposables2.splice(0)) {
            dispose();
          }
        },
        async workQueue() {
          for (let handle of queue.splice(0)) {
            await handle();
          }
        }
      };
      return api;
    }
    function useDisposables() {
      let [d2] = (0, import_react12.useState)(disposables);
      (0, import_react12.useEffect)(() => () => d2.dispose(), [d2]);
      return d2;
    }
    var import_react42 = require_react();
    var import_react22 = require_react();
    var useIsoMorphicEffect = typeof window !== "undefined" ? import_react22.useLayoutEffect : import_react22.useEffect;
    var import_react32 = require_react();
    var state = { serverHandoffComplete: false };
    function useServerHandoffComplete() {
      let [serverHandoffComplete, setServerHandoffComplete] = (0, import_react32.useState)(state.serverHandoffComplete);
      (0, import_react32.useEffect)(() => {
        if (serverHandoffComplete === true)
          return;
        setServerHandoffComplete(true);
      }, [serverHandoffComplete]);
      (0, import_react32.useEffect)(() => {
        if (state.serverHandoffComplete === false)
          state.serverHandoffComplete = true;
      }, []);
      return serverHandoffComplete;
    }
    var id = 0;
    function generateId() {
      return ++id;
    }
    function useId() {
      let ready = useServerHandoffComplete();
      let [id2, setId] = (0, import_react42.useState)(ready ? generateId : null);
      useIsoMorphicEffect(() => {
        if (id2 === null)
          setId(generateId());
      }, [id2]);
      return id2 != null ? "" + id2 : void 0;
    }
    var import_react62 = require_react();
    var import_react52 = require_react();
    function useLatestValue(value) {
      let cache = (0, import_react52.useRef)(value);
      (0, import_react52.useEffect)(() => {
        cache.current = value;
      }, [value]);
      return cache;
    }
    function useComputed(cb, dependencies) {
      let [value, setValue] = (0, import_react62.useState)(cb);
      let cbRef = useLatestValue(cb);
      useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies]);
      return value;
    }
    var import_react72 = require_react();
    function useSyncRefs(...refs) {
      let cache = (0, import_react72.useRef)(refs);
      (0, import_react72.useEffect)(() => {
        cache.current = refs;
      }, [refs]);
      return (0, import_react72.useCallback)((value) => {
        for (let ref of cache.current) {
          if (ref == null)
            continue;
          if (typeof ref === "function")
            ref(value);
          else
            ref.current = value;
        }
      }, [cache]);
    }
    var import_react82 = require_react();
    function match(value, lookup, ...args) {
      if (value in lookup) {
        let returnValue = lookup[value];
        return typeof returnValue === "function" ? returnValue(...args) : returnValue;
      }
      let error = new Error(`Tried to handle "${value}" but there is no handler defined. Only defined handlers are: ${Object.keys(lookup).map((key) => `"${key}"`).join(", ")}.`);
      if (Error.captureStackTrace)
        Error.captureStackTrace(error, match);
      throw error;
    }
    function render({
      props,
      slot,
      defaultTag,
      features,
      visible = true,
      name
    }) {
      if (visible)
        return _render(props, slot, defaultTag, name);
      let featureFlags = features != null ? features : 0;
      if (featureFlags & 2) {
        let { static: isStatic = false, ...rest } = props;
        if (isStatic)
          return _render(rest, slot, defaultTag, name);
      }
      if (featureFlags & 1) {
        let { unmount = true, ...rest } = props;
        let strategy = unmount ? 0 : 1;
        return match(strategy, {
          [0]() {
            return null;
          },
          [1]() {
            return _render({ ...rest, ...{ hidden: true, style: { display: "none" } } }, slot, defaultTag, name);
          }
        });
      }
      return _render(props, slot, defaultTag, name);
    }
    function _render(props, slot = {}, tag, name) {
      let {
        as: Component = tag,
        children,
        refName = "ref",
        ...passThroughProps
      } = omit(props, ["unmount", "static"]);
      let refRelatedProps = props.ref !== void 0 ? { [refName]: props.ref } : {};
      let resolvedChildren = typeof children === "function" ? children(slot) : children;
      if (passThroughProps.className && typeof passThroughProps.className === "function") {
        ;
        passThroughProps.className = passThroughProps.className(slot);
      }
      if (Component === import_react82.Fragment) {
        if (Object.keys(passThroughProps).length > 0) {
          if (!(0, import_react82.isValidElement)(resolvedChildren) || Array.isArray(resolvedChildren) && resolvedChildren.length > 1) {
            throw new Error([
              'Passing props on "Fragment"!',
              "",
              `The current component <${name} /> is rendering a "Fragment".`,
              `However we need to passthrough the following props:`,
              Object.keys(passThroughProps).map((line) => `  - ${line}`).join("\n"),
              "",
              "You can apply a few solutions:",
              [
                'Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".',
                "Render a single element as the child so that we can forward the props onto that element."
              ].map((line) => `  - ${line}`).join("\n")
            ].join("\n"));
          }
          return (0, import_react82.cloneElement)(resolvedChildren, Object.assign({}, mergeEventFunctions(compact(omit(passThroughProps, ["ref"])), resolvedChildren.props, [
            "onClick"
          ]), refRelatedProps));
        }
      }
      return (0, import_react82.createElement)(Component, Object.assign({}, omit(passThroughProps, ["ref"]), Component !== import_react82.Fragment && refRelatedProps), resolvedChildren);
    }
    function mergeEventFunctions(passThroughProps, existingProps, functionsToMerge) {
      let clone = Object.assign({}, passThroughProps);
      for (let func of functionsToMerge) {
        if (passThroughProps[func] !== void 0 && existingProps[func] !== void 0) {
          Object.assign(clone, {
            [func](event) {
              if (!event.defaultPrevented)
                passThroughProps[func](event);
              if (!event.defaultPrevented)
                existingProps[func](event);
            }
          });
        }
      }
      return clone;
    }
    function forwardRefWithAs(component) {
      var _a2;
      return Object.assign((0, import_react82.forwardRef)(component), {
        displayName: (_a2 = component.displayName) != null ? _a2 : component.name
      });
    }
    function compact(object) {
      let clone = Object.assign({}, object);
      for (let key in clone) {
        if (clone[key] === void 0)
          delete clone[key];
      }
      return clone;
    }
    function omit(object, keysToOmit = []) {
      let clone = Object.assign({}, object);
      for (let key of keysToOmit) {
        if (key in clone)
          delete clone[key];
      }
      return clone;
    }
    function assertNever(x) {
      throw new Error("Unexpected object: " + x);
    }
    function calculateActiveIndex(action, resolvers) {
      let items = resolvers.resolveItems();
      if (items.length <= 0)
        return null;
      let currentActiveIndex = resolvers.resolveActiveIndex();
      let activeIndex = currentActiveIndex != null ? currentActiveIndex : -1;
      let nextActiveIndex = (() => {
        switch (action.focus) {
          case 0:
            return items.findIndex((item) => !resolvers.resolveDisabled(item));
          case 1: {
            let idx = items.slice().reverse().findIndex((item, idx2, all) => {
              if (activeIndex !== -1 && all.length - idx2 - 1 >= activeIndex)
                return false;
              return !resolvers.resolveDisabled(item);
            });
            if (idx === -1)
              return idx;
            return items.length - 1 - idx;
          }
          case 2:
            return items.findIndex((item, idx) => {
              if (idx <= activeIndex)
                return false;
              return !resolvers.resolveDisabled(item);
            });
          case 3: {
            let idx = items.slice().reverse().findIndex((item) => !resolvers.resolveDisabled(item));
            if (idx === -1)
              return idx;
            return items.length - 1 - idx;
          }
          case 4:
            return items.findIndex((item) => resolvers.resolveId(item) === action.id);
          case 5:
            return null;
          default:
            assertNever(action);
        }
      })();
      return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex;
    }
    function isDisabledReactIssue7711(element) {
      let parent = element.parentElement;
      let legend = null;
      while (parent && !(parent instanceof HTMLFieldSetElement)) {
        if (parent instanceof HTMLLegendElement)
          legend = parent;
        parent = parent.parentElement;
      }
      let isParentDisabled = (parent == null ? void 0 : parent.getAttribute("disabled")) === "";
      if (isParentDisabled && isFirstLegend(legend))
        return false;
      return isParentDisabled;
    }
    function isFirstLegend(element) {
      if (!element)
        return false;
      let previous = element.previousElementSibling;
      while (previous !== null) {
        if (previous instanceof HTMLLegendElement)
          return false;
        previous = previous.previousElementSibling;
      }
      return true;
    }
    var import_react92 = require_react();
    function useWindowEvent(type, listener, options2) {
      let listenerRef = (0, import_react92.useRef)(listener);
      listenerRef.current = listener;
      (0, import_react92.useEffect)(() => {
        function handler(event) {
          listenerRef.current.call(window, event);
        }
        window.addEventListener(type, handler, options2);
        return () => window.removeEventListener(type, handler, options2);
      }, [type, options2]);
    }
    var import_react102 = __toESM(require_react(), 1);
    var Context = (0, import_react102.createContext)(null);
    Context.displayName = "OpenClosedContext";
    function useOpenClosed() {
      return (0, import_react102.useContext)(Context);
    }
    function OpenClosedProvider({ value, children }) {
      return /* @__PURE__ */ import_react102.default.createElement(Context.Provider, {
        value
      }, children);
    }
    var import_react112 = require_react();
    function resolveType(props) {
      var _a2;
      if (props.type)
        return props.type;
      let tag = (_a2 = props.as) != null ? _a2 : "button";
      if (typeof tag === "string" && tag.toLowerCase() === "button")
        return "button";
      return void 0;
    }
    function useResolveButtonType(props, ref) {
      let [type, setType] = (0, import_react112.useState)(() => resolveType(props));
      useIsoMorphicEffect(() => {
        setType(resolveType(props));
      }, [props.type, props.as]);
      useIsoMorphicEffect(() => {
        if (type)
          return;
        if (!ref.current)
          return;
        if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute("type")) {
          setType("button");
        }
      }, [type, ref]);
      return type;
    }
    var import_react122 = require_react();
    function useTreeWalker({
      container,
      accept,
      walk,
      enabled = true
    }) {
      let acceptRef = (0, import_react122.useRef)(accept);
      let walkRef = (0, import_react122.useRef)(walk);
      (0, import_react122.useEffect)(() => {
        acceptRef.current = accept;
        walkRef.current = walk;
      }, [accept, walk]);
      useIsoMorphicEffect(() => {
        if (!container)
          return;
        if (!enabled)
          return;
        let accept2 = acceptRef.current;
        let walk2 = walkRef.current;
        let acceptNode = Object.assign((node) => accept2(node), { acceptNode: accept2 });
        let walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false);
        while (walker.nextNode())
          walk2(walker.currentNode);
      }, [container, enabled, acceptRef, walkRef]);
    }
    var reducers = {
      [1](state2) {
        if (state2.disabled)
          return state2;
        if (state2.comboboxState === 1)
          return state2;
        return { ...state2, activeOptionIndex: null, comboboxState: 1 };
      },
      [0](state2) {
        if (state2.disabled)
          return state2;
        if (state2.comboboxState === 0)
          return state2;
        return { ...state2, comboboxState: 0 };
      },
      [2](state2, action) {
        if (state2.disabled === action.disabled)
          return state2;
        return { ...state2, disabled: action.disabled };
      },
      [3](state2, action) {
        if (state2.disabled)
          return state2;
        if (state2.optionsRef.current && !state2.optionsPropsRef.current.static && state2.comboboxState === 1)
          return state2;
        let activeOptionIndex = calculateActiveIndex(action, {
          resolveItems: () => state2.options,
          resolveActiveIndex: () => state2.activeOptionIndex,
          resolveId: (item) => item.id,
          resolveDisabled: (item) => item.dataRef.current.disabled
        });
        if (state2.activeOptionIndex === activeOptionIndex)
          return state2;
        return { ...state2, activeOptionIndex };
      },
      [4]: (state2, action) => {
        var _a2;
        let currentActiveOption = state2.activeOptionIndex !== null ? state2.options[state2.activeOptionIndex] : null;
        let orderMap = Array.from((_a2 = state2.optionsRef.current) == null ? void 0 : _a2.querySelectorAll('[id^="headlessui-combobox-option-"]')).reduce((lookup, element, index) => Object.assign(lookup, { [element.id]: index }), {});
        let options2 = [...state2.options, { id: action.id, dataRef: action.dataRef }].sort((a, z) => orderMap[a.id] - orderMap[z.id]);
        return {
          ...state2,
          options: options2,
          activeOptionIndex: (() => {
            if (currentActiveOption === null)
              return null;
            return options2.indexOf(currentActiveOption);
          })()
        };
      },
      [5]: (state2, action) => {
        let nextOptions = state2.options.slice();
        let currentActiveOption = state2.activeOptionIndex !== null ? nextOptions[state2.activeOptionIndex] : null;
        let idx = nextOptions.findIndex((a) => a.id === action.id);
        if (idx !== -1)
          nextOptions.splice(idx, 1);
        return {
          ...state2,
          options: nextOptions,
          activeOptionIndex: (() => {
            if (idx === state2.activeOptionIndex)
              return null;
            if (currentActiveOption === null)
              return null;
            return nextOptions.indexOf(currentActiveOption);
          })()
        };
      }
    };
    var ComboboxContext = (0, import_react13.createContext)(null);
    ComboboxContext.displayName = "ComboboxContext";
    function useComboboxContext(component) {
      let context2 = (0, import_react13.useContext)(ComboboxContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <Combobox /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useComboboxContext);
        throw err;
      }
      return context2;
    }
    var ComboboxActions = (0, import_react13.createContext)(null);
    ComboboxActions.displayName = "ComboboxActions";
    function useComboboxActions() {
      let context2 = (0, import_react13.useContext)(ComboboxActions);
      if (context2 === null) {
        let err = new Error(`ComboboxActions is missing a parent <Combobox /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useComboboxActions);
        throw err;
      }
      return context2;
    }
    function stateReducer(state2, action) {
      return match(action.type, reducers, state2, action);
    }
    var DEFAULT_COMBOBOX_TAG = import_react13.Fragment;
    var ComboboxRoot = forwardRefWithAs(function Combobox(props, ref) {
      let { value, onChange, disabled = false, ...passThroughProps } = props;
      let comboboxPropsRef = (0, import_react13.useRef)({
        value,
        onChange
      });
      let optionsPropsRef = (0, import_react13.useRef)({
        static: false,
        hold: false
      });
      let inputPropsRef = (0, import_react13.useRef)({
        displayValue: void 0
      });
      let reducerBag = (0, import_react13.useReducer)(stateReducer, {
        comboboxState: 1,
        comboboxPropsRef,
        optionsPropsRef,
        inputPropsRef,
        labelRef: (0, import_react13.createRef)(),
        inputRef: (0, import_react13.createRef)(),
        buttonRef: (0, import_react13.createRef)(),
        optionsRef: (0, import_react13.createRef)(),
        disabled,
        options: [],
        activeOptionIndex: null
      });
      let [{ comboboxState, options: options2, activeOptionIndex, optionsRef, inputRef, buttonRef }, dispatch] = reducerBag;
      useIsoMorphicEffect(() => {
        comboboxPropsRef.current.value = value;
      }, [value, comboboxPropsRef]);
      useIsoMorphicEffect(() => {
        comboboxPropsRef.current.onChange = onChange;
      }, [onChange, comboboxPropsRef]);
      useIsoMorphicEffect(() => dispatch({ type: 2, disabled }), [disabled]);
      useWindowEvent("mousedown", (event) => {
        var _a2, _b, _c2;
        let target = event.target;
        if (comboboxState !== 0)
          return;
        if ((_a2 = buttonRef.current) == null ? void 0 : _a2.contains(target))
          return;
        if ((_b = inputRef.current) == null ? void 0 : _b.contains(target))
          return;
        if ((_c2 = optionsRef.current) == null ? void 0 : _c2.contains(target))
          return;
        dispatch({ type: 1 });
      });
      let activeOption = activeOptionIndex === null ? null : options2[activeOptionIndex].dataRef.current.value;
      let slot = (0, import_react13.useMemo)(() => ({
        open: comboboxState === 0,
        disabled,
        activeIndex: activeOptionIndex,
        activeOption
      }), [comboboxState, disabled, options2, activeOptionIndex]);
      let syncInputValue = (0, import_react13.useCallback)(() => {
        if (!inputRef.current)
          return;
        if (value === void 0)
          return;
        let displayValue = inputPropsRef.current.displayValue;
        if (typeof displayValue === "function") {
          inputRef.current.value = displayValue(value);
        } else if (typeof value === "string") {
          inputRef.current.value = value;
        }
      }, [value, inputRef, inputPropsRef]);
      let selectOption = (0, import_react13.useCallback)((id2) => {
        let option = options2.find((item) => item.id === id2);
        if (!option)
          return;
        let { dataRef } = option;
        comboboxPropsRef.current.onChange(dataRef.current.value);
        syncInputValue();
      }, [options2, comboboxPropsRef, inputRef]);
      let selectActiveOption = (0, import_react13.useCallback)(() => {
        if (activeOptionIndex !== null) {
          let { dataRef } = options2[activeOptionIndex];
          comboboxPropsRef.current.onChange(dataRef.current.value);
          syncInputValue();
        }
      }, [activeOptionIndex, options2, comboboxPropsRef, inputRef]);
      let actionsBag = (0, import_react13.useMemo)(() => ({ selectOption, selectActiveOption }), [selectOption, selectActiveOption]);
      useIsoMorphicEffect(() => {
        if (comboboxState !== 1)
          return;
        syncInputValue();
      }, [syncInputValue, comboboxState]);
      useIsoMorphicEffect(syncInputValue, [syncInputValue]);
      return /* @__PURE__ */ import_react13.default.createElement(ComboboxActions.Provider, {
        value: actionsBag
      }, /* @__PURE__ */ import_react13.default.createElement(ComboboxContext.Provider, {
        value: reducerBag
      }, /* @__PURE__ */ import_react13.default.createElement(OpenClosedProvider, {
        value: match(comboboxState, {
          [0]: 0,
          [1]: 1
        })
      }, render({
        props: ref === null ? passThroughProps : { ...passThroughProps, ref },
        slot,
        defaultTag: DEFAULT_COMBOBOX_TAG,
        name: "Combobox"
      }))));
    });
    var DEFAULT_INPUT_TAG = "input";
    var Input = forwardRefWithAs(function Input2(props, ref) {
      var _a2, _b;
      let { value, onChange, displayValue, ...passThroughProps } = props;
      let [state2, dispatch] = useComboboxContext("Combobox.Input");
      let actions = useComboboxActions();
      let inputRef = useSyncRefs(state2.inputRef, ref);
      let inputPropsRef = state2.inputPropsRef;
      let id2 = `headlessui-combobox-input-${useId()}`;
      let d2 = useDisposables();
      let onChangeRef = useLatestValue(onChange);
      useIsoMorphicEffect(() => {
        inputPropsRef.current.displayValue = displayValue;
      }, [displayValue, inputPropsRef]);
      let handleKeyDown = (0, import_react13.useCallback)((event) => {
        switch (event.key) {
          case "Enter":
            event.preventDefault();
            event.stopPropagation();
            actions.selectActiveOption();
            dispatch({ type: 1 });
            break;
          case "ArrowDown":
            event.preventDefault();
            event.stopPropagation();
            return match(state2.comboboxState, {
              [0]: () => {
                return dispatch({ type: 3, focus: 2 });
              },
              [1]: () => {
                dispatch({ type: 0 });
                d2.nextFrame(() => {
                  if (!state2.comboboxPropsRef.current.value) {
                    dispatch({ type: 3, focus: 0 });
                  }
                });
              }
            });
          case "ArrowUp":
            event.preventDefault();
            event.stopPropagation();
            return match(state2.comboboxState, {
              [0]: () => {
                return dispatch({ type: 3, focus: 1 });
              },
              [1]: () => {
                dispatch({ type: 0 });
                d2.nextFrame(() => {
                  if (!state2.comboboxPropsRef.current.value) {
                    dispatch({ type: 3, focus: 3 });
                  }
                });
              }
            });
          case "Home":
          case "PageUp":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 3, focus: 0 });
          case "End":
          case "PageDown":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 3, focus: 3 });
          case "Escape":
            event.preventDefault();
            if (state2.optionsRef.current && !state2.optionsPropsRef.current.static) {
              event.stopPropagation();
            }
            return dispatch({ type: 1 });
          case "Tab":
            actions.selectActiveOption();
            dispatch({ type: 1 });
            break;
        }
      }, [d2, dispatch, state2, actions]);
      let handleChange = (0, import_react13.useCallback)((event) => {
        var _a22;
        dispatch({ type: 0 });
        (_a22 = onChangeRef.current) == null ? void 0 : _a22.call(onChangeRef, event);
      }, [dispatch, onChangeRef]);
      let labelledby = useComputed(() => {
        if (!state2.labelRef.current)
          return void 0;
        return [state2.labelRef.current.id].join(" ");
      }, [state2.labelRef.current]);
      let slot = (0, import_react13.useMemo)(() => ({ open: state2.comboboxState === 0, disabled: state2.disabled }), [state2]);
      let propsWeControl = {
        ref: inputRef,
        id: id2,
        role: "combobox",
        type: "text",
        "aria-controls": (_a2 = state2.optionsRef.current) == null ? void 0 : _a2.id,
        "aria-expanded": state2.disabled ? void 0 : state2.comboboxState === 0,
        "aria-activedescendant": state2.activeOptionIndex === null ? void 0 : (_b = state2.options[state2.activeOptionIndex]) == null ? void 0 : _b.id,
        "aria-labelledby": labelledby,
        disabled: state2.disabled,
        onKeyDown: handleKeyDown,
        onChange: handleChange
      };
      return render({
        props: { ...passThroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_INPUT_TAG,
        name: "Combobox.Input"
      });
    });
    var DEFAULT_BUTTON_TAG = "button";
    var Button = forwardRefWithAs(function Button2(props, ref) {
      var _a2;
      let [state2, dispatch] = useComboboxContext("Combobox.Button");
      let actions = useComboboxActions();
      let buttonRef = useSyncRefs(state2.buttonRef, ref);
      let id2 = `headlessui-combobox-button-${useId()}`;
      let d2 = useDisposables();
      let handleKeyDown = (0, import_react13.useCallback)((event) => {
        switch (event.key) {
          case "ArrowDown":
            event.preventDefault();
            event.stopPropagation();
            if (state2.comboboxState === 1) {
              dispatch({ type: 0 });
              d2.nextFrame(() => {
                if (!state2.comboboxPropsRef.current.value) {
                  dispatch({ type: 3, focus: 0 });
                }
              });
            }
            return d2.nextFrame(() => {
              var _a22;
              return (_a22 = state2.inputRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
            });
          case "ArrowUp":
            event.preventDefault();
            event.stopPropagation();
            if (state2.comboboxState === 1) {
              dispatch({ type: 0 });
              d2.nextFrame(() => {
                if (!state2.comboboxPropsRef.current.value) {
                  dispatch({ type: 3, focus: 3 });
                }
              });
            }
            return d2.nextFrame(() => {
              var _a22;
              return (_a22 = state2.inputRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
            });
          case "Escape":
            event.preventDefault();
            if (state2.optionsRef.current && !state2.optionsPropsRef.current.static) {
              event.stopPropagation();
            }
            dispatch({ type: 1 });
            return d2.nextFrame(() => {
              var _a22;
              return (_a22 = state2.inputRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
            });
        }
      }, [d2, dispatch, state2, actions]);
      let handleClick = (0, import_react13.useCallback)((event) => {
        if (isDisabledReactIssue7711(event.currentTarget))
          return event.preventDefault();
        if (state2.comboboxState === 0) {
          dispatch({ type: 1 });
        } else {
          event.preventDefault();
          dispatch({ type: 0 });
        }
        d2.nextFrame(() => {
          var _a22;
          return (_a22 = state2.inputRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
        });
      }, [dispatch, d2, state2]);
      let labelledby = useComputed(() => {
        if (!state2.labelRef.current)
          return void 0;
        return [state2.labelRef.current.id, id2].join(" ");
      }, [state2.labelRef.current, id2]);
      let slot = (0, import_react13.useMemo)(() => ({ open: state2.comboboxState === 0, disabled: state2.disabled }), [state2]);
      let passthroughProps = props;
      let propsWeControl = {
        ref: buttonRef,
        id: id2,
        type: useResolveButtonType(props, state2.buttonRef),
        tabIndex: -1,
        "aria-haspopup": true,
        "aria-controls": (_a2 = state2.optionsRef.current) == null ? void 0 : _a2.id,
        "aria-expanded": state2.disabled ? void 0 : state2.comboboxState === 0,
        "aria-labelledby": labelledby,
        disabled: state2.disabled,
        onClick: handleClick,
        onKeyDown: handleKeyDown
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_BUTTON_TAG,
        name: "Combobox.Button"
      });
    });
    var DEFAULT_LABEL_TAG = "label";
    function Label(props) {
      let [state2] = useComboboxContext("Combobox.Label");
      let id2 = `headlessui-combobox-label-${useId()}`;
      let handleClick = (0, import_react13.useCallback)(() => {
        var _a2;
        return (_a2 = state2.inputRef.current) == null ? void 0 : _a2.focus({ preventScroll: true });
      }, [state2.inputRef]);
      let slot = (0, import_react13.useMemo)(() => ({ open: state2.comboboxState === 0, disabled: state2.disabled }), [state2]);
      let propsWeControl = { ref: state2.labelRef, id: id2, onClick: handleClick };
      return render({
        props: { ...props, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_LABEL_TAG,
        name: "Combobox.Label"
      });
    }
    var DEFAULT_OPTIONS_TAG = "ul";
    var OptionsRenderFeatures = 1 | 2;
    var Options = forwardRefWithAs(function Options2(props, ref) {
      var _a2;
      let { hold = false, ...passthroughProps } = props;
      let [state2] = useComboboxContext("Combobox.Options");
      let { optionsPropsRef } = state2;
      let optionsRef = useSyncRefs(state2.optionsRef, ref);
      let id2 = `headlessui-combobox-options-${useId()}`;
      let usesOpenClosedState = useOpenClosed();
      let visible = (() => {
        if (usesOpenClosedState !== null) {
          return usesOpenClosedState === 0;
        }
        return state2.comboboxState === 0;
      })();
      useIsoMorphicEffect(() => {
        var _a22;
        optionsPropsRef.current.static = (_a22 = props.static) != null ? _a22 : false;
      }, [optionsPropsRef, props.static]);
      useIsoMorphicEffect(() => {
        optionsPropsRef.current.hold = hold;
      }, [hold, optionsPropsRef]);
      useTreeWalker({
        container: state2.optionsRef.current,
        enabled: state2.comboboxState === 0,
        accept(node) {
          if (node.getAttribute("role") === "option")
            return NodeFilter.FILTER_REJECT;
          if (node.hasAttribute("role"))
            return NodeFilter.FILTER_SKIP;
          return NodeFilter.FILTER_ACCEPT;
        },
        walk(node) {
          node.setAttribute("role", "none");
        }
      });
      let labelledby = useComputed(() => {
        var _a22, _b, _c2;
        return (_c2 = (_a22 = state2.labelRef.current) == null ? void 0 : _a22.id) != null ? _c2 : (_b = state2.buttonRef.current) == null ? void 0 : _b.id;
      }, [state2.labelRef.current, state2.buttonRef.current]);
      let slot = (0, import_react13.useMemo)(() => ({ open: state2.comboboxState === 0 }), [state2]);
      let propsWeControl = {
        "aria-activedescendant": state2.activeOptionIndex === null ? void 0 : (_a2 = state2.options[state2.activeOptionIndex]) == null ? void 0 : _a2.id,
        "aria-labelledby": labelledby,
        role: "listbox",
        id: id2,
        ref: optionsRef
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_OPTIONS_TAG,
        features: OptionsRenderFeatures,
        visible,
        name: "Combobox.Options"
      });
    });
    var DEFAULT_OPTION_TAG = "li";
    function Option(props) {
      let { disabled = false, value, ...passthroughProps } = props;
      let [state2, dispatch] = useComboboxContext("Combobox.Option");
      let actions = useComboboxActions();
      let id2 = `headlessui-combobox-option-${useId()}`;
      let active = state2.activeOptionIndex !== null ? state2.options[state2.activeOptionIndex].id === id2 : false;
      let selected = state2.comboboxPropsRef.current.value === value;
      let bag = (0, import_react13.useRef)({ disabled, value });
      useIsoMorphicEffect(() => {
        bag.current.disabled = disabled;
      }, [bag, disabled]);
      useIsoMorphicEffect(() => {
        bag.current.value = value;
      }, [bag, value]);
      useIsoMorphicEffect(() => {
        var _a2, _b;
        bag.current.textValue = (_b = (_a2 = document.getElementById(id2)) == null ? void 0 : _a2.textContent) == null ? void 0 : _b.toLowerCase();
      }, [bag, id2]);
      let select = (0, import_react13.useCallback)(() => actions.selectOption(id2), [actions, id2]);
      useIsoMorphicEffect(() => {
        dispatch({ type: 4, id: id2, dataRef: bag });
        return () => dispatch({ type: 5, id: id2 });
      }, [bag, id2]);
      useIsoMorphicEffect(() => {
        if (state2.comboboxState !== 0)
          return;
        if (!selected)
          return;
        dispatch({ type: 3, focus: 4, id: id2 });
      }, [state2.comboboxState, selected, id2]);
      useIsoMorphicEffect(() => {
        if (state2.comboboxState !== 0)
          return;
        if (!active)
          return;
        let d2 = disposables();
        d2.requestAnimationFrame(() => {
          var _a2, _b;
          (_b = (_a2 = document.getElementById(id2)) == null ? void 0 : _a2.scrollIntoView) == null ? void 0 : _b.call(_a2, { block: "nearest" });
        });
        return d2.dispose;
      }, [
        id2,
        active,
        state2.comboboxState,
        state2.activeOptionIndex
      ]);
      let handleClick = (0, import_react13.useCallback)((event) => {
        if (disabled)
          return event.preventDefault();
        select();
        dispatch({ type: 1 });
        disposables().nextFrame(() => {
          var _a2;
          return (_a2 = state2.inputRef.current) == null ? void 0 : _a2.focus({ preventScroll: true });
        });
      }, [dispatch, state2.inputRef, disabled, select]);
      let handleFocus = (0, import_react13.useCallback)(() => {
        if (disabled)
          return dispatch({ type: 3, focus: 5 });
        dispatch({ type: 3, focus: 4, id: id2 });
      }, [disabled, id2, dispatch]);
      let handleMove = (0, import_react13.useCallback)(() => {
        if (disabled)
          return;
        if (active)
          return;
        dispatch({ type: 3, focus: 4, id: id2 });
      }, [disabled, active, id2, dispatch]);
      let handleLeave = (0, import_react13.useCallback)(() => {
        if (disabled)
          return;
        if (!active)
          return;
        if (state2.optionsPropsRef.current.hold)
          return;
        dispatch({ type: 3, focus: 5 });
      }, [disabled, active, dispatch, state2.comboboxState, state2.comboboxPropsRef]);
      let slot = (0, import_react13.useMemo)(() => ({ active, selected, disabled }), [active, selected, disabled]);
      let propsWeControl = {
        id: id2,
        role: "option",
        tabIndex: disabled === true ? void 0 : -1,
        "aria-disabled": disabled === true ? true : void 0,
        "aria-selected": selected === true ? true : void 0,
        disabled: void 0,
        onClick: handleClick,
        onFocus: handleFocus,
        onPointerMove: handleMove,
        onMouseMove: handleMove,
        onPointerLeave: handleLeave,
        onMouseLeave: handleLeave
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_OPTION_TAG,
        name: "Combobox.Option"
      });
    }
    var Combobox2 = Object.assign(ComboboxRoot, {
      Input,
      Button,
      Label,
      Options,
      Option
    });
    var import_react20 = __toESM(require_react(), 1);
    var import_react15 = require_react();
    var focusableSelector = [
      "[contentEditable=true]",
      "[tabindex]",
      "a[href]",
      "area[href]",
      "button:not([disabled])",
      "iframe",
      "input:not([disabled])",
      "select:not([disabled])",
      "textarea:not([disabled])"
    ].map(false ? (selector) => `${selector}:not([tabindex='-1']):not([style*='display: none'])` : (selector) => `${selector}:not([tabindex='-1'])`).join(",");
    function getFocusableElements(container = document.body) {
      if (container == null)
        return [];
      return Array.from(container.querySelectorAll(focusableSelector));
    }
    function isFocusableElement(element, mode = 0) {
      if (element === document.body)
        return false;
      return match(mode, {
        [0]() {
          return element.matches(focusableSelector);
        },
        [1]() {
          let next = element;
          while (next !== null) {
            if (next.matches(focusableSelector))
              return true;
            next = next.parentElement;
          }
          return false;
        }
      });
    }
    function focusElement(element) {
      element == null ? void 0 : element.focus({ preventScroll: true });
    }
    function focusIn(container, focus) {
      let elements = Array.isArray(container) ? container.slice().sort((a, z) => {
        let position = a.compareDocumentPosition(z);
        if (position & Node.DOCUMENT_POSITION_FOLLOWING)
          return -1;
        if (position & Node.DOCUMENT_POSITION_PRECEDING)
          return 1;
        return 0;
      }) : getFocusableElements(container);
      let active = document.activeElement;
      let direction = (() => {
        if (focus & (1 | 4))
          return 1;
        if (focus & (2 | 8))
          return -1;
        throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
      })();
      let startIndex = (() => {
        if (focus & 1)
          return 0;
        if (focus & 2)
          return Math.max(0, elements.indexOf(active)) - 1;
        if (focus & 4)
          return Math.max(0, elements.indexOf(active)) + 1;
        if (focus & 8)
          return elements.length - 1;
        throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
      })();
      let focusOptions = focus & 32 ? { preventScroll: true } : {};
      let offset = 0;
      let total = elements.length;
      let next = void 0;
      do {
        if (offset >= total || offset + total <= 0)
          return 0;
        let nextIdx = startIndex + offset;
        if (focus & 16) {
          nextIdx = (nextIdx + total) % total;
        } else {
          if (nextIdx < 0)
            return 3;
          if (nextIdx >= total)
            return 1;
        }
        next = elements[nextIdx];
        next == null ? void 0 : next.focus(focusOptions);
        offset += direction;
      } while (next !== document.activeElement);
      if (!next.hasAttribute("tabindex"))
        next.setAttribute("tabindex", "0");
      return 2;
    }
    var import_react14 = require_react();
    function useIsMounted() {
      let mounted = (0, import_react14.useRef)(false);
      (0, import_react14.useEffect)(() => {
        mounted.current = true;
        return () => {
          mounted.current = false;
        };
      }, []);
      return mounted;
    }
    function useFocusTrap(container, features = 30, {
      initialFocus,
      containers
    } = {}) {
      let restoreElement = (0, import_react15.useRef)(typeof window !== "undefined" ? document.activeElement : null);
      let previousActiveElement = (0, import_react15.useRef)(null);
      let mounted = useIsMounted();
      let featuresRestoreFocus = Boolean(features & 16);
      let featuresInitialFocus = Boolean(features & 2);
      (0, import_react15.useEffect)(() => {
        if (!featuresRestoreFocus)
          return;
        restoreElement.current = document.activeElement;
      }, [featuresRestoreFocus]);
      (0, import_react15.useEffect)(() => {
        if (!featuresRestoreFocus)
          return;
        return () => {
          focusElement(restoreElement.current);
          restoreElement.current = null;
        };
      }, [featuresRestoreFocus]);
      (0, import_react15.useEffect)(() => {
        if (!featuresInitialFocus)
          return;
        if (!container.current)
          return;
        let activeElement = document.activeElement;
        if (initialFocus == null ? void 0 : initialFocus.current) {
          if ((initialFocus == null ? void 0 : initialFocus.current) === activeElement) {
            previousActiveElement.current = activeElement;
            return;
          }
        } else if (container.current.contains(activeElement)) {
          previousActiveElement.current = activeElement;
          return;
        }
        if (initialFocus == null ? void 0 : initialFocus.current) {
          focusElement(initialFocus.current);
        } else {
          if (focusIn(container.current, 1) === 0) {
            console.warn("There are no focusable elements inside the <FocusTrap />");
          }
        }
        previousActiveElement.current = document.activeElement;
      }, [container, initialFocus, featuresInitialFocus]);
      useWindowEvent("keydown", (event) => {
        if (!(features & 4))
          return;
        if (!container.current)
          return;
        if (event.key !== "Tab")
          return;
        event.preventDefault();
        if (focusIn(container.current, (event.shiftKey ? 2 : 4) | 16) === 2) {
          previousActiveElement.current = document.activeElement;
        }
      });
      useWindowEvent("focus", (event) => {
        if (!(features & 8))
          return;
        let allContainers = new Set(containers == null ? void 0 : containers.current);
        allContainers.add(container);
        if (!allContainers.size)
          return;
        let previous = previousActiveElement.current;
        if (!previous)
          return;
        if (!mounted.current)
          return;
        let toElement = event.target;
        if (toElement && toElement instanceof HTMLElement) {
          if (!contains(allContainers, toElement)) {
            event.preventDefault();
            event.stopPropagation();
            focusElement(previous);
          } else {
            previousActiveElement.current = toElement;
            focusElement(toElement);
          }
        } else {
          focusElement(previousActiveElement.current);
        }
      }, true);
    }
    function contains(containers, element) {
      var _a2;
      for (let container of containers) {
        if ((_a2 = container.current) == null ? void 0 : _a2.contains(element))
          return true;
      }
      return false;
    }
    var interactables = /* @__PURE__ */ new Set();
    var originals = /* @__PURE__ */ new Map();
    function inert(element) {
      element.setAttribute("aria-hidden", "true");
      element.inert = true;
    }
    function restore(element) {
      let original = originals.get(element);
      if (!original)
        return;
      if (original["aria-hidden"] === null)
        element.removeAttribute("aria-hidden");
      else
        element.setAttribute("aria-hidden", original["aria-hidden"]);
      element.inert = original.inert;
    }
    function useInertOthers(container, enabled = true) {
      useIsoMorphicEffect(() => {
        if (!enabled)
          return;
        if (!container.current)
          return;
        let element = container.current;
        interactables.add(element);
        for (let original of originals.keys()) {
          if (original.contains(element)) {
            restore(original);
            originals.delete(original);
          }
        }
        document.querySelectorAll("body > *").forEach((child) => {
          if (!(child instanceof HTMLElement))
            return;
          for (let interactable of interactables) {
            if (child.contains(interactable))
              return;
          }
          if (interactables.size === 1) {
            originals.set(child, {
              "aria-hidden": child.getAttribute("aria-hidden"),
              inert: child.inert
            });
            inert(child);
          }
        });
        return () => {
          interactables.delete(element);
          if (interactables.size > 0) {
            document.querySelectorAll("body > *").forEach((child) => {
              if (!(child instanceof HTMLElement))
                return;
              if (originals.has(child))
                return;
              for (let interactable of interactables) {
                if (child.contains(interactable))
                  return;
              }
              originals.set(child, {
                "aria-hidden": child.getAttribute("aria-hidden"),
                inert: child.inert
              });
              inert(child);
            });
          } else {
            for (let element2 of originals.keys()) {
              restore(element2);
              originals.delete(element2);
            }
          }
        };
      }, [enabled]);
    }
    var import_react17 = __toESM(require_react(), 1);
    var import_react_dom = require_react_dom();
    var import_react16 = __toESM(require_react(), 1);
    var ForcePortalRootContext = (0, import_react16.createContext)(false);
    function usePortalRoot() {
      return (0, import_react16.useContext)(ForcePortalRootContext);
    }
    function ForcePortalRoot(props) {
      return /* @__PURE__ */ import_react16.default.createElement(ForcePortalRootContext.Provider, {
        value: props.force
      }, props.children);
    }
    function usePortalTarget() {
      let forceInRoot = usePortalRoot();
      let groupTarget = (0, import_react17.useContext)(PortalGroupContext);
      let [target, setTarget] = (0, import_react17.useState)(() => {
        if (!forceInRoot && groupTarget !== null)
          return null;
        if (typeof window === "undefined")
          return null;
        let existingRoot = document.getElementById("headlessui-portal-root");
        if (existingRoot)
          return existingRoot;
        let root = document.createElement("div");
        root.setAttribute("id", "headlessui-portal-root");
        return document.body.appendChild(root);
      });
      (0, import_react17.useEffect)(() => {
        if (target === null)
          return;
        if (!document.body.contains(target)) {
          document.body.appendChild(target);
        }
      }, [target]);
      (0, import_react17.useEffect)(() => {
        if (forceInRoot)
          return;
        if (groupTarget === null)
          return;
        setTarget(groupTarget.current);
      }, [groupTarget, setTarget, forceInRoot]);
      return target;
    }
    var DEFAULT_PORTAL_TAG = import_react17.Fragment;
    function Portal(props) {
      let passthroughProps = props;
      let target = usePortalTarget();
      let [element] = (0, import_react17.useState)(() => typeof window === "undefined" ? null : document.createElement("div"));
      let ready = useServerHandoffComplete();
      useIsoMorphicEffect(() => {
        if (!target)
          return;
        if (!element)
          return;
        target.appendChild(element);
        return () => {
          var _a2;
          if (!target)
            return;
          if (!element)
            return;
          target.removeChild(element);
          if (target.childNodes.length <= 0) {
            (_a2 = target.parentElement) == null ? void 0 : _a2.removeChild(target);
          }
        };
      }, [target, element]);
      if (!ready)
        return null;
      return !target || !element ? null : (0, import_react_dom.createPortal)(render({ props: passthroughProps, defaultTag: DEFAULT_PORTAL_TAG, name: "Portal" }), element);
    }
    var DEFAULT_GROUP_TAG = import_react17.Fragment;
    var PortalGroupContext = (0, import_react17.createContext)(null);
    function Group(props) {
      let { target, ...passthroughProps } = props;
      return /* @__PURE__ */ import_react17.default.createElement(PortalGroupContext.Provider, {
        value: target
      }, render({
        props: passthroughProps,
        defaultTag: DEFAULT_GROUP_TAG,
        name: "Popover.Group"
      }));
    }
    Portal.Group = Group;
    var import_react18 = __toESM(require_react(), 1);
    var DescriptionContext = (0, import_react18.createContext)(null);
    function useDescriptionContext() {
      let context2 = (0, import_react18.useContext)(DescriptionContext);
      if (context2 === null) {
        let err = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useDescriptionContext);
        throw err;
      }
      return context2;
    }
    function useDescriptions() {
      let [descriptionIds, setDescriptionIds] = (0, import_react18.useState)([]);
      return [
        descriptionIds.length > 0 ? descriptionIds.join(" ") : void 0,
        (0, import_react18.useMemo)(() => {
          return function DescriptionProvider(props) {
            let register = (0, import_react18.useCallback)((value) => {
              setDescriptionIds((existing) => [...existing, value]);
              return () => setDescriptionIds((existing) => {
                let clone = existing.slice();
                let idx = clone.indexOf(value);
                if (idx !== -1)
                  clone.splice(idx, 1);
                return clone;
              });
            }, []);
            let contextBag = (0, import_react18.useMemo)(() => ({ register, slot: props.slot, name: props.name, props: props.props }), [register, props.slot, props.name, props.props]);
            return /* @__PURE__ */ import_react18.default.createElement(DescriptionContext.Provider, {
              value: contextBag
            }, props.children);
          };
        }, [setDescriptionIds])
      ];
    }
    var DEFAULT_DESCRIPTION_TAG = "p";
    function Description(props) {
      let context2 = useDescriptionContext();
      let id2 = `headlessui-description-${useId()}`;
      useIsoMorphicEffect(() => context2.register(id2), [id2, context2.register]);
      let passThroughProps = props;
      let propsWeControl = { ...context2.props, id: id2 };
      return render({
        props: { ...passThroughProps, ...propsWeControl },
        slot: context2.slot || {},
        defaultTag: DEFAULT_DESCRIPTION_TAG,
        name: context2.name || "Description"
      });
    }
    var import_react19 = __toESM(require_react(), 1);
    var StackContext = (0, import_react19.createContext)(() => {
    });
    StackContext.displayName = "StackContext";
    function useStackContext() {
      return (0, import_react19.useContext)(StackContext);
    }
    function StackProvider({
      children,
      onUpdate,
      type,
      element
    }) {
      let parentUpdate = useStackContext();
      let notify = (0, import_react19.useCallback)((...args) => {
        onUpdate == null ? void 0 : onUpdate(...args);
        parentUpdate(...args);
      }, [parentUpdate, onUpdate]);
      useIsoMorphicEffect(() => {
        notify(0, type, element);
        return () => notify(1, type, element);
      }, [notify, type, element]);
      return /* @__PURE__ */ import_react19.default.createElement(StackContext.Provider, {
        value: notify
      }, children);
    }
    var reducers2 = {
      [0](state2, action) {
        if (state2.titleId === action.id)
          return state2;
        return { ...state2, titleId: action.id };
      }
    };
    var DialogContext = (0, import_react20.createContext)(null);
    DialogContext.displayName = "DialogContext";
    function useDialogContext(component) {
      let context2 = (0, import_react20.useContext)(DialogContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${Dialog2.displayName} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useDialogContext);
        throw err;
      }
      return context2;
    }
    function stateReducer2(state2, action) {
      return match(action.type, reducers2, state2, action);
    }
    var DEFAULT_DIALOG_TAG = "div";
    var DialogRenderFeatures = 1 | 2;
    var DialogRoot = forwardRefWithAs(function Dialog(props, ref) {
      let { open, onClose, initialFocus, ...rest } = props;
      let [nestedDialogCount, setNestedDialogCount] = (0, import_react20.useState)(0);
      let usesOpenClosedState = useOpenClosed();
      if (open === void 0 && usesOpenClosedState !== null) {
        open = match(usesOpenClosedState, {
          [0]: true,
          [1]: false
        });
      }
      let containers = (0, import_react20.useRef)(/* @__PURE__ */ new Set());
      let internalDialogRef = (0, import_react20.useRef)(null);
      let dialogRef = useSyncRefs(internalDialogRef, ref);
      let hasOpen = props.hasOwnProperty("open") || usesOpenClosedState !== null;
      let hasOnClose = props.hasOwnProperty("onClose");
      if (!hasOpen && !hasOnClose) {
        throw new Error(`You have to provide an \`open\` and an \`onClose\` prop to the \`Dialog\` component.`);
      }
      if (!hasOpen) {
        throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but forgot an \`open\` prop.`);
      }
      if (!hasOnClose) {
        throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but forgot an \`onClose\` prop.`);
      }
      if (typeof open !== "boolean") {
        throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${open}`);
      }
      if (typeof onClose !== "function") {
        throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${onClose}`);
      }
      let dialogState = open ? 0 : 1;
      let visible = (() => {
        if (usesOpenClosedState !== null) {
          return usesOpenClosedState === 0;
        }
        return dialogState === 0;
      })();
      let [state2, dispatch] = (0, import_react20.useReducer)(stateReducer2, {
        titleId: null,
        descriptionId: null
      });
      let close = (0, import_react20.useCallback)(() => onClose(false), [onClose]);
      let setTitleId = (0, import_react20.useCallback)((id3) => dispatch({ type: 0, id: id3 }), [dispatch]);
      let ready = useServerHandoffComplete();
      let enabled = ready && dialogState === 0;
      let hasNestedDialogs = nestedDialogCount > 1;
      let hasParentDialog = (0, import_react20.useContext)(DialogContext) !== null;
      let position = !hasNestedDialogs ? "leaf" : "parent";
      useFocusTrap(internalDialogRef, enabled ? match(position, {
        parent: 16,
        leaf: 30
      }) : 1, { initialFocus, containers });
      useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false);
      useWindowEvent("mousedown", (event) => {
        var _a2;
        let target = event.target;
        if (dialogState !== 0)
          return;
        if (hasNestedDialogs)
          return;
        if ((_a2 = internalDialogRef.current) == null ? void 0 : _a2.contains(target))
          return;
        close();
      });
      useWindowEvent("keydown", (event) => {
        if (event.key !== "Escape")
          return;
        if (dialogState !== 0)
          return;
        if (hasNestedDialogs)
          return;
        event.preventDefault();
        event.stopPropagation();
        close();
      });
      (0, import_react20.useEffect)(() => {
        if (dialogState !== 0)
          return;
        if (hasParentDialog)
          return;
        let overflow = document.documentElement.style.overflow;
        let paddingRight = document.documentElement.style.paddingRight;
        let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
        document.documentElement.style.overflow = "hidden";
        document.documentElement.style.paddingRight = `${scrollbarWidth}px`;
        return () => {
          document.documentElement.style.overflow = overflow;
          document.documentElement.style.paddingRight = paddingRight;
        };
      }, [dialogState, hasParentDialog]);
      (0, import_react20.useEffect)(() => {
        if (dialogState !== 0)
          return;
        if (!internalDialogRef.current)
          return;
        let observer = new IntersectionObserver((entries) => {
          for (let entry of entries) {
            if (entry.boundingClientRect.x === 0 && entry.boundingClientRect.y === 0 && entry.boundingClientRect.width === 0 && entry.boundingClientRect.height === 0) {
              close();
            }
          }
        });
        observer.observe(internalDialogRef.current);
        return () => observer.disconnect();
      }, [dialogState, internalDialogRef, close]);
      let [describedby, DescriptionProvider] = useDescriptions();
      let id2 = `headlessui-dialog-${useId()}`;
      let contextBag = (0, import_react20.useMemo)(() => [{ dialogState, close, setTitleId }, state2], [dialogState, state2, close, setTitleId]);
      let slot = (0, import_react20.useMemo)(() => ({ open: dialogState === 0 }), [dialogState]);
      let propsWeControl = {
        ref: dialogRef,
        id: id2,
        role: "dialog",
        "aria-modal": dialogState === 0 ? true : void 0,
        "aria-labelledby": state2.titleId,
        "aria-describedby": describedby,
        onClick(event) {
          event.stopPropagation();
        }
      };
      let passthroughProps = rest;
      return /* @__PURE__ */ import_react20.default.createElement(StackProvider, {
        type: "Dialog",
        element: internalDialogRef,
        onUpdate: (0, import_react20.useCallback)((message, type, element) => {
          if (type !== "Dialog")
            return;
          match(message, {
            [0]() {
              containers.current.add(element);
              setNestedDialogCount((count) => count + 1);
            },
            [1]() {
              containers.current.add(element);
              setNestedDialogCount((count) => count - 1);
            }
          });
        }, [])
      }, /* @__PURE__ */ import_react20.default.createElement(ForcePortalRoot, {
        force: true
      }, /* @__PURE__ */ import_react20.default.createElement(Portal, null, /* @__PURE__ */ import_react20.default.createElement(DialogContext.Provider, {
        value: contextBag
      }, /* @__PURE__ */ import_react20.default.createElement(Portal.Group, {
        target: internalDialogRef
      }, /* @__PURE__ */ import_react20.default.createElement(ForcePortalRoot, {
        force: false
      }, /* @__PURE__ */ import_react20.default.createElement(DescriptionProvider, {
        slot,
        name: "Dialog.Description"
      }, render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_DIALOG_TAG,
        features: DialogRenderFeatures,
        visible,
        name: "Dialog"
      }))))))));
    });
    var DEFAULT_OVERLAY_TAG = "div";
    var Overlay = forwardRefWithAs(function Overlay2(props, ref) {
      let [{ dialogState, close }] = useDialogContext("Dialog.Overlay");
      let overlayRef = useSyncRefs(ref);
      let id2 = `headlessui-dialog-overlay-${useId()}`;
      let handleClick = (0, import_react20.useCallback)((event) => {
        if (event.target !== event.currentTarget)
          return;
        if (isDisabledReactIssue7711(event.currentTarget))
          return event.preventDefault();
        event.preventDefault();
        event.stopPropagation();
        close();
      }, [close]);
      let slot = (0, import_react20.useMemo)(() => ({ open: dialogState === 0 }), [dialogState]);
      let propsWeControl = {
        ref: overlayRef,
        id: id2,
        "aria-hidden": true,
        onClick: handleClick
      };
      let passthroughProps = props;
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_OVERLAY_TAG,
        name: "Dialog.Overlay"
      });
    });
    var DEFAULT_TITLE_TAG = "h2";
    function Title(props) {
      let [{ dialogState, setTitleId }] = useDialogContext("Dialog.Title");
      let id2 = `headlessui-dialog-title-${useId()}`;
      (0, import_react20.useEffect)(() => {
        setTitleId(id2);
        return () => setTitleId(null);
      }, [id2, setTitleId]);
      let slot = (0, import_react20.useMemo)(() => ({ open: dialogState === 0 }), [dialogState]);
      let propsWeControl = { id: id2 };
      let passthroughProps = props;
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_TITLE_TAG,
        name: "Dialog.Title"
      });
    }
    var Dialog2 = Object.assign(DialogRoot, { Overlay, Title, Description });
    var import_react21 = __toESM(require_react(), 1);
    var reducers3 = {
      [0]: (state2) => ({
        ...state2,
        disclosureState: match(state2.disclosureState, {
          [0]: 1,
          [1]: 0
        })
      }),
      [1]: (state2) => {
        if (state2.disclosureState === 1)
          return state2;
        return { ...state2, disclosureState: 1 };
      },
      [4](state2) {
        if (state2.linkedPanel === true)
          return state2;
        return { ...state2, linkedPanel: true };
      },
      [5](state2) {
        if (state2.linkedPanel === false)
          return state2;
        return { ...state2, linkedPanel: false };
      },
      [2](state2, action) {
        if (state2.buttonId === action.buttonId)
          return state2;
        return { ...state2, buttonId: action.buttonId };
      },
      [3](state2, action) {
        if (state2.panelId === action.panelId)
          return state2;
        return { ...state2, panelId: action.panelId };
      }
    };
    var DisclosureContext = (0, import_react21.createContext)(null);
    DisclosureContext.displayName = "DisclosureContext";
    function useDisclosureContext(component) {
      let context2 = (0, import_react21.useContext)(DisclosureContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useDisclosureContext);
        throw err;
      }
      return context2;
    }
    var DisclosureAPIContext = (0, import_react21.createContext)(null);
    DisclosureAPIContext.displayName = "DisclosureAPIContext";
    function useDisclosureAPIContext(component) {
      let context2 = (0, import_react21.useContext)(DisclosureAPIContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useDisclosureAPIContext);
        throw err;
      }
      return context2;
    }
    var DisclosurePanelContext = (0, import_react21.createContext)(null);
    DisclosurePanelContext.displayName = "DisclosurePanelContext";
    function useDisclosurePanelContext() {
      return (0, import_react21.useContext)(DisclosurePanelContext);
    }
    function stateReducer3(state2, action) {
      return match(action.type, reducers3, state2, action);
    }
    var DEFAULT_DISCLOSURE_TAG = import_react21.Fragment;
    function Disclosure(props) {
      let { defaultOpen = false, ...passthroughProps } = props;
      let buttonId = `headlessui-disclosure-button-${useId()}`;
      let panelId = `headlessui-disclosure-panel-${useId()}`;
      let reducerBag = (0, import_react21.useReducer)(stateReducer3, {
        disclosureState: defaultOpen ? 0 : 1,
        linkedPanel: false,
        buttonId,
        panelId
      });
      let [{ disclosureState }, dispatch] = reducerBag;
      (0, import_react21.useEffect)(() => dispatch({ type: 2, buttonId }), [buttonId, dispatch]);
      (0, import_react21.useEffect)(() => dispatch({ type: 3, panelId }), [panelId, dispatch]);
      let close = (0, import_react21.useCallback)((focusableElement) => {
        dispatch({ type: 1 });
        let restoreElement = (() => {
          if (!focusableElement)
            return document.getElementById(buttonId);
          if (focusableElement instanceof HTMLElement)
            return focusableElement;
          if (focusableElement.current instanceof HTMLElement)
            return focusableElement.current;
          return document.getElementById(buttonId);
        })();
        restoreElement == null ? void 0 : restoreElement.focus();
      }, [dispatch, buttonId]);
      let api = (0, import_react21.useMemo)(() => ({ close }), [close]);
      let slot = (0, import_react21.useMemo)(() => ({ open: disclosureState === 0, close }), [disclosureState, close]);
      return /* @__PURE__ */ import_react21.default.createElement(DisclosureContext.Provider, {
        value: reducerBag
      }, /* @__PURE__ */ import_react21.default.createElement(DisclosureAPIContext.Provider, {
        value: api
      }, /* @__PURE__ */ import_react21.default.createElement(OpenClosedProvider, {
        value: match(disclosureState, {
          [0]: 0,
          [1]: 1
        })
      }, render({
        props: passthroughProps,
        slot,
        defaultTag: DEFAULT_DISCLOSURE_TAG,
        name: "Disclosure"
      }))));
    }
    var DEFAULT_BUTTON_TAG2 = "button";
    var Button3 = forwardRefWithAs(function Button4(props, ref) {
      let [state2, dispatch] = useDisclosureContext("Disclosure.Button");
      let internalButtonRef = (0, import_react21.useRef)(null);
      let buttonRef = useSyncRefs(internalButtonRef, ref);
      let panelContext = useDisclosurePanelContext();
      let isWithinPanel = panelContext === null ? false : panelContext === state2.panelId;
      let handleKeyDown = (0, import_react21.useCallback)((event) => {
        var _a2;
        if (isWithinPanel) {
          if (state2.disclosureState === 1)
            return;
          switch (event.key) {
            case " ":
            case "Enter":
              event.preventDefault();
              event.stopPropagation();
              dispatch({ type: 0 });
              (_a2 = document.getElementById(state2.buttonId)) == null ? void 0 : _a2.focus();
              break;
          }
        } else {
          switch (event.key) {
            case " ":
            case "Enter":
              event.preventDefault();
              event.stopPropagation();
              dispatch({ type: 0 });
              break;
          }
        }
      }, [dispatch, isWithinPanel, state2.disclosureState, state2.buttonId]);
      let handleKeyUp = (0, import_react21.useCallback)((event) => {
        switch (event.key) {
          case " ":
            event.preventDefault();
            break;
        }
      }, []);
      let handleClick = (0, import_react21.useCallback)((event) => {
        var _a2;
        if (isDisabledReactIssue7711(event.currentTarget))
          return;
        if (props.disabled)
          return;
        if (isWithinPanel) {
          dispatch({ type: 0 });
          (_a2 = document.getElementById(state2.buttonId)) == null ? void 0 : _a2.focus();
        } else {
          dispatch({ type: 0 });
        }
      }, [dispatch, props.disabled, state2.buttonId, isWithinPanel]);
      let slot = (0, import_react21.useMemo)(() => ({ open: state2.disclosureState === 0 }), [state2]);
      let type = useResolveButtonType(props, internalButtonRef);
      let passthroughProps = props;
      let propsWeControl = isWithinPanel ? { ref: buttonRef, type, onKeyDown: handleKeyDown, onClick: handleClick } : {
        ref: buttonRef,
        id: state2.buttonId,
        type,
        "aria-expanded": props.disabled ? void 0 : state2.disclosureState === 0,
        "aria-controls": state2.linkedPanel ? state2.panelId : void 0,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        onClick: handleClick
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_BUTTON_TAG2,
        name: "Disclosure.Button"
      });
    });
    var DEFAULT_PANEL_TAG = "div";
    var PanelRenderFeatures = 1 | 2;
    var Panel = forwardRefWithAs(function Panel2(props, ref) {
      let [state2, dispatch] = useDisclosureContext("Disclosure.Panel");
      let { close } = useDisclosureAPIContext("Disclosure.Panel");
      let panelRef = useSyncRefs(ref, () => {
        if (state2.linkedPanel)
          return;
        dispatch({ type: 4 });
      });
      let usesOpenClosedState = useOpenClosed();
      let visible = (() => {
        if (usesOpenClosedState !== null) {
          return usesOpenClosedState === 0;
        }
        return state2.disclosureState === 0;
      })();
      (0, import_react21.useEffect)(() => () => dispatch({ type: 5 }), [dispatch]);
      (0, import_react21.useEffect)(() => {
        var _a2;
        if (state2.disclosureState === 1 && ((_a2 = props.unmount) != null ? _a2 : true)) {
          dispatch({ type: 5 });
        }
      }, [state2.disclosureState, props.unmount, dispatch]);
      let slot = (0, import_react21.useMemo)(() => ({ open: state2.disclosureState === 0, close }), [state2, close]);
      let propsWeControl = {
        ref: panelRef,
        id: state2.panelId
      };
      let passthroughProps = props;
      return /* @__PURE__ */ import_react21.default.createElement(DisclosurePanelContext.Provider, {
        value: state2.panelId
      }, render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_PANEL_TAG,
        features: PanelRenderFeatures,
        visible,
        name: "Disclosure.Panel"
      }));
    });
    Disclosure.Button = Button3;
    Disclosure.Panel = Panel;
    var import_react222 = require_react();
    var DEFAULT_FOCUS_TRAP_TAG = "div";
    function FocusTrap(props) {
      let container = (0, import_react222.useRef)(null);
      let { initialFocus, ...passthroughProps } = props;
      let ready = useServerHandoffComplete();
      useFocusTrap(container, ready ? 30 : 1, { initialFocus });
      let propsWeControl = {
        ref: container
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        defaultTag: DEFAULT_FOCUS_TRAP_TAG,
        name: "FocusTrap"
      });
    }
    var import_react23 = __toESM(require_react(), 1);
    var reducers4 = {
      [1](state2) {
        if (state2.disabled)
          return state2;
        if (state2.listboxState === 1)
          return state2;
        return { ...state2, activeOptionIndex: null, listboxState: 1 };
      },
      [0](state2) {
        if (state2.disabled)
          return state2;
        if (state2.listboxState === 0)
          return state2;
        return { ...state2, listboxState: 0 };
      },
      [2](state2, action) {
        if (state2.disabled === action.disabled)
          return state2;
        return { ...state2, disabled: action.disabled };
      },
      [3](state2, action) {
        if (state2.orientation === action.orientation)
          return state2;
        return { ...state2, orientation: action.orientation };
      },
      [4](state2, action) {
        if (state2.disabled)
          return state2;
        if (state2.listboxState === 1)
          return state2;
        let activeOptionIndex = calculateActiveIndex(action, {
          resolveItems: () => state2.options,
          resolveActiveIndex: () => state2.activeOptionIndex,
          resolveId: (item) => item.id,
          resolveDisabled: (item) => item.dataRef.current.disabled
        });
        if (state2.searchQuery === "" && state2.activeOptionIndex === activeOptionIndex)
          return state2;
        return { ...state2, searchQuery: "", activeOptionIndex };
      },
      [5]: (state2, action) => {
        if (state2.disabled)
          return state2;
        if (state2.listboxState === 1)
          return state2;
        let wasAlreadySearching = state2.searchQuery !== "";
        let offset = wasAlreadySearching ? 0 : 1;
        let searchQuery = state2.searchQuery + action.value.toLowerCase();
        let reOrderedOptions = state2.activeOptionIndex !== null ? state2.options.slice(state2.activeOptionIndex + offset).concat(state2.options.slice(0, state2.activeOptionIndex + offset)) : state2.options;
        let matchingOption = reOrderedOptions.find((option) => {
          var _a2;
          return !option.dataRef.current.disabled && ((_a2 = option.dataRef.current.textValue) == null ? void 0 : _a2.startsWith(searchQuery));
        });
        let matchIdx = matchingOption ? state2.options.indexOf(matchingOption) : -1;
        if (matchIdx === -1 || matchIdx === state2.activeOptionIndex)
          return { ...state2, searchQuery };
        return { ...state2, searchQuery, activeOptionIndex: matchIdx };
      },
      [6](state2) {
        if (state2.disabled)
          return state2;
        if (state2.listboxState === 1)
          return state2;
        if (state2.searchQuery === "")
          return state2;
        return { ...state2, searchQuery: "" };
      },
      [7]: (state2, action) => {
        var _a2;
        let orderMap = Array.from((_a2 = state2.optionsRef.current) == null ? void 0 : _a2.querySelectorAll('[id^="headlessui-listbox-option-"]')).reduce((lookup, element, index) => Object.assign(lookup, { [element.id]: index }), {});
        let options2 = [...state2.options, { id: action.id, dataRef: action.dataRef }].sort((a, z) => orderMap[a.id] - orderMap[z.id]);
        return { ...state2, options: options2 };
      },
      [8]: (state2, action) => {
        let nextOptions = state2.options.slice();
        let currentActiveOption = state2.activeOptionIndex !== null ? nextOptions[state2.activeOptionIndex] : null;
        let idx = nextOptions.findIndex((a) => a.id === action.id);
        if (idx !== -1)
          nextOptions.splice(idx, 1);
        return {
          ...state2,
          options: nextOptions,
          activeOptionIndex: (() => {
            if (idx === state2.activeOptionIndex)
              return null;
            if (currentActiveOption === null)
              return null;
            return nextOptions.indexOf(currentActiveOption);
          })()
        };
      }
    };
    var ListboxContext = (0, import_react23.createContext)(null);
    ListboxContext.displayName = "ListboxContext";
    function useListboxContext(component) {
      let context2 = (0, import_react23.useContext)(ListboxContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useListboxContext);
        throw err;
      }
      return context2;
    }
    function stateReducer4(state2, action) {
      return match(action.type, reducers4, state2, action);
    }
    var DEFAULT_LISTBOX_TAG = import_react23.Fragment;
    function Listbox(props) {
      let { value, onChange, disabled = false, horizontal = false, ...passThroughProps } = props;
      const orientation = horizontal ? "horizontal" : "vertical";
      let reducerBag = (0, import_react23.useReducer)(stateReducer4, {
        listboxState: 1,
        propsRef: { current: { value, onChange } },
        labelRef: (0, import_react23.createRef)(),
        buttonRef: (0, import_react23.createRef)(),
        optionsRef: (0, import_react23.createRef)(),
        disabled,
        orientation,
        options: [],
        searchQuery: "",
        activeOptionIndex: null
      });
      let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag;
      useIsoMorphicEffect(() => {
        propsRef.current.value = value;
      }, [value, propsRef]);
      useIsoMorphicEffect(() => {
        propsRef.current.onChange = onChange;
      }, [onChange, propsRef]);
      useIsoMorphicEffect(() => dispatch({ type: 2, disabled }), [disabled]);
      useIsoMorphicEffect(() => dispatch({ type: 3, orientation }), [orientation]);
      useWindowEvent("mousedown", (event) => {
        var _a2, _b, _c2;
        let target = event.target;
        if (listboxState !== 0)
          return;
        if ((_a2 = buttonRef.current) == null ? void 0 : _a2.contains(target))
          return;
        if ((_b = optionsRef.current) == null ? void 0 : _b.contains(target))
          return;
        dispatch({ type: 1 });
        if (!isFocusableElement(target, 1)) {
          event.preventDefault();
          (_c2 = buttonRef.current) == null ? void 0 : _c2.focus();
        }
      });
      let slot = (0, import_react23.useMemo)(() => ({ open: listboxState === 0, disabled }), [listboxState, disabled]);
      return /* @__PURE__ */ import_react23.default.createElement(ListboxContext.Provider, {
        value: reducerBag
      }, /* @__PURE__ */ import_react23.default.createElement(OpenClosedProvider, {
        value: match(listboxState, {
          [0]: 0,
          [1]: 1
        })
      }, render({
        props: passThroughProps,
        slot,
        defaultTag: DEFAULT_LISTBOX_TAG,
        name: "Listbox"
      })));
    }
    var DEFAULT_BUTTON_TAG3 = "button";
    var Button5 = forwardRefWithAs(function Button6(props, ref) {
      var _a2;
      let [state2, dispatch] = useListboxContext("Listbox.Button");
      let buttonRef = useSyncRefs(state2.buttonRef, ref);
      let id2 = `headlessui-listbox-button-${useId()}`;
      let d2 = useDisposables();
      let handleKeyDown = (0, import_react23.useCallback)((event) => {
        switch (event.key) {
          case " ":
          case "Enter":
          case "ArrowDown":
            event.preventDefault();
            dispatch({ type: 0 });
            d2.nextFrame(() => {
              if (!state2.propsRef.current.value)
                dispatch({ type: 4, focus: 0 });
            });
            break;
          case "ArrowUp":
            event.preventDefault();
            dispatch({ type: 0 });
            d2.nextFrame(() => {
              if (!state2.propsRef.current.value)
                dispatch({ type: 4, focus: 3 });
            });
            break;
        }
      }, [dispatch, state2, d2]);
      let handleKeyUp = (0, import_react23.useCallback)((event) => {
        switch (event.key) {
          case " ":
            event.preventDefault();
            break;
        }
      }, []);
      let handleClick = (0, import_react23.useCallback)((event) => {
        if (isDisabledReactIssue7711(event.currentTarget))
          return event.preventDefault();
        if (state2.listboxState === 0) {
          dispatch({ type: 1 });
          d2.nextFrame(() => {
            var _a22;
            return (_a22 = state2.buttonRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
          });
        } else {
          event.preventDefault();
          dispatch({ type: 0 });
        }
      }, [dispatch, d2, state2]);
      let labelledby = useComputed(() => {
        if (!state2.labelRef.current)
          return void 0;
        return [state2.labelRef.current.id, id2].join(" ");
      }, [state2.labelRef.current, id2]);
      let slot = (0, import_react23.useMemo)(() => ({ open: state2.listboxState === 0, disabled: state2.disabled }), [state2]);
      let passthroughProps = props;
      let propsWeControl = {
        ref: buttonRef,
        id: id2,
        type: useResolveButtonType(props, state2.buttonRef),
        "aria-haspopup": true,
        "aria-controls": (_a2 = state2.optionsRef.current) == null ? void 0 : _a2.id,
        "aria-expanded": state2.disabled ? void 0 : state2.listboxState === 0,
        "aria-labelledby": labelledby,
        disabled: state2.disabled,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        onClick: handleClick
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_BUTTON_TAG3,
        name: "Listbox.Button"
      });
    });
    var DEFAULT_LABEL_TAG2 = "label";
    function Label2(props) {
      let [state2] = useListboxContext("Listbox.Label");
      let id2 = `headlessui-listbox-label-${useId()}`;
      let handleClick = (0, import_react23.useCallback)(() => {
        var _a2;
        return (_a2 = state2.buttonRef.current) == null ? void 0 : _a2.focus({ preventScroll: true });
      }, [state2.buttonRef]);
      let slot = (0, import_react23.useMemo)(() => ({ open: state2.listboxState === 0, disabled: state2.disabled }), [state2]);
      let propsWeControl = { ref: state2.labelRef, id: id2, onClick: handleClick };
      return render({
        props: { ...props, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_LABEL_TAG2,
        name: "Listbox.Label"
      });
    }
    var DEFAULT_OPTIONS_TAG2 = "ul";
    var OptionsRenderFeatures2 = 1 | 2;
    var Options3 = forwardRefWithAs(function Options4(props, ref) {
      var _a2;
      let [state2, dispatch] = useListboxContext("Listbox.Options");
      let optionsRef = useSyncRefs(state2.optionsRef, ref);
      let id2 = `headlessui-listbox-options-${useId()}`;
      let d2 = useDisposables();
      let searchDisposables = useDisposables();
      let usesOpenClosedState = useOpenClosed();
      let visible = (() => {
        if (usesOpenClosedState !== null) {
          return usesOpenClosedState === 0;
        }
        return state2.listboxState === 0;
      })();
      useIsoMorphicEffect(() => {
        let container = state2.optionsRef.current;
        if (!container)
          return;
        if (state2.listboxState !== 0)
          return;
        if (container === document.activeElement)
          return;
        container.focus({ preventScroll: true });
      }, [state2.listboxState, state2.optionsRef]);
      let handleKeyDown = (0, import_react23.useCallback)((event) => {
        searchDisposables.dispose();
        switch (event.key) {
          case " ":
            if (state2.searchQuery !== "") {
              event.preventDefault();
              event.stopPropagation();
              return dispatch({ type: 5, value: event.key });
            }
          case "Enter":
            event.preventDefault();
            event.stopPropagation();
            dispatch({ type: 1 });
            if (state2.activeOptionIndex !== null) {
              let { dataRef } = state2.options[state2.activeOptionIndex];
              state2.propsRef.current.onChange(dataRef.current.value);
            }
            disposables().nextFrame(() => {
              var _a22;
              return (_a22 = state2.buttonRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
            });
            break;
          case match(state2.orientation, { vertical: "ArrowDown", horizontal: "ArrowRight" }):
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 4, focus: 2 });
          case match(state2.orientation, { vertical: "ArrowUp", horizontal: "ArrowLeft" }):
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 4, focus: 1 });
          case "Home":
          case "PageUp":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 4, focus: 0 });
          case "End":
          case "PageDown":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 4, focus: 3 });
          case "Escape":
            event.preventDefault();
            event.stopPropagation();
            dispatch({ type: 1 });
            return d2.nextFrame(() => {
              var _a22;
              return (_a22 = state2.buttonRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
            });
          case "Tab":
            event.preventDefault();
            event.stopPropagation();
            break;
          default:
            if (event.key.length === 1) {
              dispatch({ type: 5, value: event.key });
              searchDisposables.setTimeout(() => dispatch({ type: 6 }), 350);
            }
            break;
        }
      }, [d2, dispatch, searchDisposables, state2]);
      let labelledby = useComputed(() => {
        var _a22, _b, _c2;
        return (_c2 = (_a22 = state2.labelRef.current) == null ? void 0 : _a22.id) != null ? _c2 : (_b = state2.buttonRef.current) == null ? void 0 : _b.id;
      }, [state2.labelRef.current, state2.buttonRef.current]);
      let slot = (0, import_react23.useMemo)(() => ({ open: state2.listboxState === 0 }), [state2]);
      let propsWeControl = {
        "aria-activedescendant": state2.activeOptionIndex === null ? void 0 : (_a2 = state2.options[state2.activeOptionIndex]) == null ? void 0 : _a2.id,
        "aria-labelledby": labelledby,
        "aria-orientation": state2.orientation,
        id: id2,
        onKeyDown: handleKeyDown,
        role: "listbox",
        tabIndex: 0,
        ref: optionsRef
      };
      let passthroughProps = props;
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_OPTIONS_TAG2,
        features: OptionsRenderFeatures2,
        visible,
        name: "Listbox.Options"
      });
    });
    var DEFAULT_OPTION_TAG2 = "li";
    function Option2(props) {
      let { disabled = false, value, ...passthroughProps } = props;
      let [state2, dispatch] = useListboxContext("Listbox.Option");
      let id2 = `headlessui-listbox-option-${useId()}`;
      let active = state2.activeOptionIndex !== null ? state2.options[state2.activeOptionIndex].id === id2 : false;
      let selected = state2.propsRef.current.value === value;
      let bag = (0, import_react23.useRef)({ disabled, value });
      useIsoMorphicEffect(() => {
        bag.current.disabled = disabled;
      }, [bag, disabled]);
      useIsoMorphicEffect(() => {
        bag.current.value = value;
      }, [bag, value]);
      useIsoMorphicEffect(() => {
        var _a2, _b;
        bag.current.textValue = (_b = (_a2 = document.getElementById(id2)) == null ? void 0 : _a2.textContent) == null ? void 0 : _b.toLowerCase();
      }, [bag, id2]);
      let select = (0, import_react23.useCallback)(() => state2.propsRef.current.onChange(value), [state2.propsRef, value]);
      useIsoMorphicEffect(() => {
        dispatch({ type: 7, id: id2, dataRef: bag });
        return () => dispatch({ type: 8, id: id2 });
      }, [bag, id2]);
      useIsoMorphicEffect(() => {
        var _a2, _b;
        if (state2.listboxState !== 0)
          return;
        if (!selected)
          return;
        dispatch({ type: 4, focus: 4, id: id2 });
        (_b = (_a2 = document.getElementById(id2)) == null ? void 0 : _a2.focus) == null ? void 0 : _b.call(_a2);
      }, [state2.listboxState]);
      useIsoMorphicEffect(() => {
        if (state2.listboxState !== 0)
          return;
        if (!active)
          return;
        let d2 = disposables();
        d2.requestAnimationFrame(() => {
          var _a2, _b;
          (_b = (_a2 = document.getElementById(id2)) == null ? void 0 : _a2.scrollIntoView) == null ? void 0 : _b.call(_a2, { block: "nearest" });
        });
        return d2.dispose;
      }, [
        id2,
        active,
        state2.listboxState,
        state2.activeOptionIndex
      ]);
      let handleClick = (0, import_react23.useCallback)((event) => {
        if (disabled)
          return event.preventDefault();
        select();
        dispatch({ type: 1 });
        disposables().nextFrame(() => {
          var _a2;
          return (_a2 = state2.buttonRef.current) == null ? void 0 : _a2.focus({ preventScroll: true });
        });
      }, [dispatch, state2.buttonRef, disabled, select]);
      let handleFocus = (0, import_react23.useCallback)(() => {
        if (disabled)
          return dispatch({ type: 4, focus: 5 });
        dispatch({ type: 4, focus: 4, id: id2 });
      }, [disabled, id2, dispatch]);
      let handleMove = (0, import_react23.useCallback)(() => {
        if (disabled)
          return;
        if (active)
          return;
        dispatch({ type: 4, focus: 4, id: id2 });
      }, [disabled, active, id2, dispatch]);
      let handleLeave = (0, import_react23.useCallback)(() => {
        if (disabled)
          return;
        if (!active)
          return;
        dispatch({ type: 4, focus: 5 });
      }, [disabled, active, dispatch]);
      let slot = (0, import_react23.useMemo)(() => ({ active, selected, disabled }), [active, selected, disabled]);
      let propsWeControl = {
        id: id2,
        role: "option",
        tabIndex: disabled === true ? void 0 : -1,
        "aria-disabled": disabled === true ? true : void 0,
        "aria-selected": selected === true ? true : void 0,
        disabled: void 0,
        onClick: handleClick,
        onFocus: handleFocus,
        onPointerMove: handleMove,
        onMouseMove: handleMove,
        onPointerLeave: handleLeave,
        onMouseLeave: handleLeave
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_OPTION_TAG2,
        name: "Listbox.Option"
      });
    }
    Listbox.Button = Button5;
    Listbox.Label = Label2;
    Listbox.Options = Options3;
    Listbox.Option = Option2;
    var import_react24 = __toESM(require_react(), 1);
    var reducers5 = {
      [1](state2) {
        if (state2.menuState === 1)
          return state2;
        return { ...state2, activeItemIndex: null, menuState: 1 };
      },
      [0](state2) {
        if (state2.menuState === 0)
          return state2;
        return { ...state2, menuState: 0 };
      },
      [2]: (state2, action) => {
        let activeItemIndex = calculateActiveIndex(action, {
          resolveItems: () => state2.items,
          resolveActiveIndex: () => state2.activeItemIndex,
          resolveId: (item) => item.id,
          resolveDisabled: (item) => item.dataRef.current.disabled
        });
        if (state2.searchQuery === "" && state2.activeItemIndex === activeItemIndex)
          return state2;
        return { ...state2, searchQuery: "", activeItemIndex };
      },
      [3]: (state2, action) => {
        let wasAlreadySearching = state2.searchQuery !== "";
        let offset = wasAlreadySearching ? 0 : 1;
        let searchQuery = state2.searchQuery + action.value.toLowerCase();
        let reOrderedItems = state2.activeItemIndex !== null ? state2.items.slice(state2.activeItemIndex + offset).concat(state2.items.slice(0, state2.activeItemIndex + offset)) : state2.items;
        let matchingItem = reOrderedItems.find((item) => {
          var _a2;
          return ((_a2 = item.dataRef.current.textValue) == null ? void 0 : _a2.startsWith(searchQuery)) && !item.dataRef.current.disabled;
        });
        let matchIdx = matchingItem ? state2.items.indexOf(matchingItem) : -1;
        if (matchIdx === -1 || matchIdx === state2.activeItemIndex)
          return { ...state2, searchQuery };
        return { ...state2, searchQuery, activeItemIndex: matchIdx };
      },
      [4](state2) {
        if (state2.searchQuery === "")
          return state2;
        return { ...state2, searchQuery: "", searchActiveItemIndex: null };
      },
      [5]: (state2, action) => {
        var _a2;
        let orderMap = Array.from((_a2 = state2.itemsRef.current) == null ? void 0 : _a2.querySelectorAll('[id^="headlessui-menu-item-"]')).reduce((lookup, element, index) => Object.assign(lookup, { [element.id]: index }), {});
        let items = [...state2.items, { id: action.id, dataRef: action.dataRef }].sort((a, z) => orderMap[a.id] - orderMap[z.id]);
        return { ...state2, items };
      },
      [6]: (state2, action) => {
        let nextItems = state2.items.slice();
        let currentActiveItem = state2.activeItemIndex !== null ? nextItems[state2.activeItemIndex] : null;
        let idx = nextItems.findIndex((a) => a.id === action.id);
        if (idx !== -1)
          nextItems.splice(idx, 1);
        return {
          ...state2,
          items: nextItems,
          activeItemIndex: (() => {
            if (idx === state2.activeItemIndex)
              return null;
            if (currentActiveItem === null)
              return null;
            return nextItems.indexOf(currentActiveItem);
          })()
        };
      }
    };
    var MenuContext = (0, import_react24.createContext)(null);
    MenuContext.displayName = "MenuContext";
    function useMenuContext(component) {
      let context2 = (0, import_react24.useContext)(MenuContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${Menu.name} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useMenuContext);
        throw err;
      }
      return context2;
    }
    function stateReducer5(state2, action) {
      return match(action.type, reducers5, state2, action);
    }
    var DEFAULT_MENU_TAG = import_react24.Fragment;
    function Menu(props) {
      let reducerBag = (0, import_react24.useReducer)(stateReducer5, {
        menuState: 1,
        buttonRef: (0, import_react24.createRef)(),
        itemsRef: (0, import_react24.createRef)(),
        items: [],
        searchQuery: "",
        activeItemIndex: null
      });
      let [{ menuState, itemsRef, buttonRef }, dispatch] = reducerBag;
      useWindowEvent("mousedown", (event) => {
        var _a2, _b, _c2;
        let target = event.target;
        if (menuState !== 0)
          return;
        if ((_a2 = buttonRef.current) == null ? void 0 : _a2.contains(target))
          return;
        if ((_b = itemsRef.current) == null ? void 0 : _b.contains(target))
          return;
        dispatch({ type: 1 });
        if (!isFocusableElement(target, 1)) {
          event.preventDefault();
          (_c2 = buttonRef.current) == null ? void 0 : _c2.focus();
        }
      });
      let slot = (0, import_react24.useMemo)(() => ({ open: menuState === 0 }), [menuState]);
      return /* @__PURE__ */ import_react24.default.createElement(MenuContext.Provider, {
        value: reducerBag
      }, /* @__PURE__ */ import_react24.default.createElement(OpenClosedProvider, {
        value: match(menuState, {
          [0]: 0,
          [1]: 1
        })
      }, render({ props, slot, defaultTag: DEFAULT_MENU_TAG, name: "Menu" })));
    }
    var DEFAULT_BUTTON_TAG4 = "button";
    var Button7 = forwardRefWithAs(function Button8(props, ref) {
      var _a2;
      let [state2, dispatch] = useMenuContext("Menu.Button");
      let buttonRef = useSyncRefs(state2.buttonRef, ref);
      let id2 = `headlessui-menu-button-${useId()}`;
      let d2 = useDisposables();
      let handleKeyDown = (0, import_react24.useCallback)((event) => {
        switch (event.key) {
          case " ":
          case "Enter":
          case "ArrowDown":
            event.preventDefault();
            event.stopPropagation();
            dispatch({ type: 0 });
            d2.nextFrame(() => dispatch({ type: 2, focus: 0 }));
            break;
          case "ArrowUp":
            event.preventDefault();
            event.stopPropagation();
            dispatch({ type: 0 });
            d2.nextFrame(() => dispatch({ type: 2, focus: 3 }));
            break;
        }
      }, [dispatch, d2]);
      let handleKeyUp = (0, import_react24.useCallback)((event) => {
        switch (event.key) {
          case " ":
            event.preventDefault();
            break;
        }
      }, []);
      let handleClick = (0, import_react24.useCallback)((event) => {
        if (isDisabledReactIssue7711(event.currentTarget))
          return event.preventDefault();
        if (props.disabled)
          return;
        if (state2.menuState === 0) {
          dispatch({ type: 1 });
          d2.nextFrame(() => {
            var _a22;
            return (_a22 = state2.buttonRef.current) == null ? void 0 : _a22.focus({ preventScroll: true });
          });
        } else {
          event.preventDefault();
          event.stopPropagation();
          dispatch({ type: 0 });
        }
      }, [dispatch, d2, state2, props.disabled]);
      let slot = (0, import_react24.useMemo)(() => ({ open: state2.menuState === 0 }), [state2]);
      let passthroughProps = props;
      let propsWeControl = {
        ref: buttonRef,
        id: id2,
        type: useResolveButtonType(props, state2.buttonRef),
        "aria-haspopup": true,
        "aria-controls": (_a2 = state2.itemsRef.current) == null ? void 0 : _a2.id,
        "aria-expanded": props.disabled ? void 0 : state2.menuState === 0,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        onClick: handleClick
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_BUTTON_TAG4,
        name: "Menu.Button"
      });
    });
    var DEFAULT_ITEMS_TAG = "div";
    var ItemsRenderFeatures = 1 | 2;
    var Items = forwardRefWithAs(function Items2(props, ref) {
      var _a2, _b;
      let [state2, dispatch] = useMenuContext("Menu.Items");
      let itemsRef = useSyncRefs(state2.itemsRef, ref);
      let id2 = `headlessui-menu-items-${useId()}`;
      let searchDisposables = useDisposables();
      let usesOpenClosedState = useOpenClosed();
      let visible = (() => {
        if (usesOpenClosedState !== null) {
          return usesOpenClosedState === 0;
        }
        return state2.menuState === 0;
      })();
      (0, import_react24.useEffect)(() => {
        let container = state2.itemsRef.current;
        if (!container)
          return;
        if (state2.menuState !== 0)
          return;
        if (container === document.activeElement)
          return;
        container.focus({ preventScroll: true });
      }, [state2.menuState, state2.itemsRef]);
      useTreeWalker({
        container: state2.itemsRef.current,
        enabled: state2.menuState === 0,
        accept(node) {
          if (node.getAttribute("role") === "menuitem")
            return NodeFilter.FILTER_REJECT;
          if (node.hasAttribute("role"))
            return NodeFilter.FILTER_SKIP;
          return NodeFilter.FILTER_ACCEPT;
        },
        walk(node) {
          node.setAttribute("role", "none");
        }
      });
      let handleKeyDown = (0, import_react24.useCallback)((event) => {
        var _a22;
        searchDisposables.dispose();
        switch (event.key) {
          case " ":
            if (state2.searchQuery !== "") {
              event.preventDefault();
              event.stopPropagation();
              return dispatch({ type: 3, value: event.key });
            }
          case "Enter":
            event.preventDefault();
            event.stopPropagation();
            dispatch({ type: 1 });
            if (state2.activeItemIndex !== null) {
              let { id: id3 } = state2.items[state2.activeItemIndex];
              (_a22 = document.getElementById(id3)) == null ? void 0 : _a22.click();
            }
            disposables().nextFrame(() => {
              var _a3;
              return (_a3 = state2.buttonRef.current) == null ? void 0 : _a3.focus({ preventScroll: true });
            });
            break;
          case "ArrowDown":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 2, focus: 2 });
          case "ArrowUp":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 2, focus: 1 });
          case "Home":
          case "PageUp":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 2, focus: 0 });
          case "End":
          case "PageDown":
            event.preventDefault();
            event.stopPropagation();
            return dispatch({ type: 2, focus: 3 });
          case "Escape":
            event.preventDefault();
            event.stopPropagation();
            dispatch({ type: 1 });
            disposables().nextFrame(() => {
              var _a3;
              return (_a3 = state2.buttonRef.current) == null ? void 0 : _a3.focus({ preventScroll: true });
            });
            break;
          case "Tab":
            event.preventDefault();
            event.stopPropagation();
            break;
          default:
            if (event.key.length === 1) {
              dispatch({ type: 3, value: event.key });
              searchDisposables.setTimeout(() => dispatch({ type: 4 }), 350);
            }
            break;
        }
      }, [dispatch, searchDisposables, state2]);
      let handleKeyUp = (0, import_react24.useCallback)((event) => {
        switch (event.key) {
          case " ":
            event.preventDefault();
            break;
        }
      }, []);
      let slot = (0, import_react24.useMemo)(() => ({ open: state2.menuState === 0 }), [state2]);
      let propsWeControl = {
        "aria-activedescendant": state2.activeItemIndex === null ? void 0 : (_a2 = state2.items[state2.activeItemIndex]) == null ? void 0 : _a2.id,
        "aria-labelledby": (_b = state2.buttonRef.current) == null ? void 0 : _b.id,
        id: id2,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        role: "menu",
        tabIndex: 0,
        ref: itemsRef
      };
      let passthroughProps = props;
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_ITEMS_TAG,
        features: ItemsRenderFeatures,
        visible,
        name: "Menu.Items"
      });
    });
    var DEFAULT_ITEM_TAG = import_react24.Fragment;
    function Item(props) {
      let { disabled = false, onClick, ...passthroughProps } = props;
      let [state2, dispatch] = useMenuContext("Menu.Item");
      let id2 = `headlessui-menu-item-${useId()}`;
      let active = state2.activeItemIndex !== null ? state2.items[state2.activeItemIndex].id === id2 : false;
      useIsoMorphicEffect(() => {
        if (state2.menuState !== 0)
          return;
        if (!active)
          return;
        let d2 = disposables();
        d2.requestAnimationFrame(() => {
          var _a2, _b;
          (_b = (_a2 = document.getElementById(id2)) == null ? void 0 : _a2.scrollIntoView) == null ? void 0 : _b.call(_a2, { block: "nearest" });
        });
        return d2.dispose;
      }, [
        id2,
        active,
        state2.menuState,
        state2.activeItemIndex
      ]);
      let bag = (0, import_react24.useRef)({ disabled });
      useIsoMorphicEffect(() => {
        bag.current.disabled = disabled;
      }, [bag, disabled]);
      useIsoMorphicEffect(() => {
        var _a2, _b;
        bag.current.textValue = (_b = (_a2 = document.getElementById(id2)) == null ? void 0 : _a2.textContent) == null ? void 0 : _b.toLowerCase();
      }, [bag, id2]);
      useIsoMorphicEffect(() => {
        dispatch({ type: 5, id: id2, dataRef: bag });
        return () => dispatch({ type: 6, id: id2 });
      }, [bag, id2]);
      let handleClick = (0, import_react24.useCallback)((event) => {
        if (disabled)
          return event.preventDefault();
        dispatch({ type: 1 });
        disposables().nextFrame(() => {
          var _a2;
          return (_a2 = state2.buttonRef.current) == null ? void 0 : _a2.focus({ preventScroll: true });
        });
        if (onClick)
          return onClick(event);
      }, [dispatch, state2.buttonRef, disabled, onClick]);
      let handleFocus = (0, import_react24.useCallback)(() => {
        if (disabled)
          return dispatch({ type: 2, focus: 5 });
        dispatch({ type: 2, focus: 4, id: id2 });
      }, [disabled, id2, dispatch]);
      let handleMove = (0, import_react24.useCallback)(() => {
        if (disabled)
          return;
        if (active)
          return;
        dispatch({ type: 2, focus: 4, id: id2 });
      }, [disabled, active, id2, dispatch]);
      let handleLeave = (0, import_react24.useCallback)(() => {
        if (disabled)
          return;
        if (!active)
          return;
        dispatch({ type: 2, focus: 5 });
      }, [disabled, active, dispatch]);
      let slot = (0, import_react24.useMemo)(() => ({ active, disabled }), [active, disabled]);
      let propsWeControl = {
        id: id2,
        role: "menuitem",
        tabIndex: disabled === true ? void 0 : -1,
        "aria-disabled": disabled === true ? true : void 0,
        disabled: void 0,
        onClick: handleClick,
        onFocus: handleFocus,
        onPointerMove: handleMove,
        onMouseMove: handleMove,
        onPointerLeave: handleLeave,
        onMouseLeave: handleLeave
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_ITEM_TAG,
        name: "Menu.Item"
      });
    }
    Menu.Button = Button7;
    Menu.Items = Items;
    Menu.Item = Item;
    var import_react25 = __toESM(require_react(), 1);
    var reducers6 = {
      [0]: (state2) => ({
        ...state2,
        popoverState: match(state2.popoverState, {
          [0]: 1,
          [1]: 0
        })
      }),
      [1](state2) {
        if (state2.popoverState === 1)
          return state2;
        return { ...state2, popoverState: 1 };
      },
      [2](state2, action) {
        if (state2.button === action.button)
          return state2;
        return { ...state2, button: action.button };
      },
      [3](state2, action) {
        if (state2.buttonId === action.buttonId)
          return state2;
        return { ...state2, buttonId: action.buttonId };
      },
      [4](state2, action) {
        if (state2.panel === action.panel)
          return state2;
        return { ...state2, panel: action.panel };
      },
      [5](state2, action) {
        if (state2.panelId === action.panelId)
          return state2;
        return { ...state2, panelId: action.panelId };
      }
    };
    var PopoverContext = (0, import_react25.createContext)(null);
    PopoverContext.displayName = "PopoverContext";
    function usePopoverContext(component) {
      let context2 = (0, import_react25.useContext)(PopoverContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, usePopoverContext);
        throw err;
      }
      return context2;
    }
    var PopoverAPIContext = (0, import_react25.createContext)(null);
    PopoverAPIContext.displayName = "PopoverAPIContext";
    function usePopoverAPIContext(component) {
      let context2 = (0, import_react25.useContext)(PopoverAPIContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, usePopoverAPIContext);
        throw err;
      }
      return context2;
    }
    var PopoverGroupContext = (0, import_react25.createContext)(null);
    PopoverGroupContext.displayName = "PopoverGroupContext";
    function usePopoverGroupContext() {
      return (0, import_react25.useContext)(PopoverGroupContext);
    }
    var PopoverPanelContext = (0, import_react25.createContext)(null);
    PopoverPanelContext.displayName = "PopoverPanelContext";
    function usePopoverPanelContext() {
      return (0, import_react25.useContext)(PopoverPanelContext);
    }
    function stateReducer6(state2, action) {
      return match(action.type, reducers6, state2, action);
    }
    var DEFAULT_POPOVER_TAG = "div";
    function Popover(props) {
      let buttonId = `headlessui-popover-button-${useId()}`;
      let panelId = `headlessui-popover-panel-${useId()}`;
      let reducerBag = (0, import_react25.useReducer)(stateReducer6, {
        popoverState: 1,
        button: null,
        buttonId,
        panel: null,
        panelId
      });
      let [{ popoverState, button, panel }, dispatch] = reducerBag;
      (0, import_react25.useEffect)(() => dispatch({ type: 3, buttonId }), [buttonId, dispatch]);
      (0, import_react25.useEffect)(() => dispatch({ type: 5, panelId }), [panelId, dispatch]);
      let registerBag = (0, import_react25.useMemo)(() => ({ buttonId, panelId, close: () => dispatch({ type: 1 }) }), [buttonId, panelId, dispatch]);
      let groupContext = usePopoverGroupContext();
      let registerPopover = groupContext == null ? void 0 : groupContext.registerPopover;
      let isFocusWithinPopoverGroup = (0, import_react25.useCallback)(() => {
        var _a2;
        return (_a2 = groupContext == null ? void 0 : groupContext.isFocusWithinPopoverGroup()) != null ? _a2 : (button == null ? void 0 : button.contains(document.activeElement)) || (panel == null ? void 0 : panel.contains(document.activeElement));
      }, [groupContext, button, panel]);
      (0, import_react25.useEffect)(() => registerPopover == null ? void 0 : registerPopover(registerBag), [registerPopover, registerBag]);
      useWindowEvent("focus", () => {
        if (popoverState !== 0)
          return;
        if (isFocusWithinPopoverGroup())
          return;
        if (!button)
          return;
        if (!panel)
          return;
        dispatch({ type: 1 });
      }, true);
      useWindowEvent("mousedown", (event) => {
        let target = event.target;
        if (popoverState !== 0)
          return;
        if (button == null ? void 0 : button.contains(target))
          return;
        if (panel == null ? void 0 : panel.contains(target))
          return;
        dispatch({ type: 1 });
        if (!isFocusableElement(target, 1)) {
          event.preventDefault();
          button == null ? void 0 : button.focus();
        }
      });
      let close = (0, import_react25.useCallback)((focusableElement) => {
        dispatch({ type: 1 });
        let restoreElement = (() => {
          if (!focusableElement)
            return button;
          if (focusableElement instanceof HTMLElement)
            return focusableElement;
          if (focusableElement.current instanceof HTMLElement)
            return focusableElement.current;
          return button;
        })();
        restoreElement == null ? void 0 : restoreElement.focus();
      }, [dispatch, button]);
      let api = (0, import_react25.useMemo)(() => ({ close }), [close]);
      let slot = (0, import_react25.useMemo)(() => ({ open: popoverState === 0, close }), [popoverState, close]);
      return /* @__PURE__ */ import_react25.default.createElement(PopoverContext.Provider, {
        value: reducerBag
      }, /* @__PURE__ */ import_react25.default.createElement(PopoverAPIContext.Provider, {
        value: api
      }, /* @__PURE__ */ import_react25.default.createElement(OpenClosedProvider, {
        value: match(popoverState, {
          [0]: 0,
          [1]: 1
        })
      }, render({
        props,
        slot,
        defaultTag: DEFAULT_POPOVER_TAG,
        name: "Popover"
      }))));
    }
    var DEFAULT_BUTTON_TAG5 = "button";
    var Button9 = forwardRefWithAs(function Button10(props, ref) {
      let [state2, dispatch] = usePopoverContext("Popover.Button");
      let internalButtonRef = (0, import_react25.useRef)(null);
      let groupContext = usePopoverGroupContext();
      let closeOthers = groupContext == null ? void 0 : groupContext.closeOthers;
      let panelContext = usePopoverPanelContext();
      let isWithinPanel = panelContext === null ? false : panelContext === state2.panelId;
      let buttonRef = useSyncRefs(internalButtonRef, ref, isWithinPanel ? null : (button) => dispatch({ type: 2, button }));
      let withinPanelButtonRef = useSyncRefs(internalButtonRef, ref);
      let activeElementRef = (0, import_react25.useRef)(null);
      let previousActiveElementRef = (0, import_react25.useRef)(typeof window === "undefined" ? null : document.activeElement);
      useWindowEvent("focus", () => {
        previousActiveElementRef.current = activeElementRef.current;
        activeElementRef.current = document.activeElement;
      }, true);
      let handleKeyDown = (0, import_react25.useCallback)((event) => {
        var _a2, _b;
        if (isWithinPanel) {
          if (state2.popoverState === 1)
            return;
          switch (event.key) {
            case " ":
            case "Enter":
              event.preventDefault();
              event.stopPropagation();
              dispatch({ type: 1 });
              (_a2 = state2.button) == null ? void 0 : _a2.focus();
              break;
          }
        } else {
          switch (event.key) {
            case " ":
            case "Enter":
              event.preventDefault();
              event.stopPropagation();
              if (state2.popoverState === 1)
                closeOthers == null ? void 0 : closeOthers(state2.buttonId);
              dispatch({ type: 0 });
              break;
            case "Escape":
              if (state2.popoverState !== 0)
                return closeOthers == null ? void 0 : closeOthers(state2.buttonId);
              if (!internalButtonRef.current)
                return;
              if (!internalButtonRef.current.contains(document.activeElement))
                return;
              event.preventDefault();
              event.stopPropagation();
              dispatch({ type: 1 });
              break;
            case "Tab":
              if (state2.popoverState !== 0)
                return;
              if (!state2.panel)
                return;
              if (!state2.button)
                return;
              if (event.shiftKey) {
                if (!previousActiveElementRef.current)
                  return;
                if ((_b = state2.button) == null ? void 0 : _b.contains(previousActiveElementRef.current))
                  return;
                if (state2.panel.contains(previousActiveElementRef.current))
                  return;
                let focusableElements = getFocusableElements();
                let previousIdx = focusableElements.indexOf(previousActiveElementRef.current);
                let buttonIdx = focusableElements.indexOf(state2.button);
                if (buttonIdx > previousIdx)
                  return;
                event.preventDefault();
                event.stopPropagation();
                focusIn(state2.panel, 8);
              } else {
                event.preventDefault();
                event.stopPropagation();
                focusIn(state2.panel, 1);
              }
              break;
          }
        }
      }, [
        dispatch,
        state2.popoverState,
        state2.buttonId,
        state2.button,
        state2.panel,
        internalButtonRef,
        closeOthers,
        isWithinPanel
      ]);
      let handleKeyUp = (0, import_react25.useCallback)((event) => {
        var _a2;
        if (isWithinPanel)
          return;
        if (event.key === " ") {
          event.preventDefault();
        }
        if (state2.popoverState !== 0)
          return;
        if (!state2.panel)
          return;
        if (!state2.button)
          return;
        switch (event.key) {
          case "Tab":
            if (!previousActiveElementRef.current)
              return;
            if ((_a2 = state2.button) == null ? void 0 : _a2.contains(previousActiveElementRef.current))
              return;
            if (state2.panel.contains(previousActiveElementRef.current))
              return;
            let focusableElements = getFocusableElements();
            let previousIdx = focusableElements.indexOf(previousActiveElementRef.current);
            let buttonIdx = focusableElements.indexOf(state2.button);
            if (buttonIdx > previousIdx)
              return;
            event.preventDefault();
            event.stopPropagation();
            focusIn(state2.panel, 8);
            break;
        }
      }, [state2.popoverState, state2.panel, state2.button, isWithinPanel]);
      let handleClick = (0, import_react25.useCallback)((event) => {
        var _a2, _b;
        if (isDisabledReactIssue7711(event.currentTarget))
          return;
        if (props.disabled)
          return;
        if (isWithinPanel) {
          dispatch({ type: 1 });
          (_a2 = state2.button) == null ? void 0 : _a2.focus();
        } else {
          if (state2.popoverState === 1)
            closeOthers == null ? void 0 : closeOthers(state2.buttonId);
          (_b = state2.button) == null ? void 0 : _b.focus();
          dispatch({ type: 0 });
        }
      }, [
        dispatch,
        state2.button,
        state2.popoverState,
        state2.buttonId,
        props.disabled,
        closeOthers,
        isWithinPanel
      ]);
      let slot = (0, import_react25.useMemo)(() => ({ open: state2.popoverState === 0 }), [state2]);
      let type = useResolveButtonType(props, internalButtonRef);
      let passthroughProps = props;
      let propsWeControl = isWithinPanel ? {
        ref: withinPanelButtonRef,
        type,
        onKeyDown: handleKeyDown,
        onClick: handleClick
      } : {
        ref: buttonRef,
        id: state2.buttonId,
        type,
        "aria-expanded": props.disabled ? void 0 : state2.popoverState === 0,
        "aria-controls": state2.panel ? state2.panelId : void 0,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        onClick: handleClick
      };
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_BUTTON_TAG5,
        name: "Popover.Button"
      });
    });
    var DEFAULT_OVERLAY_TAG2 = "div";
    var OverlayRenderFeatures = 1 | 2;
    var Overlay3 = forwardRefWithAs(function Overlay4(props, ref) {
      let [{ popoverState }, dispatch] = usePopoverContext("Popover.Overlay");
      let overlayRef = useSyncRefs(ref);
      let id2 = `headlessui-popover-overlay-${useId()}`;
      let usesOpenClosedState = useOpenClosed();
      let visible = (() => {
        if (usesOpenClosedState !== null) {
          return usesOpenClosedState === 0;
        }
        return popoverState === 0;
      })();
      let handleClick = (0, import_react25.useCallback)((event) => {
        if (isDisabledReactIssue7711(event.currentTarget))
          return event.preventDefault();
        dispatch({ type: 1 });
      }, [dispatch]);
      let slot = (0, import_react25.useMemo)(() => ({ open: popoverState === 0 }), [popoverState]);
      let propsWeControl = {
        ref: overlayRef,
        id: id2,
        "aria-hidden": true,
        onClick: handleClick
      };
      let passthroughProps = props;
      return render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_OVERLAY_TAG2,
        features: OverlayRenderFeatures,
        visible,
        name: "Popover.Overlay"
      });
    });
    var DEFAULT_PANEL_TAG2 = "div";
    var PanelRenderFeatures2 = 1 | 2;
    var Panel3 = forwardRefWithAs(function Panel4(props, ref) {
      let { focus = false, ...passthroughProps } = props;
      let [state2, dispatch] = usePopoverContext("Popover.Panel");
      let { close } = usePopoverAPIContext("Popover.Panel");
      let internalPanelRef = (0, import_react25.useRef)(null);
      let panelRef = useSyncRefs(internalPanelRef, ref, (panel) => {
        dispatch({ type: 4, panel });
      });
      let usesOpenClosedState = useOpenClosed();
      let visible = (() => {
        if (usesOpenClosedState !== null) {
          return usesOpenClosedState === 0;
        }
        return state2.popoverState === 0;
      })();
      let handleKeyDown = (0, import_react25.useCallback)((event) => {
        var _a2;
        switch (event.key) {
          case "Escape":
            if (state2.popoverState !== 0)
              return;
            if (!internalPanelRef.current)
              return;
            if (!internalPanelRef.current.contains(document.activeElement))
              return;
            event.preventDefault();
            event.stopPropagation();
            dispatch({ type: 1 });
            (_a2 = state2.button) == null ? void 0 : _a2.focus();
            break;
        }
      }, [state2, internalPanelRef, dispatch]);
      (0, import_react25.useEffect)(() => () => dispatch({ type: 4, panel: null }), [dispatch]);
      (0, import_react25.useEffect)(() => {
        var _a2;
        if (props.static)
          return;
        if (state2.popoverState === 1 && ((_a2 = props.unmount) != null ? _a2 : true)) {
          dispatch({ type: 4, panel: null });
        }
      }, [state2.popoverState, props.unmount, props.static, dispatch]);
      (0, import_react25.useEffect)(() => {
        if (!focus)
          return;
        if (state2.popoverState !== 0)
          return;
        if (!internalPanelRef.current)
          return;
        let activeElement = document.activeElement;
        if (internalPanelRef.current.contains(activeElement))
          return;
        focusIn(internalPanelRef.current, 1);
      }, [focus, internalPanelRef, state2.popoverState]);
      useWindowEvent("keydown", (event) => {
        var _a2;
        if (state2.popoverState !== 0)
          return;
        if (!internalPanelRef.current)
          return;
        if (event.key !== "Tab")
          return;
        if (!document.activeElement)
          return;
        if (!internalPanelRef.current)
          return;
        if (!internalPanelRef.current.contains(document.activeElement))
          return;
        event.preventDefault();
        let result = focusIn(internalPanelRef.current, event.shiftKey ? 2 : 4);
        if (result === 3) {
          return (_a2 = state2.button) == null ? void 0 : _a2.focus();
        } else if (result === 1) {
          if (!state2.button)
            return;
          let elements = getFocusableElements();
          let buttonIdx = elements.indexOf(state2.button);
          let nextElements = elements.splice(buttonIdx + 1).filter((element) => {
            var _a22;
            return !((_a22 = internalPanelRef.current) == null ? void 0 : _a22.contains(element));
          });
          if (focusIn(nextElements, 1) === 0) {
            focusIn(document.body, 1);
          }
        }
      });
      useWindowEvent("focus", () => {
        var _a2;
        if (!focus)
          return;
        if (state2.popoverState !== 0)
          return;
        if (!internalPanelRef.current)
          return;
        if ((_a2 = internalPanelRef.current) == null ? void 0 : _a2.contains(document.activeElement))
          return;
        dispatch({ type: 1 });
      }, true);
      let slot = (0, import_react25.useMemo)(() => ({ open: state2.popoverState === 0, close }), [state2, close]);
      let propsWeControl = {
        ref: panelRef,
        id: state2.panelId,
        onKeyDown: handleKeyDown
      };
      return /* @__PURE__ */ import_react25.default.createElement(PopoverPanelContext.Provider, {
        value: state2.panelId
      }, render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_PANEL_TAG2,
        features: PanelRenderFeatures2,
        visible,
        name: "Popover.Panel"
      }));
    });
    var DEFAULT_GROUP_TAG2 = "div";
    function Group2(props) {
      let groupRef = (0, import_react25.useRef)(null);
      let [popovers, setPopovers] = (0, import_react25.useState)([]);
      let unregisterPopover = (0, import_react25.useCallback)((registerbag) => {
        setPopovers((existing) => {
          let idx = existing.indexOf(registerbag);
          if (idx !== -1) {
            let clone = existing.slice();
            clone.splice(idx, 1);
            return clone;
          }
          return existing;
        });
      }, [setPopovers]);
      let registerPopover = (0, import_react25.useCallback)((registerbag) => {
        setPopovers((existing) => [...existing, registerbag]);
        return () => unregisterPopover(registerbag);
      }, [setPopovers, unregisterPopover]);
      let isFocusWithinPopoverGroup = (0, import_react25.useCallback)(() => {
        var _a2;
        let element = document.activeElement;
        if ((_a2 = groupRef.current) == null ? void 0 : _a2.contains(element))
          return true;
        return popovers.some((bag) => {
          var _a22, _b;
          return ((_a22 = document.getElementById(bag.buttonId)) == null ? void 0 : _a22.contains(element)) || ((_b = document.getElementById(bag.panelId)) == null ? void 0 : _b.contains(element));
        });
      }, [groupRef, popovers]);
      let closeOthers = (0, import_react25.useCallback)((buttonId) => {
        for (let popover of popovers) {
          if (popover.buttonId !== buttonId)
            popover.close();
        }
      }, [popovers]);
      let contextBag = (0, import_react25.useMemo)(() => ({
        registerPopover,
        unregisterPopover,
        isFocusWithinPopoverGroup,
        closeOthers
      }), [registerPopover, unregisterPopover, isFocusWithinPopoverGroup, closeOthers]);
      let slot = (0, import_react25.useMemo)(() => ({}), []);
      let propsWeControl = { ref: groupRef };
      let passthroughProps = props;
      return /* @__PURE__ */ import_react25.default.createElement(PopoverGroupContext.Provider, {
        value: contextBag
      }, render({
        props: { ...passthroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_GROUP_TAG2,
        name: "Popover.Group"
      }));
    }
    Popover.Button = Button9;
    Popover.Overlay = Overlay3;
    Popover.Panel = Panel3;
    Popover.Group = Group2;
    var import_react28 = __toESM(require_react(), 1);
    var import_react26 = require_react();
    function useFlags(initialFlags = 0) {
      let [flags, setFlags] = (0, import_react26.useState)(initialFlags);
      let addFlag = (0, import_react26.useCallback)((flag) => setFlags((flags2) => flags2 | flag), [setFlags]);
      let hasFlag = (0, import_react26.useCallback)((flag) => Boolean(flags & flag), [flags]);
      let removeFlag = (0, import_react26.useCallback)((flag) => setFlags((flags2) => flags2 & ~flag), [setFlags]);
      let toggleFlag = (0, import_react26.useCallback)((flag) => setFlags((flags2) => flags2 ^ flag), [setFlags]);
      return { addFlag, hasFlag, removeFlag, toggleFlag };
    }
    var import_react27 = __toESM(require_react(), 1);
    var LabelContext = (0, import_react27.createContext)(null);
    function useLabelContext() {
      let context2 = (0, import_react27.useContext)(LabelContext);
      if (context2 === null) {
        let err = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useLabelContext);
        throw err;
      }
      return context2;
    }
    function useLabels() {
      let [labelIds, setLabelIds] = (0, import_react27.useState)([]);
      return [
        labelIds.length > 0 ? labelIds.join(" ") : void 0,
        (0, import_react27.useMemo)(() => {
          return function LabelProvider(props) {
            let register = (0, import_react27.useCallback)((value) => {
              setLabelIds((existing) => [...existing, value]);
              return () => setLabelIds((existing) => {
                let clone = existing.slice();
                let idx = clone.indexOf(value);
                if (idx !== -1)
                  clone.splice(idx, 1);
                return clone;
              });
            }, []);
            let contextBag = (0, import_react27.useMemo)(() => ({ register, slot: props.slot, name: props.name, props: props.props }), [register, props.slot, props.name, props.props]);
            return /* @__PURE__ */ import_react27.default.createElement(LabelContext.Provider, {
              value: contextBag
            }, props.children);
          };
        }, [setLabelIds])
      ];
    }
    var DEFAULT_LABEL_TAG3 = "label";
    function Label3(props) {
      let { passive = false, ...passThroughProps } = props;
      let context2 = useLabelContext();
      let id2 = `headlessui-label-${useId()}`;
      useIsoMorphicEffect(() => context2.register(id2), [id2, context2.register]);
      let propsWeControl = { ...context2.props, id: id2 };
      let allProps = { ...passThroughProps, ...propsWeControl };
      if (passive)
        delete allProps["onClick"];
      return render({
        props: allProps,
        slot: context2.slot || {},
        defaultTag: DEFAULT_LABEL_TAG3,
        name: context2.name || "Label"
      });
    }
    var reducers7 = {
      [0](state2, action) {
        return {
          ...state2,
          options: [
            ...state2.options,
            { id: action.id, element: action.element, propsRef: action.propsRef }
          ]
        };
      },
      [1](state2, action) {
        let options2 = state2.options.slice();
        let idx = state2.options.findIndex((radio) => radio.id === action.id);
        if (idx === -1)
          return state2;
        options2.splice(idx, 1);
        return { ...state2, options: options2 };
      }
    };
    var RadioGroupContext = (0, import_react28.createContext)(null);
    RadioGroupContext.displayName = "RadioGroupContext";
    function useRadioGroupContext(component) {
      let context2 = (0, import_react28.useContext)(RadioGroupContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useRadioGroupContext);
        throw err;
      }
      return context2;
    }
    function stateReducer7(state2, action) {
      return match(action.type, reducers7, state2, action);
    }
    var DEFAULT_RADIO_GROUP_TAG = "div";
    function RadioGroup(props) {
      let { value, onChange, disabled = false, ...passThroughProps } = props;
      let [{ options: options2 }, dispatch] = (0, import_react28.useReducer)(stateReducer7, {
        options: []
      });
      let [labelledby, LabelProvider] = useLabels();
      let [describedby, DescriptionProvider] = useDescriptions();
      let id2 = `headlessui-radiogroup-${useId()}`;
      let radioGroupRef = (0, import_react28.useRef)(null);
      let firstOption = (0, import_react28.useMemo)(() => options2.find((option) => {
        if (option.propsRef.current.disabled)
          return false;
        return true;
      }), [options2]);
      let containsCheckedOption = (0, import_react28.useMemo)(() => options2.some((option) => option.propsRef.current.value === value), [options2, value]);
      let triggerChange = (0, import_react28.useCallback)((nextValue) => {
        var _a2;
        if (disabled)
          return false;
        if (nextValue === value)
          return false;
        let nextOption = (_a2 = options2.find((option) => option.propsRef.current.value === nextValue)) == null ? void 0 : _a2.propsRef.current;
        if (nextOption == null ? void 0 : nextOption.disabled)
          return false;
        onChange(nextValue);
        return true;
      }, [onChange, value, disabled, options2]);
      useTreeWalker({
        container: radioGroupRef.current,
        accept(node) {
          if (node.getAttribute("role") === "radio")
            return NodeFilter.FILTER_REJECT;
          if (node.hasAttribute("role"))
            return NodeFilter.FILTER_SKIP;
          return NodeFilter.FILTER_ACCEPT;
        },
        walk(node) {
          node.setAttribute("role", "none");
        }
      });
      let handleKeyDown = (0, import_react28.useCallback)((event) => {
        let container = radioGroupRef.current;
        if (!container)
          return;
        let all = options2.filter((option) => option.propsRef.current.disabled === false).map((radio) => radio.element.current);
        switch (event.key) {
          case "ArrowLeft":
          case "ArrowUp":
            {
              event.preventDefault();
              event.stopPropagation();
              let result = focusIn(all, 2 | 16);
              if (result === 2) {
                let activeOption = options2.find((option) => option.element.current === document.activeElement);
                if (activeOption)
                  triggerChange(activeOption.propsRef.current.value);
              }
            }
            break;
          case "ArrowRight":
          case "ArrowDown":
            {
              event.preventDefault();
              event.stopPropagation();
              let result = focusIn(all, 4 | 16);
              if (result === 2) {
                let activeOption = options2.find((option) => option.element.current === document.activeElement);
                if (activeOption)
                  triggerChange(activeOption.propsRef.current.value);
              }
            }
            break;
          case " ":
            {
              event.preventDefault();
              event.stopPropagation();
              let activeOption = options2.find((option) => option.element.current === document.activeElement);
              if (activeOption)
                triggerChange(activeOption.propsRef.current.value);
            }
            break;
        }
      }, [radioGroupRef, options2, triggerChange]);
      let registerOption = (0, import_react28.useCallback)((option) => {
        dispatch({ type: 0, ...option });
        return () => dispatch({ type: 1, id: option.id });
      }, [dispatch]);
      let api = (0, import_react28.useMemo)(() => ({
        registerOption,
        firstOption,
        containsCheckedOption,
        change: triggerChange,
        disabled,
        value
      }), [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]);
      let propsWeControl = {
        ref: radioGroupRef,
        id: id2,
        role: "radiogroup",
        "aria-labelledby": labelledby,
        "aria-describedby": describedby,
        onKeyDown: handleKeyDown
      };
      return /* @__PURE__ */ import_react28.default.createElement(DescriptionProvider, {
        name: "RadioGroup.Description"
      }, /* @__PURE__ */ import_react28.default.createElement(LabelProvider, {
        name: "RadioGroup.Label"
      }, /* @__PURE__ */ import_react28.default.createElement(RadioGroupContext.Provider, {
        value: api
      }, render({
        props: { ...passThroughProps, ...propsWeControl },
        defaultTag: DEFAULT_RADIO_GROUP_TAG,
        name: "RadioGroup"
      }))));
    }
    var DEFAULT_OPTION_TAG3 = "div";
    function Option3(props) {
      let optionRef = (0, import_react28.useRef)(null);
      let id2 = `headlessui-radiogroup-option-${useId()}`;
      let [labelledby, LabelProvider] = useLabels();
      let [describedby, DescriptionProvider] = useDescriptions();
      let { addFlag, removeFlag, hasFlag } = useFlags(1);
      let { value, disabled = false, ...passThroughProps } = props;
      let propsRef = (0, import_react28.useRef)({ value, disabled });
      useIsoMorphicEffect(() => {
        propsRef.current.value = value;
      }, [value, propsRef]);
      useIsoMorphicEffect(() => {
        propsRef.current.disabled = disabled;
      }, [disabled, propsRef]);
      let {
        registerOption,
        disabled: radioGroupDisabled,
        change,
        firstOption,
        containsCheckedOption,
        value: radioGroupValue
      } = useRadioGroupContext("RadioGroup.Option");
      useIsoMorphicEffect(() => registerOption({ id: id2, element: optionRef, propsRef }), [id2, registerOption, optionRef, props]);
      let handleClick = (0, import_react28.useCallback)(() => {
        var _a2;
        if (!change(value))
          return;
        addFlag(2);
        (_a2 = optionRef.current) == null ? void 0 : _a2.focus();
      }, [addFlag, change, value]);
      let handleFocus = (0, import_react28.useCallback)(() => addFlag(2), [addFlag]);
      let handleBlur = (0, import_react28.useCallback)(() => removeFlag(2), [removeFlag]);
      let isFirstOption = (firstOption == null ? void 0 : firstOption.id) === id2;
      let isDisabled = radioGroupDisabled || disabled;
      let checked = radioGroupValue === value;
      let propsWeControl = {
        ref: optionRef,
        id: id2,
        role: "radio",
        "aria-checked": checked ? "true" : "false",
        "aria-labelledby": labelledby,
        "aria-describedby": describedby,
        "aria-disabled": isDisabled ? true : void 0,
        tabIndex: (() => {
          if (isDisabled)
            return -1;
          if (checked)
            return 0;
          if (!containsCheckedOption && isFirstOption)
            return 0;
          return -1;
        })(),
        onClick: isDisabled ? void 0 : handleClick,
        onFocus: isDisabled ? void 0 : handleFocus,
        onBlur: isDisabled ? void 0 : handleBlur
      };
      let slot = (0, import_react28.useMemo)(() => ({ checked, disabled: isDisabled, active: hasFlag(2) }), [checked, isDisabled, hasFlag]);
      return /* @__PURE__ */ import_react28.default.createElement(DescriptionProvider, {
        name: "RadioGroup.Description"
      }, /* @__PURE__ */ import_react28.default.createElement(LabelProvider, {
        name: "RadioGroup.Label"
      }, render({
        props: { ...passThroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_OPTION_TAG3,
        name: "RadioGroup.Option"
      })));
    }
    RadioGroup.Option = Option3;
    RadioGroup.Label = Label3;
    RadioGroup.Description = Description;
    var import_react29 = __toESM(require_react(), 1);
    var GroupContext = (0, import_react29.createContext)(null);
    GroupContext.displayName = "GroupContext";
    var DEFAULT_GROUP_TAG3 = import_react29.Fragment;
    function Group3(props) {
      let [switchElement, setSwitchElement] = (0, import_react29.useState)(null);
      let [labelledby, LabelProvider] = useLabels();
      let [describedby, DescriptionProvider] = useDescriptions();
      let context2 = (0, import_react29.useMemo)(() => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }), [switchElement, setSwitchElement, labelledby, describedby]);
      return /* @__PURE__ */ import_react29.default.createElement(DescriptionProvider, {
        name: "Switch.Description"
      }, /* @__PURE__ */ import_react29.default.createElement(LabelProvider, {
        name: "Switch.Label",
        props: {
          onClick() {
            if (!switchElement)
              return;
            switchElement.click();
            switchElement.focus({ preventScroll: true });
          }
        }
      }, /* @__PURE__ */ import_react29.default.createElement(GroupContext.Provider, {
        value: context2
      }, render({ props, defaultTag: DEFAULT_GROUP_TAG3, name: "Switch.Group" }))));
    }
    var DEFAULT_SWITCH_TAG = "button";
    function Switch(props) {
      let { checked, onChange, ...passThroughProps } = props;
      let id2 = `headlessui-switch-${useId()}`;
      let groupContext = (0, import_react29.useContext)(GroupContext);
      let internalSwitchRef = (0, import_react29.useRef)(null);
      let switchRef = useSyncRefs(internalSwitchRef, groupContext === null ? null : groupContext.setSwitch);
      let toggle = (0, import_react29.useCallback)(() => onChange(!checked), [onChange, checked]);
      let handleClick = (0, import_react29.useCallback)((event) => {
        if (isDisabledReactIssue7711(event.currentTarget))
          return event.preventDefault();
        event.preventDefault();
        toggle();
      }, [toggle]);
      let handleKeyUp = (0, import_react29.useCallback)((event) => {
        if (event.key !== "Tab")
          event.preventDefault();
        if (event.key === " ")
          toggle();
      }, [toggle]);
      let handleKeyPress = (0, import_react29.useCallback)((event) => event.preventDefault(), []);
      let slot = (0, import_react29.useMemo)(() => ({ checked }), [checked]);
      let propsWeControl = {
        id: id2,
        ref: switchRef,
        role: "switch",
        type: useResolveButtonType(props, internalSwitchRef),
        tabIndex: 0,
        "aria-checked": checked,
        "aria-labelledby": groupContext == null ? void 0 : groupContext.labelledby,
        "aria-describedby": groupContext == null ? void 0 : groupContext.describedby,
        onClick: handleClick,
        onKeyUp: handleKeyUp,
        onKeyPress: handleKeyPress
      };
      return render({
        props: { ...passThroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_SWITCH_TAG,
        name: "Switch"
      });
    }
    Switch.Group = Group3;
    Switch.Label = Label3;
    Switch.Description = Description;
    var import_react30 = __toESM(require_react(), 1);
    var reducers8 = {
      [0](state2, action) {
        if (state2.selectedIndex === action.index)
          return state2;
        return { ...state2, selectedIndex: action.index };
      },
      [1](state2, action) {
        if (state2.orientation === action.orientation)
          return state2;
        return { ...state2, orientation: action.orientation };
      },
      [2](state2, action) {
        if (state2.activation === action.activation)
          return state2;
        return { ...state2, activation: action.activation };
      },
      [3](state2, action) {
        if (state2.tabs.includes(action.tab))
          return state2;
        return { ...state2, tabs: [...state2.tabs, action.tab] };
      },
      [4](state2, action) {
        return { ...state2, tabs: state2.tabs.filter((tab) => tab !== action.tab) };
      },
      [5](state2, action) {
        if (state2.panels.includes(action.panel))
          return state2;
        return { ...state2, panels: [...state2.panels, action.panel] };
      },
      [6](state2, action) {
        return { ...state2, panels: state2.panels.filter((panel) => panel !== action.panel) };
      },
      [7](state2) {
        return { ...state2 };
      }
    };
    var TabsContext = (0, import_react30.createContext)(null);
    TabsContext.displayName = "TabsContext";
    function useTabsContext(component) {
      let context2 = (0, import_react30.useContext)(TabsContext);
      if (context2 === null) {
        let err = new Error(`<${component} /> is missing a parent <Tab.Group /> component.`);
        if (Error.captureStackTrace)
          Error.captureStackTrace(err, useTabsContext);
        throw err;
      }
      return context2;
    }
    function stateReducer8(state2, action) {
      return match(action.type, reducers8, state2, action);
    }
    var DEFAULT_TABS_TAG = import_react30.Fragment;
    function Tabs(props) {
      let {
        defaultIndex = 0,
        vertical = false,
        manual = false,
        onChange,
        selectedIndex = null,
        ...passThroughProps
      } = props;
      const orientation = vertical ? "vertical" : "horizontal";
      const activation = manual ? "manual" : "auto";
      let [state2, dispatch] = (0, import_react30.useReducer)(stateReducer8, {
        selectedIndex: null,
        tabs: [],
        panels: [],
        orientation,
        activation
      });
      let slot = (0, import_react30.useMemo)(() => ({ selectedIndex: state2.selectedIndex }), [state2.selectedIndex]);
      let onChangeRef = (0, import_react30.useRef)(() => {
      });
      (0, import_react30.useEffect)(() => {
        dispatch({ type: 1, orientation });
      }, [orientation]);
      (0, import_react30.useEffect)(() => {
        dispatch({ type: 2, activation });
      }, [activation]);
      (0, import_react30.useEffect)(() => {
        if (typeof onChange === "function") {
          onChangeRef.current = onChange;
        }
      }, [onChange]);
      (0, import_react30.useEffect)(() => {
        if (state2.tabs.length <= 0)
          return;
        if (selectedIndex === null && state2.selectedIndex !== null)
          return;
        let tabs = state2.tabs.map((tab) => tab.current).filter(Boolean);
        let focusableTabs = tabs.filter((tab) => !tab.hasAttribute("disabled"));
        let indexToSet = selectedIndex != null ? selectedIndex : defaultIndex;
        if (indexToSet < 0) {
          dispatch({ type: 0, index: tabs.indexOf(focusableTabs[0]) });
        } else if (indexToSet > state2.tabs.length) {
          dispatch({
            type: 0,
            index: tabs.indexOf(focusableTabs[focusableTabs.length - 1])
          });
        } else {
          let before = tabs.slice(0, indexToSet);
          let after = tabs.slice(indexToSet);
          let next = [...after, ...before].find((tab) => focusableTabs.includes(tab));
          if (!next)
            return;
          dispatch({ type: 0, index: tabs.indexOf(next) });
        }
      }, [defaultIndex, selectedIndex, state2.tabs, state2.selectedIndex]);
      let lastChangedIndex = (0, import_react30.useRef)(state2.selectedIndex);
      (0, import_react30.useEffect)(() => {
        lastChangedIndex.current = state2.selectedIndex;
      }, [state2.selectedIndex]);
      let providerBag = (0, import_react30.useMemo)(() => [
        state2,
        {
          dispatch,
          change(index) {
            if (lastChangedIndex.current !== index)
              onChangeRef.current(index);
            lastChangedIndex.current = index;
            dispatch({ type: 0, index });
          }
        }
      ], [state2, dispatch]);
      return /* @__PURE__ */ import_react30.default.createElement(TabsContext.Provider, {
        value: providerBag
      }, render({
        props: { ...passThroughProps },
        slot,
        defaultTag: DEFAULT_TABS_TAG,
        name: "Tabs"
      }));
    }
    var DEFAULT_LIST_TAG = "div";
    function List(props) {
      let [{ selectedIndex, orientation }] = useTabsContext("Tab.List");
      let slot = { selectedIndex };
      let propsWeControl = {
        role: "tablist",
        "aria-orientation": orientation
      };
      let passThroughProps = props;
      return render({
        props: { ...passThroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_LIST_TAG,
        name: "Tabs.List"
      });
    }
    var DEFAULT_TAB_TAG = "button";
    function Tab(props) {
      var _a2, _b;
      let id2 = `headlessui-tabs-tab-${useId()}`;
      let [{ selectedIndex, tabs, panels, orientation, activation }, { dispatch, change }] = useTabsContext(Tab.name);
      let internalTabRef = (0, import_react30.useRef)(null);
      let tabRef = useSyncRefs(internalTabRef, (element) => {
        if (!element)
          return;
        dispatch({ type: 7 });
      });
      useIsoMorphicEffect(() => {
        dispatch({ type: 3, tab: internalTabRef });
        return () => dispatch({ type: 4, tab: internalTabRef });
      }, [dispatch, internalTabRef]);
      let myIndex = tabs.indexOf(internalTabRef);
      let selected = myIndex === selectedIndex;
      let handleKeyDown = (0, import_react30.useCallback)((event) => {
        let list = tabs.map((tab) => tab.current).filter(Boolean);
        if (event.key === " " || event.key === "Enter") {
          event.preventDefault();
          event.stopPropagation();
          change(myIndex);
          return;
        }
        switch (event.key) {
          case "Home":
          case "PageUp":
            event.preventDefault();
            event.stopPropagation();
            return focusIn(list, 1);
          case "End":
          case "PageDown":
            event.preventDefault();
            event.stopPropagation();
            return focusIn(list, 8);
        }
        return match(orientation, {
          vertical() {
            if (event.key === "ArrowUp")
              return focusIn(list, 2 | 16);
            if (event.key === "ArrowDown")
              return focusIn(list, 4 | 16);
            return;
          },
          horizontal() {
            if (event.key === "ArrowLeft")
              return focusIn(list, 2 | 16);
            if (event.key === "ArrowRight")
              return focusIn(list, 4 | 16);
            return;
          }
        });
      }, [tabs, orientation, myIndex, change]);
      let handleFocus = (0, import_react30.useCallback)(() => {
        var _a22;
        (_a22 = internalTabRef.current) == null ? void 0 : _a22.focus();
      }, [internalTabRef]);
      let handleSelection = (0, import_react30.useCallback)(() => {
        var _a22;
        (_a22 = internalTabRef.current) == null ? void 0 : _a22.focus();
        change(myIndex);
      }, [change, myIndex, internalTabRef]);
      let slot = (0, import_react30.useMemo)(() => ({ selected }), [selected]);
      let propsWeControl = {
        ref: tabRef,
        onKeyDown: handleKeyDown,
        onFocus: activation === "manual" ? handleFocus : handleSelection,
        onClick: handleSelection,
        id: id2,
        role: "tab",
        type: useResolveButtonType(props, internalTabRef),
        "aria-controls": (_b = (_a2 = panels[myIndex]) == null ? void 0 : _a2.current) == null ? void 0 : _b.id,
        "aria-selected": selected,
        tabIndex: selected ? 0 : -1
      };
      let passThroughProps = props;
      return render({
        props: { ...passThroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_TAB_TAG,
        name: "Tabs.Tab"
      });
    }
    var DEFAULT_PANELS_TAG = "div";
    function Panels(props) {
      let [{ selectedIndex }] = useTabsContext("Tab.Panels");
      let slot = (0, import_react30.useMemo)(() => ({ selectedIndex }), [selectedIndex]);
      return render({
        props,
        slot,
        defaultTag: DEFAULT_PANELS_TAG,
        name: "Tabs.Panels"
      });
    }
    var DEFAULT_PANEL_TAG3 = "div";
    var PanelRenderFeatures3 = 1 | 2;
    function Panel5(props) {
      var _a2, _b;
      let [{ selectedIndex, tabs, panels }, { dispatch }] = useTabsContext("Tab.Panel");
      let id2 = `headlessui-tabs-panel-${useId()}`;
      let internalPanelRef = (0, import_react30.useRef)(null);
      let panelRef = useSyncRefs(internalPanelRef, (element) => {
        if (!element)
          return;
        dispatch({ type: 7 });
      });
      useIsoMorphicEffect(() => {
        dispatch({ type: 5, panel: internalPanelRef });
        return () => dispatch({ type: 6, panel: internalPanelRef });
      }, [dispatch, internalPanelRef]);
      let myIndex = panels.indexOf(internalPanelRef);
      let selected = myIndex === selectedIndex;
      let slot = (0, import_react30.useMemo)(() => ({ selected }), [selected]);
      let propsWeControl = {
        ref: panelRef,
        id: id2,
        role: "tabpanel",
        "aria-labelledby": (_b = (_a2 = tabs[myIndex]) == null ? void 0 : _a2.current) == null ? void 0 : _b.id,
        tabIndex: selected ? 0 : -1
      };
      let passThroughProps = props;
      return render({
        props: { ...passThroughProps, ...propsWeControl },
        slot,
        defaultTag: DEFAULT_PANEL_TAG3,
        features: PanelRenderFeatures3,
        visible: selected,
        name: "Tabs.Panel"
      });
    }
    Tab.Group = Tabs;
    Tab.List = List;
    Tab.Panels = Panels;
    Tab.Panel = Panel5;
    var import_react322 = __toESM(require_react(), 1);
    var import_react31 = require_react();
    function useIsInitialRender() {
      let initial = (0, import_react31.useRef)(true);
      (0, import_react31.useEffect)(() => {
        initial.current = false;
      }, []);
      return initial.current;
    }
    function once(cb) {
      let state2 = { called: false };
      return (...args) => {
        if (state2.called)
          return;
        state2.called = true;
        return cb(...args);
      };
    }
    function addClasses(node, ...classes) {
      node && classes.length > 0 && node.classList.add(...classes);
    }
    function removeClasses(node, ...classes) {
      node && classes.length > 0 && node.classList.remove(...classes);
    }
    function waitForTransition(node, done) {
      let d2 = disposables();
      if (!node)
        return d2.dispose;
      let { transitionDuration, transitionDelay } = getComputedStyle(node);
      let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map((value) => {
        let [resolvedValue = 0] = value.split(",").filter(Boolean).map((v) => v.includes("ms") ? parseFloat(v) : parseFloat(v) * 1e3).sort((a, z) => z - a);
        return resolvedValue;
      });
      if (durationMs !== 0) {
        d2.setTimeout(() => {
          done("finished");
        }, durationMs + delaysMs);
      } else {
        done("finished");
      }
      d2.add(() => done("cancelled"));
      return d2.dispose;
    }
    function transition(node, base, from, to2, entered, done) {
      let d2 = disposables();
      let _done = done !== void 0 ? once(done) : () => {
      };
      removeClasses(node, ...entered);
      addClasses(node, ...base, ...from);
      d2.nextFrame(() => {
        removeClasses(node, ...from);
        addClasses(node, ...to2);
        d2.add(waitForTransition(node, (reason) => {
          removeClasses(node, ...to2, ...base);
          addClasses(node, ...entered);
          return _done(reason);
        }));
      });
      d2.add(() => removeClasses(node, ...base, ...from, ...to2, ...entered));
      d2.add(() => _done("cancelled"));
      return d2.dispose;
    }
    function useSplitClasses(classes = "") {
      return (0, import_react322.useMemo)(() => classes.split(" ").filter((className) => className.trim().length > 1), [classes]);
    }
    var TransitionContext = (0, import_react322.createContext)(null);
    TransitionContext.displayName = "TransitionContext";
    function useTransitionContext() {
      let context2 = (0, import_react322.useContext)(TransitionContext);
      if (context2 === null) {
        throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
      }
      return context2;
    }
    function useParentNesting() {
      let context2 = (0, import_react322.useContext)(NestingContext);
      if (context2 === null) {
        throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
      }
      return context2;
    }
    var NestingContext = (0, import_react322.createContext)(null);
    NestingContext.displayName = "NestingContext";
    function hasChildren(bag) {
      if ("children" in bag)
        return hasChildren(bag.children);
      return bag.current.filter(({ state: state2 }) => state2 === "visible").length > 0;
    }
    function useNesting(done) {
      let doneRef = (0, import_react322.useRef)(done);
      let transitionableChildren = (0, import_react322.useRef)([]);
      let mounted = useIsMounted();
      (0, import_react322.useEffect)(() => {
        doneRef.current = done;
      }, [done]);
      let unregister = (0, import_react322.useCallback)((childId, strategy = 1) => {
        var _a2;
        let idx = transitionableChildren.current.findIndex(({ id: id2 }) => id2 === childId);
        if (idx === -1)
          return;
        match(strategy, {
          [0]() {
            transitionableChildren.current.splice(idx, 1);
          },
          [1]() {
            transitionableChildren.current[idx].state = "hidden";
          }
        });
        if (!hasChildren(transitionableChildren) && mounted.current) {
          (_a2 = doneRef.current) == null ? void 0 : _a2.call(doneRef);
        }
      }, [doneRef, mounted, transitionableChildren]);
      let register = (0, import_react322.useCallback)((childId) => {
        let child = transitionableChildren.current.find(({ id: id2 }) => id2 === childId);
        if (!child) {
          transitionableChildren.current.push({ id: childId, state: "visible" });
        } else if (child.state !== "visible") {
          child.state = "visible";
        }
        return () => unregister(childId, 0);
      }, [transitionableChildren, unregister]);
      return (0, import_react322.useMemo)(() => ({
        children: transitionableChildren,
        register,
        unregister
      }), [register, unregister, transitionableChildren]);
    }
    function noop() {
    }
    var eventNames = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
    function ensureEventHooksExist(events) {
      var _a2;
      let result = {};
      for (let name of eventNames) {
        result[name] = (_a2 = events[name]) != null ? _a2 : noop;
      }
      return result;
    }
    function useEvents(events) {
      let eventsRef = (0, import_react322.useRef)(ensureEventHooksExist(events));
      (0, import_react322.useEffect)(() => {
        eventsRef.current = ensureEventHooksExist(events);
      }, [events]);
      return eventsRef;
    }
    var DEFAULT_TRANSITION_CHILD_TAG = "div";
    var TransitionChildRenderFeatures = 1;
    function TransitionChild(props) {
      let {
        beforeEnter,
        afterEnter,
        beforeLeave,
        afterLeave,
        enter,
        enterFrom,
        enterTo,
        entered,
        leave,
        leaveFrom,
        leaveTo,
        ...rest
      } = props;
      let container = (0, import_react322.useRef)(null);
      let [state2, setState] = (0, import_react322.useState)("visible");
      let strategy = rest.unmount ? 0 : 1;
      let { show, appear, initial } = useTransitionContext();
      let { register, unregister } = useParentNesting();
      let id2 = useId();
      let isTransitioning = (0, import_react322.useRef)(false);
      let nesting = useNesting(() => {
        if (!isTransitioning.current) {
          setState("hidden");
          unregister(id2);
          events.current.afterLeave();
        }
      });
      useIsoMorphicEffect(() => {
        if (!id2)
          return;
        return register(id2);
      }, [register, id2]);
      useIsoMorphicEffect(() => {
        if (strategy !== 1)
          return;
        if (!id2)
          return;
        if (show && state2 !== "visible") {
          setState("visible");
          return;
        }
        match(state2, {
          ["hidden"]: () => unregister(id2),
          ["visible"]: () => register(id2)
        });
      }, [state2, id2, register, unregister, show, strategy]);
      let enterClasses = useSplitClasses(enter);
      let enterFromClasses = useSplitClasses(enterFrom);
      let enterToClasses = useSplitClasses(enterTo);
      let enteredClasses = useSplitClasses(entered);
      let leaveClasses = useSplitClasses(leave);
      let leaveFromClasses = useSplitClasses(leaveFrom);
      let leaveToClasses = useSplitClasses(leaveTo);
      let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave });
      let ready = useServerHandoffComplete();
      (0, import_react322.useEffect)(() => {
        if (ready && state2 === "visible" && container.current === null) {
          throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
        }
      }, [container, state2, ready]);
      let skip = initial && !appear;
      useIsoMorphicEffect(() => {
        let node = container.current;
        if (!node)
          return;
        if (skip)
          return;
        isTransitioning.current = true;
        if (show)
          events.current.beforeEnter();
        if (!show)
          events.current.beforeLeave();
        return show ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, (reason) => {
          isTransitioning.current = false;
          if (reason === "finished")
            events.current.afterEnter();
        }) : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, (reason) => {
          isTransitioning.current = false;
          if (reason !== "finished")
            return;
          if (!hasChildren(nesting)) {
            setState("hidden");
            unregister(id2);
            events.current.afterLeave();
          }
        });
      }, [
        events,
        id2,
        isTransitioning,
        unregister,
        nesting,
        container,
        skip,
        show,
        enterClasses,
        enterFromClasses,
        enterToClasses,
        leaveClasses,
        leaveFromClasses,
        leaveToClasses
      ]);
      let propsWeControl = { ref: container };
      let passthroughProps = rest;
      return /* @__PURE__ */ import_react322.default.createElement(NestingContext.Provider, {
        value: nesting
      }, /* @__PURE__ */ import_react322.default.createElement(OpenClosedProvider, {
        value: match(state2, {
          ["visible"]: 0,
          ["hidden"]: 1
        })
      }, render({
        props: { ...passthroughProps, ...propsWeControl },
        defaultTag: DEFAULT_TRANSITION_CHILD_TAG,
        features: TransitionChildRenderFeatures,
        visible: state2 === "visible",
        name: "Transition.Child"
      })));
    }
    function Transition(props) {
      let { show, appear = false, unmount, ...passthroughProps } = props;
      let usesOpenClosedState = useOpenClosed();
      if (show === void 0 && usesOpenClosedState !== null) {
        show = match(usesOpenClosedState, {
          [0]: true,
          [1]: false
        });
      }
      if (![true, false].includes(show)) {
        throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
      }
      let [state2, setState] = (0, import_react322.useState)(show ? "visible" : "hidden");
      let nestingBag = useNesting(() => {
        setState("hidden");
      });
      let initial = useIsInitialRender();
      let transitionBag = (0, import_react322.useMemo)(() => ({ show, appear: appear || !initial, initial }), [show, appear, initial]);
      (0, import_react322.useEffect)(() => {
        if (show) {
          setState("visible");
        } else if (!hasChildren(nestingBag)) {
          setState("hidden");
        }
      }, [show, nestingBag]);
      let sharedProps = { unmount };
      return /* @__PURE__ */ import_react322.default.createElement(NestingContext.Provider, {
        value: nestingBag
      }, /* @__PURE__ */ import_react322.default.createElement(TransitionContext.Provider, {
        value: transitionBag
      }, render({
        props: {
          ...sharedProps,
          as: import_react322.Fragment,
          children: /* @__PURE__ */ import_react322.default.createElement(TransitionChild, {
            ...sharedProps,
            ...passthroughProps
          })
        },
        defaultTag: import_react322.Fragment,
        features: TransitionChildRenderFeatures,
        visible: state2 === "visible",
        name: "Transition"
      })));
    }
    Transition.Child = function Child(props) {
      let hasTransitionContext = (0, import_react322.useContext)(TransitionContext) !== null;
      let hasOpenClosedContext = useOpenClosed() !== null;
      return !hasTransitionContext && hasOpenClosedContext ? /* @__PURE__ */ import_react322.default.createElement(Transition, {
        ...props
      }) : /* @__PURE__ */ import_react322.default.createElement(TransitionChild, {
        ...props
      });
    };
    Transition.Root = Transition;
    module2.exports = __toCommonJS(src_exports);
  }
});

// node_modules/@headlessui/react/dist/index.cjs
var require_dist = __commonJS({
  "node_modules/@headlessui/react/dist/index.cjs"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = require_headlessui_prod();
    } else {
      module2.exports = require_headlessui_dev();
    }
  }
});

// node_modules/@heroicons/react/outline/AcademicCapIcon.js
var require_AcademicCapIcon = __commonJS({
  "node_modules/@heroicons/react/outline/AcademicCapIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AcademicCapIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M12 14l9-5-9-5-9 5 9 5z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222"
      }));
    }
    module2.exports = AcademicCapIcon;
  }
});

// node_modules/@heroicons/react/outline/AdjustmentsIcon.js
var require_AdjustmentsIcon = __commonJS({
  "node_modules/@heroicons/react/outline/AdjustmentsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AdjustmentsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4"
      }));
    }
    module2.exports = AdjustmentsIcon;
  }
});

// node_modules/@heroicons/react/outline/AnnotationIcon.js
var require_AnnotationIcon = __commonJS({
  "node_modules/@heroicons/react/outline/AnnotationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AnnotationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"
      }));
    }
    module2.exports = AnnotationIcon;
  }
});

// node_modules/@heroicons/react/outline/ArchiveIcon.js
var require_ArchiveIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArchiveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArchiveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4"
      }));
    }
    module2.exports = ArchiveIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowCircleDownIcon.js
var require_ArrowCircleDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowCircleDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z"
      }));
    }
    module2.exports = ArrowCircleDownIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowCircleLeftIcon.js
var require_ArrowCircleLeftIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowCircleLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z"
      }));
    }
    module2.exports = ArrowCircleLeftIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowCircleRightIcon.js
var require_ArrowCircleRightIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowCircleRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = ArrowCircleRightIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowCircleUpIcon.js
var require_ArrowCircleUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowCircleUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 11l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z"
      }));
    }
    module2.exports = ArrowCircleUpIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowDownIcon.js
var require_ArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 14l-7 7m0 0l-7-7m7 7V3"
      }));
    }
    module2.exports = ArrowDownIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowLeftIcon.js
var require_ArrowLeftIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 19l-7-7m0 0l7-7m-7 7h18"
      }));
    }
    module2.exports = ArrowLeftIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowNarrowDownIcon.js
var require_ArrowNarrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowNarrowDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 17l-4 4m0 0l-4-4m4 4V3"
      }));
    }
    module2.exports = ArrowNarrowDownIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowNarrowLeftIcon.js
var require_ArrowNarrowLeftIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowNarrowLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 16l-4-4m0 0l4-4m-4 4h18"
      }));
    }
    module2.exports = ArrowNarrowLeftIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowNarrowRightIcon.js
var require_ArrowNarrowRightIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowNarrowRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 8l4 4m0 0l-4 4m4-4H3"
      }));
    }
    module2.exports = ArrowNarrowRightIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowNarrowUpIcon.js
var require_ArrowNarrowUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowNarrowUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 7l4-4m0 0l4 4m-4-4v18"
      }));
    }
    module2.exports = ArrowNarrowUpIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowRightIcon.js
var require_ArrowRightIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M14 5l7 7m0 0l-7 7m7-7H3"
      }));
    }
    module2.exports = ArrowRightIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowSmDownIcon.js
var require_ArrowSmDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowSmDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 13l-5 5m0 0l-5-5m5 5V6"
      }));
    }
    module2.exports = ArrowSmDownIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowSmLeftIcon.js
var require_ArrowSmLeftIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowSmLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 17l-5-5m0 0l5-5m-5 5h12"
      }));
    }
    module2.exports = ArrowSmLeftIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowSmRightIcon.js
var require_ArrowSmRightIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowSmRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 7l5 5m0 0l-5 5m5-5H6"
      }));
    }
    module2.exports = ArrowSmRightIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowSmUpIcon.js
var require_ArrowSmUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowSmUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 11l5-5m0 0l5 5m-5-5v12"
      }));
    }
    module2.exports = ArrowSmUpIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowUpIcon.js
var require_ArrowUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 10l7-7m0 0l7 7m-7-7v18"
      }));
    }
    module2.exports = ArrowUpIcon;
  }
});

// node_modules/@heroicons/react/outline/ArrowsExpandIcon.js
var require_ArrowsExpandIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ArrowsExpandIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowsExpandIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"
      }));
    }
    module2.exports = ArrowsExpandIcon;
  }
});

// node_modules/@heroicons/react/outline/AtSymbolIcon.js
var require_AtSymbolIcon = __commonJS({
  "node_modules/@heroicons/react/outline/AtSymbolIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AtSymbolIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"
      }));
    }
    module2.exports = AtSymbolIcon;
  }
});

// node_modules/@heroicons/react/outline/BackspaceIcon.js
var require_BackspaceIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BackspaceIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BackspaceIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z"
      }));
    }
    module2.exports = BackspaceIcon;
  }
});

// node_modules/@heroicons/react/outline/BadgeCheckIcon.js
var require_BadgeCheckIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BadgeCheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BadgeCheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"
      }));
    }
    module2.exports = BadgeCheckIcon;
  }
});

// node_modules/@heroicons/react/outline/BanIcon.js
var require_BanIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BanIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BanIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636"
      }));
    }
    module2.exports = BanIcon;
  }
});

// node_modules/@heroicons/react/outline/BeakerIcon.js
var require_BeakerIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BeakerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BeakerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"
      }));
    }
    module2.exports = BeakerIcon;
  }
});

// node_modules/@heroicons/react/outline/BellIcon.js
var require_BellIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BellIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BellIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"
      }));
    }
    module2.exports = BellIcon;
  }
});

// node_modules/@heroicons/react/outline/BookOpenIcon.js
var require_BookOpenIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BookOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BookOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
      }));
    }
    module2.exports = BookOpenIcon;
  }
});

// node_modules/@heroicons/react/outline/BookmarkAltIcon.js
var require_BookmarkAltIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BookmarkAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BookmarkAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 4v12l-4-2-4 2V4M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
      }));
    }
    module2.exports = BookmarkAltIcon;
  }
});

// node_modules/@heroicons/react/outline/BookmarkIcon.js
var require_BookmarkIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BookmarkIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BookmarkIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"
      }));
    }
    module2.exports = BookmarkIcon;
  }
});

// node_modules/@heroicons/react/outline/BriefcaseIcon.js
var require_BriefcaseIcon = __commonJS({
  "node_modules/@heroicons/react/outline/BriefcaseIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BriefcaseIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
      }));
    }
    module2.exports = BriefcaseIcon;
  }
});

// node_modules/@heroicons/react/outline/CakeIcon.js
var require_CakeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CakeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CakeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 15.546c-.523 0-1.046.151-1.5.454a2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.704 2.704 0 00-3 0 2.704 2.704 0 01-3 0 2.701 2.701 0 00-1.5-.454M9 6v2m3-2v2m3-2v2M9 3h.01M12 3h.01M15 3h.01M21 21v-7a2 2 0 00-2-2H5a2 2 0 00-2 2v7h18zm-3-9v-2a2 2 0 00-2-2H8a2 2 0 00-2 2v2h12z"
      }));
    }
    module2.exports = CakeIcon;
  }
});

// node_modules/@heroicons/react/outline/CalculatorIcon.js
var require_CalculatorIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CalculatorIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CalculatorIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"
      }));
    }
    module2.exports = CalculatorIcon;
  }
});

// node_modules/@heroicons/react/outline/CalendarIcon.js
var require_CalendarIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CalendarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CalendarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
      }));
    }
    module2.exports = CalendarIcon;
  }
});

// node_modules/@heroicons/react/outline/CameraIcon.js
var require_CameraIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CameraIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CameraIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 13a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    module2.exports = CameraIcon;
  }
});

// node_modules/@heroicons/react/outline/CashIcon.js
var require_CashIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CashIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CashIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z"
      }));
    }
    module2.exports = CashIcon;
  }
});

// node_modules/@heroicons/react/outline/ChartBarIcon.js
var require_ChartBarIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChartBarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChartBarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
      }));
    }
    module2.exports = ChartBarIcon;
  }
});

// node_modules/@heroicons/react/outline/ChartPieIcon.js
var require_ChartPieIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChartPieIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChartPieIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z"
      }));
    }
    module2.exports = ChartPieIcon;
  }
});

// node_modules/@heroicons/react/outline/ChartSquareBarIcon.js
var require_ChartSquareBarIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChartSquareBarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChartSquareBarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
      }));
    }
    module2.exports = ChartSquareBarIcon;
  }
});

// node_modules/@heroicons/react/outline/ChatAlt2Icon.js
var require_ChatAlt2Icon = __commonJS({
  "node_modules/@heroicons/react/outline/ChatAlt2Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChatAlt2Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z"
      }));
    }
    module2.exports = ChatAlt2Icon;
  }
});

// node_modules/@heroicons/react/outline/ChatAltIcon.js
var require_ChatAltIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChatAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChatAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"
      }));
    }
    module2.exports = ChatAltIcon;
  }
});

// node_modules/@heroicons/react/outline/ChatIcon.js
var require_ChatIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChatIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChatIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
      }));
    }
    module2.exports = ChatIcon;
  }
});

// node_modules/@heroicons/react/outline/CheckCircleIcon.js
var require_CheckCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CheckCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CheckCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = CheckCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/CheckIcon.js
var require_CheckIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 13l4 4L19 7"
      }));
    }
    module2.exports = CheckIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronDoubleDownIcon.js
var require_ChevronDoubleDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronDoubleDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 13l-7 7-7-7m14-8l-7 7-7-7"
      }));
    }
    module2.exports = ChevronDoubleDownIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronDoubleLeftIcon.js
var require_ChevronDoubleLeftIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronDoubleLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 19l-7-7 7-7m8 14l-7-7 7-7"
      }));
    }
    module2.exports = ChevronDoubleLeftIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronDoubleRightIcon.js
var require_ChevronDoubleRightIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronDoubleRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 5l7 7-7 7M5 5l7 7-7 7"
      }));
    }
    module2.exports = ChevronDoubleRightIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronDoubleUpIcon.js
var require_ChevronDoubleUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronDoubleUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 11l7-7 7 7M5 19l7-7 7 7"
      }));
    }
    module2.exports = ChevronDoubleUpIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronDownIcon.js
var require_ChevronDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 9l-7 7-7-7"
      }));
    }
    module2.exports = ChevronDownIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronLeftIcon.js
var require_ChevronLeftIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 19l-7-7 7-7"
      }));
    }
    module2.exports = ChevronLeftIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronRightIcon.js
var require_ChevronRightIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 5l7 7-7 7"
      }));
    }
    module2.exports = ChevronRightIcon;
  }
});

// node_modules/@heroicons/react/outline/ChevronUpIcon.js
var require_ChevronUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChevronUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 15l7-7 7 7"
      }));
    }
    module2.exports = ChevronUpIcon;
  }
});

// node_modules/@heroicons/react/outline/ChipIcon.js
var require_ChipIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ChipIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChipIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"
      }));
    }
    module2.exports = ChipIcon;
  }
});

// node_modules/@heroicons/react/outline/ClipboardCheckIcon.js
var require_ClipboardCheckIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ClipboardCheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardCheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"
      }));
    }
    module2.exports = ClipboardCheckIcon;
  }
});

// node_modules/@heroicons/react/outline/ClipboardCopyIcon.js
var require_ClipboardCopyIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ClipboardCopyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardCopyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"
      }));
    }
    module2.exports = ClipboardCopyIcon;
  }
});

// node_modules/@heroicons/react/outline/ClipboardListIcon.js
var require_ClipboardListIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ClipboardListIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardListIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"
      }));
    }
    module2.exports = ClipboardListIcon;
  }
});

// node_modules/@heroicons/react/outline/ClipboardIcon.js
var require_ClipboardIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ClipboardIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"
      }));
    }
    module2.exports = ClipboardIcon;
  }
});

// node_modules/@heroicons/react/outline/ClockIcon.js
var require_ClockIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ClockIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClockIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = ClockIcon;
  }
});

// node_modules/@heroicons/react/outline/CloudDownloadIcon.js
var require_CloudDownloadIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CloudDownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CloudDownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"
      }));
    }
    module2.exports = CloudDownloadIcon;
  }
});

// node_modules/@heroicons/react/outline/CloudUploadIcon.js
var require_CloudUploadIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CloudUploadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CloudUploadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"
      }));
    }
    module2.exports = CloudUploadIcon;
  }
});

// node_modules/@heroicons/react/outline/CloudIcon.js
var require_CloudIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CloudIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CloudIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z"
      }));
    }
    module2.exports = CloudIcon;
  }
});

// node_modules/@heroicons/react/outline/CodeIcon.js
var require_CodeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CodeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CodeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"
      }));
    }
    module2.exports = CodeIcon;
  }
});

// node_modules/@heroicons/react/outline/CogIcon.js
var require_CogIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CogIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CogIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    module2.exports = CogIcon;
  }
});

// node_modules/@heroicons/react/outline/CollectionIcon.js
var require_CollectionIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CollectionIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CollectionIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
      }));
    }
    module2.exports = CollectionIcon;
  }
});

// node_modules/@heroicons/react/outline/ColorSwatchIcon.js
var require_ColorSwatchIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ColorSwatchIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ColorSwatchIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01"
      }));
    }
    module2.exports = ColorSwatchIcon;
  }
});

// node_modules/@heroicons/react/outline/CreditCardIcon.js
var require_CreditCardIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CreditCardIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CreditCardIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"
      }));
    }
    module2.exports = CreditCardIcon;
  }
});

// node_modules/@heroicons/react/outline/CubeTransparentIcon.js
var require_CubeTransparentIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CubeTransparentIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CubeTransparentIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5"
      }));
    }
    module2.exports = CubeTransparentIcon;
  }
});

// node_modules/@heroicons/react/outline/CubeIcon.js
var require_CubeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CubeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CubeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
      }));
    }
    module2.exports = CubeIcon;
  }
});

// node_modules/@heroicons/react/outline/CurrencyBangladeshiIcon.js
var require_CurrencyBangladeshiIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CurrencyBangladeshiIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyBangladeshiIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 11V9a2 2 0 00-2-2m2 4v4a2 2 0 104 0v-1m-4-3H9m2 0h4m6 1a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = CurrencyBangladeshiIcon;
  }
});

// node_modules/@heroicons/react/outline/CurrencyDollarIcon.js
var require_CurrencyDollarIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CurrencyDollarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyDollarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = CurrencyDollarIcon;
  }
});

// node_modules/@heroicons/react/outline/CurrencyEuroIcon.js
var require_CurrencyEuroIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CurrencyEuroIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyEuroIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M14.121 15.536c-1.171 1.952-3.07 1.952-4.242 0-1.172-1.953-1.172-5.119 0-7.072 1.171-1.952 3.07-1.952 4.242 0M8 10.5h4m-4 3h4m9-1.5a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = CurrencyEuroIcon;
  }
});

// node_modules/@heroicons/react/outline/CurrencyPoundIcon.js
var require_CurrencyPoundIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CurrencyPoundIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyPoundIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 9a2 2 0 10-4 0v5a2 2 0 01-2 2h6m-6-4h4m8 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = CurrencyPoundIcon;
  }
});

// node_modules/@heroicons/react/outline/CurrencyRupeeIcon.js
var require_CurrencyRupeeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CurrencyRupeeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyRupeeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 8h6m-5 0a3 3 0 110 6H9l3 3m-3-6h6m6 1a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = CurrencyRupeeIcon;
  }
});

// node_modules/@heroicons/react/outline/CurrencyYenIcon.js
var require_CurrencyYenIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CurrencyYenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyYenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 8l3 5m0 0l3-5m-3 5v4m-3-5h6m-6 3h6m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = CurrencyYenIcon;
  }
});

// node_modules/@heroicons/react/outline/CursorClickIcon.js
var require_CursorClickIcon = __commonJS({
  "node_modules/@heroicons/react/outline/CursorClickIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CursorClickIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122"
      }));
    }
    module2.exports = CursorClickIcon;
  }
});

// node_modules/@heroicons/react/outline/DatabaseIcon.js
var require_DatabaseIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DatabaseIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DatabaseIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4"
      }));
    }
    module2.exports = DatabaseIcon;
  }
});

// node_modules/@heroicons/react/outline/DesktopComputerIcon.js
var require_DesktopComputerIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DesktopComputerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DesktopComputerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
      }));
    }
    module2.exports = DesktopComputerIcon;
  }
});

// node_modules/@heroicons/react/outline/DeviceMobileIcon.js
var require_DeviceMobileIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DeviceMobileIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DeviceMobileIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"
      }));
    }
    module2.exports = DeviceMobileIcon;
  }
});

// node_modules/@heroicons/react/outline/DeviceTabletIcon.js
var require_DeviceTabletIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DeviceTabletIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DeviceTabletIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 18h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"
      }));
    }
    module2.exports = DeviceTabletIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentAddIcon.js
var require_DocumentAddIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
      }));
    }
    module2.exports = DocumentAddIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentDownloadIcon.js
var require_DocumentDownloadIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentDownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentDownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
      }));
    }
    module2.exports = DocumentDownloadIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentDuplicateIcon.js
var require_DocumentDuplicateIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentDuplicateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentDuplicateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"
      }));
    }
    module2.exports = DocumentDuplicateIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentRemoveIcon.js
var require_DocumentRemoveIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentRemoveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentRemoveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 13h6m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
      }));
    }
    module2.exports = DocumentRemoveIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentReportIcon.js
var require_DocumentReportIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentReportIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentReportIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
      }));
    }
    module2.exports = DocumentReportIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentSearchIcon.js
var require_DocumentSearchIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentSearchIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentSearchIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 21h7a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v11m0 5l4.879-4.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242z"
      }));
    }
    module2.exports = DocumentSearchIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentTextIcon.js
var require_DocumentTextIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentTextIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentTextIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
      }));
    }
    module2.exports = DocumentTextIcon;
  }
});

// node_modules/@heroicons/react/outline/DocumentIcon.js
var require_DocumentIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DocumentIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"
      }));
    }
    module2.exports = DocumentIcon;
  }
});

// node_modules/@heroicons/react/outline/DotsCircleHorizontalIcon.js
var require_DotsCircleHorizontalIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DotsCircleHorizontalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DotsCircleHorizontalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 12h.01M12 12h.01M16 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = DotsCircleHorizontalIcon;
  }
});

// node_modules/@heroicons/react/outline/DotsHorizontalIcon.js
var require_DotsHorizontalIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DotsHorizontalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DotsHorizontalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"
      }));
    }
    module2.exports = DotsHorizontalIcon;
  }
});

// node_modules/@heroicons/react/outline/DotsVerticalIcon.js
var require_DotsVerticalIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DotsVerticalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DotsVerticalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"
      }));
    }
    module2.exports = DotsVerticalIcon;
  }
});

// node_modules/@heroicons/react/outline/DownloadIcon.js
var require_DownloadIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"
      }));
    }
    module2.exports = DownloadIcon;
  }
});

// node_modules/@heroicons/react/outline/DuplicateIcon.js
var require_DuplicateIcon = __commonJS({
  "node_modules/@heroicons/react/outline/DuplicateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DuplicateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"
      }));
    }
    module2.exports = DuplicateIcon;
  }
});

// node_modules/@heroicons/react/outline/EmojiHappyIcon.js
var require_EmojiHappyIcon = __commonJS({
  "node_modules/@heroicons/react/outline/EmojiHappyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EmojiHappyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = EmojiHappyIcon;
  }
});

// node_modules/@heroicons/react/outline/EmojiSadIcon.js
var require_EmojiSadIcon = __commonJS({
  "node_modules/@heroicons/react/outline/EmojiSadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EmojiSadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = EmojiSadIcon;
  }
});

// node_modules/@heroicons/react/outline/ExclamationCircleIcon.js
var require_ExclamationCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ExclamationCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ExclamationCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = ExclamationCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/ExclamationIcon.js
var require_ExclamationIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ExclamationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ExclamationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
      }));
    }
    module2.exports = ExclamationIcon;
  }
});

// node_modules/@heroicons/react/outline/ExternalLinkIcon.js
var require_ExternalLinkIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ExternalLinkIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ExternalLinkIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
      }));
    }
    module2.exports = ExternalLinkIcon;
  }
});

// node_modules/@heroicons/react/outline/EyeOffIcon.js
var require_EyeOffIcon = __commonJS({
  "node_modules/@heroicons/react/outline/EyeOffIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EyeOffIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"
      }));
    }
    module2.exports = EyeOffIcon;
  }
});

// node_modules/@heroicons/react/outline/EyeIcon.js
var require_EyeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/EyeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EyeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
      }));
    }
    module2.exports = EyeIcon;
  }
});

// node_modules/@heroicons/react/outline/FastForwardIcon.js
var require_FastForwardIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FastForwardIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FastForwardIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11.933 12.8a1 1 0 000-1.6L6.6 7.2A1 1 0 005 8v8a1 1 0 001.6.8l5.333-4zM19.933 12.8a1 1 0 000-1.6l-5.333-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.333-4z"
      }));
    }
    module2.exports = FastForwardIcon;
  }
});

// node_modules/@heroicons/react/outline/FilmIcon.js
var require_FilmIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FilmIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FilmIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z"
      }));
    }
    module2.exports = FilmIcon;
  }
});

// node_modules/@heroicons/react/outline/FilterIcon.js
var require_FilterIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FilterIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FilterIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"
      }));
    }
    module2.exports = FilterIcon;
  }
});

// node_modules/@heroicons/react/outline/FingerPrintIcon.js
var require_FingerPrintIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FingerPrintIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FingerPrintIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 11c0 3.517-1.009 6.799-2.753 9.571m-3.44-2.04l.054-.09A13.916 13.916 0 008 11a4 4 0 118 0c0 1.017-.07 2.019-.203 3m-2.118 6.844A21.88 21.88 0 0015.171 17m3.839 1.132c.645-2.266.99-4.659.99-7.132A8 8 0 008 4.07M3 15.364c.64-1.319 1-2.8 1-4.364 0-1.457.39-2.823 1.07-4"
      }));
    }
    module2.exports = FingerPrintIcon;
  }
});

// node_modules/@heroicons/react/outline/FireIcon.js
var require_FireIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FireIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FireIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z"
      }));
    }
    module2.exports = FireIcon;
  }
});

// node_modules/@heroicons/react/outline/FlagIcon.js
var require_FlagIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FlagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FlagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9"
      }));
    }
    module2.exports = FlagIcon;
  }
});

// node_modules/@heroicons/react/outline/FolderAddIcon.js
var require_FolderAddIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FolderAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
      }));
    }
    module2.exports = FolderAddIcon;
  }
});

// node_modules/@heroicons/react/outline/FolderDownloadIcon.js
var require_FolderDownloadIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FolderDownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderDownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
      }));
    }
    module2.exports = FolderDownloadIcon;
  }
});

// node_modules/@heroicons/react/outline/FolderOpenIcon.js
var require_FolderOpenIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FolderOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z"
      }));
    }
    module2.exports = FolderOpenIcon;
  }
});

// node_modules/@heroicons/react/outline/FolderRemoveIcon.js
var require_FolderRemoveIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FolderRemoveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderRemoveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 13h6M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
      }));
    }
    module2.exports = FolderRemoveIcon;
  }
});

// node_modules/@heroicons/react/outline/FolderIcon.js
var require_FolderIcon = __commonJS({
  "node_modules/@heroicons/react/outline/FolderIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
      }));
    }
    module2.exports = FolderIcon;
  }
});

// node_modules/@heroicons/react/outline/GiftIcon.js
var require_GiftIcon = __commonJS({
  "node_modules/@heroicons/react/outline/GiftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function GiftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"
      }));
    }
    module2.exports = GiftIcon;
  }
});

// node_modules/@heroicons/react/outline/GlobeAltIcon.js
var require_GlobeAltIcon = __commonJS({
  "node_modules/@heroicons/react/outline/GlobeAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function GlobeAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"
      }));
    }
    module2.exports = GlobeAltIcon;
  }
});

// node_modules/@heroicons/react/outline/GlobeIcon.js
var require_GlobeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/GlobeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function GlobeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = GlobeIcon;
  }
});

// node_modules/@heroicons/react/outline/HandIcon.js
var require_HandIcon = __commonJS({
  "node_modules/@heroicons/react/outline/HandIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HandIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 00-3 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11m0-5.5a1.5 1.5 0 013 0v3m0 0V11"
      }));
    }
    module2.exports = HandIcon;
  }
});

// node_modules/@heroicons/react/outline/HashtagIcon.js
var require_HashtagIcon = __commonJS({
  "node_modules/@heroicons/react/outline/HashtagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HashtagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 20l4-16m2 16l4-16M6 9h14M4 15h14"
      }));
    }
    module2.exports = HashtagIcon;
  }
});

// node_modules/@heroicons/react/outline/HeartIcon.js
var require_HeartIcon = __commonJS({
  "node_modules/@heroicons/react/outline/HeartIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HeartIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
      }));
    }
    module2.exports = HeartIcon;
  }
});

// node_modules/@heroicons/react/outline/HomeIcon.js
var require_HomeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/HomeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HomeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
      }));
    }
    module2.exports = HomeIcon;
  }
});

// node_modules/@heroicons/react/outline/IdentificationIcon.js
var require_IdentificationIcon = __commonJS({
  "node_modules/@heroicons/react/outline/IdentificationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function IdentificationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2"
      }));
    }
    module2.exports = IdentificationIcon;
  }
});

// node_modules/@heroicons/react/outline/InboxInIcon.js
var require_InboxInIcon = __commonJS({
  "node_modules/@heroicons/react/outline/InboxInIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function InboxInIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 4H6a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-2m-4-1v8m0 0l3-3m-3 3L9 8m-5 5h2.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293h3.172a1 1 0 00.707-.293l2.414-2.414a1 1 0 01.707-.293H20"
      }));
    }
    module2.exports = InboxInIcon;
  }
});

// node_modules/@heroicons/react/outline/InboxIcon.js
var require_InboxIcon = __commonJS({
  "node_modules/@heroicons/react/outline/InboxIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function InboxIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"
      }));
    }
    module2.exports = InboxIcon;
  }
});

// node_modules/@heroicons/react/outline/InformationCircleIcon.js
var require_InformationCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/InformationCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function InformationCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = InformationCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/KeyIcon.js
var require_KeyIcon = __commonJS({
  "node_modules/@heroicons/react/outline/KeyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function KeyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"
      }));
    }
    module2.exports = KeyIcon;
  }
});

// node_modules/@heroicons/react/outline/LibraryIcon.js
var require_LibraryIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LibraryIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LibraryIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z"
      }));
    }
    module2.exports = LibraryIcon;
  }
});

// node_modules/@heroicons/react/outline/LightBulbIcon.js
var require_LightBulbIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LightBulbIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LightBulbIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"
      }));
    }
    module2.exports = LightBulbIcon;
  }
});

// node_modules/@heroicons/react/outline/LightningBoltIcon.js
var require_LightningBoltIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LightningBoltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LightningBoltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 10V3L4 14h7v7l9-11h-7z"
      }));
    }
    module2.exports = LightningBoltIcon;
  }
});

// node_modules/@heroicons/react/outline/LinkIcon.js
var require_LinkIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LinkIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LinkIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"
      }));
    }
    module2.exports = LinkIcon;
  }
});

// node_modules/@heroicons/react/outline/LocationMarkerIcon.js
var require_LocationMarkerIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LocationMarkerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LocationMarkerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 11a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    module2.exports = LocationMarkerIcon;
  }
});

// node_modules/@heroicons/react/outline/LockClosedIcon.js
var require_LockClosedIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LockClosedIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LockClosedIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
      }));
    }
    module2.exports = LockClosedIcon;
  }
});

// node_modules/@heroicons/react/outline/LockOpenIcon.js
var require_LockOpenIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LockOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LockOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z"
      }));
    }
    module2.exports = LockOpenIcon;
  }
});

// node_modules/@heroicons/react/outline/LoginIcon.js
var require_LoginIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LoginIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LoginIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"
      }));
    }
    module2.exports = LoginIcon;
  }
});

// node_modules/@heroicons/react/outline/LogoutIcon.js
var require_LogoutIcon = __commonJS({
  "node_modules/@heroicons/react/outline/LogoutIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LogoutIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
      }));
    }
    module2.exports = LogoutIcon;
  }
});

// node_modules/@heroicons/react/outline/MailOpenIcon.js
var require_MailOpenIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MailOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MailOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 19v-8.93a2 2 0 01.89-1.664l7-4.666a2 2 0 012.22 0l7 4.666A2 2 0 0121 10.07V19M3 19a2 2 0 002 2h14a2 2 0 002-2M3 19l6.75-4.5M21 19l-6.75-4.5M3 10l6.75 4.5M21 10l-6.75 4.5m0 0l-1.14.76a2 2 0 01-2.22 0l-1.14-.76"
      }));
    }
    module2.exports = MailOpenIcon;
  }
});

// node_modules/@heroicons/react/outline/MailIcon.js
var require_MailIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MailIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MailIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
      }));
    }
    module2.exports = MailIcon;
  }
});

// node_modules/@heroicons/react/outline/MapIcon.js
var require_MapIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MapIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MapIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7"
      }));
    }
    module2.exports = MapIcon;
  }
});

// node_modules/@heroicons/react/outline/MenuAlt1Icon.js
var require_MenuAlt1Icon = __commonJS({
  "node_modules/@heroicons/react/outline/MenuAlt1Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt1Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 6h16M4 12h8m-8 6h16"
      }));
    }
    module2.exports = MenuAlt1Icon;
  }
});

// node_modules/@heroicons/react/outline/MenuAlt2Icon.js
var require_MenuAlt2Icon = __commonJS({
  "node_modules/@heroicons/react/outline/MenuAlt2Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt2Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 6h16M4 12h16M4 18h7"
      }));
    }
    module2.exports = MenuAlt2Icon;
  }
});

// node_modules/@heroicons/react/outline/MenuAlt3Icon.js
var require_MenuAlt3Icon = __commonJS({
  "node_modules/@heroicons/react/outline/MenuAlt3Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt3Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 6h16M4 12h16m-7 6h7"
      }));
    }
    module2.exports = MenuAlt3Icon;
  }
});

// node_modules/@heroicons/react/outline/MenuAlt4Icon.js
var require_MenuAlt4Icon = __commonJS({
  "node_modules/@heroicons/react/outline/MenuAlt4Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt4Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 8h16M4 16h16"
      }));
    }
    module2.exports = MenuAlt4Icon;
  }
});

// node_modules/@heroicons/react/outline/MenuIcon.js
var require_MenuIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MenuIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 6h16M4 12h16M4 18h16"
      }));
    }
    module2.exports = MenuIcon;
  }
});

// node_modules/@heroicons/react/outline/MicrophoneIcon.js
var require_MicrophoneIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MicrophoneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MicrophoneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"
      }));
    }
    module2.exports = MicrophoneIcon;
  }
});

// node_modules/@heroicons/react/outline/MinusCircleIcon.js
var require_MinusCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MinusCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MinusCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = MinusCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/MinusSmIcon.js
var require_MinusSmIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MinusSmIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MinusSmIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M18 12H6"
      }));
    }
    module2.exports = MinusSmIcon;
  }
});

// node_modules/@heroicons/react/outline/MinusIcon.js
var require_MinusIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MinusIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MinusIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M20 12H4"
      }));
    }
    module2.exports = MinusIcon;
  }
});

// node_modules/@heroicons/react/outline/MoonIcon.js
var require_MoonIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MoonIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MoonIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
      }));
    }
    module2.exports = MoonIcon;
  }
});

// node_modules/@heroicons/react/outline/MusicNoteIcon.js
var require_MusicNoteIcon = __commonJS({
  "node_modules/@heroicons/react/outline/MusicNoteIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MusicNoteIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"
      }));
    }
    module2.exports = MusicNoteIcon;
  }
});

// node_modules/@heroicons/react/outline/NewspaperIcon.js
var require_NewspaperIcon = __commonJS({
  "node_modules/@heroicons/react/outline/NewspaperIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function NewspaperIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
      }));
    }
    module2.exports = NewspaperIcon;
  }
});

// node_modules/@heroicons/react/outline/OfficeBuildingIcon.js
var require_OfficeBuildingIcon = __commonJS({
  "node_modules/@heroicons/react/outline/OfficeBuildingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function OfficeBuildingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"
      }));
    }
    module2.exports = OfficeBuildingIcon;
  }
});

// node_modules/@heroicons/react/outline/PaperAirplaneIcon.js
var require_PaperAirplaneIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PaperAirplaneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PaperAirplaneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 19l9 2-9-18-9 18 9-2zm0 0v-8"
      }));
    }
    module2.exports = PaperAirplaneIcon;
  }
});

// node_modules/@heroicons/react/outline/PaperClipIcon.js
var require_PaperClipIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PaperClipIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PaperClipIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"
      }));
    }
    module2.exports = PaperClipIcon;
  }
});

// node_modules/@heroicons/react/outline/PauseIcon.js
var require_PauseIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PauseIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PauseIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = PauseIcon;
  }
});

// node_modules/@heroicons/react/outline/PencilAltIcon.js
var require_PencilAltIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PencilAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PencilAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
      }));
    }
    module2.exports = PencilAltIcon;
  }
});

// node_modules/@heroicons/react/outline/PencilIcon.js
var require_PencilIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PencilIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PencilIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"
      }));
    }
    module2.exports = PencilIcon;
  }
});

// node_modules/@heroicons/react/outline/PhoneIncomingIcon.js
var require_PhoneIncomingIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PhoneIncomingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneIncomingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 3l-6 6m0 0V4m0 5h5M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z"
      }));
    }
    module2.exports = PhoneIncomingIcon;
  }
});

// node_modules/@heroicons/react/outline/PhoneMissedCallIcon.js
var require_PhoneMissedCallIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PhoneMissedCallIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneMissedCallIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 8l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z"
      }));
    }
    module2.exports = PhoneMissedCallIcon;
  }
});

// node_modules/@heroicons/react/outline/PhoneOutgoingIcon.js
var require_PhoneOutgoingIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PhoneOutgoingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneOutgoingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 3h5m0 0v5m0-5l-6 6M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z"
      }));
    }
    module2.exports = PhoneOutgoingIcon;
  }
});

// node_modules/@heroicons/react/outline/PhoneIcon.js
var require_PhoneIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PhoneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
      }));
    }
    module2.exports = PhoneIcon;
  }
});

// node_modules/@heroicons/react/outline/PhotographIcon.js
var require_PhotographIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PhotographIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhotographIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
      }));
    }
    module2.exports = PhotographIcon;
  }
});

// node_modules/@heroicons/react/outline/PlayIcon.js
var require_PlayIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PlayIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlayIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = PlayIcon;
  }
});

// node_modules/@heroicons/react/outline/PlusCircleIcon.js
var require_PlusCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PlusCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlusCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = PlusCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/PlusSmIcon.js
var require_PlusSmIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PlusSmIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlusSmIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 6v6m0 0v6m0-6h6m-6 0H6"
      }));
    }
    module2.exports = PlusSmIcon;
  }
});

// node_modules/@heroicons/react/outline/PlusIcon.js
var require_PlusIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PlusIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlusIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 4v16m8-8H4"
      }));
    }
    module2.exports = PlusIcon;
  }
});

// node_modules/@heroicons/react/outline/PresentationChartBarIcon.js
var require_PresentationChartBarIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PresentationChartBarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PresentationChartBarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 13v-1m4 1v-3m4 3V8M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"
      }));
    }
    module2.exports = PresentationChartBarIcon;
  }
});

// node_modules/@heroicons/react/outline/PresentationChartLineIcon.js
var require_PresentationChartLineIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PresentationChartLineIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PresentationChartLineIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"
      }));
    }
    module2.exports = PresentationChartLineIcon;
  }
});

// node_modules/@heroicons/react/outline/PrinterIcon.js
var require_PrinterIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PrinterIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PrinterIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"
      }));
    }
    module2.exports = PrinterIcon;
  }
});

// node_modules/@heroicons/react/outline/PuzzleIcon.js
var require_PuzzleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/PuzzleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PuzzleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z"
      }));
    }
    module2.exports = PuzzleIcon;
  }
});

// node_modules/@heroicons/react/outline/QrcodeIcon.js
var require_QrcodeIcon = __commonJS({
  "node_modules/@heroicons/react/outline/QrcodeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function QrcodeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"
      }));
    }
    module2.exports = QrcodeIcon;
  }
});

// node_modules/@heroicons/react/outline/QuestionMarkCircleIcon.js
var require_QuestionMarkCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/QuestionMarkCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function QuestionMarkCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = QuestionMarkCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/ReceiptRefundIcon.js
var require_ReceiptRefundIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ReceiptRefundIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ReceiptRefundIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 15v-1a4 4 0 00-4-4H8m0 0l3 3m-3-3l3-3m9 14V5a2 2 0 00-2-2H6a2 2 0 00-2 2v16l4-2 4 2 4-2 4 2z"
      }));
    }
    module2.exports = ReceiptRefundIcon;
  }
});

// node_modules/@heroicons/react/outline/ReceiptTaxIcon.js
var require_ReceiptTaxIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ReceiptTaxIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ReceiptTaxIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 14l6-6m-5.5.5h.01m4.99 5h.01M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16l3.5-2 3.5 2 3.5-2 3.5 2zM10 8.5a.5.5 0 11-1 0 .5.5 0 011 0zm5 5a.5.5 0 11-1 0 .5.5 0 011 0z"
      }));
    }
    module2.exports = ReceiptTaxIcon;
  }
});

// node_modules/@heroicons/react/outline/RefreshIcon.js
var require_RefreshIcon = __commonJS({
  "node_modules/@heroicons/react/outline/RefreshIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function RefreshIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
      }));
    }
    module2.exports = RefreshIcon;
  }
});

// node_modules/@heroicons/react/outline/ReplyIcon.js
var require_ReplyIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ReplyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ReplyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"
      }));
    }
    module2.exports = ReplyIcon;
  }
});

// node_modules/@heroicons/react/outline/RewindIcon.js
var require_RewindIcon = __commonJS({
  "node_modules/@heroicons/react/outline/RewindIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function RewindIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0019 16V8a1 1 0 00-1.6-.8l-5.333 4zM4.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0011 16V8a1 1 0 00-1.6-.8l-5.334 4z"
      }));
    }
    module2.exports = RewindIcon;
  }
});

// node_modules/@heroicons/react/outline/RssIcon.js
var require_RssIcon = __commonJS({
  "node_modules/@heroicons/react/outline/RssIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function RssIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M6 5c7.18 0 13 5.82 13 13M6 11a7 7 0 017 7m-6 0a1 1 0 11-2 0 1 1 0 012 0z"
      }));
    }
    module2.exports = RssIcon;
  }
});

// node_modules/@heroicons/react/outline/SaveAsIcon.js
var require_SaveAsIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SaveAsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SaveAsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 16v2a2 2 0 01-2 2H5a2 2 0 01-2-2v-7a2 2 0 012-2h2m3-4H9a2 2 0 00-2 2v7a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-1m-1 4l-3 3m0 0l-3-3m3 3V3"
      }));
    }
    module2.exports = SaveAsIcon;
  }
});

// node_modules/@heroicons/react/outline/SaveIcon.js
var require_SaveIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SaveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SaveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"
      }));
    }
    module2.exports = SaveIcon;
  }
});

// node_modules/@heroicons/react/outline/ScaleIcon.js
var require_ScaleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ScaleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ScaleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3"
      }));
    }
    module2.exports = ScaleIcon;
  }
});

// node_modules/@heroicons/react/outline/ScissorsIcon.js
var require_ScissorsIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ScissorsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ScissorsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M14.121 14.121L19 19m-7-7l7-7m-7 7l-2.879 2.879M12 12L9.121 9.121m0 5.758a3 3 0 10-4.243 4.243 3 3 0 004.243-4.243zm0-5.758a3 3 0 10-4.243-4.243 3 3 0 004.243 4.243z"
      }));
    }
    module2.exports = ScissorsIcon;
  }
});

// node_modules/@heroicons/react/outline/SearchCircleIcon.js
var require_SearchCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SearchCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SearchCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = SearchCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/SearchIcon.js
var require_SearchIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SearchIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SearchIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
      }));
    }
    module2.exports = SearchIcon;
  }
});

// node_modules/@heroicons/react/outline/SelectorIcon.js
var require_SelectorIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SelectorIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SelectorIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 9l4-4 4 4m0 6l-4 4-4-4"
      }));
    }
    module2.exports = SelectorIcon;
  }
});

// node_modules/@heroicons/react/outline/ServerIcon.js
var require_ServerIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ServerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ServerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"
      }));
    }
    module2.exports = ServerIcon;
  }
});

// node_modules/@heroicons/react/outline/ShareIcon.js
var require_ShareIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ShareIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShareIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
      }));
    }
    module2.exports = ShareIcon;
  }
});

// node_modules/@heroicons/react/outline/ShieldCheckIcon.js
var require_ShieldCheckIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ShieldCheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShieldCheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"
      }));
    }
    module2.exports = ShieldCheckIcon;
  }
});

// node_modules/@heroicons/react/outline/ShieldExclamationIcon.js
var require_ShieldExclamationIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ShieldExclamationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShieldExclamationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01"
      }));
    }
    module2.exports = ShieldExclamationIcon;
  }
});

// node_modules/@heroicons/react/outline/ShoppingBagIcon.js
var require_ShoppingBagIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ShoppingBagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShoppingBagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"
      }));
    }
    module2.exports = ShoppingBagIcon;
  }
});

// node_modules/@heroicons/react/outline/ShoppingCartIcon.js
var require_ShoppingCartIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ShoppingCartIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShoppingCartIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"
      }));
    }
    module2.exports = ShoppingCartIcon;
  }
});

// node_modules/@heroicons/react/outline/SortAscendingIcon.js
var require_SortAscendingIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SortAscendingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SortAscendingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12"
      }));
    }
    module2.exports = SortAscendingIcon;
  }
});

// node_modules/@heroicons/react/outline/SortDescendingIcon.js
var require_SortDescendingIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SortDescendingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SortDescendingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4"
      }));
    }
    module2.exports = SortDescendingIcon;
  }
});

// node_modules/@heroicons/react/outline/SparklesIcon.js
var require_SparklesIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SparklesIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SparklesIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"
      }));
    }
    module2.exports = SparklesIcon;
  }
});

// node_modules/@heroicons/react/outline/SpeakerphoneIcon.js
var require_SpeakerphoneIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SpeakerphoneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SpeakerphoneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z"
      }));
    }
    module2.exports = SpeakerphoneIcon;
  }
});

// node_modules/@heroicons/react/outline/StarIcon.js
var require_StarIcon = __commonJS({
  "node_modules/@heroicons/react/outline/StarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
      }));
    }
    module2.exports = StarIcon;
  }
});

// node_modules/@heroicons/react/outline/StatusOfflineIcon.js
var require_StatusOfflineIcon = __commonJS({
  "node_modules/@heroicons/react/outline/StatusOfflineIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StatusOfflineIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M18.364 5.636a9 9 0 010 12.728m0 0l-2.829-2.829m2.829 2.829L21 21M15.536 8.464a5 5 0 010 7.072m0 0l-2.829-2.829m-4.243 2.829a4.978 4.978 0 01-1.414-2.83m-1.414 5.658a9 9 0 01-2.167-9.238m7.824 2.167a1 1 0 111.414 1.414m-1.414-1.414L3 3m8.293 8.293l1.414 1.414"
      }));
    }
    module2.exports = StatusOfflineIcon;
  }
});

// node_modules/@heroicons/react/outline/StatusOnlineIcon.js
var require_StatusOnlineIcon = __commonJS({
  "node_modules/@heroicons/react/outline/StatusOnlineIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StatusOnlineIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5.636 18.364a9 9 0 010-12.728m12.728 0a9 9 0 010 12.728m-9.9-2.829a5 5 0 010-7.07m7.072 0a5 5 0 010 7.07M13 12a1 1 0 11-2 0 1 1 0 012 0z"
      }));
    }
    module2.exports = StatusOnlineIcon;
  }
});

// node_modules/@heroicons/react/outline/StopIcon.js
var require_StopIcon = __commonJS({
  "node_modules/@heroicons/react/outline/StopIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StopIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z"
      }));
    }
    module2.exports = StopIcon;
  }
});

// node_modules/@heroicons/react/outline/SunIcon.js
var require_SunIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SunIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SunIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
      }));
    }
    module2.exports = SunIcon;
  }
});

// node_modules/@heroicons/react/outline/SupportIcon.js
var require_SupportIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SupportIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SupportIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z"
      }));
    }
    module2.exports = SupportIcon;
  }
});

// node_modules/@heroicons/react/outline/SwitchHorizontalIcon.js
var require_SwitchHorizontalIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SwitchHorizontalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SwitchHorizontalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4"
      }));
    }
    module2.exports = SwitchHorizontalIcon;
  }
});

// node_modules/@heroicons/react/outline/SwitchVerticalIcon.js
var require_SwitchVerticalIcon = __commonJS({
  "node_modules/@heroicons/react/outline/SwitchVerticalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SwitchVerticalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"
      }));
    }
    module2.exports = SwitchVerticalIcon;
  }
});

// node_modules/@heroicons/react/outline/TableIcon.js
var require_TableIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TableIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TableIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"
      }));
    }
    module2.exports = TableIcon;
  }
});

// node_modules/@heroicons/react/outline/TagIcon.js
var require_TagIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"
      }));
    }
    module2.exports = TagIcon;
  }
});

// node_modules/@heroicons/react/outline/TemplateIcon.js
var require_TemplateIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TemplateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TemplateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"
      }));
    }
    module2.exports = TemplateIcon;
  }
});

// node_modules/@heroicons/react/outline/TerminalIcon.js
var require_TerminalIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TerminalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TerminalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
      }));
    }
    module2.exports = TerminalIcon;
  }
});

// node_modules/@heroicons/react/outline/ThumbDownIcon.js
var require_ThumbDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ThumbDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ThumbDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018a2 2 0 01.485.06l3.76.94m-7 10v5a2 2 0 002 2h.096c.5 0 .905-.405.905-.904 0-.715.211-1.413.608-2.008L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5"
      }));
    }
    module2.exports = ThumbDownIcon;
  }
});

// node_modules/@heroicons/react/outline/ThumbUpIcon.js
var require_ThumbUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ThumbUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ThumbUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5"
      }));
    }
    module2.exports = ThumbUpIcon;
  }
});

// node_modules/@heroicons/react/outline/TicketIcon.js
var require_TicketIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TicketIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TicketIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"
      }));
    }
    module2.exports = TicketIcon;
  }
});

// node_modules/@heroicons/react/outline/TranslateIcon.js
var require_TranslateIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TranslateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TranslateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"
      }));
    }
    module2.exports = TranslateIcon;
  }
});

// node_modules/@heroicons/react/outline/TrashIcon.js
var require_TrashIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TrashIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TrashIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
      }));
    }
    module2.exports = TrashIcon;
  }
});

// node_modules/@heroicons/react/outline/TrendingDownIcon.js
var require_TrendingDownIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TrendingDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TrendingDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 17h8m0 0V9m0 8l-8-8-4 4-6-6"
      }));
    }
    module2.exports = TrendingDownIcon;
  }
});

// node_modules/@heroicons/react/outline/TrendingUpIcon.js
var require_TrendingUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TrendingUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TrendingUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"
      }));
    }
    module2.exports = TrendingUpIcon;
  }
});

// node_modules/@heroicons/react/outline/TruckIcon.js
var require_TruckIcon = __commonJS({
  "node_modules/@heroicons/react/outline/TruckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TruckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0"
      }));
    }
    module2.exports = TruckIcon;
  }
});

// node_modules/@heroicons/react/outline/UploadIcon.js
var require_UploadIcon = __commonJS({
  "node_modules/@heroicons/react/outline/UploadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UploadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12"
      }));
    }
    module2.exports = UploadIcon;
  }
});

// node_modules/@heroicons/react/outline/UserAddIcon.js
var require_UserAddIcon = __commonJS({
  "node_modules/@heroicons/react/outline/UserAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
      }));
    }
    module2.exports = UserAddIcon;
  }
});

// node_modules/@heroicons/react/outline/UserCircleIcon.js
var require_UserCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/UserCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = UserCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/UserGroupIcon.js
var require_UserGroupIcon = __commonJS({
  "node_modules/@heroicons/react/outline/UserGroupIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserGroupIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"
      }));
    }
    module2.exports = UserGroupIcon;
  }
});

// node_modules/@heroicons/react/outline/UserRemoveIcon.js
var require_UserRemoveIcon = __commonJS({
  "node_modules/@heroicons/react/outline/UserRemoveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserRemoveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6"
      }));
    }
    module2.exports = UserRemoveIcon;
  }
});

// node_modules/@heroicons/react/outline/UserIcon.js
var require_UserIcon = __commonJS({
  "node_modules/@heroicons/react/outline/UserIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
      }));
    }
    module2.exports = UserIcon;
  }
});

// node_modules/@heroicons/react/outline/UsersIcon.js
var require_UsersIcon = __commonJS({
  "node_modules/@heroicons/react/outline/UsersIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UsersIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"
      }));
    }
    module2.exports = UsersIcon;
  }
});

// node_modules/@heroicons/react/outline/VariableIcon.js
var require_VariableIcon = __commonJS({
  "node_modules/@heroicons/react/outline/VariableIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VariableIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4.871 4A17.926 17.926 0 003 12c0 2.874.673 5.59 1.871 8m14.13 0a17.926 17.926 0 001.87-8c0-2.874-.673-5.59-1.87-8M9 9h1.246a1 1 0 01.961.725l1.586 5.55a1 1 0 00.961.725H15m1-7h-.08a2 2 0 00-1.519.698L9.6 15.302A2 2 0 018.08 16H8"
      }));
    }
    module2.exports = VariableIcon;
  }
});

// node_modules/@heroicons/react/outline/VideoCameraIcon.js
var require_VideoCameraIcon = __commonJS({
  "node_modules/@heroicons/react/outline/VideoCameraIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VideoCameraIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"
      }));
    }
    module2.exports = VideoCameraIcon;
  }
});

// node_modules/@heroicons/react/outline/ViewBoardsIcon.js
var require_ViewBoardsIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ViewBoardsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewBoardsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2"
      }));
    }
    module2.exports = ViewBoardsIcon;
  }
});

// node_modules/@heroicons/react/outline/ViewGridAddIcon.js
var require_ViewGridAddIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ViewGridAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewGridAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 14v6m-3-3h6M6 10h2a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2zm10 0h2a2 2 0 002-2V6a2 2 0 00-2-2h-2a2 2 0 00-2 2v2a2 2 0 002 2zM6 20h2a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2a2 2 0 002 2z"
      }));
    }
    module2.exports = ViewGridAddIcon;
  }
});

// node_modules/@heroicons/react/outline/ViewGridIcon.js
var require_ViewGridIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ViewGridIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewGridIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"
      }));
    }
    module2.exports = ViewGridIcon;
  }
});

// node_modules/@heroicons/react/outline/ViewListIcon.js
var require_ViewListIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ViewListIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewListIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M4 6h16M4 10h16M4 14h16M4 18h16"
      }));
    }
    module2.exports = ViewListIcon;
  }
});

// node_modules/@heroicons/react/outline/VolumeOffIcon.js
var require_VolumeOffIcon = __commonJS({
  "node_modules/@heroicons/react/outline/VolumeOffIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VolumeOffIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2"
      }));
    }
    module2.exports = VolumeOffIcon;
  }
});

// node_modules/@heroicons/react/outline/VolumeUpIcon.js
var require_VolumeUpIcon = __commonJS({
  "node_modules/@heroicons/react/outline/VolumeUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VolumeUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"
      }));
    }
    module2.exports = VolumeUpIcon;
  }
});

// node_modules/@heroicons/react/outline/WifiIcon.js
var require_WifiIcon = __commonJS({
  "node_modules/@heroicons/react/outline/WifiIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function WifiIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0"
      }));
    }
    module2.exports = WifiIcon;
  }
});

// node_modules/@heroicons/react/outline/XCircleIcon.js
var require_XCircleIcon = __commonJS({
  "node_modules/@heroicons/react/outline/XCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function XCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    module2.exports = XCircleIcon;
  }
});

// node_modules/@heroicons/react/outline/XIcon.js
var require_XIcon = __commonJS({
  "node_modules/@heroicons/react/outline/XIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function XIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M6 18L18 6M6 6l12 12"
      }));
    }
    module2.exports = XIcon;
  }
});

// node_modules/@heroicons/react/outline/ZoomInIcon.js
var require_ZoomInIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ZoomInIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ZoomInIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"
      }));
    }
    module2.exports = ZoomInIcon;
  }
});

// node_modules/@heroicons/react/outline/ZoomOutIcon.js
var require_ZoomOutIcon = __commonJS({
  "node_modules/@heroicons/react/outline/ZoomOutIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ZoomOutIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM13 10H7"
      }));
    }
    module2.exports = ZoomOutIcon;
  }
});

// node_modules/@heroicons/react/outline/index.js
var require_outline = __commonJS({
  "node_modules/@heroicons/react/outline/index.js"(exports2, module2) {
    init_define_process();
    module2.exports.AcademicCapIcon = require_AcademicCapIcon();
    module2.exports.AdjustmentsIcon = require_AdjustmentsIcon();
    module2.exports.AnnotationIcon = require_AnnotationIcon();
    module2.exports.ArchiveIcon = require_ArchiveIcon();
    module2.exports.ArrowCircleDownIcon = require_ArrowCircleDownIcon();
    module2.exports.ArrowCircleLeftIcon = require_ArrowCircleLeftIcon();
    module2.exports.ArrowCircleRightIcon = require_ArrowCircleRightIcon();
    module2.exports.ArrowCircleUpIcon = require_ArrowCircleUpIcon();
    module2.exports.ArrowDownIcon = require_ArrowDownIcon();
    module2.exports.ArrowLeftIcon = require_ArrowLeftIcon();
    module2.exports.ArrowNarrowDownIcon = require_ArrowNarrowDownIcon();
    module2.exports.ArrowNarrowLeftIcon = require_ArrowNarrowLeftIcon();
    module2.exports.ArrowNarrowRightIcon = require_ArrowNarrowRightIcon();
    module2.exports.ArrowNarrowUpIcon = require_ArrowNarrowUpIcon();
    module2.exports.ArrowRightIcon = require_ArrowRightIcon();
    module2.exports.ArrowSmDownIcon = require_ArrowSmDownIcon();
    module2.exports.ArrowSmLeftIcon = require_ArrowSmLeftIcon();
    module2.exports.ArrowSmRightIcon = require_ArrowSmRightIcon();
    module2.exports.ArrowSmUpIcon = require_ArrowSmUpIcon();
    module2.exports.ArrowUpIcon = require_ArrowUpIcon();
    module2.exports.ArrowsExpandIcon = require_ArrowsExpandIcon();
    module2.exports.AtSymbolIcon = require_AtSymbolIcon();
    module2.exports.BackspaceIcon = require_BackspaceIcon();
    module2.exports.BadgeCheckIcon = require_BadgeCheckIcon();
    module2.exports.BanIcon = require_BanIcon();
    module2.exports.BeakerIcon = require_BeakerIcon();
    module2.exports.BellIcon = require_BellIcon();
    module2.exports.BookOpenIcon = require_BookOpenIcon();
    module2.exports.BookmarkAltIcon = require_BookmarkAltIcon();
    module2.exports.BookmarkIcon = require_BookmarkIcon();
    module2.exports.BriefcaseIcon = require_BriefcaseIcon();
    module2.exports.CakeIcon = require_CakeIcon();
    module2.exports.CalculatorIcon = require_CalculatorIcon();
    module2.exports.CalendarIcon = require_CalendarIcon();
    module2.exports.CameraIcon = require_CameraIcon();
    module2.exports.CashIcon = require_CashIcon();
    module2.exports.ChartBarIcon = require_ChartBarIcon();
    module2.exports.ChartPieIcon = require_ChartPieIcon();
    module2.exports.ChartSquareBarIcon = require_ChartSquareBarIcon();
    module2.exports.ChatAlt2Icon = require_ChatAlt2Icon();
    module2.exports.ChatAltIcon = require_ChatAltIcon();
    module2.exports.ChatIcon = require_ChatIcon();
    module2.exports.CheckCircleIcon = require_CheckCircleIcon();
    module2.exports.CheckIcon = require_CheckIcon();
    module2.exports.ChevronDoubleDownIcon = require_ChevronDoubleDownIcon();
    module2.exports.ChevronDoubleLeftIcon = require_ChevronDoubleLeftIcon();
    module2.exports.ChevronDoubleRightIcon = require_ChevronDoubleRightIcon();
    module2.exports.ChevronDoubleUpIcon = require_ChevronDoubleUpIcon();
    module2.exports.ChevronDownIcon = require_ChevronDownIcon();
    module2.exports.ChevronLeftIcon = require_ChevronLeftIcon();
    module2.exports.ChevronRightIcon = require_ChevronRightIcon();
    module2.exports.ChevronUpIcon = require_ChevronUpIcon();
    module2.exports.ChipIcon = require_ChipIcon();
    module2.exports.ClipboardCheckIcon = require_ClipboardCheckIcon();
    module2.exports.ClipboardCopyIcon = require_ClipboardCopyIcon();
    module2.exports.ClipboardListIcon = require_ClipboardListIcon();
    module2.exports.ClipboardIcon = require_ClipboardIcon();
    module2.exports.ClockIcon = require_ClockIcon();
    module2.exports.CloudDownloadIcon = require_CloudDownloadIcon();
    module2.exports.CloudUploadIcon = require_CloudUploadIcon();
    module2.exports.CloudIcon = require_CloudIcon();
    module2.exports.CodeIcon = require_CodeIcon();
    module2.exports.CogIcon = require_CogIcon();
    module2.exports.CollectionIcon = require_CollectionIcon();
    module2.exports.ColorSwatchIcon = require_ColorSwatchIcon();
    module2.exports.CreditCardIcon = require_CreditCardIcon();
    module2.exports.CubeTransparentIcon = require_CubeTransparentIcon();
    module2.exports.CubeIcon = require_CubeIcon();
    module2.exports.CurrencyBangladeshiIcon = require_CurrencyBangladeshiIcon();
    module2.exports.CurrencyDollarIcon = require_CurrencyDollarIcon();
    module2.exports.CurrencyEuroIcon = require_CurrencyEuroIcon();
    module2.exports.CurrencyPoundIcon = require_CurrencyPoundIcon();
    module2.exports.CurrencyRupeeIcon = require_CurrencyRupeeIcon();
    module2.exports.CurrencyYenIcon = require_CurrencyYenIcon();
    module2.exports.CursorClickIcon = require_CursorClickIcon();
    module2.exports.DatabaseIcon = require_DatabaseIcon();
    module2.exports.DesktopComputerIcon = require_DesktopComputerIcon();
    module2.exports.DeviceMobileIcon = require_DeviceMobileIcon();
    module2.exports.DeviceTabletIcon = require_DeviceTabletIcon();
    module2.exports.DocumentAddIcon = require_DocumentAddIcon();
    module2.exports.DocumentDownloadIcon = require_DocumentDownloadIcon();
    module2.exports.DocumentDuplicateIcon = require_DocumentDuplicateIcon();
    module2.exports.DocumentRemoveIcon = require_DocumentRemoveIcon();
    module2.exports.DocumentReportIcon = require_DocumentReportIcon();
    module2.exports.DocumentSearchIcon = require_DocumentSearchIcon();
    module2.exports.DocumentTextIcon = require_DocumentTextIcon();
    module2.exports.DocumentIcon = require_DocumentIcon();
    module2.exports.DotsCircleHorizontalIcon = require_DotsCircleHorizontalIcon();
    module2.exports.DotsHorizontalIcon = require_DotsHorizontalIcon();
    module2.exports.DotsVerticalIcon = require_DotsVerticalIcon();
    module2.exports.DownloadIcon = require_DownloadIcon();
    module2.exports.DuplicateIcon = require_DuplicateIcon();
    module2.exports.EmojiHappyIcon = require_EmojiHappyIcon();
    module2.exports.EmojiSadIcon = require_EmojiSadIcon();
    module2.exports.ExclamationCircleIcon = require_ExclamationCircleIcon();
    module2.exports.ExclamationIcon = require_ExclamationIcon();
    module2.exports.ExternalLinkIcon = require_ExternalLinkIcon();
    module2.exports.EyeOffIcon = require_EyeOffIcon();
    module2.exports.EyeIcon = require_EyeIcon();
    module2.exports.FastForwardIcon = require_FastForwardIcon();
    module2.exports.FilmIcon = require_FilmIcon();
    module2.exports.FilterIcon = require_FilterIcon();
    module2.exports.FingerPrintIcon = require_FingerPrintIcon();
    module2.exports.FireIcon = require_FireIcon();
    module2.exports.FlagIcon = require_FlagIcon();
    module2.exports.FolderAddIcon = require_FolderAddIcon();
    module2.exports.FolderDownloadIcon = require_FolderDownloadIcon();
    module2.exports.FolderOpenIcon = require_FolderOpenIcon();
    module2.exports.FolderRemoveIcon = require_FolderRemoveIcon();
    module2.exports.FolderIcon = require_FolderIcon();
    module2.exports.GiftIcon = require_GiftIcon();
    module2.exports.GlobeAltIcon = require_GlobeAltIcon();
    module2.exports.GlobeIcon = require_GlobeIcon();
    module2.exports.HandIcon = require_HandIcon();
    module2.exports.HashtagIcon = require_HashtagIcon();
    module2.exports.HeartIcon = require_HeartIcon();
    module2.exports.HomeIcon = require_HomeIcon();
    module2.exports.IdentificationIcon = require_IdentificationIcon();
    module2.exports.InboxInIcon = require_InboxInIcon();
    module2.exports.InboxIcon = require_InboxIcon();
    module2.exports.InformationCircleIcon = require_InformationCircleIcon();
    module2.exports.KeyIcon = require_KeyIcon();
    module2.exports.LibraryIcon = require_LibraryIcon();
    module2.exports.LightBulbIcon = require_LightBulbIcon();
    module2.exports.LightningBoltIcon = require_LightningBoltIcon();
    module2.exports.LinkIcon = require_LinkIcon();
    module2.exports.LocationMarkerIcon = require_LocationMarkerIcon();
    module2.exports.LockClosedIcon = require_LockClosedIcon();
    module2.exports.LockOpenIcon = require_LockOpenIcon();
    module2.exports.LoginIcon = require_LoginIcon();
    module2.exports.LogoutIcon = require_LogoutIcon();
    module2.exports.MailOpenIcon = require_MailOpenIcon();
    module2.exports.MailIcon = require_MailIcon();
    module2.exports.MapIcon = require_MapIcon();
    module2.exports.MenuAlt1Icon = require_MenuAlt1Icon();
    module2.exports.MenuAlt2Icon = require_MenuAlt2Icon();
    module2.exports.MenuAlt3Icon = require_MenuAlt3Icon();
    module2.exports.MenuAlt4Icon = require_MenuAlt4Icon();
    module2.exports.MenuIcon = require_MenuIcon();
    module2.exports.MicrophoneIcon = require_MicrophoneIcon();
    module2.exports.MinusCircleIcon = require_MinusCircleIcon();
    module2.exports.MinusSmIcon = require_MinusSmIcon();
    module2.exports.MinusIcon = require_MinusIcon();
    module2.exports.MoonIcon = require_MoonIcon();
    module2.exports.MusicNoteIcon = require_MusicNoteIcon();
    module2.exports.NewspaperIcon = require_NewspaperIcon();
    module2.exports.OfficeBuildingIcon = require_OfficeBuildingIcon();
    module2.exports.PaperAirplaneIcon = require_PaperAirplaneIcon();
    module2.exports.PaperClipIcon = require_PaperClipIcon();
    module2.exports.PauseIcon = require_PauseIcon();
    module2.exports.PencilAltIcon = require_PencilAltIcon();
    module2.exports.PencilIcon = require_PencilIcon();
    module2.exports.PhoneIncomingIcon = require_PhoneIncomingIcon();
    module2.exports.PhoneMissedCallIcon = require_PhoneMissedCallIcon();
    module2.exports.PhoneOutgoingIcon = require_PhoneOutgoingIcon();
    module2.exports.PhoneIcon = require_PhoneIcon();
    module2.exports.PhotographIcon = require_PhotographIcon();
    module2.exports.PlayIcon = require_PlayIcon();
    module2.exports.PlusCircleIcon = require_PlusCircleIcon();
    module2.exports.PlusSmIcon = require_PlusSmIcon();
    module2.exports.PlusIcon = require_PlusIcon();
    module2.exports.PresentationChartBarIcon = require_PresentationChartBarIcon();
    module2.exports.PresentationChartLineIcon = require_PresentationChartLineIcon();
    module2.exports.PrinterIcon = require_PrinterIcon();
    module2.exports.PuzzleIcon = require_PuzzleIcon();
    module2.exports.QrcodeIcon = require_QrcodeIcon();
    module2.exports.QuestionMarkCircleIcon = require_QuestionMarkCircleIcon();
    module2.exports.ReceiptRefundIcon = require_ReceiptRefundIcon();
    module2.exports.ReceiptTaxIcon = require_ReceiptTaxIcon();
    module2.exports.RefreshIcon = require_RefreshIcon();
    module2.exports.ReplyIcon = require_ReplyIcon();
    module2.exports.RewindIcon = require_RewindIcon();
    module2.exports.RssIcon = require_RssIcon();
    module2.exports.SaveAsIcon = require_SaveAsIcon();
    module2.exports.SaveIcon = require_SaveIcon();
    module2.exports.ScaleIcon = require_ScaleIcon();
    module2.exports.ScissorsIcon = require_ScissorsIcon();
    module2.exports.SearchCircleIcon = require_SearchCircleIcon();
    module2.exports.SearchIcon = require_SearchIcon();
    module2.exports.SelectorIcon = require_SelectorIcon();
    module2.exports.ServerIcon = require_ServerIcon();
    module2.exports.ShareIcon = require_ShareIcon();
    module2.exports.ShieldCheckIcon = require_ShieldCheckIcon();
    module2.exports.ShieldExclamationIcon = require_ShieldExclamationIcon();
    module2.exports.ShoppingBagIcon = require_ShoppingBagIcon();
    module2.exports.ShoppingCartIcon = require_ShoppingCartIcon();
    module2.exports.SortAscendingIcon = require_SortAscendingIcon();
    module2.exports.SortDescendingIcon = require_SortDescendingIcon();
    module2.exports.SparklesIcon = require_SparklesIcon();
    module2.exports.SpeakerphoneIcon = require_SpeakerphoneIcon();
    module2.exports.StarIcon = require_StarIcon();
    module2.exports.StatusOfflineIcon = require_StatusOfflineIcon();
    module2.exports.StatusOnlineIcon = require_StatusOnlineIcon();
    module2.exports.StopIcon = require_StopIcon();
    module2.exports.SunIcon = require_SunIcon();
    module2.exports.SupportIcon = require_SupportIcon();
    module2.exports.SwitchHorizontalIcon = require_SwitchHorizontalIcon();
    module2.exports.SwitchVerticalIcon = require_SwitchVerticalIcon();
    module2.exports.TableIcon = require_TableIcon();
    module2.exports.TagIcon = require_TagIcon();
    module2.exports.TemplateIcon = require_TemplateIcon();
    module2.exports.TerminalIcon = require_TerminalIcon();
    module2.exports.ThumbDownIcon = require_ThumbDownIcon();
    module2.exports.ThumbUpIcon = require_ThumbUpIcon();
    module2.exports.TicketIcon = require_TicketIcon();
    module2.exports.TranslateIcon = require_TranslateIcon();
    module2.exports.TrashIcon = require_TrashIcon();
    module2.exports.TrendingDownIcon = require_TrendingDownIcon();
    module2.exports.TrendingUpIcon = require_TrendingUpIcon();
    module2.exports.TruckIcon = require_TruckIcon();
    module2.exports.UploadIcon = require_UploadIcon();
    module2.exports.UserAddIcon = require_UserAddIcon();
    module2.exports.UserCircleIcon = require_UserCircleIcon();
    module2.exports.UserGroupIcon = require_UserGroupIcon();
    module2.exports.UserRemoveIcon = require_UserRemoveIcon();
    module2.exports.UserIcon = require_UserIcon();
    module2.exports.UsersIcon = require_UsersIcon();
    module2.exports.VariableIcon = require_VariableIcon();
    module2.exports.VideoCameraIcon = require_VideoCameraIcon();
    module2.exports.ViewBoardsIcon = require_ViewBoardsIcon();
    module2.exports.ViewGridAddIcon = require_ViewGridAddIcon();
    module2.exports.ViewGridIcon = require_ViewGridIcon();
    module2.exports.ViewListIcon = require_ViewListIcon();
    module2.exports.VolumeOffIcon = require_VolumeOffIcon();
    module2.exports.VolumeUpIcon = require_VolumeUpIcon();
    module2.exports.WifiIcon = require_WifiIcon();
    module2.exports.XCircleIcon = require_XCircleIcon();
    module2.exports.XIcon = require_XIcon();
    module2.exports.ZoomInIcon = require_ZoomInIcon();
    module2.exports.ZoomOutIcon = require_ZoomOutIcon();
  }
});

// node_modules/@heroicons/react/solid/AcademicCapIcon.js
var require_AcademicCapIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/AcademicCapIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AcademicCapIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z"
      }));
    }
    module2.exports = AcademicCapIcon;
  }
});

// node_modules/@heroicons/react/solid/AdjustmentsIcon.js
var require_AdjustmentsIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/AdjustmentsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AdjustmentsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z"
      }));
    }
    module2.exports = AdjustmentsIcon;
  }
});

// node_modules/@heroicons/react/solid/AnnotationIcon.js
var require_AnnotationIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/AnnotationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AnnotationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 13V5a2 2 0 00-2-2H4a2 2 0 00-2 2v8a2 2 0 002 2h3l3 3 3-3h3a2 2 0 002-2zM5 7a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1zm1 3a1 1 0 100 2h3a1 1 0 100-2H6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = AnnotationIcon;
  }
});

// node_modules/@heroicons/react/solid/ArchiveIcon.js
var require_ArchiveIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArchiveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArchiveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M4 3a2 2 0 100 4h12a2 2 0 100-4H4z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArchiveIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowCircleDownIcon.js
var require_ArrowCircleDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowCircleDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowCircleDownIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowCircleLeftIcon.js
var require_ArrowCircleLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowCircleLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowCircleLeftIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowCircleRightIcon.js
var require_ArrowCircleRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowCircleRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowCircleRightIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowCircleUpIcon.js
var require_ArrowCircleUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowCircleUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowCircleUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowCircleUpIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowDownIcon.js
var require_ArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M16.707 10.293a1 1 0 010 1.414l-6 6a1 1 0 01-1.414 0l-6-6a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l4.293-4.293a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowDownIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowLeftIcon.js
var require_ArrowLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowLeftIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowNarrowDownIcon.js
var require_ArrowNarrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowNarrowDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowNarrowDownIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowNarrowLeftIcon.js
var require_ArrowNarrowLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowNarrowLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowNarrowLeftIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowNarrowRightIcon.js
var require_ArrowNarrowRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowNarrowRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowNarrowRightIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowNarrowUpIcon.js
var require_ArrowNarrowUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowNarrowUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowNarrowUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowNarrowUpIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowRightIcon.js
var require_ArrowRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowRightIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowSmDownIcon.js
var require_ArrowSmDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowSmDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowSmDownIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowSmLeftIcon.js
var require_ArrowSmLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowSmLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowSmLeftIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowSmRightIcon.js
var require_ArrowSmRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowSmRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowSmRightIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowSmUpIcon.js
var require_ArrowSmUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowSmUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowSmUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowSmUpIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowUpIcon.js
var require_ArrowUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowUpIcon;
  }
});

// node_modules/@heroicons/react/solid/ArrowsExpandIcon.js
var require_ArrowsExpandIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ArrowsExpandIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ArrowsExpandIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 4a1 1 0 011-1h4a1 1 0 010 2H6.414l2.293 2.293a1 1 0 01-1.414 1.414L5 6.414V8a1 1 0 01-2 0V4zm9 1a1 1 0 110-2h4a1 1 0 011 1v4a1 1 0 11-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 112 0v1.586l2.293-2.293a1 1 0 011.414 1.414L6.414 15H8a1 1 0 110 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 110-2h1.586l-2.293-2.293a1 1 0 011.414-1.414L15 13.586V12a1 1 0 011-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ArrowsExpandIcon;
  }
});

// node_modules/@heroicons/react/solid/AtSymbolIcon.js
var require_AtSymbolIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/AtSymbolIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function AtSymbolIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.243 5.757a6 6 0 10-.986 9.284 1 1 0 111.087 1.678A8 8 0 1118 10a3 3 0 01-4.8 2.401A4 4 0 1114 10a1 1 0 102 0c0-1.537-.586-3.07-1.757-4.243zM12 10a2 2 0 10-4 0 2 2 0 004 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = AtSymbolIcon;
  }
});

// node_modules/@heroicons/react/solid/BackspaceIcon.js
var require_BackspaceIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BackspaceIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BackspaceIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.707 4.879A3 3 0 018.828 4H15a3 3 0 013 3v6a3 3 0 01-3 3H8.828a3 3 0 01-2.12-.879l-4.415-4.414a1 1 0 010-1.414l4.414-4.414zm4 2.414a1 1 0 00-1.414 1.414L10.586 10l-1.293 1.293a1 1 0 101.414 1.414L12 11.414l1.293 1.293a1 1 0 001.414-1.414L13.414 10l1.293-1.293a1 1 0 00-1.414-1.414L12 8.586l-1.293-1.293z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = BackspaceIcon;
  }
});

// node_modules/@heroicons/react/solid/BadgeCheckIcon.js
var require_BadgeCheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BadgeCheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BadgeCheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = BadgeCheckIcon;
  }
});

// node_modules/@heroicons/react/solid/BanIcon.js
var require_BanIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BanIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BanIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = BanIcon;
  }
});

// node_modules/@heroicons/react/solid/BeakerIcon.js
var require_BeakerIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BeakerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BeakerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 2a1 1 0 00-.707 1.707L7 4.414v3.758a1 1 0 01-.293.707l-4 4C.817 14.769 2.156 18 4.828 18h10.343c2.673 0 4.012-3.231 2.122-5.121l-4-4A1 1 0 0113 8.172V4.414l.707-.707A1 1 0 0013 2H7zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.027 1.028a4 4 0 00-2.171.102l-.47.156a4 4 0 01-2.53 0l-.563-.187a1.993 1.993 0 00-.114-.035l1.063-1.063A3 3 0 009 8.172z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = BeakerIcon;
  }
});

// node_modules/@heroicons/react/solid/BellIcon.js
var require_BellIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BellIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BellIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"
      }));
    }
    module2.exports = BellIcon;
  }
});

// node_modules/@heroicons/react/solid/BookOpenIcon.js
var require_BookOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BookOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BookOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z"
      }));
    }
    module2.exports = BookOpenIcon;
  }
});

// node_modules/@heroicons/react/solid/BookmarkAltIcon.js
var require_BookmarkAltIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BookmarkAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BookmarkAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 5a2 2 0 012-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm11 1H6v8l4-2 4 2V6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = BookmarkAltIcon;
  }
});

// node_modules/@heroicons/react/solid/BookmarkIcon.js
var require_BookmarkIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BookmarkIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BookmarkIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z"
      }));
    }
    module2.exports = BookmarkIcon;
  }
});

// node_modules/@heroicons/react/solid/BriefcaseIcon.js
var require_BriefcaseIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/BriefcaseIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function BriefcaseIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z"
      }));
    }
    module2.exports = BriefcaseIcon;
  }
});

// node_modules/@heroicons/react/solid/CakeIcon.js
var require_CakeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CakeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CakeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 3a1 1 0 011-1h.01a1 1 0 010 2H7a1 1 0 01-1-1zm2 3a1 1 0 00-2 0v1a2 2 0 00-2 2v1a2 2 0 00-2 2v.683a3.7 3.7 0 011.055.485 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0 3.704 3.704 0 014.11 0 1.704 1.704 0 001.89 0A3.7 3.7 0 0118 12.683V12a2 2 0 00-2-2V9a2 2 0 00-2-2V6a1 1 0 10-2 0v1h-1V6a1 1 0 10-2 0v1H8V6zm10 8.868a3.704 3.704 0 01-4.055-.036 1.704 1.704 0 00-1.89 0 3.704 3.704 0 01-4.11 0 1.704 1.704 0 00-1.89 0A3.704 3.704 0 012 14.868V17a1 1 0 001 1h14a1 1 0 001-1v-2.132zM9 3a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm3 0a1 1 0 011-1h.01a1 1 0 110 2H13a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CakeIcon;
  }
});

// node_modules/@heroicons/react/solid/CalculatorIcon.js
var require_CalculatorIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CalculatorIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CalculatorIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm1 2a1 1 0 000 2h6a1 1 0 100-2H7zm6 7a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-3 3a1 1 0 100 2h.01a1 1 0 100-2H10zm-4 1a1 1 0 011-1h.01a1 1 0 110 2H7a1 1 0 01-1-1zm1-4a1 1 0 100 2h.01a1 1 0 100-2H7zm2 1a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm4-4a1 1 0 100 2h.01a1 1 0 100-2H13zM9 9a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zM7 8a1 1 0 000 2h.01a1 1 0 000-2H7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CalculatorIcon;
  }
});

// node_modules/@heroicons/react/solid/CalendarIcon.js
var require_CalendarIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CalendarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CalendarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CalendarIcon;
  }
});

// node_modules/@heroicons/react/solid/CameraIcon.js
var require_CameraIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CameraIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CameraIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CameraIcon;
  }
});

// node_modules/@heroicons/react/solid/CashIcon.js
var require_CashIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CashIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CashIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CashIcon;
  }
});

// node_modules/@heroicons/react/solid/ChartBarIcon.js
var require_ChartBarIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChartBarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChartBarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z"
      }));
    }
    module2.exports = ChartBarIcon;
  }
});

// node_modules/@heroicons/react/solid/ChartPieIcon.js
var require_ChartPieIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChartPieIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChartPieIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"
      }));
    }
    module2.exports = ChartPieIcon;
  }
});

// node_modules/@heroicons/react/solid/ChartSquareBarIcon.js
var require_ChartSquareBarIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChartSquareBarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChartSquareBarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm9 4a1 1 0 10-2 0v6a1 1 0 102 0V7zm-3 2a1 1 0 10-2 0v4a1 1 0 102 0V9zm-3 3a1 1 0 10-2 0v1a1 1 0 102 0v-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChartSquareBarIcon;
  }
});

// node_modules/@heroicons/react/solid/ChatAlt2Icon.js
var require_ChatAlt2Icon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChatAlt2Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChatAlt2Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z"
      }));
    }
    module2.exports = ChatAlt2Icon;
  }
});

// node_modules/@heroicons/react/solid/ChatAltIcon.js
var require_ChatAltIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChatAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChatAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChatAltIcon;
  }
});

// node_modules/@heroicons/react/solid/ChatIcon.js
var require_ChatIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChatIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChatIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChatIcon;
  }
});

// node_modules/@heroicons/react/solid/CheckCircleIcon.js
var require_CheckCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CheckCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CheckCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CheckCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/CheckIcon.js
var require_CheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CheckIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronDoubleDownIcon.js
var require_ChevronDoubleDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronDoubleDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronDoubleDownIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronDoubleLeftIcon.js
var require_ChevronDoubleLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronDoubleLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronDoubleLeftIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronDoubleRightIcon.js
var require_ChevronDoubleRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronDoubleRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronDoubleRightIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronDoubleUpIcon.js
var require_ChevronDoubleUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronDoubleUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDoubleUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.293 15.707a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414 0zm0-6a1 1 0 010-1.414l5-5a1 1 0 011.414 0l5 5a1 1 0 01-1.414 1.414L10 5.414 5.707 9.707a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronDoubleUpIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronDownIcon.js
var require_ChevronDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronDownIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronLeftIcon.js
var require_ChevronLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronLeftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronLeftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronLeftIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronRightIcon.js
var require_ChevronRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronRightIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronRightIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronRightIcon;
  }
});

// node_modules/@heroicons/react/solid/ChevronUpIcon.js
var require_ChevronUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChevronUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChevronUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChevronUpIcon;
  }
});

// node_modules/@heroicons/react/solid/ChipIcon.js
var require_ChipIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ChipIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ChipIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M13 7H7v6h6V7z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ChipIcon;
  }
});

// node_modules/@heroicons/react/solid/ClipboardCheckIcon.js
var require_ClipboardCheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ClipboardCheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardCheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm9.707 5.707a1 1 0 00-1.414-1.414L9 12.586l-1.293-1.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ClipboardCheckIcon;
  }
});

// node_modules/@heroicons/react/solid/ClipboardCopyIcon.js
var require_ClipboardCopyIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ClipboardCopyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardCopyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8 2a1 1 0 000 2h2a1 1 0 100-2H8z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M3 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v6h-4.586l1.293-1.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L10.414 13H15v3a2 2 0 01-2 2H5a2 2 0 01-2-2V5zM15 11h2a1 1 0 110 2h-2v-2z"
      }));
    }
    module2.exports = ClipboardCopyIcon;
  }
});

// node_modules/@heroicons/react/solid/ClipboardListIcon.js
var require_ClipboardListIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ClipboardListIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardListIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ClipboardListIcon;
  }
});

// node_modules/@heroicons/react/solid/ClipboardIcon.js
var require_ClipboardIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ClipboardIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClipboardIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"
      }));
    }
    module2.exports = ClipboardIcon;
  }
});

// node_modules/@heroicons/react/solid/ClockIcon.js
var require_ClockIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ClockIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ClockIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ClockIcon;
  }
});

// node_modules/@heroicons/react/solid/CloudDownloadIcon.js
var require_CloudDownloadIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CloudDownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CloudDownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 9.5A3.5 3.5 0 005.5 13H9v2.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 15.586V13h2.5a4.5 4.5 0 10-.616-8.958 4.002 4.002 0 10-7.753 1.977A3.5 3.5 0 002 9.5zm9 3.5H9V8a1 1 0 012 0v5z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CloudDownloadIcon;
  }
});

// node_modules/@heroicons/react/solid/CloudUploadIcon.js
var require_CloudUploadIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CloudUploadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CloudUploadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5.5 13a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 13H11V9.413l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13H5.5z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M9 13h2v5a1 1 0 11-2 0v-5z"
      }));
    }
    module2.exports = CloudUploadIcon;
  }
});

// node_modules/@heroicons/react/solid/CloudIcon.js
var require_CloudIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CloudIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CloudIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5.5 16a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 16h-8z"
      }));
    }
    module2.exports = CloudIcon;
  }
});

// node_modules/@heroicons/react/solid/CodeIcon.js
var require_CodeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CodeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CodeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CodeIcon;
  }
});

// node_modules/@heroicons/react/solid/CogIcon.js
var require_CogIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CogIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CogIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CogIcon;
  }
});

// node_modules/@heroicons/react/solid/CollectionIcon.js
var require_CollectionIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CollectionIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CollectionIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z"
      }));
    }
    module2.exports = CollectionIcon;
  }
});

// node_modules/@heroicons/react/solid/ColorSwatchIcon.js
var require_ColorSwatchIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ColorSwatchIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ColorSwatchIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 2a2 2 0 00-2 2v11a3 3 0 106 0V4a2 2 0 00-2-2H4zm1 14a1 1 0 100-2 1 1 0 000 2zm5-1.757l4.9-4.9a2 2 0 000-2.828L13.485 5.1a2 2 0 00-2.828 0L10 5.757v8.486zM16 18H9.071l6-6H16a2 2 0 012 2v2a2 2 0 01-2 2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ColorSwatchIcon;
  }
});

// node_modules/@heroicons/react/solid/CreditCardIcon.js
var require_CreditCardIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CreditCardIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CreditCardIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CreditCardIcon;
  }
});

// node_modules/@heroicons/react/solid/CubeTransparentIcon.js
var require_CubeTransparentIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CubeTransparentIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CubeTransparentIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CubeTransparentIcon;
  }
});

// node_modules/@heroicons/react/solid/CubeIcon.js
var require_CubeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CubeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CubeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z"
      }));
    }
    module2.exports = CubeIcon;
  }
});

// node_modules/@heroicons/react/solid/CurrencyBangladeshiIcon.js
var require_CurrencyBangladeshiIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CurrencyBangladeshiIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyBangladeshiIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7 4a1 1 0 000 2 1 1 0 011 1v1H7a1 1 0 000 2h1v3a3 3 0 106 0v-1a1 1 0 10-2 0v1a1 1 0 11-2 0v-3h3a1 1 0 100-2h-3V7a3 3 0 00-3-3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CurrencyBangladeshiIcon;
  }
});

// node_modules/@heroicons/react/solid/CurrencyDollarIcon.js
var require_CurrencyDollarIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CurrencyDollarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyDollarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CurrencyDollarIcon;
  }
});

// node_modules/@heroicons/react/solid/CurrencyEuroIcon.js
var require_CurrencyEuroIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CurrencyEuroIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyEuroIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.736 6.979C9.208 6.193 9.696 6 10 6c.304 0 .792.193 1.264.979a1 1 0 001.715-1.029C12.279 4.784 11.232 4 10 4s-2.279.784-2.979 1.95c-.285.475-.507 1-.67 1.55H6a1 1 0 000 2h.013a9.358 9.358 0 000 1H6a1 1 0 100 2h.351c.163.55.385 1.075.67 1.55C7.721 15.216 8.768 16 10 16s2.279-.784 2.979-1.95a1 1 0 10-1.715-1.029c-.472.786-.96.979-1.264.979-.304 0-.792-.193-1.264-.979a4.265 4.265 0 01-.264-.521H10a1 1 0 100-2H8.017a7.36 7.36 0 010-1H10a1 1 0 100-2H8.472c.08-.185.167-.36.264-.521z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CurrencyEuroIcon;
  }
});

// node_modules/@heroicons/react/solid/CurrencyPoundIcon.js
var require_CurrencyPoundIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CurrencyPoundIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyPoundIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-14a3 3 0 00-3 3v2H7a1 1 0 000 2h1v1a1 1 0 01-1 1 1 1 0 100 2h6a1 1 0 100-2H9.83c.11-.313.17-.65.17-1v-1h1a1 1 0 100-2h-1V7a1 1 0 112 0 1 1 0 102 0 3 3 0 00-3-3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CurrencyPoundIcon;
  }
});

// node_modules/@heroicons/react/solid/CurrencyRupeeIcon.js
var require_CurrencyRupeeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CurrencyRupeeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyRupeeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7 5a1 1 0 100 2h1a2 2 0 011.732 1H7a1 1 0 100 2h2.732A2 2 0 018 11H7a1 1 0 00-.707 1.707l3 3a1 1 0 001.414-1.414l-1.483-1.484A4.008 4.008 0 0011.874 10H13a1 1 0 100-2h-1.126a3.976 3.976 0 00-.41-1H13a1 1 0 100-2H7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CurrencyRupeeIcon;
  }
});

// node_modules/@heroicons/react/solid/CurrencyYenIcon.js
var require_CurrencyYenIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CurrencyYenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CurrencyYenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7.858 5.485a1 1 0 00-1.715 1.03L7.633 9H7a1 1 0 100 2h1.834l.166.277V12H7a1 1 0 100 2h2v1a1 1 0 102 0v-1h2a1 1 0 100-2h-2v-.723l.166-.277H13a1 1 0 100-2h-.634l1.492-2.486a1 1 0 10-1.716-1.029L10.034 9h-.068L7.858 5.485z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CurrencyYenIcon;
  }
});

// node_modules/@heroicons/react/solid/CursorClickIcon.js
var require_CursorClickIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/CursorClickIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function CursorClickIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.672 1.911a1 1 0 10-1.932.518l.259.966a1 1 0 001.932-.518l-.26-.966zM2.429 4.74a1 1 0 10-.517 1.932l.966.259a1 1 0 00.517-1.932l-.966-.26zm8.814-.569a1 1 0 00-1.415-1.414l-.707.707a1 1 0 101.415 1.415l.707-.708zm-7.071 7.072l.707-.707A1 1 0 003.465 9.12l-.708.707a1 1 0 001.415 1.415zm3.2-5.171a1 1 0 00-1.3 1.3l4 10a1 1 0 001.823.075l1.38-2.759 3.018 3.02a1 1 0 001.414-1.415l-3.019-3.02 2.76-1.379a1 1 0 00-.076-1.822l-10-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = CursorClickIcon;
  }
});

// node_modules/@heroicons/react/solid/DatabaseIcon.js
var require_DatabaseIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DatabaseIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DatabaseIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M3 12v3c0 1.657 3.134 3 7 3s7-1.343 7-3v-3c0 1.657-3.134 3-7 3s-7-1.343-7-3z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M3 7v3c0 1.657 3.134 3 7 3s7-1.343 7-3V7c0 1.657-3.134 3-7 3S3 8.657 3 7z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M17 5c0 1.657-3.134 3-7 3S3 6.657 3 5s3.134-3 7-3 7 1.343 7 3z"
      }));
    }
    module2.exports = DatabaseIcon;
  }
});

// node_modules/@heroicons/react/solid/DesktopComputerIcon.js
var require_DesktopComputerIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DesktopComputerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DesktopComputerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 5a2 2 0 012-2h10a2 2 0 012 2v8a2 2 0 01-2 2h-2.22l.123.489.804.804A1 1 0 0113 18H7a1 1 0 01-.707-1.707l.804-.804L7.22 15H5a2 2 0 01-2-2V5zm5.771 7H5V5h10v7H8.771z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DesktopComputerIcon;
  }
});

// node_modules/@heroicons/react/solid/DeviceMobileIcon.js
var require_DeviceMobileIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DeviceMobileIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DeviceMobileIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DeviceMobileIcon;
  }
});

// node_modules/@heroicons/react/solid/DeviceTabletIcon.js
var require_DeviceTabletIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DeviceTabletIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DeviceTabletIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm4 14a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DeviceTabletIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentAddIcon.js
var require_DocumentAddIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DocumentAddIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentDownloadIcon.js
var require_DocumentDownloadIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentDownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentDownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DocumentDownloadIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentDuplicateIcon.js
var require_DocumentDuplicateIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentDuplicateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentDuplicateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9 2a2 2 0 00-2 2v8a2 2 0 002 2h6a2 2 0 002-2V6.414A2 2 0 0016.414 5L14 2.586A2 2 0 0012.586 2H9z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M3 8a2 2 0 012-2v10h8a2 2 0 01-2 2H5a2 2 0 01-2-2V8z"
      }));
    }
    module2.exports = DocumentDuplicateIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentRemoveIcon.js
var require_DocumentRemoveIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentRemoveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentRemoveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm1 8a1 1 0 100 2h6a1 1 0 100-2H7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DocumentRemoveIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentReportIcon.js
var require_DocumentReportIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentReportIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentReportIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm2 10a1 1 0 10-2 0v3a1 1 0 102 0v-3zm2-3a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm4-1a1 1 0 10-2 0v7a1 1 0 102 0V8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DocumentReportIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentSearchIcon.js
var require_DocumentSearchIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentSearchIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentSearchIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2h-1.528A6 6 0 004 9.528V4z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 10a4 4 0 00-3.446 6.032l-1.261 1.26a1 1 0 101.414 1.415l1.261-1.261A4 4 0 108 10zm-2 4a2 2 0 114 0 2 2 0 01-4 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DocumentSearchIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentTextIcon.js
var require_DocumentTextIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentTextIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentTextIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DocumentTextIcon;
  }
});

// node_modules/@heroicons/react/solid/DocumentIcon.js
var require_DocumentIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DocumentIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DocumentIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DocumentIcon;
  }
});

// node_modules/@heroicons/react/solid/DotsCircleHorizontalIcon.js
var require_DotsCircleHorizontalIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DotsCircleHorizontalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DotsCircleHorizontalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DotsCircleHorizontalIcon;
  }
});

// node_modules/@heroicons/react/solid/DotsHorizontalIcon.js
var require_DotsHorizontalIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DotsHorizontalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DotsHorizontalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z"
      }));
    }
    module2.exports = DotsHorizontalIcon;
  }
});

// node_modules/@heroicons/react/solid/DotsVerticalIcon.js
var require_DotsVerticalIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DotsVerticalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DotsVerticalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"
      }));
    }
    module2.exports = DotsVerticalIcon;
  }
});

// node_modules/@heroicons/react/solid/DownloadIcon.js
var require_DownloadIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = DownloadIcon;
  }
});

// node_modules/@heroicons/react/solid/DuplicateIcon.js
var require_DuplicateIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/DuplicateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function DuplicateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z"
      }));
    }
    module2.exports = DuplicateIcon;
  }
});

// node_modules/@heroicons/react/solid/EmojiHappyIcon.js
var require_EmojiHappyIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/EmojiHappyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EmojiHappyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-.464 5.535a1 1 0 10-1.415-1.414 3 3 0 01-4.242 0 1 1 0 00-1.415 1.414 5 5 0 007.072 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = EmojiHappyIcon;
  }
});

// node_modules/@heroicons/react/solid/EmojiSadIcon.js
var require_EmojiSadIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/EmojiSadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EmojiSadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-7.536 5.879a1 1 0 001.415 0 3 3 0 014.242 0 1 1 0 001.415-1.415 5 5 0 00-7.072 0 1 1 0 000 1.415z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = EmojiSadIcon;
  }
});

// node_modules/@heroicons/react/solid/ExclamationCircleIcon.js
var require_ExclamationCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ExclamationCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ExclamationCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ExclamationCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/ExclamationIcon.js
var require_ExclamationIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ExclamationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ExclamationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ExclamationIcon;
  }
});

// node_modules/@heroicons/react/solid/ExternalLinkIcon.js
var require_ExternalLinkIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ExternalLinkIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ExternalLinkIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"
      }));
    }
    module2.exports = ExternalLinkIcon;
  }
});

// node_modules/@heroicons/react/solid/EyeOffIcon.js
var require_EyeOffIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/EyeOffIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EyeOffIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z"
      }));
    }
    module2.exports = EyeOffIcon;
  }
});

// node_modules/@heroicons/react/solid/EyeIcon.js
var require_EyeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/EyeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function EyeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10 12a2 2 0 100-4 2 2 0 000 4z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = EyeIcon;
  }
});

// node_modules/@heroicons/react/solid/FastForwardIcon.js
var require_FastForwardIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FastForwardIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FastForwardIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M4.555 5.168A1 1 0 003 6v8a1 1 0 001.555.832L10 11.202V14a1 1 0 001.555.832l6-4a1 1 0 000-1.664l-6-4A1 1 0 0010 6v2.798l-5.445-3.63z"
      }));
    }
    module2.exports = FastForwardIcon;
  }
});

// node_modules/@heroicons/react/solid/FilmIcon.js
var require_FilmIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FilmIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FilmIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm3 2h6v4H7V5zm8 8v2h1v-2h-1zm-2-2H7v4h6v-4zm2 0h1V9h-1v2zm1-4V5h-1v2h1zM5 5v2H4V5h1zm0 4H4v2h1V9zm-1 4h1v2H4v-2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = FilmIcon;
  }
});

// node_modules/@heroicons/react/solid/FilterIcon.js
var require_FilterIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FilterIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FilterIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = FilterIcon;
  }
});

// node_modules/@heroicons/react/solid/FingerPrintIcon.js
var require_FingerPrintIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FingerPrintIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FingerPrintIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M6.625 2.655A9 9 0 0119 11a1 1 0 11-2 0 7 7 0 00-9.625-6.492 1 1 0 11-.75-1.853zM4.662 4.959A1 1 0 014.75 6.37 6.97 6.97 0 003 11a1 1 0 11-2 0 8.97 8.97 0 012.25-5.953 1 1 0 011.412-.088z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 11a5 5 0 1110 0 1 1 0 11-2 0 3 3 0 10-6 0c0 1.677-.345 3.276-.968 4.729a1 1 0 11-1.838-.789A9.964 9.964 0 005 11zm8.921 2.012a1 1 0 01.831 1.145 19.86 19.86 0 01-.545 2.436 1 1 0 11-1.92-.558c.207-.713.371-1.445.49-2.192a1 1 0 011.144-.83z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 10a1 1 0 011 1c0 2.236-.46 4.368-1.29 6.304a1 1 0 01-1.838-.789A13.952 13.952 0 009 11a1 1 0 011-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = FingerPrintIcon;
  }
});

// node_modules/@heroicons/react/solid/FireIcon.js
var require_FireIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FireIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FireIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = FireIcon;
  }
});

// node_modules/@heroicons/react/solid/FlagIcon.js
var require_FlagIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FlagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FlagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 6a3 3 0 013-3h10a1 1 0 01.8 1.6L14.25 8l2.55 3.4A1 1 0 0116 13H6a1 1 0 00-1 1v3a1 1 0 11-2 0V6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = FlagIcon;
  }
});

// node_modules/@heroicons/react/solid/FolderAddIcon.js
var require_FolderAddIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FolderAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
      }), /* @__PURE__ */ React.createElement("path", {
        stroke: "#fff",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 11h4m-2-2v4"
      }));
    }
    module2.exports = FolderAddIcon;
  }
});

// node_modules/@heroicons/react/solid/FolderDownloadIcon.js
var require_FolderDownloadIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FolderDownloadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderDownloadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
      }), /* @__PURE__ */ React.createElement("path", {
        stroke: "#fff",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M10 9v4m0 0l-2-2m2 2l2-2"
      }));
    }
    module2.exports = FolderDownloadIcon;
  }
});

// node_modules/@heroicons/react/solid/FolderOpenIcon.js
var require_FolderOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FolderOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 6a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1H8a3 3 0 00-3 3v1.5a1.5 1.5 0 01-3 0V6z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M6 12a2 2 0 012-2h8a2 2 0 012 2v2a2 2 0 01-2 2H2h2a2 2 0 002-2v-2z"
      }));
    }
    module2.exports = FolderOpenIcon;
  }
});

// node_modules/@heroicons/react/solid/FolderRemoveIcon.js
var require_FolderRemoveIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FolderRemoveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderRemoveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
      }), /* @__PURE__ */ React.createElement("path", {
        stroke: "#fff",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M8 11h4"
      }));
    }
    module2.exports = FolderRemoveIcon;
  }
});

// node_modules/@heroicons/react/solid/FolderIcon.js
var require_FolderIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/FolderIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function FolderIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
      }));
    }
    module2.exports = FolderIcon;
  }
});

// node_modules/@heroicons/react/solid/GiftIcon.js
var require_GiftIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/GiftIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function GiftIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 5a3 3 0 015-2.236A3 3 0 0114.83 6H16a2 2 0 110 4h-5V9a1 1 0 10-2 0v1H4a2 2 0 110-4h1.17C5.06 5.687 5 5.35 5 5zm4 1V5a1 1 0 10-1 1h1zm3 0a1 1 0 10-1-1v1h1z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M9 11H3v5a2 2 0 002 2h4v-7zM11 18h4a2 2 0 002-2v-5h-6v7z"
      }));
    }
    module2.exports = GiftIcon;
  }
});

// node_modules/@heroicons/react/solid/GlobeAltIcon.js
var require_GlobeAltIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/GlobeAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function GlobeAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.083 9h1.946c.089-1.546.383-2.97.837-4.118A6.004 6.004 0 004.083 9zM10 2a8 8 0 100 16 8 8 0 000-16zm0 2c-.076 0-.232.032-.465.262-.238.234-.497.623-.737 1.182-.389.907-.673 2.142-.766 3.556h3.936c-.093-1.414-.377-2.649-.766-3.556-.24-.56-.5-.948-.737-1.182C10.232 4.032 10.076 4 10 4zm3.971 5c-.089-1.546-.383-2.97-.837-4.118A6.004 6.004 0 0115.917 9h-1.946zm-2.003 2H8.032c.093 1.414.377 2.649.766 3.556.24.56.5.948.737 1.182.233.23.389.262.465.262.076 0 .232-.032.465-.262.238-.234.498-.623.737-1.182.389-.907.673-2.142.766-3.556zm1.166 4.118c.454-1.147.748-2.572.837-4.118h1.946a6.004 6.004 0 01-2.783 4.118zm-6.268 0C6.412 13.97 6.118 12.546 6.03 11H4.083a6.004 6.004 0 002.783 4.118z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = GlobeAltIcon;
  }
});

// node_modules/@heroicons/react/solid/GlobeIcon.js
var require_GlobeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/GlobeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function GlobeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = GlobeIcon;
  }
});

// node_modules/@heroicons/react/solid/HandIcon.js
var require_HandIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/HandIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HandIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 3a1 1 0 012 0v5.5a.5.5 0 001 0V4a1 1 0 112 0v4.5a.5.5 0 001 0V6a1 1 0 112 0v5a7 7 0 11-14 0V9a1 1 0 012 0v2.5a.5.5 0 001 0V4a1 1 0 012 0v4.5a.5.5 0 001 0V3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = HandIcon;
  }
});

// node_modules/@heroicons/react/solid/HashtagIcon.js
var require_HashtagIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/HashtagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HashtagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.938l1-4H9.031z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = HashtagIcon;
  }
});

// node_modules/@heroicons/react/solid/HeartIcon.js
var require_HeartIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/HeartIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HeartIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = HeartIcon;
  }
});

// node_modules/@heroicons/react/solid/HomeIcon.js
var require_HomeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/HomeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function HomeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
      }));
    }
    module2.exports = HomeIcon;
  }
});

// node_modules/@heroicons/react/solid/IdentificationIcon.js
var require_IdentificationIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/IdentificationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function IdentificationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = IdentificationIcon;
  }
});

// node_modules/@heroicons/react/solid/InboxInIcon.js
var require_InboxInIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/InboxInIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function InboxInIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z"
      }));
    }
    module2.exports = InboxInIcon;
  }
});

// node_modules/@heroicons/react/solid/InboxIcon.js
var require_InboxIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/InboxIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function InboxIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 3a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm0 2h10v7h-2l-1 2H8l-1-2H5V5z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = InboxIcon;
  }
});

// node_modules/@heroicons/react/solid/InformationCircleIcon.js
var require_InformationCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/InformationCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function InformationCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = InformationCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/KeyIcon.js
var require_KeyIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/KeyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function KeyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = KeyIcon;
  }
});

// node_modules/@heroicons/react/solid/LibraryIcon.js
var require_LibraryIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LibraryIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LibraryIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10.496 2.132a1 1 0 00-.992 0l-7 4A1 1 0 003 8v7a1 1 0 100 2h14a1 1 0 100-2V8a1 1 0 00.496-1.868l-7-4zM6 9a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1zm3 1a1 1 0 012 0v3a1 1 0 11-2 0v-3zm5-1a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = LibraryIcon;
  }
});

// node_modules/@heroicons/react/solid/LightBulbIcon.js
var require_LightBulbIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LightBulbIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LightBulbIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z"
      }));
    }
    module2.exports = LightBulbIcon;
  }
});

// node_modules/@heroicons/react/solid/LightningBoltIcon.js
var require_LightningBoltIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LightningBoltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LightningBoltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = LightningBoltIcon;
  }
});

// node_modules/@heroicons/react/solid/LinkIcon.js
var require_LinkIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LinkIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LinkIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = LinkIcon;
  }
});

// node_modules/@heroicons/react/solid/LocationMarkerIcon.js
var require_LocationMarkerIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LocationMarkerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LocationMarkerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = LocationMarkerIcon;
  }
});

// node_modules/@heroicons/react/solid/LockClosedIcon.js
var require_LockClosedIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LockClosedIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LockClosedIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = LockClosedIcon;
  }
});

// node_modules/@heroicons/react/solid/LockOpenIcon.js
var require_LockOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LockOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LockOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10 2a5 5 0 00-5 5v2a2 2 0 00-2 2v5a2 2 0 002 2h10a2 2 0 002-2v-5a2 2 0 00-2-2H7V7a3 3 0 015.905-.75 1 1 0 001.937-.5A5.002 5.002 0 0010 2z"
      }));
    }
    module2.exports = LockOpenIcon;
  }
});

// node_modules/@heroicons/react/solid/LoginIcon.js
var require_LoginIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LoginIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LoginIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = LoginIcon;
  }
});

// node_modules/@heroicons/react/solid/LogoutIcon.js
var require_LogoutIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/LogoutIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function LogoutIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = LogoutIcon;
  }
});

// node_modules/@heroicons/react/solid/MailOpenIcon.js
var require_MailOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MailOpenIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MailOpenIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.94 6.412A2 2 0 002 8.108V16a2 2 0 002 2h12a2 2 0 002-2V8.108a2 2 0 00-.94-1.696l-6-3.75a2 2 0 00-2.12 0l-6 3.75zm2.615 2.423a1 1 0 10-1.11 1.664l5 3.333a1 1 0 001.11 0l5-3.333a1 1 0 00-1.11-1.664L10 11.798 5.555 8.835z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MailOpenIcon;
  }
});

// node_modules/@heroicons/react/solid/MailIcon.js
var require_MailIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MailIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MailIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"
      }));
    }
    module2.exports = MailIcon;
  }
});

// node_modules/@heroicons/react/solid/MapIcon.js
var require_MapIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MapIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MapIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MapIcon;
  }
});

// node_modules/@heroicons/react/solid/MenuAlt1Icon.js
var require_MenuAlt1Icon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MenuAlt1Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt1Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MenuAlt1Icon;
  }
});

// node_modules/@heroicons/react/solid/MenuAlt2Icon.js
var require_MenuAlt2Icon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MenuAlt2Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt2Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MenuAlt2Icon;
  }
});

// node_modules/@heroicons/react/solid/MenuAlt3Icon.js
var require_MenuAlt3Icon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MenuAlt3Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt3Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MenuAlt3Icon;
  }
});

// node_modules/@heroicons/react/solid/MenuAlt4Icon.js
var require_MenuAlt4Icon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MenuAlt4Icon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuAlt4Icon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 7a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 13a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MenuAlt4Icon;
  }
});

// node_modules/@heroicons/react/solid/MenuIcon.js
var require_MenuIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MenuIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MenuIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MenuIcon;
  }
});

// node_modules/@heroicons/react/solid/MicrophoneIcon.js
var require_MicrophoneIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MicrophoneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MicrophoneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MicrophoneIcon;
  }
});

// node_modules/@heroicons/react/solid/MinusCircleIcon.js
var require_MinusCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MinusCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MinusCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MinusCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/MinusSmIcon.js
var require_MinusSmIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MinusSmIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MinusSmIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MinusSmIcon;
  }
});

// node_modules/@heroicons/react/solid/MinusIcon.js
var require_MinusIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MinusIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MinusIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = MinusIcon;
  }
});

// node_modules/@heroicons/react/solid/MoonIcon.js
var require_MoonIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MoonIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MoonIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
      }));
    }
    module2.exports = MoonIcon;
  }
});

// node_modules/@heroicons/react/solid/MusicNoteIcon.js
var require_MusicNoteIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/MusicNoteIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function MusicNoteIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M18 3a1 1 0 00-1.196-.98l-10 2A1 1 0 006 5v9.114A4.369 4.369 0 005 14c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V7.82l8-1.6v5.894A4.37 4.37 0 0015 12c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V3z"
      }));
    }
    module2.exports = MusicNoteIcon;
  }
});

// node_modules/@heroicons/react/solid/NewspaperIcon.js
var require_NewspaperIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/NewspaperIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function NewspaperIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M15 7h1a2 2 0 012 2v5.5a1.5 1.5 0 01-3 0V7z"
      }));
    }
    module2.exports = NewspaperIcon;
  }
});

// node_modules/@heroicons/react/solid/OfficeBuildingIcon.js
var require_OfficeBuildingIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/OfficeBuildingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function OfficeBuildingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h2v2H7V5zm2 4H7v2h2V9zm2-4h2v2h-2V5zm2 4h-2v2h2V9z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = OfficeBuildingIcon;
  }
});

// node_modules/@heroicons/react/solid/PaperAirplaneIcon.js
var require_PaperAirplaneIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PaperAirplaneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PaperAirplaneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z"
      }));
    }
    module2.exports = PaperAirplaneIcon;
  }
});

// node_modules/@heroicons/react/solid/PaperClipIcon.js
var require_PaperClipIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PaperClipIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PaperClipIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PaperClipIcon;
  }
});

// node_modules/@heroicons/react/solid/PauseIcon.js
var require_PauseIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PauseIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PauseIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PauseIcon;
  }
});

// node_modules/@heroicons/react/solid/PencilAltIcon.js
var require_PencilAltIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PencilAltIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PencilAltIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PencilAltIcon;
  }
});

// node_modules/@heroicons/react/solid/PencilIcon.js
var require_PencilIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PencilIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PencilIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"
      }));
    }
    module2.exports = PencilIcon;
  }
});

// node_modules/@heroicons/react/solid/PhoneIncomingIcon.js
var require_PhoneIncomingIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PhoneIncomingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneIncomingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"
      }));
    }
    module2.exports = PhoneIncomingIcon;
  }
});

// node_modules/@heroicons/react/solid/PhoneMissedCallIcon.js
var require_PhoneMissedCallIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PhoneMissedCallIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneMissedCallIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M16.707 3.293a1 1 0 010 1.414L15.414 6l1.293 1.293a1 1 0 01-1.414 1.414L14 7.414l-1.293 1.293a1 1 0 11-1.414-1.414L12.586 6l-1.293-1.293a1 1 0 011.414-1.414L14 4.586l1.293-1.293a1 1 0 011.414 0z"
      }));
    }
    module2.exports = PhoneMissedCallIcon;
  }
});

// node_modules/@heroicons/react/solid/PhoneOutgoingIcon.js
var require_PhoneOutgoingIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PhoneOutgoingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneOutgoingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M17.924 2.617a.997.997 0 00-.215-.322l-.004-.004A.997.997 0 0017 2h-4a1 1 0 100 2h1.586l-3.293 3.293a1 1 0 001.414 1.414L16 5.414V7a1 1 0 102 0V3a.997.997 0 00-.076-.383z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"
      }));
    }
    module2.exports = PhoneOutgoingIcon;
  }
});

// node_modules/@heroicons/react/solid/PhoneIcon.js
var require_PhoneIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PhoneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhoneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"
      }));
    }
    module2.exports = PhoneIcon;
  }
});

// node_modules/@heroicons/react/solid/PhotographIcon.js
var require_PhotographIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PhotographIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PhotographIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PhotographIcon;
  }
});

// node_modules/@heroicons/react/solid/PlayIcon.js
var require_PlayIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PlayIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlayIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PlayIcon;
  }
});

// node_modules/@heroicons/react/solid/PlusCircleIcon.js
var require_PlusCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PlusCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlusCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PlusCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/PlusSmIcon.js
var require_PlusSmIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PlusSmIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlusSmIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PlusSmIcon;
  }
});

// node_modules/@heroicons/react/solid/PlusIcon.js
var require_PlusIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PlusIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PlusIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PlusIcon;
  }
});

// node_modules/@heroicons/react/solid/PresentationChartBarIcon.js
var require_PresentationChartBarIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PresentationChartBarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PresentationChartBarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11 4a1 1 0 10-2 0v4a1 1 0 102 0V7zm-3 1a1 1 0 10-2 0v3a1 1 0 102 0V8zM8 9a1 1 0 00-2 0v2a1 1 0 102 0V9z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PresentationChartBarIcon;
  }
});

// node_modules/@heroicons/react/solid/PresentationChartLineIcon.js
var require_PresentationChartLineIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PresentationChartLineIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PresentationChartLineIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PresentationChartLineIcon;
  }
});

// node_modules/@heroicons/react/solid/PrinterIcon.js
var require_PrinterIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PrinterIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PrinterIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zm0 8H7v4h6v-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = PrinterIcon;
  }
});

// node_modules/@heroicons/react/solid/PuzzleIcon.js
var require_PuzzleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/PuzzleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function PuzzleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M10 3.5a1.5 1.5 0 013 0V4a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-.5a1.5 1.5 0 000 3h.5a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-.5a1.5 1.5 0 00-3 0v.5a1 1 0 01-1 1H6a1 1 0 01-1-1v-3a1 1 0 00-1-1h-.5a1.5 1.5 0 010-3H4a1 1 0 001-1V6a1 1 0 011-1h3a1 1 0 001-1v-.5z"
      }));
    }
    module2.exports = PuzzleIcon;
  }
});

// node_modules/@heroicons/react/solid/QrcodeIcon.js
var require_QrcodeIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/QrcodeIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function QrcodeIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 4a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm2 2V5h1v1H5zM3 13a1 1 0 011-1h3a1 1 0 011 1v3a1 1 0 01-1 1H4a1 1 0 01-1-1v-3zm2 2v-1h1v1H5zM13 3a1 1 0 00-1 1v3a1 1 0 001 1h3a1 1 0 001-1V4a1 1 0 00-1-1h-3zm1 2v1h1V5h-1z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M11 4a1 1 0 10-2 0v1a1 1 0 002 0V4zM10 7a1 1 0 011 1v1h2a1 1 0 110 2h-3a1 1 0 01-1-1V8a1 1 0 011-1zM16 9a1 1 0 100 2 1 1 0 000-2zM9 13a1 1 0 011-1h1a1 1 0 110 2v2a1 1 0 11-2 0v-3zM7 11a1 1 0 100-2H4a1 1 0 100 2h3zM17 13a1 1 0 01-1 1h-2a1 1 0 110-2h2a1 1 0 011 1zM16 17a1 1 0 100-2h-3a1 1 0 100 2h3z"
      }));
    }
    module2.exports = QrcodeIcon;
  }
});

// node_modules/@heroicons/react/solid/QuestionMarkCircleIcon.js
var require_QuestionMarkCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/QuestionMarkCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function QuestionMarkCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = QuestionMarkCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/ReceiptRefundIcon.js
var require_ReceiptRefundIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ReceiptRefundIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ReceiptRefundIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm4.707 3.707a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L8.414 9H10a3 3 0 013 3v1a1 1 0 102 0v-1a5 5 0 00-5-5H8.414l1.293-1.293z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ReceiptRefundIcon;
  }
});

// node_modules/@heroicons/react/solid/ReceiptTaxIcon.js
var require_ReceiptTaxIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ReceiptTaxIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ReceiptTaxIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 2a2 2 0 00-2 2v14l3.5-2 3.5 2 3.5-2 3.5 2V4a2 2 0 00-2-2H5zm2.5 3a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm6.207.293a1 1 0 00-1.414 0l-6 6a1 1 0 101.414 1.414l6-6a1 1 0 000-1.414zM12.5 10a1.5 1.5 0 100 3 1.5 1.5 0 000-3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ReceiptTaxIcon;
  }
});

// node_modules/@heroicons/react/solid/RefreshIcon.js
var require_RefreshIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/RefreshIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function RefreshIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = RefreshIcon;
  }
});

// node_modules/@heroicons/react/solid/ReplyIcon.js
var require_ReplyIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ReplyIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ReplyIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7.707 3.293a1 1 0 010 1.414L5.414 7H11a7 7 0 017 7v2a1 1 0 11-2 0v-2a5 5 0 00-5-5H5.414l2.293 2.293a1 1 0 11-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ReplyIcon;
  }
});

// node_modules/@heroicons/react/solid/RewindIcon.js
var require_RewindIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/RewindIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function RewindIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8.445 14.832A1 1 0 0010 14v-2.798l5.445 3.63A1 1 0 0017 14V6a1 1 0 00-1.555-.832L10 8.798V6a1 1 0 00-1.555-.832l-6 4a1 1 0 000 1.664l6 4z"
      }));
    }
    module2.exports = RewindIcon;
  }
});

// node_modules/@heroicons/react/solid/RssIcon.js
var require_RssIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/RssIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function RssIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5 3a1 1 0 000 2c5.523 0 10 4.477 10 10a1 1 0 102 0C17 8.373 11.627 3 5 3z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M4 9a1 1 0 011-1 7 7 0 017 7 1 1 0 11-2 0 5 5 0 00-5-5 1 1 0 01-1-1zM3 15a2 2 0 114 0 2 2 0 01-4 0z"
      }));
    }
    module2.exports = RssIcon;
  }
});

// node_modules/@heroicons/react/solid/SaveAsIcon.js
var require_SaveAsIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SaveAsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SaveAsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9.707 7.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L13 8.586V5h3a2 2 0 012 2v5a2 2 0 01-2 2H8a2 2 0 01-2-2V7a2 2 0 012-2h3v3.586L9.707 7.293zM11 3a1 1 0 112 0v2h-2V3z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M4 9a2 2 0 00-2 2v5a2 2 0 002 2h8a2 2 0 002-2H4V9z"
      }));
    }
    module2.exports = SaveAsIcon;
  }
});

// node_modules/@heroicons/react/solid/SaveIcon.js
var require_SaveIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SaveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SaveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V6h5a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h5v5.586l-1.293-1.293zM9 4a1 1 0 012 0v2H9V4z"
      }));
    }
    module2.exports = SaveIcon;
  }
});

// node_modules/@heroicons/react/solid/ScaleIcon.js
var require_ScaleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ScaleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ScaleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a1 1 0 011 1v1.323l3.954 1.582 1.599-.8a1 1 0 01.894 1.79l-1.233.616 1.738 5.42a1 1 0 01-.285 1.05A3.989 3.989 0 0115 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.715-5.349L11 6.477V16h2a1 1 0 110 2H7a1 1 0 110-2h2V6.477L6.237 7.582l1.715 5.349a1 1 0 01-.285 1.05A3.989 3.989 0 015 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.738-5.42-1.233-.617a1 1 0 01.894-1.788l1.599.799L9 4.323V3a1 1 0 011-1zm-5 8.274l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L5 10.274zm10 0l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L15 10.274z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ScaleIcon;
  }
});

// node_modules/@heroicons/react/solid/ScissorsIcon.js
var require_ScissorsIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ScissorsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ScissorsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 2a3.5 3.5 0 101.665 6.58L8.585 10l-1.42 1.42a3.5 3.5 0 101.414 1.414l8.128-8.127a1 1 0 00-1.414-1.414L10 8.586l-1.42-1.42A3.5 3.5 0 005.5 2zM4 5.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 9a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M12.828 11.414a1 1 0 00-1.414 1.414l3.879 3.88a1 1 0 001.414-1.415l-3.879-3.879z"
      }));
    }
    module2.exports = ScissorsIcon;
  }
});

// node_modules/@heroicons/react/solid/SearchCircleIcon.js
var require_SearchCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SearchCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SearchCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9 9a2 2 0 114 0 2 2 0 01-4 0z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a4 4 0 00-3.446 6.032l-2.261 2.26a1 1 0 101.414 1.415l2.261-2.261A4 4 0 1011 5z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = SearchCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/SearchIcon.js
var require_SearchIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SearchIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SearchIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = SearchIcon;
  }
});

// node_modules/@heroicons/react/solid/SelectorIcon.js
var require_SelectorIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SelectorIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SelectorIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = SelectorIcon;
  }
});

// node_modules/@heroicons/react/solid/ServerIcon.js
var require_ServerIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ServerIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ServerIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 5a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm14 1a1 1 0 11-2 0 1 1 0 012 0zM2 13a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2zm14 1a1 1 0 11-2 0 1 1 0 012 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ServerIcon;
  }
});

// node_modules/@heroicons/react/solid/ShareIcon.js
var require_ShareIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ShareIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShareIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z"
      }));
    }
    module2.exports = ShareIcon;
  }
});

// node_modules/@heroicons/react/solid/ShieldCheckIcon.js
var require_ShieldCheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ShieldCheckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShieldCheckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ShieldCheckIcon;
  }
});

// node_modules/@heroicons/react/solid/ShieldExclamationIcon.js
var require_ShieldExclamationIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ShieldExclamationIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShieldExclamationIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ShieldExclamationIcon;
  }
});

// node_modules/@heroicons/react/solid/ShoppingBagIcon.js
var require_ShoppingBagIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ShoppingBagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShoppingBagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ShoppingBagIcon;
  }
});

// node_modules/@heroicons/react/solid/ShoppingCartIcon.js
var require_ShoppingCartIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ShoppingCartIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ShoppingCartIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
      }));
    }
    module2.exports = ShoppingCartIcon;
  }
});

// node_modules/@heroicons/react/solid/SortAscendingIcon.js
var require_SortAscendingIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SortAscendingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SortAscendingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h5a1 1 0 000-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM13 16a1 1 0 102 0v-5.586l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 101.414 1.414L13 10.414V16z"
      }));
    }
    module2.exports = SortAscendingIcon;
  }
});

// node_modules/@heroicons/react/solid/SortDescendingIcon.js
var require_SortDescendingIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SortDescendingIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SortDescendingIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M3 3a1 1 0 000 2h11a1 1 0 100-2H3zM3 7a1 1 0 000 2h7a1 1 0 100-2H3zM3 11a1 1 0 100 2h4a1 1 0 100-2H3zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z"
      }));
    }
    module2.exports = SortDescendingIcon;
  }
});

// node_modules/@heroicons/react/solid/SparklesIcon.js
var require_SparklesIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SparklesIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SparklesIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = SparklesIcon;
  }
});

// node_modules/@heroicons/react/solid/SpeakerphoneIcon.js
var require_SpeakerphoneIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SpeakerphoneIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SpeakerphoneIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 3a1 1 0 00-1.447-.894L8.763 6H5a3 3 0 000 6h.28l1.771 5.316A1 1 0 008 18h1a1 1 0 001-1v-4.382l6.553 3.276A1 1 0 0018 15V3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = SpeakerphoneIcon;
  }
});

// node_modules/@heroicons/react/solid/StarIcon.js
var require_StarIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/StarIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StarIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
      }));
    }
    module2.exports = StarIcon;
  }
});

// node_modules/@heroicons/react/solid/StatusOfflineIcon.js
var require_StatusOfflineIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/StatusOfflineIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StatusOfflineIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M3.707 2.293a1 1 0 00-1.414 1.414l6.921 6.922c.05.062.105.118.168.167l6.91 6.911a1 1 0 001.415-1.414l-.675-.675a9.001 9.001 0 00-.668-11.982A1 1 0 1014.95 5.05a7.002 7.002 0 01.657 9.143l-1.435-1.435a5.002 5.002 0 00-.636-6.294A1 1 0 0012.12 7.88c.924.923 1.12 2.3.587 3.415l-1.992-1.992a.922.922 0 00-.018-.018l-6.99-6.991zM3.238 8.187a1 1 0 00-1.933-.516c-.8 3-.025 6.336 2.331 8.693a1 1 0 001.414-1.415 6.997 6.997 0 01-1.812-6.762zM7.4 11.5a1 1 0 10-1.73 1c.214.371.48.72.795 1.035a1 1 0 001.414-1.414c-.191-.191-.35-.4-.478-.622z"
      }));
    }
    module2.exports = StatusOfflineIcon;
  }
});

// node_modules/@heroicons/react/solid/StatusOnlineIcon.js
var require_StatusOnlineIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/StatusOnlineIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StatusOnlineIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414zM7.879 6.464a1 1 0 010 1.414 3 3 0 000 4.243 1 1 0 11-1.415 1.414 5 5 0 010-7.07 1 1 0 011.415 0zm4.242 0a1 1 0 011.415 0 5 5 0 010 7.072 1 1 0 01-1.415-1.415 3 3 0 000-4.242 1 1 0 010-1.415zM10 9a1 1 0 011 1v.01a1 1 0 11-2 0V10a1 1 0 011-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = StatusOnlineIcon;
  }
});

// node_modules/@heroicons/react/solid/StopIcon.js
var require_StopIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/StopIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function StopIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1V8a1 1 0 00-1-1H8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = StopIcon;
  }
});

// node_modules/@heroicons/react/solid/SunIcon.js
var require_SunIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SunIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SunIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = SunIcon;
  }
});

// node_modules/@heroicons/react/solid/SupportIcon.js
var require_SupportIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SupportIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SupportIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0c0 .993-.241 1.929-.668 2.754l-1.524-1.525a3.997 3.997 0 00.078-2.183l1.562-1.562C15.802 8.249 16 9.1 16 10zm-5.165 3.913l1.58 1.58A5.98 5.98 0 0110 16a5.976 5.976 0 01-2.516-.552l1.562-1.562a4.006 4.006 0 001.789.027zm-4.677-2.796a4.002 4.002 0 01-.041-2.08l-.08.08-1.53-1.533A5.98 5.98 0 004 10c0 .954.223 1.856.619 2.657l1.54-1.54zm1.088-6.45A5.974 5.974 0 0110 4c.954 0 1.856.223 2.657.619l-1.54 1.54a4.002 4.002 0 00-2.346.033L7.246 4.668zM12 10a2 2 0 11-4 0 2 2 0 014 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = SupportIcon;
  }
});

// node_modules/@heroicons/react/solid/SwitchHorizontalIcon.js
var require_SwitchHorizontalIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SwitchHorizontalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SwitchHorizontalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z"
      }));
    }
    module2.exports = SwitchHorizontalIcon;
  }
});

// node_modules/@heroicons/react/solid/SwitchVerticalIcon.js
var require_SwitchVerticalIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/SwitchVerticalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function SwitchVerticalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5 12a1 1 0 102 0V6.414l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L5 6.414V12zM15 8a1 1 0 10-2 0v5.586l-1.293-1.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L15 13.586V8z"
      }));
    }
    module2.exports = SwitchVerticalIcon;
  }
});

// node_modules/@heroicons/react/solid/TableIcon.js
var require_TableIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TableIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TableIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = TableIcon;
  }
});

// node_modules/@heroicons/react/solid/TagIcon.js
var require_TagIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TagIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TagIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = TagIcon;
  }
});

// node_modules/@heroicons/react/solid/TemplateIcon.js
var require_TemplateIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TemplateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TemplateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"
      }));
    }
    module2.exports = TemplateIcon;
  }
});

// node_modules/@heroicons/react/solid/TerminalIcon.js
var require_TerminalIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TerminalIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TerminalIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = TerminalIcon;
  }
});

// node_modules/@heroicons/react/solid/ThumbDownIcon.js
var require_ThumbDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ThumbDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ThumbDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M18 9.5a1.5 1.5 0 11-3 0v-6a1.5 1.5 0 013 0v6zM14 9.667v-5.43a2 2 0 00-1.105-1.79l-.05-.025A4 4 0 0011.055 2H5.64a2 2 0 00-1.962 1.608l-1.2 6A2 2 0 004.44 12H8v4a2 2 0 002 2 1 1 0 001-1v-.667a4 4 0 01.8-2.4l1.4-1.866a4 4 0 00.8-2.4z"
      }));
    }
    module2.exports = ThumbDownIcon;
  }
});

// node_modules/@heroicons/react/solid/ThumbUpIcon.js
var require_ThumbUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ThumbUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ThumbUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"
      }));
    }
    module2.exports = ThumbUpIcon;
  }
});

// node_modules/@heroicons/react/solid/TicketIcon.js
var require_TicketIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TicketIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TicketIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 6a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 100 4v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2a2 2 0 100-4V6z"
      }));
    }
    module2.exports = TicketIcon;
  }
});

// node_modules/@heroicons/react/solid/TranslateIcon.js
var require_TranslateIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TranslateIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TranslateIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = TranslateIcon;
  }
});

// node_modules/@heroicons/react/solid/TrashIcon.js
var require_TrashIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TrashIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TrashIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = TrashIcon;
  }
});

// node_modules/@heroicons/react/solid/TrendingDownIcon.js
var require_TrendingDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TrendingDownIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TrendingDownIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12 13a1 1 0 100 2h5a1 1 0 001-1V9a1 1 0 10-2 0v2.586l-4.293-4.293a1 1 0 00-1.414 0L8 9.586 3.707 5.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0L11 9.414 14.586 13H12z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = TrendingDownIcon;
  }
});

// node_modules/@heroicons/react/solid/TrendingUpIcon.js
var require_TrendingUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TrendingUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TrendingUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = TrendingUpIcon;
  }
});

// node_modules/@heroicons/react/solid/TruckIcon.js
var require_TruckIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/TruckIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function TruckIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"
      }), /* @__PURE__ */ React.createElement("path", {
        d: "M3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H10a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 00-1 1v6.05A2.5 2.5 0 0115.95 16H17a1 1 0 001-1v-5a1 1 0 00-.293-.707l-2-2A1 1 0 0015 7h-1z"
      }));
    }
    module2.exports = TruckIcon;
  }
});

// node_modules/@heroicons/react/solid/UploadIcon.js
var require_UploadIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/UploadIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UploadIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = UploadIcon;
  }
});

// node_modules/@heroicons/react/solid/UserAddIcon.js
var require_UserAddIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/UserAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z"
      }));
    }
    module2.exports = UserAddIcon;
  }
});

// node_modules/@heroicons/react/solid/UserCircleIcon.js
var require_UserCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/UserCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = UserCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/UserGroupIcon.js
var require_UserGroupIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/UserGroupIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserGroupIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z"
      }));
    }
    module2.exports = UserGroupIcon;
  }
});

// node_modules/@heroicons/react/solid/UserRemoveIcon.js
var require_UserRemoveIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/UserRemoveIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserRemoveIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M11 6a3 3 0 11-6 0 3 3 0 016 0zM14 17a6 6 0 00-12 0h12zM13 8a1 1 0 100 2h4a1 1 0 100-2h-4z"
      }));
    }
    module2.exports = UserRemoveIcon;
  }
});

// node_modules/@heroicons/react/solid/UserIcon.js
var require_UserIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/UserIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UserIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = UserIcon;
  }
});

// node_modules/@heroicons/react/solid/UsersIcon.js
var require_UsersIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/UsersIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function UsersIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"
      }));
    }
    module2.exports = UsersIcon;
  }
});

// node_modules/@heroicons/react/solid/VariableIcon.js
var require_VariableIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/VariableIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VariableIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.649 3.084A1 1 0 015.163 4.4 13.95 13.95 0 004 10c0 1.993.416 3.886 1.164 5.6a1 1 0 01-1.832.8A15.95 15.95 0 012 10c0-2.274.475-4.44 1.332-6.4a1 1 0 011.317-.516zM12.96 7a3 3 0 00-2.342 1.126l-.328.41-.111-.279A2 2 0 008.323 7H8a1 1 0 000 2h.323l.532 1.33-1.035 1.295a1 1 0 01-.781.375H7a1 1 0 100 2h.039a3 3 0 002.342-1.126l.328-.41.111.279A2 2 0 0011.677 14H12a1 1 0 100-2h-.323l-.532-1.33 1.035-1.295A1 1 0 0112.961 9H13a1 1 0 100-2h-.039zm1.874-2.6a1 1 0 011.833-.8A15.95 15.95 0 0118 10c0 2.274-.475 4.44-1.332 6.4a1 1 0 11-1.832-.8A13.949 13.949 0 0016 10c0-1.993-.416-3.886-1.165-5.6z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = VariableIcon;
  }
});

// node_modules/@heroicons/react/solid/VideoCameraIcon.js
var require_VideoCameraIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/VideoCameraIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VideoCameraIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 6a2 2 0 012-2h6a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z"
      }));
    }
    module2.exports = VideoCameraIcon;
  }
});

// node_modules/@heroicons/react/solid/ViewBoardsIcon.js
var require_ViewBoardsIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ViewBoardsIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewBoardsIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M2 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V4zM8 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H9a1 1 0 01-1-1V4zM15 3a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1h-2z"
      }));
    }
    module2.exports = ViewBoardsIcon;
  }
});

// node_modules/@heroicons/react/solid/ViewGridAddIcon.js
var require_ViewGridAddIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ViewGridAddIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewGridAddIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM14 11a1 1 0 011 1v1h1a1 1 0 110 2h-1v1a1 1 0 11-2 0v-1h-1a1 1 0 110-2h1v-1a1 1 0 011-1z"
      }));
    }
    module2.exports = ViewGridAddIcon;
  }
});

// node_modules/@heroicons/react/solid/ViewGridIcon.js
var require_ViewGridIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ViewGridIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewGridIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"
      }));
    }
    module2.exports = ViewGridIcon;
  }
});

// node_modules/@heroicons/react/solid/ViewListIcon.js
var require_ViewListIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ViewListIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ViewListIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ViewListIcon;
  }
});

// node_modules/@heroicons/react/solid/VolumeOffIcon.js
var require_VolumeOffIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/VolumeOffIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VolumeOffIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM12.293 7.293a1 1 0 011.414 0L15 8.586l1.293-1.293a1 1 0 111.414 1.414L16.414 10l1.293 1.293a1 1 0 01-1.414 1.414L15 11.414l-1.293 1.293a1 1 0 01-1.414-1.414L13.586 10l-1.293-1.293a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = VolumeOffIcon;
  }
});

// node_modules/@heroicons/react/solid/VolumeUpIcon.js
var require_VolumeUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/VolumeUpIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function VolumeUpIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM14.657 2.929a1 1 0 011.414 0A9.972 9.972 0 0119 10a9.972 9.972 0 01-2.929 7.071 1 1 0 01-1.414-1.414A7.971 7.971 0 0017 10c0-2.21-.894-4.208-2.343-5.657a1 1 0 010-1.414zm-2.829 2.828a1 1 0 011.415 0A5.983 5.983 0 0115 10a5.984 5.984 0 01-1.757 4.243 1 1 0 01-1.415-1.415A3.984 3.984 0 0013 10a3.983 3.983 0 00-1.172-2.828 1 1 0 010-1.415z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = VolumeUpIcon;
  }
});

// node_modules/@heroicons/react/solid/WifiIcon.js
var require_WifiIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/WifiIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function WifiIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = WifiIcon;
  }
});

// node_modules/@heroicons/react/solid/XCircleIcon.js
var require_XCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/XCircleIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function XCircleIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = XCircleIcon;
  }
});

// node_modules/@heroicons/react/solid/XIcon.js
var require_XIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/XIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function XIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = XIcon;
  }
});

// node_modules/@heroicons/react/solid/ZoomInIcon.js
var require_ZoomInIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ZoomInIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ZoomInIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        d: "M5 8a1 1 0 011-1h1V6a1 1 0 012 0v1h1a1 1 0 110 2H9v1a1 1 0 11-2 0V9H6a1 1 0 01-1-1z"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8zm6-4a4 4 0 100 8 4 4 0 000-8z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ZoomInIcon;
  }
});

// node_modules/@heroicons/react/solid/ZoomOutIcon.js
var require_ZoomOutIcon2 = __commonJS({
  "node_modules/@heroicons/react/solid/ZoomOutIcon.js"(exports2, module2) {
    init_define_process();
    var React = require_react();
    function ZoomOutIcon(props) {
      return /* @__PURE__ */ React.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true"
      }, props), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z",
        clipRule: "evenodd"
      }), /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M5 8a1 1 0 011-1h4a1 1 0 110 2H6a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    module2.exports = ZoomOutIcon;
  }
});

// node_modules/@heroicons/react/solid/index.js
var require_solid = __commonJS({
  "node_modules/@heroicons/react/solid/index.js"(exports2, module2) {
    init_define_process();
    module2.exports.AcademicCapIcon = require_AcademicCapIcon2();
    module2.exports.AdjustmentsIcon = require_AdjustmentsIcon2();
    module2.exports.AnnotationIcon = require_AnnotationIcon2();
    module2.exports.ArchiveIcon = require_ArchiveIcon2();
    module2.exports.ArrowCircleDownIcon = require_ArrowCircleDownIcon2();
    module2.exports.ArrowCircleLeftIcon = require_ArrowCircleLeftIcon2();
    module2.exports.ArrowCircleRightIcon = require_ArrowCircleRightIcon2();
    module2.exports.ArrowCircleUpIcon = require_ArrowCircleUpIcon2();
    module2.exports.ArrowDownIcon = require_ArrowDownIcon2();
    module2.exports.ArrowLeftIcon = require_ArrowLeftIcon2();
    module2.exports.ArrowNarrowDownIcon = require_ArrowNarrowDownIcon2();
    module2.exports.ArrowNarrowLeftIcon = require_ArrowNarrowLeftIcon2();
    module2.exports.ArrowNarrowRightIcon = require_ArrowNarrowRightIcon2();
    module2.exports.ArrowNarrowUpIcon = require_ArrowNarrowUpIcon2();
    module2.exports.ArrowRightIcon = require_ArrowRightIcon2();
    module2.exports.ArrowSmDownIcon = require_ArrowSmDownIcon2();
    module2.exports.ArrowSmLeftIcon = require_ArrowSmLeftIcon2();
    module2.exports.ArrowSmRightIcon = require_ArrowSmRightIcon2();
    module2.exports.ArrowSmUpIcon = require_ArrowSmUpIcon2();
    module2.exports.ArrowUpIcon = require_ArrowUpIcon2();
    module2.exports.ArrowsExpandIcon = require_ArrowsExpandIcon2();
    module2.exports.AtSymbolIcon = require_AtSymbolIcon2();
    module2.exports.BackspaceIcon = require_BackspaceIcon2();
    module2.exports.BadgeCheckIcon = require_BadgeCheckIcon2();
    module2.exports.BanIcon = require_BanIcon2();
    module2.exports.BeakerIcon = require_BeakerIcon2();
    module2.exports.BellIcon = require_BellIcon2();
    module2.exports.BookOpenIcon = require_BookOpenIcon2();
    module2.exports.BookmarkAltIcon = require_BookmarkAltIcon2();
    module2.exports.BookmarkIcon = require_BookmarkIcon2();
    module2.exports.BriefcaseIcon = require_BriefcaseIcon2();
    module2.exports.CakeIcon = require_CakeIcon2();
    module2.exports.CalculatorIcon = require_CalculatorIcon2();
    module2.exports.CalendarIcon = require_CalendarIcon2();
    module2.exports.CameraIcon = require_CameraIcon2();
    module2.exports.CashIcon = require_CashIcon2();
    module2.exports.ChartBarIcon = require_ChartBarIcon2();
    module2.exports.ChartPieIcon = require_ChartPieIcon2();
    module2.exports.ChartSquareBarIcon = require_ChartSquareBarIcon2();
    module2.exports.ChatAlt2Icon = require_ChatAlt2Icon2();
    module2.exports.ChatAltIcon = require_ChatAltIcon2();
    module2.exports.ChatIcon = require_ChatIcon2();
    module2.exports.CheckCircleIcon = require_CheckCircleIcon2();
    module2.exports.CheckIcon = require_CheckIcon2();
    module2.exports.ChevronDoubleDownIcon = require_ChevronDoubleDownIcon2();
    module2.exports.ChevronDoubleLeftIcon = require_ChevronDoubleLeftIcon2();
    module2.exports.ChevronDoubleRightIcon = require_ChevronDoubleRightIcon2();
    module2.exports.ChevronDoubleUpIcon = require_ChevronDoubleUpIcon2();
    module2.exports.ChevronDownIcon = require_ChevronDownIcon2();
    module2.exports.ChevronLeftIcon = require_ChevronLeftIcon2();
    module2.exports.ChevronRightIcon = require_ChevronRightIcon2();
    module2.exports.ChevronUpIcon = require_ChevronUpIcon2();
    module2.exports.ChipIcon = require_ChipIcon2();
    module2.exports.ClipboardCheckIcon = require_ClipboardCheckIcon2();
    module2.exports.ClipboardCopyIcon = require_ClipboardCopyIcon2();
    module2.exports.ClipboardListIcon = require_ClipboardListIcon2();
    module2.exports.ClipboardIcon = require_ClipboardIcon2();
    module2.exports.ClockIcon = require_ClockIcon2();
    module2.exports.CloudDownloadIcon = require_CloudDownloadIcon2();
    module2.exports.CloudUploadIcon = require_CloudUploadIcon2();
    module2.exports.CloudIcon = require_CloudIcon2();
    module2.exports.CodeIcon = require_CodeIcon2();
    module2.exports.CogIcon = require_CogIcon2();
    module2.exports.CollectionIcon = require_CollectionIcon2();
    module2.exports.ColorSwatchIcon = require_ColorSwatchIcon2();
    module2.exports.CreditCardIcon = require_CreditCardIcon2();
    module2.exports.CubeTransparentIcon = require_CubeTransparentIcon2();
    module2.exports.CubeIcon = require_CubeIcon2();
    module2.exports.CurrencyBangladeshiIcon = require_CurrencyBangladeshiIcon2();
    module2.exports.CurrencyDollarIcon = require_CurrencyDollarIcon2();
    module2.exports.CurrencyEuroIcon = require_CurrencyEuroIcon2();
    module2.exports.CurrencyPoundIcon = require_CurrencyPoundIcon2();
    module2.exports.CurrencyRupeeIcon = require_CurrencyRupeeIcon2();
    module2.exports.CurrencyYenIcon = require_CurrencyYenIcon2();
    module2.exports.CursorClickIcon = require_CursorClickIcon2();
    module2.exports.DatabaseIcon = require_DatabaseIcon2();
    module2.exports.DesktopComputerIcon = require_DesktopComputerIcon2();
    module2.exports.DeviceMobileIcon = require_DeviceMobileIcon2();
    module2.exports.DeviceTabletIcon = require_DeviceTabletIcon2();
    module2.exports.DocumentAddIcon = require_DocumentAddIcon2();
    module2.exports.DocumentDownloadIcon = require_DocumentDownloadIcon2();
    module2.exports.DocumentDuplicateIcon = require_DocumentDuplicateIcon2();
    module2.exports.DocumentRemoveIcon = require_DocumentRemoveIcon2();
    module2.exports.DocumentReportIcon = require_DocumentReportIcon2();
    module2.exports.DocumentSearchIcon = require_DocumentSearchIcon2();
    module2.exports.DocumentTextIcon = require_DocumentTextIcon2();
    module2.exports.DocumentIcon = require_DocumentIcon2();
    module2.exports.DotsCircleHorizontalIcon = require_DotsCircleHorizontalIcon2();
    module2.exports.DotsHorizontalIcon = require_DotsHorizontalIcon2();
    module2.exports.DotsVerticalIcon = require_DotsVerticalIcon2();
    module2.exports.DownloadIcon = require_DownloadIcon2();
    module2.exports.DuplicateIcon = require_DuplicateIcon2();
    module2.exports.EmojiHappyIcon = require_EmojiHappyIcon2();
    module2.exports.EmojiSadIcon = require_EmojiSadIcon2();
    module2.exports.ExclamationCircleIcon = require_ExclamationCircleIcon2();
    module2.exports.ExclamationIcon = require_ExclamationIcon2();
    module2.exports.ExternalLinkIcon = require_ExternalLinkIcon2();
    module2.exports.EyeOffIcon = require_EyeOffIcon2();
    module2.exports.EyeIcon = require_EyeIcon2();
    module2.exports.FastForwardIcon = require_FastForwardIcon2();
    module2.exports.FilmIcon = require_FilmIcon2();
    module2.exports.FilterIcon = require_FilterIcon2();
    module2.exports.FingerPrintIcon = require_FingerPrintIcon2();
    module2.exports.FireIcon = require_FireIcon2();
    module2.exports.FlagIcon = require_FlagIcon2();
    module2.exports.FolderAddIcon = require_FolderAddIcon2();
    module2.exports.FolderDownloadIcon = require_FolderDownloadIcon2();
    module2.exports.FolderOpenIcon = require_FolderOpenIcon2();
    module2.exports.FolderRemoveIcon = require_FolderRemoveIcon2();
    module2.exports.FolderIcon = require_FolderIcon2();
    module2.exports.GiftIcon = require_GiftIcon2();
    module2.exports.GlobeAltIcon = require_GlobeAltIcon2();
    module2.exports.GlobeIcon = require_GlobeIcon2();
    module2.exports.HandIcon = require_HandIcon2();
    module2.exports.HashtagIcon = require_HashtagIcon2();
    module2.exports.HeartIcon = require_HeartIcon2();
    module2.exports.HomeIcon = require_HomeIcon2();
    module2.exports.IdentificationIcon = require_IdentificationIcon2();
    module2.exports.InboxInIcon = require_InboxInIcon2();
    module2.exports.InboxIcon = require_InboxIcon2();
    module2.exports.InformationCircleIcon = require_InformationCircleIcon2();
    module2.exports.KeyIcon = require_KeyIcon2();
    module2.exports.LibraryIcon = require_LibraryIcon2();
    module2.exports.LightBulbIcon = require_LightBulbIcon2();
    module2.exports.LightningBoltIcon = require_LightningBoltIcon2();
    module2.exports.LinkIcon = require_LinkIcon2();
    module2.exports.LocationMarkerIcon = require_LocationMarkerIcon2();
    module2.exports.LockClosedIcon = require_LockClosedIcon2();
    module2.exports.LockOpenIcon = require_LockOpenIcon2();
    module2.exports.LoginIcon = require_LoginIcon2();
    module2.exports.LogoutIcon = require_LogoutIcon2();
    module2.exports.MailOpenIcon = require_MailOpenIcon2();
    module2.exports.MailIcon = require_MailIcon2();
    module2.exports.MapIcon = require_MapIcon2();
    module2.exports.MenuAlt1Icon = require_MenuAlt1Icon2();
    module2.exports.MenuAlt2Icon = require_MenuAlt2Icon2();
    module2.exports.MenuAlt3Icon = require_MenuAlt3Icon2();
    module2.exports.MenuAlt4Icon = require_MenuAlt4Icon2();
    module2.exports.MenuIcon = require_MenuIcon2();
    module2.exports.MicrophoneIcon = require_MicrophoneIcon2();
    module2.exports.MinusCircleIcon = require_MinusCircleIcon2();
    module2.exports.MinusSmIcon = require_MinusSmIcon2();
    module2.exports.MinusIcon = require_MinusIcon2();
    module2.exports.MoonIcon = require_MoonIcon2();
    module2.exports.MusicNoteIcon = require_MusicNoteIcon2();
    module2.exports.NewspaperIcon = require_NewspaperIcon2();
    module2.exports.OfficeBuildingIcon = require_OfficeBuildingIcon2();
    module2.exports.PaperAirplaneIcon = require_PaperAirplaneIcon2();
    module2.exports.PaperClipIcon = require_PaperClipIcon2();
    module2.exports.PauseIcon = require_PauseIcon2();
    module2.exports.PencilAltIcon = require_PencilAltIcon2();
    module2.exports.PencilIcon = require_PencilIcon2();
    module2.exports.PhoneIncomingIcon = require_PhoneIncomingIcon2();
    module2.exports.PhoneMissedCallIcon = require_PhoneMissedCallIcon2();
    module2.exports.PhoneOutgoingIcon = require_PhoneOutgoingIcon2();
    module2.exports.PhoneIcon = require_PhoneIcon2();
    module2.exports.PhotographIcon = require_PhotographIcon2();
    module2.exports.PlayIcon = require_PlayIcon2();
    module2.exports.PlusCircleIcon = require_PlusCircleIcon2();
    module2.exports.PlusSmIcon = require_PlusSmIcon2();
    module2.exports.PlusIcon = require_PlusIcon2();
    module2.exports.PresentationChartBarIcon = require_PresentationChartBarIcon2();
    module2.exports.PresentationChartLineIcon = require_PresentationChartLineIcon2();
    module2.exports.PrinterIcon = require_PrinterIcon2();
    module2.exports.PuzzleIcon = require_PuzzleIcon2();
    module2.exports.QrcodeIcon = require_QrcodeIcon2();
    module2.exports.QuestionMarkCircleIcon = require_QuestionMarkCircleIcon2();
    module2.exports.ReceiptRefundIcon = require_ReceiptRefundIcon2();
    module2.exports.ReceiptTaxIcon = require_ReceiptTaxIcon2();
    module2.exports.RefreshIcon = require_RefreshIcon2();
    module2.exports.ReplyIcon = require_ReplyIcon2();
    module2.exports.RewindIcon = require_RewindIcon2();
    module2.exports.RssIcon = require_RssIcon2();
    module2.exports.SaveAsIcon = require_SaveAsIcon2();
    module2.exports.SaveIcon = require_SaveIcon2();
    module2.exports.ScaleIcon = require_ScaleIcon2();
    module2.exports.ScissorsIcon = require_ScissorsIcon2();
    module2.exports.SearchCircleIcon = require_SearchCircleIcon2();
    module2.exports.SearchIcon = require_SearchIcon2();
    module2.exports.SelectorIcon = require_SelectorIcon2();
    module2.exports.ServerIcon = require_ServerIcon2();
    module2.exports.ShareIcon = require_ShareIcon2();
    module2.exports.ShieldCheckIcon = require_ShieldCheckIcon2();
    module2.exports.ShieldExclamationIcon = require_ShieldExclamationIcon2();
    module2.exports.ShoppingBagIcon = require_ShoppingBagIcon2();
    module2.exports.ShoppingCartIcon = require_ShoppingCartIcon2();
    module2.exports.SortAscendingIcon = require_SortAscendingIcon2();
    module2.exports.SortDescendingIcon = require_SortDescendingIcon2();
    module2.exports.SparklesIcon = require_SparklesIcon2();
    module2.exports.SpeakerphoneIcon = require_SpeakerphoneIcon2();
    module2.exports.StarIcon = require_StarIcon2();
    module2.exports.StatusOfflineIcon = require_StatusOfflineIcon2();
    module2.exports.StatusOnlineIcon = require_StatusOnlineIcon2();
    module2.exports.StopIcon = require_StopIcon2();
    module2.exports.SunIcon = require_SunIcon2();
    module2.exports.SupportIcon = require_SupportIcon2();
    module2.exports.SwitchHorizontalIcon = require_SwitchHorizontalIcon2();
    module2.exports.SwitchVerticalIcon = require_SwitchVerticalIcon2();
    module2.exports.TableIcon = require_TableIcon2();
    module2.exports.TagIcon = require_TagIcon2();
    module2.exports.TemplateIcon = require_TemplateIcon2();
    module2.exports.TerminalIcon = require_TerminalIcon2();
    module2.exports.ThumbDownIcon = require_ThumbDownIcon2();
    module2.exports.ThumbUpIcon = require_ThumbUpIcon2();
    module2.exports.TicketIcon = require_TicketIcon2();
    module2.exports.TranslateIcon = require_TranslateIcon2();
    module2.exports.TrashIcon = require_TrashIcon2();
    module2.exports.TrendingDownIcon = require_TrendingDownIcon2();
    module2.exports.TrendingUpIcon = require_TrendingUpIcon2();
    module2.exports.TruckIcon = require_TruckIcon2();
    module2.exports.UploadIcon = require_UploadIcon2();
    module2.exports.UserAddIcon = require_UserAddIcon2();
    module2.exports.UserCircleIcon = require_UserCircleIcon2();
    module2.exports.UserGroupIcon = require_UserGroupIcon2();
    module2.exports.UserRemoveIcon = require_UserRemoveIcon2();
    module2.exports.UserIcon = require_UserIcon2();
    module2.exports.UsersIcon = require_UsersIcon2();
    module2.exports.VariableIcon = require_VariableIcon2();
    module2.exports.VideoCameraIcon = require_VideoCameraIcon2();
    module2.exports.ViewBoardsIcon = require_ViewBoardsIcon2();
    module2.exports.ViewGridAddIcon = require_ViewGridAddIcon2();
    module2.exports.ViewGridIcon = require_ViewGridIcon2();
    module2.exports.ViewListIcon = require_ViewListIcon2();
    module2.exports.VolumeOffIcon = require_VolumeOffIcon2();
    module2.exports.VolumeUpIcon = require_VolumeUpIcon2();
    module2.exports.WifiIcon = require_WifiIcon2();
    module2.exports.XCircleIcon = require_XCircleIcon2();
    module2.exports.XIcon = require_XIcon2();
    module2.exports.ZoomInIcon = require_ZoomInIcon2();
    module2.exports.ZoomOutIcon = require_ZoomOutIcon2();
  }
});

// node_modules/tiny-invariant/dist/tiny-invariant.cjs.js
var require_tiny_invariant_cjs = __commonJS({
  "node_modules/tiny-invariant/dist/tiny-invariant.cjs.js"(exports2, module2) {
    init_define_process();
    "use strict";
    var isProduction = define_process_default.env.NODE_ENV === "production";
    var prefix = "Invariant failed";
    function invariant(condition, message) {
      if (condition) {
        return;
      }
      if (isProduction) {
        throw new Error(prefix);
      }
      var provided = typeof message === "function" ? message() : message;
      var value = provided ? prefix + ": " + provided : prefix;
      throw new Error(value);
    }
    module2.exports = invariant;
  }
});

// node_modules/@prisma/client/runtime/proxy.js
var require_proxy = __commonJS({
  "node_modules/@prisma/client/runtime/proxy.js"(exports, module) {
    init_define_process();
    var On = Object.defineProperty;
    var ru = (e2) => On(e2, "__esModule", { value: true });
    var y = (e2, t) => On(e2, "name", { value: t, configurable: true });
    var nu = (e2, t) => {
      ru(e2);
      for (var r in t)
        On(e2, r, { get: t[r], enumerable: true });
    };
    nu(exports, { DMMF: () => Un, DMMFClass: () => Ln, Decimal: () => Dr, Engine: () => Gr, PrismaClientInitializationError: () => Xt, PrismaClientKnownRequestError: () => wr, PrismaClientRustPanicError: () => er, PrismaClientUnknownRequestError: () => tr, PrismaClientValidationError: () => ir, Sql: () => rf, decompressFromBase64: () => tf, empty: () => nf, findSync: () => of, getPrismaClient: () => eu, join: () => af, makeDocument: () => qi, raw: () => sf, sqltag: () => uf, transformDocument: () => Li, unpack: () => Gi, warnEnvConflicts: () => lf });
    var to = {};
    var ou = Object.create;
    var lr = Object.defineProperty;
    var au = Object.getOwnPropertyDescriptor;
    var su = Object.getOwnPropertyNames;
    var uu = Object.getPrototypeOf;
    var lu = Object.prototype.hasOwnProperty;
    var ro = y((e2) => lr(e2, "__esModule", { value: true }), "qi");
    var d = y((e2, t) => lr(e2, "name", { value: t, configurable: true }), "u");
    var cr = y((e2, t) => () => (e2 && (t = e2(e2 = 0)), t), "or");
    var ve = y((e2, t) => () => (t || e2((t = { exports: {} }).exports, t), t.exports), "W");
    var no = y((e2, t) => {
      ro(e2);
      for (var r in t)
        lr(e2, r, { get: t[r], enumerable: true });
    }, "Ui");
    var cu = y((e2, t, r) => {
      if (t && typeof t == "object" || typeof t == "function")
        for (let n of su(t))
          !lu.call(e2, n) && n !== "default" && lr(e2, n, { get: () => t[n], enumerable: !(r = au(t, n)) || r.enumerable });
      return e2;
    }, "ql");
    var Ae = y((e2) => cu(ro(lr(e2 != null ? ou(uu(e2)) : {}, "default", e2 && e2.__esModule && "default" in e2 ? { get: () => e2.default, enumerable: true } : { value: e2, enumerable: true })), e2), "Z");
    var fr;
    var j = cr(() => {
      fr = {};
    });
    var ct;
    var k = cr(() => {
      ct = {};
    });
    function ue(e2) {
      return () => e2;
    }
    y(ue, "q");
    function ze() {
      return we;
    }
    y(ze, "Oe");
    var io;
    var we;
    var I = cr(() => {
      d(ue, "noop"), io = Promise.resolve(), d(ze, "getProcess"), we = { abort: ue(void 0), addListener: ue(ze()), allowedNodeEnvironmentFlags: new Set(), arch: "x64", argv: ["/bin/node"], argv0: "node", chdir: ue(void 0), config: { target_defaults: { cflags: [], default_configuration: "", defines: [], include_dirs: [], libraries: [] }, variables: { clang: 0, host_arch: "x64", node_install_npm: false, node_install_waf: false, node_prefix: "", node_shared_openssl: false, node_shared_v8: false, node_shared_zlib: false, node_use_dtrace: false, node_use_etw: false, node_use_openssl: false, target_arch: "x64", v8_no_strict_aliasing: 0, v8_use_snapshot: false, visibility: "" } }, connected: false, cpuUsage: () => ({ user: 0, system: 0 }), cwd: () => "/", debugPort: 0, disconnect: ue(void 0), domain: { run: ue(void 0), add: ue(void 0), remove: ue(void 0), bind: ue(void 0), intercept: ue(void 0), ...ze() }, emit: ue(ze()), emitWarning: ue(void 0), env: {}, eventNames: () => [], execArgv: [], execPath: "/", exit: ue(void 0), features: { inspector: false, debug: false, uv: false, ipv6: false, tls_alpn: false, tls_sni: false, tls_ocsp: false, tls: false }, getMaxListeners: ue(0), getegid: ue(0), geteuid: ue(0), getgid: ue(0), getgroups: ue([]), getuid: ue(0), hasUncaughtExceptionCaptureCallback: ue(false), hrtime: ue([0, 0]), platform: "linux", kill: ue(true), listenerCount: ue(0), listeners: ue([]), memoryUsage: ue({ arrayBuffers: 0, external: 0, heapTotal: 0, heapUsed: 0, rss: 0 }), nextTick: (e2, ...t) => {
        io.then(() => e2(...t)).catch((r) => {
          setTimeout(() => {
            throw r;
          }, 0);
        });
      }, off: ue(ze()), on: ue(ze()), once: ue(ze()), openStdin: ue({}), pid: 0, ppid: 0, prependListener: ue(ze()), prependOnceListener: ue(ze()), rawListeners: ue([]), release: { name: "node" }, removeAllListeners: ue(ze()), removeListener: ue(ze()), resourceUsage: ue({ fsRead: 0, fsWrite: 0, involuntaryContextSwitches: 0, ipcReceived: 0, ipcSent: 0, majorPageFault: 0, maxRSS: 0, minorPageFault: 0, sharedMemorySize: 0, signalsCount: 0, swappedOut: 0, systemCPUTime: 0, unsharedDataSize: 0, unsharedStackSize: 0, userCPUTime: 0, voluntaryContextSwitches: 0 }), setMaxListeners: ue(ze()), setUncaughtExceptionCaptureCallback: ue(void 0), setegid: ue(void 0), seteuid: ue(void 0), setgid: ue(void 0), setgroups: ue(void 0), setuid: ue(void 0), stderr: { fd: 2 }, stdin: { fd: 0 }, stdout: { fd: 1 }, title: "node", traceDeprecation: false, umask: ue(0), uptime: ue(0), version: "", versions: { http_parser: "", node: "", v8: "", ares: "", uv: "", zlib: "", modules: "", openssl: "" } };
    });
    var fu = ve((e2) => {
      j(), k(), N(), I();
      var t = d((s, h) => () => (h || s((h = { exports: {} }).exports, h), h.exports), "q"), r = t((s) => {
        "use strict";
        s.byteLength = re, s.toByteArray = ee, s.fromByteArray = Be;
        var h = [], m = [], _ = typeof Uint8Array != "undefined" ? Uint8Array : Array, O = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        for (M = 0, L = O.length; M < L; ++M)
          h[M] = O[M], m[O.charCodeAt(M)] = M;
        var M, L;
        m["-".charCodeAt(0)] = 62, m["_".charCodeAt(0)] = 63;
        function J(ie) {
          var he = ie.length;
          if (he % 4 > 0)
            throw new Error("Invalid string. Length must be a multiple of 4");
          var _e = ie.indexOf("=");
          _e === -1 && (_e = he);
          var Se = _e === he ? 0 : 4 - _e % 4;
          return [_e, Se];
        }
        y(J, "a"), d(J, "j");
        function re(ie) {
          var he = J(ie), _e = he[0], Se = he[1];
          return (_e + Se) * 3 / 4 - Se;
        }
        y(re, "l"), d(re, "sr");
        function X(ie, he, _e) {
          return (he + _e) * 3 / 4 - _e;
        }
        y(X, "c"), d(X, "lr");
        function ee(ie) {
          var he, _e = J(ie), Se = _e[0], ke = _e[1], ce = new _(X(ie, Se, ke)), ge = 0, ye = ke > 0 ? Se - 4 : Se, me;
          for (me = 0; me < ye; me += 4)
            he = m[ie.charCodeAt(me)] << 18 | m[ie.charCodeAt(me + 1)] << 12 | m[ie.charCodeAt(me + 2)] << 6 | m[ie.charCodeAt(me + 3)], ce[ge++] = he >> 16 & 255, ce[ge++] = he >> 8 & 255, ce[ge++] = he & 255;
          return ke === 2 && (he = m[ie.charCodeAt(me)] << 2 | m[ie.charCodeAt(me + 1)] >> 4, ce[ge++] = he & 255), ke === 1 && (he = m[ie.charCodeAt(me)] << 10 | m[ie.charCodeAt(me + 1)] << 4 | m[ie.charCodeAt(me + 2)] >> 2, ce[ge++] = he >> 8 & 255, ce[ge++] = he & 255), ce;
        }
        y(ee, "f"), d(ee, "ar");
        function ne(ie) {
          return h[ie >> 18 & 63] + h[ie >> 12 & 63] + h[ie >> 6 & 63] + h[ie & 63];
        }
        y(ne, "p"), d(ne, "yr");
        function xe(ie, he, _e) {
          for (var Se, ke = [], ce = he; ce < _e; ce += 3)
            Se = (ie[ce] << 16 & 16711680) + (ie[ce + 1] << 8 & 65280) + (ie[ce + 2] & 255), ke.push(ne(Se));
          return ke.join("");
        }
        y(xe, "y"), d(xe, "wr");
        function Be(ie) {
          for (var he, _e = ie.length, Se = _e % 3, ke = [], ce = 16383, ge = 0, ye = _e - Se; ge < ye; ge += ce)
            ke.push(xe(ie, ge, ge + ce > ye ? ye : ge + ce));
          return Se === 1 ? (he = ie[_e - 1], ke.push(h[he >> 2] + h[he << 4 & 63] + "==")) : Se === 2 && (he = (ie[_e - 2] << 8) + ie[_e - 1], ke.push(h[he >> 10] + h[he >> 4 & 63] + h[he << 2 & 63] + "=")), ke.join("");
        }
        y(Be, "w"), d(Be, "xr");
      }), n = t((s) => {
        s.read = function(h, m, _, O, M) {
          var L, J, re = M * 8 - O - 1, X = (1 << re) - 1, ee = X >> 1, ne = -7, xe = _ ? M - 1 : 0, Be = _ ? -1 : 1, ie = h[m + xe];
          for (xe += Be, L = ie & (1 << -ne) - 1, ie >>= -ne, ne += re; ne > 0; L = L * 256 + h[m + xe], xe += Be, ne -= 8)
            ;
          for (J = L & (1 << -ne) - 1, L >>= -ne, ne += O; ne > 0; J = J * 256 + h[m + xe], xe += Be, ne -= 8)
            ;
          if (L === 0)
            L = 1 - ee;
          else {
            if (L === X)
              return J ? NaN : (ie ? -1 : 1) * (1 / 0);
            J = J + Math.pow(2, O), L = L - ee;
          }
          return (ie ? -1 : 1) * J * Math.pow(2, L - O);
        }, s.write = function(h, m, _, O, M, L) {
          var J, re, X, ee = L * 8 - M - 1, ne = (1 << ee) - 1, xe = ne >> 1, Be = M === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, ie = O ? 0 : L - 1, he = O ? 1 : -1, _e = m < 0 || m === 0 && 1 / m < 0 ? 1 : 0;
          for (m = Math.abs(m), isNaN(m) || m === 1 / 0 ? (re = isNaN(m) ? 1 : 0, J = ne) : (J = Math.floor(Math.log(m) / Math.LN2), m * (X = Math.pow(2, -J)) < 1 && (J--, X *= 2), J + xe >= 1 ? m += Be / X : m += Be * Math.pow(2, 1 - xe), m * X >= 2 && (J++, X /= 2), J + xe >= ne ? (re = 0, J = ne) : J + xe >= 1 ? (re = (m * X - 1) * Math.pow(2, M), J = J + xe) : (re = m * Math.pow(2, xe - 1) * Math.pow(2, M), J = 0)); M >= 8; h[_ + ie] = re & 255, ie += he, re /= 256, M -= 8)
            ;
          for (J = J << M | re, ee += M; ee > 0; h[_ + ie] = J & 255, ie += he, J /= 256, ee -= 8)
            ;
          h[_ + ie - he] |= _e * 128;
        };
      }), i = r(), a = n(), o = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
      e2.Buffer = c, e2.SlowBuffer = q, e2.INSPECT_MAX_BYTES = 50;
      var l = 2147483647;
      e2.kMaxLength = l, c.TYPED_ARRAY_SUPPORT = f(), !c.TYPED_ARRAY_SUPPORT && typeof console != "undefined" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
      function f() {
        try {
          let s = new Uint8Array(1), h = { foo: function() {
            return 42;
          } };
          return Object.setPrototypeOf(h, Uint8Array.prototype), Object.setPrototypeOf(s, h), s.foo() === 42;
        } catch (s) {
          return false;
        }
      }
      y(f, "Wl"), d(f, "Br"), Object.defineProperty(c.prototype, "parent", { enumerable: true, get: function() {
        if (c.isBuffer(this))
          return this.buffer;
      } }), Object.defineProperty(c.prototype, "offset", { enumerable: true, get: function() {
        if (c.isBuffer(this))
          return this.byteOffset;
      } });
      function u(s) {
        if (s > l)
          throw new RangeError('The value "' + s + '" is invalid for option "size"');
        let h = new Uint8Array(s);
        return Object.setPrototypeOf(h, c.prototype), h;
      }
      y(u, "Je"), d(u, "d");
      function c(s, h, m) {
        if (typeof s == "number") {
          if (typeof h == "string")
            throw new TypeError('The "string" argument must be of type string. Received type number');
          return b(s);
        }
        return p(s, h, m);
      }
      y(c, "S"), d(c, "h"), c.poolSize = 8192;
      function p(s, h, m) {
        if (typeof s == "string")
          return w(s, h);
        if (ArrayBuffer.isView(s))
          return S(s);
        if (s == null)
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof s);
        if (U(s, ArrayBuffer) || s && U(s.buffer, ArrayBuffer) || typeof SharedArrayBuffer != "undefined" && (U(s, SharedArrayBuffer) || s && U(s.buffer, SharedArrayBuffer)))
          return T(s, h, m);
        if (typeof s == "number")
          throw new TypeError('The "value" argument must not be of type number. Received type number');
        let _ = s.valueOf && s.valueOf();
        if (_ != null && _ !== s)
          return c.from(_, h, m);
        let O = A(s);
        if (O)
          return O;
        if (typeof Symbol != "undefined" && Symbol.toPrimitive != null && typeof s[Symbol.toPrimitive] == "function")
          return c.from(s[Symbol.toPrimitive]("string"), h, m);
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof s);
      }
      y(p, "Ji"), d(p, "z"), c.from = function(s, h, m) {
        return p(s, h, m);
      }, Object.setPrototypeOf(c.prototype, Uint8Array.prototype), Object.setPrototypeOf(c, Uint8Array);
      function g(s) {
        if (typeof s != "number")
          throw new TypeError('"size" argument must be of type number');
        if (s < 0)
          throw new RangeError('The value "' + s + '" is invalid for option "size"');
      }
      y(g, "zi"), d(g, "J");
      function v(s, h, m) {
        return g(s), s <= 0 ? u(s) : h !== void 0 ? typeof m == "string" ? u(s).fill(h, m) : u(s).fill(h) : u(s);
      }
      y(v, "Hl"), d(v, "Er"), c.alloc = function(s, h, m) {
        return v(s, h, m);
      };
      function b(s) {
        return g(s), u(s < 0 ? 0 : R(s) | 0);
      }
      y(b, "Yn"), d(b, "D"), c.allocUnsafe = function(s) {
        return b(s);
      }, c.allocUnsafeSlow = function(s) {
        return b(s);
      };
      function w(s, h) {
        if ((typeof h != "string" || h === "") && (h = "utf8"), !c.isEncoding(h))
          throw new TypeError("Unknown encoding: " + h);
        let m = B(s, h) | 0, _ = u(m), O = _.write(s, h);
        return O !== m && (_ = _.slice(0, O)), _;
      }
      y(w, "Yl"), d(w, "dr");
      function E(s) {
        let h = s.length < 0 ? 0 : R(s.length) | 0, m = u(h);
        for (let _ = 0; _ < h; _ += 1)
          m[_] = s[_] & 255;
        return m;
      }
      y(E, "Qn"), d(E, "b");
      function S(s) {
        if (U(s, Uint8Array)) {
          let h = new Uint8Array(s);
          return T(h.buffer, h.byteOffset, h.byteLength);
        }
        return E(s);
      }
      y(S, "Ql"), d(S, "gr");
      function T(s, h, m) {
        if (h < 0 || s.byteLength < h)
          throw new RangeError('"offset" is outside of buffer bounds');
        if (s.byteLength < h + (m || 0))
          throw new RangeError('"length" is outside of buffer bounds');
        let _;
        return h === void 0 && m === void 0 ? _ = new Uint8Array(s) : m === void 0 ? _ = new Uint8Array(s, h) : _ = new Uint8Array(s, h, m), Object.setPrototypeOf(_, c.prototype), _;
      }
      y(T, "Wi"), d(T, "$");
      function A(s) {
        if (c.isBuffer(s)) {
          let h = R(s.length) | 0, m = u(h);
          return m.length === 0 || s.copy(m, 0, 0, h), m;
        }
        if (s.length !== void 0)
          return typeof s.length != "number" || Q(s.length) ? u(0) : E(s);
        if (s.type === "Buffer" && Array.isArray(s.data))
          return E(s.data);
      }
      y(A, "Kl"), d(A, "mr");
      function R(s) {
        if (s >= l)
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + l.toString(16) + " bytes");
        return s | 0;
      }
      y(R, "Kn"), d(R, "P");
      function q(s) {
        return +s != s && (s = 0), c.alloc(+s);
      }
      y(q, "Zl"), d(q, "Ir"), c.isBuffer = function(s) {
        return s != null && s._isBuffer === true && s !== c.prototype;
      }, c.compare = function(s, h) {
        if (U(s, Uint8Array) && (s = c.from(s, s.offset, s.byteLength)), U(h, Uint8Array) && (h = c.from(h, h.offset, h.byteLength)), !c.isBuffer(s) || !c.isBuffer(h))
          throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (s === h)
          return 0;
        let m = s.length, _ = h.length;
        for (let O = 0, M = Math.min(m, _); O < M; ++O)
          if (s[O] !== h[O]) {
            m = s[O], _ = h[O];
            break;
          }
        return m < _ ? -1 : _ < m ? 1 : 0;
      }, c.isEncoding = function(s) {
        switch (String(s).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      }, c.concat = function(s, h) {
        if (!Array.isArray(s))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (s.length === 0)
          return c.alloc(0);
        let m;
        if (h === void 0)
          for (h = 0, m = 0; m < s.length; ++m)
            h += s[m].length;
        let _ = c.allocUnsafe(h), O = 0;
        for (m = 0; m < s.length; ++m) {
          let M = s[m];
          if (U(M, Uint8Array))
            O + M.length > _.length ? (c.isBuffer(M) || (M = c.from(M)), M.copy(_, O)) : Uint8Array.prototype.set.call(_, M, O);
          else if (c.isBuffer(M))
            M.copy(_, O);
          else
            throw new TypeError('"list" argument must be an Array of Buffers');
          O += M.length;
        }
        return _;
      };
      function B(s, h) {
        if (c.isBuffer(s))
          return s.length;
        if (ArrayBuffer.isView(s) || U(s, ArrayBuffer))
          return s.byteLength;
        if (typeof s != "string")
          throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof s);
        let m = s.length, _ = arguments.length > 2 && arguments[2] === true;
        if (!_ && m === 0)
          return 0;
        let O = false;
        for (; ; )
          switch (h) {
            case "ascii":
            case "latin1":
            case "binary":
              return m;
            case "utf8":
            case "utf-8":
              return It(s).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return m * 2;
            case "hex":
              return m >>> 1;
            case "base64":
              return $(s).length;
            default:
              if (O)
                return _ ? -1 : It(s).length;
              h = ("" + h).toLowerCase(), O = true;
          }
      }
      y(B, "Hi"), d(B, "K"), c.byteLength = B;
      function F(s, h, m) {
        let _ = false;
        if ((h === void 0 || h < 0) && (h = 0), h > this.length || ((m === void 0 || m > this.length) && (m = this.length), m <= 0) || (m >>>= 0, h >>>= 0, m <= h))
          return "";
        for (s || (s = "utf8"); ; )
          switch (s) {
            case "hex":
              return wt(this, h, m);
            case "utf8":
            case "utf-8":
              return Ue(this, h, m);
            case "ascii":
              return Dt(this, h, m);
            case "latin1":
            case "binary":
              return jt(this, h, m);
            case "base64":
              return le(this, h, m);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ar(this, h, m);
            default:
              if (_)
                throw new TypeError("Unknown encoding: " + s);
              s = (s + "").toLowerCase(), _ = true;
          }
      }
      y(F, "Xl"), d(F, "Fr"), c.prototype._isBuffer = true;
      function C(s, h, m) {
        let _ = s[h];
        s[h] = s[m], s[m] = _;
      }
      y(C, "ht"), d(C, "I"), c.prototype.swap16 = function() {
        let s = this.length;
        if (s % 2 != 0)
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (let h = 0; h < s; h += 2)
          C(this, h, h + 1);
        return this;
      }, c.prototype.swap32 = function() {
        let s = this.length;
        if (s % 4 != 0)
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (let h = 0; h < s; h += 4)
          C(this, h, h + 3), C(this, h + 1, h + 2);
        return this;
      }, c.prototype.swap64 = function() {
        let s = this.length;
        if (s % 8 != 0)
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (let h = 0; h < s; h += 8)
          C(this, h, h + 7), C(this, h + 1, h + 6), C(this, h + 2, h + 5), C(this, h + 3, h + 4);
        return this;
      }, c.prototype.toString = function() {
        let s = this.length;
        return s === 0 ? "" : arguments.length === 0 ? Ue(this, 0, s) : F.apply(this, arguments);
      }, c.prototype.toLocaleString = c.prototype.toString, c.prototype.equals = function(s) {
        if (!c.isBuffer(s))
          throw new TypeError("Argument must be a Buffer");
        return this === s ? true : c.compare(this, s) === 0;
      }, c.prototype.inspect = function() {
        let s = "", h = e2.INSPECT_MAX_BYTES;
        return s = this.toString("hex", 0, h).replace(/(.{2})/g, "$1 ").trim(), this.length > h && (s += " ... "), "<Buffer " + s + ">";
      }, o && (c.prototype[o] = c.prototype.inspect), c.prototype.compare = function(s, h, m, _, O) {
        if (U(s, Uint8Array) && (s = c.from(s, s.offset, s.byteLength)), !c.isBuffer(s))
          throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof s);
        if (h === void 0 && (h = 0), m === void 0 && (m = s ? s.length : 0), _ === void 0 && (_ = 0), O === void 0 && (O = this.length), h < 0 || m > s.length || _ < 0 || O > this.length)
          throw new RangeError("out of range index");
        if (_ >= O && h >= m)
          return 0;
        if (_ >= O)
          return -1;
        if (h >= m)
          return 1;
        if (h >>>= 0, m >>>= 0, _ >>>= 0, O >>>= 0, this === s)
          return 0;
        let M = O - _, L = m - h, J = Math.min(M, L), re = this.slice(_, O), X = s.slice(h, m);
        for (let ee = 0; ee < J; ++ee)
          if (re[ee] !== X[ee]) {
            M = re[ee], L = X[ee];
            break;
          }
        return M < L ? -1 : L < M ? 1 : 0;
      };
      function W(s, h, m, _, O) {
        if (s.length === 0)
          return -1;
        if (typeof m == "string" ? (_ = m, m = 0) : m > 2147483647 ? m = 2147483647 : m < -2147483648 && (m = -2147483648), m = +m, Q(m) && (m = O ? 0 : s.length - 1), m < 0 && (m = s.length + m), m >= s.length) {
          if (O)
            return -1;
          m = s.length - 1;
        } else if (m < 0)
          if (O)
            m = 0;
          else
            return -1;
        if (typeof h == "string" && (h = c.from(h, _)), c.isBuffer(h))
          return h.length === 0 ? -1 : G(s, h, m, _, O);
        if (typeof h == "number")
          return h = h & 255, typeof Uint8Array.prototype.indexOf == "function" ? O ? Uint8Array.prototype.indexOf.call(s, h, m) : Uint8Array.prototype.lastIndexOf.call(s, h, m) : G(s, [h], m, _, O);
        throw new TypeError("val must be string, number or Buffer");
      }
      y(W, "Yi"), d(W, "Z");
      function G(s, h, m, _, O) {
        let M = 1, L = s.length, J = h.length;
        if (_ !== void 0 && (_ = String(_).toLowerCase(), _ === "ucs2" || _ === "ucs-2" || _ === "utf16le" || _ === "utf-16le")) {
          if (s.length < 2 || h.length < 2)
            return -1;
          M = 2, L /= 2, J /= 2, m /= 2;
        }
        function re(ee, ne) {
          return M === 1 ? ee[ne] : ee.readUInt16BE(ne * M);
        }
        y(re, "l"), d(re, "c");
        let X;
        if (O) {
          let ee = -1;
          for (X = m; X < L; X++)
            if (re(s, X) === re(h, ee === -1 ? 0 : X - ee)) {
              if (ee === -1 && (ee = X), X - ee + 1 === J)
                return ee * M;
            } else
              ee !== -1 && (X -= X - ee), ee = -1;
        } else
          for (m + J > L && (m = L - J), X = m; X >= 0; X--) {
            let ee = true;
            for (let ne = 0; ne < J; ne++)
              if (re(s, X + ne) !== re(h, ne)) {
                ee = false;
                break;
              }
            if (ee)
              return X;
          }
        return -1;
      }
      y(G, "Qi"), d(G, "Q"), c.prototype.includes = function(s, h, m) {
        return this.indexOf(s, h, m) !== -1;
      }, c.prototype.indexOf = function(s, h, m) {
        return W(this, s, h, m, true);
      }, c.prototype.lastIndexOf = function(s, h, m) {
        return W(this, s, h, m, false);
      };
      function pe(s, h, m, _) {
        m = Number(m) || 0;
        let O = s.length - m;
        _ ? (_ = Number(_), _ > O && (_ = O)) : _ = O;
        let M = h.length;
        _ > M / 2 && (_ = M / 2);
        let L;
        for (L = 0; L < _; ++L) {
          let J = parseInt(h.substr(L * 2, 2), 16);
          if (Q(J))
            return L;
          s[m + L] = J;
        }
        return L;
      }
      y(pe, "ec"), d(pe, "Ar");
      function Y(s, h, m, _) {
        return P(It(h, s.length - m), s, m, _);
      }
      y(Y, "tc"), d(Y, "Ur");
      function de(s, h, m, _) {
        return P(ur(h), s, m, _);
      }
      y(de, "rc"), d(de, "Rr");
      function be(s, h, m, _) {
        return P($(h), s, m, _);
      }
      y(be, "nc"), d(be, "Tr");
      function se(s, h, m, _) {
        return P(x(h, s.length - m), s, m, _);
      }
      y(se, "oc"), d(se, "Cr"), c.prototype.write = function(s, h, m, _) {
        if (h === void 0)
          _ = "utf8", m = this.length, h = 0;
        else if (m === void 0 && typeof h == "string")
          _ = h, m = this.length, h = 0;
        else if (isFinite(h))
          h = h >>> 0, isFinite(m) ? (m = m >>> 0, _ === void 0 && (_ = "utf8")) : (_ = m, m = void 0);
        else
          throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        let O = this.length - h;
        if ((m === void 0 || m > O) && (m = O), s.length > 0 && (m < 0 || h < 0) || h > this.length)
          throw new RangeError("Attempt to write outside buffer bounds");
        _ || (_ = "utf8");
        let M = false;
        for (; ; )
          switch (_) {
            case "hex":
              return pe(this, s, h, m);
            case "utf8":
            case "utf-8":
              return Y(this, s, h, m);
            case "ascii":
            case "latin1":
            case "binary":
              return de(this, s, h, m);
            case "base64":
              return be(this, s, h, m);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return se(this, s, h, m);
            default:
              if (M)
                throw new TypeError("Unknown encoding: " + _);
              _ = ("" + _).toLowerCase(), M = true;
          }
      }, c.prototype.toJSON = function() {
        return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
      };
      function le(s, h, m) {
        return h === 0 && m === s.length ? i.fromByteArray(s) : i.fromByteArray(s.slice(h, m));
      }
      y(le, "ic"), d(le, "Sr");
      function Ue(s, h, m) {
        m = Math.min(s.length, m);
        let _ = [], O = h;
        for (; O < m; ) {
          let M = s[O], L = null, J = M > 239 ? 4 : M > 223 ? 3 : M > 191 ? 2 : 1;
          if (O + J <= m) {
            let re, X, ee, ne;
            switch (J) {
              case 1:
                M < 128 && (L = M);
                break;
              case 2:
                re = s[O + 1], (re & 192) == 128 && (ne = (M & 31) << 6 | re & 63, ne > 127 && (L = ne));
                break;
              case 3:
                re = s[O + 1], X = s[O + 2], (re & 192) == 128 && (X & 192) == 128 && (ne = (M & 15) << 12 | (re & 63) << 6 | X & 63, ne > 2047 && (ne < 55296 || ne > 57343) && (L = ne));
                break;
              case 4:
                re = s[O + 1], X = s[O + 2], ee = s[O + 3], (re & 192) == 128 && (X & 192) == 128 && (ee & 192) == 128 && (ne = (M & 15) << 18 | (re & 63) << 12 | (X & 63) << 6 | ee & 63, ne > 65535 && ne < 1114112 && (L = ne));
            }
          }
          L === null ? (L = 65533, J = 1) : L > 65535 && (L -= 65536, _.push(L >>> 10 & 1023 | 55296), L = 56320 | L & 1023), _.push(L), O += J;
        }
        return or(_);
      }
      y(Ue, "Ki"), d(Ue, "v");
      var Pt = 4096;
      function or(s) {
        let h = s.length;
        if (h <= Pt)
          return String.fromCharCode.apply(String, s);
        let m = "", _ = 0;
        for (; _ < h; )
          m += String.fromCharCode.apply(String, s.slice(_, _ += Pt));
        return m;
      }
      y(or, "sc"), d(or, "_r");
      function Dt(s, h, m) {
        let _ = "";
        m = Math.min(s.length, m);
        for (let O = h; O < m; ++O)
          _ += String.fromCharCode(s[O] & 127);
        return _;
      }
      y(Dt, "ac"), d(Dt, "Lr");
      function jt(s, h, m) {
        let _ = "";
        m = Math.min(s.length, m);
        for (let O = h; O < m; ++O)
          _ += String.fromCharCode(s[O]);
        return _;
      }
      y(jt, "uc"), d(jt, "Nr");
      function wt(s, h, m) {
        let _ = s.length;
        (!h || h < 0) && (h = 0), (!m || m < 0 || m > _) && (m = _);
        let O = "";
        for (let M = h; M < m; ++M)
          O += H[s[M]];
        return O;
      }
      y(wt, "lc"), d(wt, "Mr");
      function ar(s, h, m) {
        let _ = s.slice(h, m), O = "";
        for (let M = 0; M < _.length - 1; M += 2)
          O += String.fromCharCode(_[M] + _[M + 1] * 256);
        return O;
      }
      y(ar, "cc"), d(ar, "kr"), c.prototype.slice = function(s, h) {
        let m = this.length;
        s = ~~s, h = h === void 0 ? m : ~~h, s < 0 ? (s += m, s < 0 && (s = 0)) : s > m && (s = m), h < 0 ? (h += m, h < 0 && (h = 0)) : h > m && (h = m), h < s && (h = s);
        let _ = this.subarray(s, h);
        return Object.setPrototypeOf(_, c.prototype), _;
      };
      function Oe(s, h, m) {
        if (s % 1 != 0 || s < 0)
          throw new RangeError("offset is not uint");
        if (s + h > m)
          throw new RangeError("Trying to access beyond buffer length");
      }
      y(Oe, "oe"), d(Oe, "a"), c.prototype.readUintLE = c.prototype.readUIntLE = function(s, h, m) {
        s = s >>> 0, h = h >>> 0, m || Oe(s, h, this.length);
        let _ = this[s], O = 1, M = 0;
        for (; ++M < h && (O *= 256); )
          _ += this[s + M] * O;
        return _;
      }, c.prototype.readUintBE = c.prototype.readUIntBE = function(s, h, m) {
        s = s >>> 0, h = h >>> 0, m || Oe(s, h, this.length);
        let _ = this[s + --h], O = 1;
        for (; h > 0 && (O *= 256); )
          _ += this[s + --h] * O;
        return _;
      }, c.prototype.readUint8 = c.prototype.readUInt8 = function(s, h) {
        return s = s >>> 0, h || Oe(s, 1, this.length), this[s];
      }, c.prototype.readUint16LE = c.prototype.readUInt16LE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 2, this.length), this[s] | this[s + 1] << 8;
      }, c.prototype.readUint16BE = c.prototype.readUInt16BE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 2, this.length), this[s] << 8 | this[s + 1];
      }, c.prototype.readUint32LE = c.prototype.readUInt32LE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 4, this.length), (this[s] | this[s + 1] << 8 | this[s + 2] << 16) + this[s + 3] * 16777216;
      }, c.prototype.readUint32BE = c.prototype.readUInt32BE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 4, this.length), this[s] * 16777216 + (this[s + 1] << 16 | this[s + 2] << 8 | this[s + 3]);
      }, c.prototype.readBigUInt64LE = z(function(s) {
        s = s >>> 0, dt(s, "offset");
        let h = this[s], m = this[s + 7];
        (h === void 0 || m === void 0) && ht(s, this.length - 8);
        let _ = h + this[++s] * 2 ** 8 + this[++s] * 2 ** 16 + this[++s] * 2 ** 24, O = this[++s] + this[++s] * 2 ** 8 + this[++s] * 2 ** 16 + m * 2 ** 24;
        return BigInt(_) + (BigInt(O) << BigInt(32));
      }), c.prototype.readBigUInt64BE = z(function(s) {
        s = s >>> 0, dt(s, "offset");
        let h = this[s], m = this[s + 7];
        (h === void 0 || m === void 0) && ht(s, this.length - 8);
        let _ = h * 2 ** 24 + this[++s] * 2 ** 16 + this[++s] * 2 ** 8 + this[++s], O = this[++s] * 2 ** 24 + this[++s] * 2 ** 16 + this[++s] * 2 ** 8 + m;
        return (BigInt(_) << BigInt(32)) + BigInt(O);
      }), c.prototype.readIntLE = function(s, h, m) {
        s = s >>> 0, h = h >>> 0, m || Oe(s, h, this.length);
        let _ = this[s], O = 1, M = 0;
        for (; ++M < h && (O *= 256); )
          _ += this[s + M] * O;
        return O *= 128, _ >= O && (_ -= Math.pow(2, 8 * h)), _;
      }, c.prototype.readIntBE = function(s, h, m) {
        s = s >>> 0, h = h >>> 0, m || Oe(s, h, this.length);
        let _ = h, O = 1, M = this[s + --_];
        for (; _ > 0 && (O *= 256); )
          M += this[s + --_] * O;
        return O *= 128, M >= O && (M -= Math.pow(2, 8 * h)), M;
      }, c.prototype.readInt8 = function(s, h) {
        return s = s >>> 0, h || Oe(s, 1, this.length), this[s] & 128 ? (255 - this[s] + 1) * -1 : this[s];
      }, c.prototype.readInt16LE = function(s, h) {
        s = s >>> 0, h || Oe(s, 2, this.length);
        let m = this[s] | this[s + 1] << 8;
        return m & 32768 ? m | 4294901760 : m;
      }, c.prototype.readInt16BE = function(s, h) {
        s = s >>> 0, h || Oe(s, 2, this.length);
        let m = this[s + 1] | this[s] << 8;
        return m & 32768 ? m | 4294901760 : m;
      }, c.prototype.readInt32LE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 4, this.length), this[s] | this[s + 1] << 8 | this[s + 2] << 16 | this[s + 3] << 24;
      }, c.prototype.readInt32BE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 4, this.length), this[s] << 24 | this[s + 1] << 16 | this[s + 2] << 8 | this[s + 3];
      }, c.prototype.readBigInt64LE = z(function(s) {
        s = s >>> 0, dt(s, "offset");
        let h = this[s], m = this[s + 7];
        (h === void 0 || m === void 0) && ht(s, this.length - 8);
        let _ = this[s + 4] + this[s + 5] * 2 ** 8 + this[s + 6] * 2 ** 16 + (m << 24);
        return (BigInt(_) << BigInt(32)) + BigInt(h + this[++s] * 2 ** 8 + this[++s] * 2 ** 16 + this[++s] * 2 ** 24);
      }), c.prototype.readBigInt64BE = z(function(s) {
        s = s >>> 0, dt(s, "offset");
        let h = this[s], m = this[s + 7];
        (h === void 0 || m === void 0) && ht(s, this.length - 8);
        let _ = (h << 24) + this[++s] * 2 ** 16 + this[++s] * 2 ** 8 + this[++s];
        return (BigInt(_) << BigInt(32)) + BigInt(this[++s] * 2 ** 24 + this[++s] * 2 ** 16 + this[++s] * 2 ** 8 + m);
      }), c.prototype.readFloatLE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 4, this.length), a.read(this, s, true, 23, 4);
      }, c.prototype.readFloatBE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 4, this.length), a.read(this, s, false, 23, 4);
      }, c.prototype.readDoubleLE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 8, this.length), a.read(this, s, true, 52, 8);
      }, c.prototype.readDoubleBE = function(s, h) {
        return s = s >>> 0, h || Oe(s, 8, this.length), a.read(this, s, false, 52, 8);
      };
      function Te(s, h, m, _, O, M) {
        if (!c.isBuffer(s))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (h > O || h < M)
          throw new RangeError('"value" argument is out of bounds');
        if (m + _ > s.length)
          throw new RangeError("Index out of range");
      }
      y(Te, "be"), d(Te, "y"), c.prototype.writeUintLE = c.prototype.writeUIntLE = function(s, h, m, _) {
        if (s = +s, h = h >>> 0, m = m >>> 0, !_) {
          let L = Math.pow(2, 8 * m) - 1;
          Te(this, s, h, m, L, 0);
        }
        let O = 1, M = 0;
        for (this[h] = s & 255; ++M < m && (O *= 256); )
          this[h + M] = s / O & 255;
        return h + m;
      }, c.prototype.writeUintBE = c.prototype.writeUIntBE = function(s, h, m, _) {
        if (s = +s, h = h >>> 0, m = m >>> 0, !_) {
          let L = Math.pow(2, 8 * m) - 1;
          Te(this, s, h, m, L, 0);
        }
        let O = m - 1, M = 1;
        for (this[h + O] = s & 255; --O >= 0 && (M *= 256); )
          this[h + O] = s / M & 255;
        return h + m;
      }, c.prototype.writeUint8 = c.prototype.writeUInt8 = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 1, 255, 0), this[h] = s & 255, h + 1;
      }, c.prototype.writeUint16LE = c.prototype.writeUInt16LE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 2, 65535, 0), this[h] = s & 255, this[h + 1] = s >>> 8, h + 2;
      }, c.prototype.writeUint16BE = c.prototype.writeUInt16BE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 2, 65535, 0), this[h] = s >>> 8, this[h + 1] = s & 255, h + 2;
      }, c.prototype.writeUint32LE = c.prototype.writeUInt32LE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 4, 4294967295, 0), this[h + 3] = s >>> 24, this[h + 2] = s >>> 16, this[h + 1] = s >>> 8, this[h] = s & 255, h + 4;
      }, c.prototype.writeUint32BE = c.prototype.writeUInt32BE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 4, 4294967295, 0), this[h] = s >>> 24, this[h + 1] = s >>> 16, this[h + 2] = s >>> 8, this[h + 3] = s & 255, h + 4;
      };
      function Vt(s, h, m, _, O) {
        _t(h, _, O, s, m, 7);
        let M = Number(h & BigInt(4294967295));
        s[m++] = M, M = M >> 8, s[m++] = M, M = M >> 8, s[m++] = M, M = M >> 8, s[m++] = M;
        let L = Number(h >> BigInt(32) & BigInt(4294967295));
        return s[m++] = L, L = L >> 8, s[m++] = L, L = L >> 8, s[m++] = L, L = L >> 8, s[m++] = L, m;
      }
      y(Vt, "Xi"), d(Vt, "tr");
      function Je(s, h, m, _, O) {
        _t(h, _, O, s, m, 7);
        let M = Number(h & BigInt(4294967295));
        s[m + 7] = M, M = M >> 8, s[m + 6] = M, M = M >> 8, s[m + 5] = M, M = M >> 8, s[m + 4] = M;
        let L = Number(h >> BigInt(32) & BigInt(4294967295));
        return s[m + 3] = L, L = L >> 8, s[m + 2] = L, L = L >> 8, s[m + 1] = L, L = L >> 8, s[m] = L, m + 8;
      }
      y(Je, "es"), d(Je, "ir"), c.prototype.writeBigUInt64LE = z(function(s, h = 0) {
        return Vt(this, s, h, BigInt(0), BigInt("0xffffffffffffffff"));
      }), c.prototype.writeBigUInt64BE = z(function(s, h = 0) {
        return Je(this, s, h, BigInt(0), BigInt("0xffffffffffffffff"));
      }), c.prototype.writeIntLE = function(s, h, m, _) {
        if (s = +s, h = h >>> 0, !_) {
          let J = Math.pow(2, 8 * m - 1);
          Te(this, s, h, m, J - 1, -J);
        }
        let O = 0, M = 1, L = 0;
        for (this[h] = s & 255; ++O < m && (M *= 256); )
          s < 0 && L === 0 && this[h + O - 1] !== 0 && (L = 1), this[h + O] = (s / M >> 0) - L & 255;
        return h + m;
      }, c.prototype.writeIntBE = function(s, h, m, _) {
        if (s = +s, h = h >>> 0, !_) {
          let J = Math.pow(2, 8 * m - 1);
          Te(this, s, h, m, J - 1, -J);
        }
        let O = m - 1, M = 1, L = 0;
        for (this[h + O] = s & 255; --O >= 0 && (M *= 256); )
          s < 0 && L === 0 && this[h + O + 1] !== 0 && (L = 1), this[h + O] = (s / M >> 0) - L & 255;
        return h + m;
      }, c.prototype.writeInt8 = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 1, 127, -128), s < 0 && (s = 255 + s + 1), this[h] = s & 255, h + 1;
      }, c.prototype.writeInt16LE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 2, 32767, -32768), this[h] = s & 255, this[h + 1] = s >>> 8, h + 2;
      }, c.prototype.writeInt16BE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 2, 32767, -32768), this[h] = s >>> 8, this[h + 1] = s & 255, h + 2;
      }, c.prototype.writeInt32LE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 4, 2147483647, -2147483648), this[h] = s & 255, this[h + 1] = s >>> 8, this[h + 2] = s >>> 16, this[h + 3] = s >>> 24, h + 4;
      }, c.prototype.writeInt32BE = function(s, h, m) {
        return s = +s, h = h >>> 0, m || Te(this, s, h, 4, 2147483647, -2147483648), s < 0 && (s = 4294967295 + s + 1), this[h] = s >>> 24, this[h + 1] = s >>> 16, this[h + 2] = s >>> 8, this[h + 3] = s & 255, h + 4;
      }, c.prototype.writeBigInt64LE = z(function(s, h = 0) {
        return Vt(this, s, h, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      }), c.prototype.writeBigInt64BE = z(function(s, h = 0) {
        return Je(this, s, h, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function at(s, h, m, _, O, M) {
        if (m + _ > s.length)
          throw new RangeError("Index out of range");
        if (m < 0)
          throw new RangeError("Index out of range");
      }
      y(at, "ts"), d(at, "nr");
      function Xe(s, h, m, _, O) {
        return h = +h, m = m >>> 0, O || at(s, h, m, 4, 34028234663852886e22, -34028234663852886e22), a.write(s, h, m, _, 23, 4), m + 4;
      }
      y(Xe, "rs"), d(Xe, "er"), c.prototype.writeFloatLE = function(s, h, m) {
        return Xe(this, s, h, true, m);
      }, c.prototype.writeFloatBE = function(s, h, m) {
        return Xe(this, s, h, false, m);
      };
      function pt(s, h, m, _, O) {
        return h = +h, m = m >>> 0, O || at(s, h, m, 8, 17976931348623157e292, -17976931348623157e292), a.write(s, h, m, _, 52, 8), m + 8;
      }
      y(pt, "ns"), d(pt, "or"), c.prototype.writeDoubleLE = function(s, h, m) {
        return pt(this, s, h, true, m);
      }, c.prototype.writeDoubleBE = function(s, h, m) {
        return pt(this, s, h, false, m);
      }, c.prototype.copy = function(s, h, m, _) {
        if (!c.isBuffer(s))
          throw new TypeError("argument should be a Buffer");
        if (m || (m = 0), !_ && _ !== 0 && (_ = this.length), h >= s.length && (h = s.length), h || (h = 0), _ > 0 && _ < m && (_ = m), _ === m || s.length === 0 || this.length === 0)
          return 0;
        if (h < 0)
          throw new RangeError("targetStart out of bounds");
        if (m < 0 || m >= this.length)
          throw new RangeError("Index out of range");
        if (_ < 0)
          throw new RangeError("sourceEnd out of bounds");
        _ > this.length && (_ = this.length), s.length - h < _ - m && (_ = s.length - h + m);
        let O = _ - m;
        return this === s && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(h, m, _) : Uint8Array.prototype.set.call(s, this.subarray(m, _), h), O;
      }, c.prototype.fill = function(s, h, m, _) {
        if (typeof s == "string") {
          if (typeof h == "string" ? (_ = h, h = 0, m = this.length) : typeof m == "string" && (_ = m, m = this.length), _ !== void 0 && typeof _ != "string")
            throw new TypeError("encoding must be a string");
          if (typeof _ == "string" && !c.isEncoding(_))
            throw new TypeError("Unknown encoding: " + _);
          if (s.length === 1) {
            let M = s.charCodeAt(0);
            (_ === "utf8" && M < 128 || _ === "latin1") && (s = M);
          }
        } else
          typeof s == "number" ? s = s & 255 : typeof s == "boolean" && (s = Number(s));
        if (h < 0 || this.length < h || this.length < m)
          throw new RangeError("Out of range index");
        if (m <= h)
          return this;
        h = h >>> 0, m = m === void 0 ? this.length : m >>> 0, s || (s = 0);
        let O;
        if (typeof s == "number")
          for (O = h; O < m; ++O)
            this[O] = s;
        else {
          let M = c.isBuffer(s) ? s : c.from(s, _), L = M.length;
          if (L === 0)
            throw new TypeError('The value "' + s + '" is invalid for argument "value"');
          for (O = 0; O < m - h; ++O)
            this[O + h] = M[O % L];
        }
        return this;
      };
      var De = {};
      function st(s, h, m) {
        De[s] = class extends m {
          constructor() {
            super();
            Object.defineProperty(this, "message", { value: h.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${s}]`, this.stack, delete this.name;
          }
          get code() {
            return s;
          }
          set code(_) {
            Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: _, writable: true });
          }
          toString() {
            return `${this.name} [${s}]: ${this.message}`;
          }
        };
      }
      y(st, "Zn"), d(st, "O"), st("ERR_BUFFER_OUT_OF_BOUNDS", function(s) {
        return s ? `${s} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
      }, RangeError), st("ERR_INVALID_ARG_TYPE", function(s, h) {
        return `The "${s}" argument must be of type number. Received type ${typeof h}`;
      }, TypeError), st("ERR_OUT_OF_RANGE", function(s, h, m) {
        let _ = `The value of "${s}" is out of range.`, O = m;
        return Number.isInteger(m) && Math.abs(m) > 2 ** 32 ? O = Gt(String(m)) : typeof m == "bigint" && (O = String(m), (m > BigInt(2) ** BigInt(32) || m < -(BigInt(2) ** BigInt(32))) && (O = Gt(O)), O += "n"), _ += ` It must be ${h}. Received ${O}`, _;
      }, RangeError);
      function Gt(s) {
        let h = "", m = s.length, _ = s[0] === "-" ? 1 : 0;
        for (; m >= _ + 4; m -= 3)
          h = `_${s.slice(m - 3, m)}${h}`;
        return `${s.slice(0, m)}${h}`;
      }
      y(Gt, "os"), d(Gt, "ur");
      function kt(s, h, m) {
        dt(h, "offset"), (s[h] === void 0 || s[h + m] === void 0) && ht(h, s.length - (m + 1));
      }
      y(kt, "fc"), d(kt, "Dr");
      function _t(s, h, m, _, O, M) {
        if (s > m || s < h) {
          let L = typeof h == "bigint" ? "n" : "", J;
          throw M > 3 ? h === 0 || h === BigInt(0) ? J = `>= 0${L} and < 2${L} ** ${(M + 1) * 8}${L}` : J = `>= -(2${L} ** ${(M + 1) * 8 - 1}${L}) and < 2 ** ${(M + 1) * 8 - 1}${L}` : J = `>= ${h}${L} and <= ${m}${L}`, new De.ERR_OUT_OF_RANGE("value", J, s);
        }
        kt(_, O, M);
      }
      y(_t, "is"), d(_t, "hr");
      function dt(s, h) {
        if (typeof s != "number")
          throw new De.ERR_INVALID_ARG_TYPE(h, "number", s);
      }
      y(dt, "Ot"), d(dt, "R");
      function ht(s, h, m) {
        throw Math.floor(s) !== s ? (dt(s, m), new De.ERR_OUT_OF_RANGE(m || "offset", "an integer", s)) : h < 0 ? new De.ERR_BUFFER_OUT_OF_BOUNDS() : new De.ERR_OUT_OF_RANGE(m || "offset", `>= ${m ? 1 : 0} and <= ${h}`, s);
      }
      y(ht, "ir"), d(ht, "T");
      var sr = /[^+/0-9A-Za-z-_]/g;
      function ut(s) {
        if (s = s.split("=")[0], s = s.trim().replace(sr, ""), s.length < 2)
          return "";
        for (; s.length % 4 != 0; )
          s = s + "=";
        return s;
      }
      y(ut, "dc"), d(ut, "$r");
      function It(s, h) {
        h = h || 1 / 0;
        let m, _ = s.length, O = null, M = [];
        for (let L = 0; L < _; ++L) {
          if (m = s.charCodeAt(L), m > 55295 && m < 57344) {
            if (!O) {
              if (m > 56319) {
                (h -= 3) > -1 && M.push(239, 191, 189);
                continue;
              } else if (L + 1 === _) {
                (h -= 3) > -1 && M.push(239, 191, 189);
                continue;
              }
              O = m;
              continue;
            }
            if (m < 56320) {
              (h -= 3) > -1 && M.push(239, 191, 189), O = m;
              continue;
            }
            m = (O - 55296 << 10 | m - 56320) + 65536;
          } else
            O && (h -= 3) > -1 && M.push(239, 191, 189);
          if (O = null, m < 128) {
            if ((h -= 1) < 0)
              break;
            M.push(m);
          } else if (m < 2048) {
            if ((h -= 2) < 0)
              break;
            M.push(m >> 6 | 192, m & 63 | 128);
          } else if (m < 65536) {
            if ((h -= 3) < 0)
              break;
            M.push(m >> 12 | 224, m >> 6 & 63 | 128, m & 63 | 128);
          } else if (m < 1114112) {
            if ((h -= 4) < 0)
              break;
            M.push(m >> 18 | 240, m >> 12 & 63 | 128, m >> 6 & 63 | 128, m & 63 | 128);
          } else
            throw new Error("Invalid code point");
        }
        return M;
      }
      y(It, "Xn"), d(It, "G");
      function ur(s) {
        let h = [];
        for (let m = 0; m < s.length; ++m)
          h.push(s.charCodeAt(m) & 255);
        return h;
      }
      y(ur, "gc"), d(ur, "Pr");
      function x(s, h) {
        let m, _, O, M = [];
        for (let L = 0; L < s.length && !((h -= 2) < 0); ++L)
          m = s.charCodeAt(L), _ = m >> 8, O = m % 256, M.push(O), M.push(_);
        return M;
      }
      y(x, "mc"), d(x, "Or");
      function $(s) {
        return i.toByteArray(ut(s));
      }
      y($, "ss"), d($, "fr");
      function P(s, h, m, _) {
        let O;
        for (O = 0; O < _ && !(O + m >= h.length || O >= s.length); ++O)
          h[O + m] = s[O];
        return O;
      }
      y(P, "zr"), d(P, "_");
      function U(s, h) {
        return s instanceof h || s != null && s.constructor != null && s.constructor.name != null && s.constructor.name === h.name;
      }
      y(U, "$e"), d(U, "E");
      function Q(s) {
        return s !== s;
      }
      y(Q, "eo"), d(Q, "Y");
      var H = function() {
        let s = "0123456789abcdef", h = new Array(256);
        for (let m = 0; m < 16; ++m) {
          let _ = m * 16;
          for (let O = 0; O < 16; ++O)
            h[_ + O] = s[m] + s[O];
        }
        return h;
      }();
      function z(s) {
        return typeof BigInt == "undefined" ? Z : s;
      }
      y(z, "Xe"), d(z, "g");
      function Z() {
        throw new Error("BigInt not supported");
      }
      y(Z, "yc"), d(Z, "Yr");
    });
    var Ve;
    var N = cr(() => {
      Ve = Ae(fu());
    });
    var pu = ve((e2, t) => {
      j(), k(), N(), I();
      var r = function() {
        var n = String.fromCharCode, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$", o = {};
        function l(u, c) {
          if (!o[u]) {
            o[u] = {};
            for (var p = 0; p < u.length; p++)
              o[u][u.charAt(p)] = p;
          }
          return o[u][c];
        }
        y(l, "o"), d(l, "getBaseValue");
        var f = { compressToBase64: function(u) {
          if (u == null)
            return "";
          var c = f._compress(u, 6, function(p) {
            return i.charAt(p);
          });
          switch (c.length % 4) {
            default:
            case 0:
              return c;
            case 1:
              return c + "===";
            case 2:
              return c + "==";
            case 3:
              return c + "=";
          }
        }, decompressFromBase64: function(u) {
          return u == null ? "" : u == "" ? null : f._decompress(u.length, 32, function(c) {
            return l(i, u.charAt(c));
          });
        }, compressToUTF16: function(u) {
          return u == null ? "" : f._compress(u, 15, function(c) {
            return n(c + 32);
          }) + " ";
        }, decompressFromUTF16: function(u) {
          return u == null ? "" : u == "" ? null : f._decompress(u.length, 16384, function(c) {
            return u.charCodeAt(c) - 32;
          });
        }, compressToUint8Array: function(u) {
          for (var c = f.compress(u), p = new Uint8Array(c.length * 2), g = 0, v = c.length; g < v; g++) {
            var b = c.charCodeAt(g);
            p[g * 2] = b >>> 8, p[g * 2 + 1] = b % 256;
          }
          return p;
        }, decompressFromUint8Array: function(u) {
          if (u == null)
            return f.decompress(u);
          for (var c = new Array(u.length / 2), p = 0, g = c.length; p < g; p++)
            c[p] = u[p * 2] * 256 + u[p * 2 + 1];
          var v = [];
          return c.forEach(function(b) {
            v.push(n(b));
          }), f.decompress(v.join(""));
        }, compressToEncodedURIComponent: function(u) {
          return u == null ? "" : f._compress(u, 6, function(c) {
            return a.charAt(c);
          });
        }, decompressFromEncodedURIComponent: function(u) {
          return u == null ? "" : u == "" ? null : (u = u.replace(/ /g, "+"), f._decompress(u.length, 32, function(c) {
            return l(a, u.charAt(c));
          }));
        }, compress: function(u) {
          return f._compress(u, 16, function(c) {
            return n(c);
          });
        }, _compress: function(u, c, p) {
          if (u == null)
            return "";
          var g, v, b = {}, w = {}, E = "", S = "", T = "", A = 2, R = 3, q = 2, B = [], F = 0, C = 0, W;
          for (W = 0; W < u.length; W += 1)
            if (E = u.charAt(W), Object.prototype.hasOwnProperty.call(b, E) || (b[E] = R++, w[E] = true), S = T + E, Object.prototype.hasOwnProperty.call(b, S))
              T = S;
            else {
              if (Object.prototype.hasOwnProperty.call(w, T)) {
                if (T.charCodeAt(0) < 256) {
                  for (g = 0; g < q; g++)
                    F = F << 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++;
                  for (v = T.charCodeAt(0), g = 0; g < 8; g++)
                    F = F << 1 | v & 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = v >> 1;
                } else {
                  for (v = 1, g = 0; g < q; g++)
                    F = F << 1 | v, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = 0;
                  for (v = T.charCodeAt(0), g = 0; g < 16; g++)
                    F = F << 1 | v & 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = v >> 1;
                }
                A--, A == 0 && (A = Math.pow(2, q), q++), delete w[T];
              } else
                for (v = b[T], g = 0; g < q; g++)
                  F = F << 1 | v & 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = v >> 1;
              A--, A == 0 && (A = Math.pow(2, q), q++), b[S] = R++, T = String(E);
            }
          if (T !== "") {
            if (Object.prototype.hasOwnProperty.call(w, T)) {
              if (T.charCodeAt(0) < 256) {
                for (g = 0; g < q; g++)
                  F = F << 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++;
                for (v = T.charCodeAt(0), g = 0; g < 8; g++)
                  F = F << 1 | v & 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = v >> 1;
              } else {
                for (v = 1, g = 0; g < q; g++)
                  F = F << 1 | v, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = 0;
                for (v = T.charCodeAt(0), g = 0; g < 16; g++)
                  F = F << 1 | v & 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = v >> 1;
              }
              A--, A == 0 && (A = Math.pow(2, q), q++), delete w[T];
            } else
              for (v = b[T], g = 0; g < q; g++)
                F = F << 1 | v & 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = v >> 1;
            A--, A == 0 && (A = Math.pow(2, q), q++);
          }
          for (v = 2, g = 0; g < q; g++)
            F = F << 1 | v & 1, C == c - 1 ? (C = 0, B.push(p(F)), F = 0) : C++, v = v >> 1;
          for (; ; )
            if (F = F << 1, C == c - 1) {
              B.push(p(F));
              break;
            } else
              C++;
          return B.join("");
        }, decompress: function(u) {
          return u == null ? "" : u == "" ? null : f._decompress(u.length, 32768, function(c) {
            return u.charCodeAt(c);
          });
        }, _decompress: function(u, c, p) {
          var g = [], v, b = 4, w = 4, E = 3, S = "", T = [], A, R, q, B, F, C, W, G = { val: p(0), position: c, index: 1 };
          for (A = 0; A < 3; A += 1)
            g[A] = A;
          for (q = 0, F = Math.pow(2, 2), C = 1; C != F; )
            B = G.val & G.position, G.position >>= 1, G.position == 0 && (G.position = c, G.val = p(G.index++)), q |= (B > 0 ? 1 : 0) * C, C <<= 1;
          switch (v = q) {
            case 0:
              for (q = 0, F = Math.pow(2, 8), C = 1; C != F; )
                B = G.val & G.position, G.position >>= 1, G.position == 0 && (G.position = c, G.val = p(G.index++)), q |= (B > 0 ? 1 : 0) * C, C <<= 1;
              W = n(q);
              break;
            case 1:
              for (q = 0, F = Math.pow(2, 16), C = 1; C != F; )
                B = G.val & G.position, G.position >>= 1, G.position == 0 && (G.position = c, G.val = p(G.index++)), q |= (B > 0 ? 1 : 0) * C, C <<= 1;
              W = n(q);
              break;
            case 2:
              return "";
          }
          for (g[3] = W, R = W, T.push(W); ; ) {
            if (G.index > u)
              return "";
            for (q = 0, F = Math.pow(2, E), C = 1; C != F; )
              B = G.val & G.position, G.position >>= 1, G.position == 0 && (G.position = c, G.val = p(G.index++)), q |= (B > 0 ? 1 : 0) * C, C <<= 1;
            switch (W = q) {
              case 0:
                for (q = 0, F = Math.pow(2, 8), C = 1; C != F; )
                  B = G.val & G.position, G.position >>= 1, G.position == 0 && (G.position = c, G.val = p(G.index++)), q |= (B > 0 ? 1 : 0) * C, C <<= 1;
                g[w++] = n(q), W = w - 1, b--;
                break;
              case 1:
                for (q = 0, F = Math.pow(2, 16), C = 1; C != F; )
                  B = G.val & G.position, G.position >>= 1, G.position == 0 && (G.position = c, G.val = p(G.index++)), q |= (B > 0 ? 1 : 0) * C, C <<= 1;
                g[w++] = n(q), W = w - 1, b--;
                break;
              case 2:
                return T.join("");
            }
            if (b == 0 && (b = Math.pow(2, E), E++), g[W])
              S = g[W];
            else if (W === w)
              S = R + R.charAt(0);
            else
              return null;
            T.push(S), g[w++] = R + S.charAt(0), b--, R = S, b == 0 && (b = Math.pow(2, E), E++);
          }
        } };
        return f;
      }();
      typeof t != "undefined" && t != null && (t.exports = r);
    });
    var du = ve((e2, t) => {
      j(), k(), N(), I(), t.exports = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
    });
    var oo = ve((e2, t) => {
      j(), k(), N(), I();
      var r = du(), n = {};
      for (let o of Object.keys(r))
        n[r[o]] = o;
      var i = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
      t.exports = i;
      for (let o of Object.keys(i)) {
        if (!("channels" in i[o]))
          throw new Error("missing channels property: " + o);
        if (!("labels" in i[o]))
          throw new Error("missing channel labels property: " + o);
        if (i[o].labels.length !== i[o].channels)
          throw new Error("channel and label counts mismatch: " + o);
        let { channels: l, labels: f } = i[o];
        delete i[o].channels, delete i[o].labels, Object.defineProperty(i[o], "channels", { value: l }), Object.defineProperty(i[o], "labels", { value: f });
      }
      i.rgb.hsl = function(o) {
        let l = o[0] / 255, f = o[1] / 255, u = o[2] / 255, c = Math.min(l, f, u), p = Math.max(l, f, u), g = p - c, v, b;
        p === c ? v = 0 : l === p ? v = (f - u) / g : f === p ? v = 2 + (u - l) / g : u === p && (v = 4 + (l - f) / g), v = Math.min(v * 60, 360), v < 0 && (v += 360);
        let w = (c + p) / 2;
        return p === c ? b = 0 : w <= 0.5 ? b = g / (p + c) : b = g / (2 - p - c), [v, b * 100, w * 100];
      }, i.rgb.hsv = function(o) {
        let l, f, u, c, p, g = o[0] / 255, v = o[1] / 255, b = o[2] / 255, w = Math.max(g, v, b), E = w - Math.min(g, v, b), S = d(function(T) {
          return (w - T) / 6 / E + 1 / 2;
        }, "diffc");
        return E === 0 ? (c = 0, p = 0) : (p = E / w, l = S(g), f = S(v), u = S(b), g === w ? c = u - f : v === w ? c = 1 / 3 + l - u : b === w && (c = 2 / 3 + f - l), c < 0 ? c += 1 : c > 1 && (c -= 1)), [c * 360, p * 100, w * 100];
      }, i.rgb.hwb = function(o) {
        let l = o[0], f = o[1], u = o[2], c = i.rgb.hsl(o)[0], p = 1 / 255 * Math.min(l, Math.min(f, u));
        return u = 1 - 1 / 255 * Math.max(l, Math.max(f, u)), [c, p * 100, u * 100];
      }, i.rgb.cmyk = function(o) {
        let l = o[0] / 255, f = o[1] / 255, u = o[2] / 255, c = Math.min(1 - l, 1 - f, 1 - u), p = (1 - l - c) / (1 - c) || 0, g = (1 - f - c) / (1 - c) || 0, v = (1 - u - c) / (1 - c) || 0;
        return [p * 100, g * 100, v * 100, c * 100];
      };
      function a(o, l) {
        return (o[0] - l[0]) ** 2 + (o[1] - l[1]) ** 2 + (o[2] - l[2]) ** 2;
      }
      y(a, "wc"), d(a, "comparativeDistance"), i.rgb.keyword = function(o) {
        let l = n[o];
        if (l)
          return l;
        let f = 1 / 0, u;
        for (let c of Object.keys(r)) {
          let p = r[c], g = a(o, p);
          g < f && (f = g, u = c);
        }
        return u;
      }, i.keyword.rgb = function(o) {
        return r[o];
      }, i.rgb.xyz = function(o) {
        let l = o[0] / 255, f = o[1] / 255, u = o[2] / 255;
        l = l > 0.04045 ? ((l + 0.055) / 1.055) ** 2.4 : l / 12.92, f = f > 0.04045 ? ((f + 0.055) / 1.055) ** 2.4 : f / 12.92, u = u > 0.04045 ? ((u + 0.055) / 1.055) ** 2.4 : u / 12.92;
        let c = l * 0.4124 + f * 0.3576 + u * 0.1805, p = l * 0.2126 + f * 0.7152 + u * 0.0722, g = l * 0.0193 + f * 0.1192 + u * 0.9505;
        return [c * 100, p * 100, g * 100];
      }, i.rgb.lab = function(o) {
        let l = i.rgb.xyz(o), f = l[0], u = l[1], c = l[2];
        f /= 95.047, u /= 100, c /= 108.883, f = f > 8856e-6 ? f ** (1 / 3) : 7.787 * f + 16 / 116, u = u > 8856e-6 ? u ** (1 / 3) : 7.787 * u + 16 / 116, c = c > 8856e-6 ? c ** (1 / 3) : 7.787 * c + 16 / 116;
        let p = 116 * u - 16, g = 500 * (f - u), v = 200 * (u - c);
        return [p, g, v];
      }, i.hsl.rgb = function(o) {
        let l = o[0] / 360, f = o[1] / 100, u = o[2] / 100, c, p, g;
        if (f === 0)
          return g = u * 255, [g, g, g];
        u < 0.5 ? c = u * (1 + f) : c = u + f - u * f;
        let v = 2 * u - c, b = [0, 0, 0];
        for (let w = 0; w < 3; w++)
          p = l + 1 / 3 * -(w - 1), p < 0 && p++, p > 1 && p--, 6 * p < 1 ? g = v + (c - v) * 6 * p : 2 * p < 1 ? g = c : 3 * p < 2 ? g = v + (c - v) * (2 / 3 - p) * 6 : g = v, b[w] = g * 255;
        return b;
      }, i.hsl.hsv = function(o) {
        let l = o[0], f = o[1] / 100, u = o[2] / 100, c = f, p = Math.max(u, 0.01);
        u *= 2, f *= u <= 1 ? u : 2 - u, c *= p <= 1 ? p : 2 - p;
        let g = (u + f) / 2, v = u === 0 ? 2 * c / (p + c) : 2 * f / (u + f);
        return [l, v * 100, g * 100];
      }, i.hsv.rgb = function(o) {
        let l = o[0] / 60, f = o[1] / 100, u = o[2] / 100, c = Math.floor(l) % 6, p = l - Math.floor(l), g = 255 * u * (1 - f), v = 255 * u * (1 - f * p), b = 255 * u * (1 - f * (1 - p));
        switch (u *= 255, c) {
          case 0:
            return [u, b, g];
          case 1:
            return [v, u, g];
          case 2:
            return [g, u, b];
          case 3:
            return [g, v, u];
          case 4:
            return [b, g, u];
          case 5:
            return [u, g, v];
        }
      }, i.hsv.hsl = function(o) {
        let l = o[0], f = o[1] / 100, u = o[2] / 100, c = Math.max(u, 0.01), p, g;
        g = (2 - f) * u;
        let v = (2 - f) * c;
        return p = f * c, p /= v <= 1 ? v : 2 - v, p = p || 0, g /= 2, [l, p * 100, g * 100];
      }, i.hwb.rgb = function(o) {
        let l = o[0] / 360, f = o[1] / 100, u = o[2] / 100, c = f + u, p;
        c > 1 && (f /= c, u /= c);
        let g = Math.floor(6 * l), v = 1 - u;
        p = 6 * l - g, (g & 1) != 0 && (p = 1 - p);
        let b = f + p * (v - f), w, E, S;
        switch (g) {
          default:
          case 6:
          case 0:
            w = v, E = b, S = f;
            break;
          case 1:
            w = b, E = v, S = f;
            break;
          case 2:
            w = f, E = v, S = b;
            break;
          case 3:
            w = f, E = b, S = v;
            break;
          case 4:
            w = b, E = f, S = v;
            break;
          case 5:
            w = v, E = f, S = b;
            break;
        }
        return [w * 255, E * 255, S * 255];
      }, i.cmyk.rgb = function(o) {
        let l = o[0] / 100, f = o[1] / 100, u = o[2] / 100, c = o[3] / 100, p = 1 - Math.min(1, l * (1 - c) + c), g = 1 - Math.min(1, f * (1 - c) + c), v = 1 - Math.min(1, u * (1 - c) + c);
        return [p * 255, g * 255, v * 255];
      }, i.xyz.rgb = function(o) {
        let l = o[0] / 100, f = o[1] / 100, u = o[2] / 100, c, p, g;
        return c = l * 3.2406 + f * -1.5372 + u * -0.4986, p = l * -0.9689 + f * 1.8758 + u * 0.0415, g = l * 0.0557 + f * -0.204 + u * 1.057, c = c > 31308e-7 ? 1.055 * c ** (1 / 2.4) - 0.055 : c * 12.92, p = p > 31308e-7 ? 1.055 * p ** (1 / 2.4) - 0.055 : p * 12.92, g = g > 31308e-7 ? 1.055 * g ** (1 / 2.4) - 0.055 : g * 12.92, c = Math.min(Math.max(0, c), 1), p = Math.min(Math.max(0, p), 1), g = Math.min(Math.max(0, g), 1), [c * 255, p * 255, g * 255];
      }, i.xyz.lab = function(o) {
        let l = o[0], f = o[1], u = o[2];
        l /= 95.047, f /= 100, u /= 108.883, l = l > 8856e-6 ? l ** (1 / 3) : 7.787 * l + 16 / 116, f = f > 8856e-6 ? f ** (1 / 3) : 7.787 * f + 16 / 116, u = u > 8856e-6 ? u ** (1 / 3) : 7.787 * u + 16 / 116;
        let c = 116 * f - 16, p = 500 * (l - f), g = 200 * (f - u);
        return [c, p, g];
      }, i.lab.xyz = function(o) {
        let l = o[0], f = o[1], u = o[2], c, p, g;
        p = (l + 16) / 116, c = f / 500 + p, g = p - u / 200;
        let v = p ** 3, b = c ** 3, w = g ** 3;
        return p = v > 8856e-6 ? v : (p - 16 / 116) / 7.787, c = b > 8856e-6 ? b : (c - 16 / 116) / 7.787, g = w > 8856e-6 ? w : (g - 16 / 116) / 7.787, c *= 95.047, p *= 100, g *= 108.883, [c, p, g];
      }, i.lab.lch = function(o) {
        let l = o[0], f = o[1], u = o[2], c;
        c = Math.atan2(u, f) * 360 / 2 / Math.PI, c < 0 && (c += 360);
        let p = Math.sqrt(f * f + u * u);
        return [l, p, c];
      }, i.lch.lab = function(o) {
        let l = o[0], f = o[1], u = o[2] / 360 * 2 * Math.PI, c = f * Math.cos(u), p = f * Math.sin(u);
        return [l, c, p];
      }, i.rgb.ansi16 = function(o, l = null) {
        let [f, u, c] = o, p = l === null ? i.rgb.hsv(o)[2] : l;
        if (p = Math.round(p / 50), p === 0)
          return 30;
        let g = 30 + (Math.round(c / 255) << 2 | Math.round(u / 255) << 1 | Math.round(f / 255));
        return p === 2 && (g += 60), g;
      }, i.hsv.ansi16 = function(o) {
        return i.rgb.ansi16(i.hsv.rgb(o), o[2]);
      }, i.rgb.ansi256 = function(o) {
        let l = o[0], f = o[1], u = o[2];
        return l === f && f === u ? l < 8 ? 16 : l > 248 ? 231 : Math.round((l - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(l / 255 * 5) + 6 * Math.round(f / 255 * 5) + Math.round(u / 255 * 5);
      }, i.ansi16.rgb = function(o) {
        let l = o % 10;
        if (l === 0 || l === 7)
          return o > 50 && (l += 3.5), l = l / 10.5 * 255, [l, l, l];
        let f = (~~(o > 50) + 1) * 0.5, u = (l & 1) * f * 255, c = (l >> 1 & 1) * f * 255, p = (l >> 2 & 1) * f * 255;
        return [u, c, p];
      }, i.ansi256.rgb = function(o) {
        if (o >= 232) {
          let p = (o - 232) * 10 + 8;
          return [p, p, p];
        }
        o -= 16;
        let l, f = Math.floor(o / 36) / 5 * 255, u = Math.floor((l = o % 36) / 6) / 5 * 255, c = l % 6 / 5 * 255;
        return [f, u, c];
      }, i.rgb.hex = function(o) {
        let l = (((Math.round(o[0]) & 255) << 16) + ((Math.round(o[1]) & 255) << 8) + (Math.round(o[2]) & 255)).toString(16).toUpperCase();
        return "000000".substring(l.length) + l;
      }, i.hex.rgb = function(o) {
        let l = o.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
        if (!l)
          return [0, 0, 0];
        let f = l[0];
        l[0].length === 3 && (f = f.split("").map((v) => v + v).join(""));
        let u = parseInt(f, 16), c = u >> 16 & 255, p = u >> 8 & 255, g = u & 255;
        return [c, p, g];
      }, i.rgb.hcg = function(o) {
        let l = o[0] / 255, f = o[1] / 255, u = o[2] / 255, c = Math.max(Math.max(l, f), u), p = Math.min(Math.min(l, f), u), g = c - p, v, b;
        return g < 1 ? v = p / (1 - g) : v = 0, g <= 0 ? b = 0 : c === l ? b = (f - u) / g % 6 : c === f ? b = 2 + (u - l) / g : b = 4 + (l - f) / g, b /= 6, b %= 1, [b * 360, g * 100, v * 100];
      }, i.hsl.hcg = function(o) {
        let l = o[1] / 100, f = o[2] / 100, u = f < 0.5 ? 2 * l * f : 2 * l * (1 - f), c = 0;
        return u < 1 && (c = (f - 0.5 * u) / (1 - u)), [o[0], u * 100, c * 100];
      }, i.hsv.hcg = function(o) {
        let l = o[1] / 100, f = o[2] / 100, u = l * f, c = 0;
        return u < 1 && (c = (f - u) / (1 - u)), [o[0], u * 100, c * 100];
      }, i.hcg.rgb = function(o) {
        let l = o[0] / 360, f = o[1] / 100, u = o[2] / 100;
        if (f === 0)
          return [u * 255, u * 255, u * 255];
        let c = [0, 0, 0], p = l % 1 * 6, g = p % 1, v = 1 - g, b = 0;
        switch (Math.floor(p)) {
          case 0:
            c[0] = 1, c[1] = g, c[2] = 0;
            break;
          case 1:
            c[0] = v, c[1] = 1, c[2] = 0;
            break;
          case 2:
            c[0] = 0, c[1] = 1, c[2] = g;
            break;
          case 3:
            c[0] = 0, c[1] = v, c[2] = 1;
            break;
          case 4:
            c[0] = g, c[1] = 0, c[2] = 1;
            break;
          default:
            c[0] = 1, c[1] = 0, c[2] = v;
        }
        return b = (1 - f) * u, [(f * c[0] + b) * 255, (f * c[1] + b) * 255, (f * c[2] + b) * 255];
      }, i.hcg.hsv = function(o) {
        let l = o[1] / 100, f = o[2] / 100, u = l + f * (1 - l), c = 0;
        return u > 0 && (c = l / u), [o[0], c * 100, u * 100];
      }, i.hcg.hsl = function(o) {
        let l = o[1] / 100, f = o[2] / 100 * (1 - l) + 0.5 * l, u = 0;
        return f > 0 && f < 0.5 ? u = l / (2 * f) : f >= 0.5 && f < 1 && (u = l / (2 * (1 - f))), [o[0], u * 100, f * 100];
      }, i.hcg.hwb = function(o) {
        let l = o[1] / 100, f = o[2] / 100, u = l + f * (1 - l);
        return [o[0], (u - l) * 100, (1 - u) * 100];
      }, i.hwb.hcg = function(o) {
        let l = o[1] / 100, f = o[2] / 100, u = 1 - f, c = u - l, p = 0;
        return c < 1 && (p = (u - c) / (1 - c)), [o[0], c * 100, p * 100];
      }, i.apple.rgb = function(o) {
        return [o[0] / 65535 * 255, o[1] / 65535 * 255, o[2] / 65535 * 255];
      }, i.rgb.apple = function(o) {
        return [o[0] / 255 * 65535, o[1] / 255 * 65535, o[2] / 255 * 65535];
      }, i.gray.rgb = function(o) {
        return [o[0] / 100 * 255, o[0] / 100 * 255, o[0] / 100 * 255];
      }, i.gray.hsl = function(o) {
        return [0, 0, o[0]];
      }, i.gray.hsv = i.gray.hsl, i.gray.hwb = function(o) {
        return [0, 100, o[0]];
      }, i.gray.cmyk = function(o) {
        return [0, 0, 0, o[0]];
      }, i.gray.lab = function(o) {
        return [o[0], 0, 0];
      }, i.gray.hex = function(o) {
        let l = Math.round(o[0] / 100 * 255) & 255, f = ((l << 16) + (l << 8) + l).toString(16).toUpperCase();
        return "000000".substring(f.length) + f;
      }, i.rgb.gray = function(o) {
        return [(o[0] + o[1] + o[2]) / 3 / 255 * 100];
      };
    });
    var hu = ve((e2, t) => {
      j(), k(), N(), I();
      var r = oo();
      function n() {
        let l = {}, f = Object.keys(r);
        for (let u = f.length, c = 0; c < u; c++)
          l[f[c]] = { distance: -1, parent: null };
        return l;
      }
      y(n, "vc"), d(n, "buildGraph");
      function i(l) {
        let f = n(), u = [l];
        for (f[l].distance = 0; u.length; ) {
          let c = u.pop(), p = Object.keys(r[c]);
          for (let g = p.length, v = 0; v < g; v++) {
            let b = p[v], w = f[b];
            w.distance === -1 && (w.distance = f[c].distance + 1, w.parent = c, u.unshift(b));
          }
        }
        return f;
      }
      y(i, "Ec"), d(i, "deriveBFS");
      function a(l, f) {
        return function(u) {
          return f(l(u));
        };
      }
      y(a, "_c"), d(a, "link");
      function o(l, f) {
        let u = [f[l].parent, l], c = r[f[l].parent][l], p = f[l].parent;
        for (; f[p].parent; )
          u.unshift(f[p].parent), c = a(r[f[p].parent][p], c), p = f[p].parent;
        return c.conversion = u, c;
      }
      y(o, "Ac"), d(o, "wrapConversion"), t.exports = function(l) {
        let f = i(l), u = {}, c = Object.keys(f);
        for (let p = c.length, g = 0; g < p; g++) {
          let v = c[g];
          f[v].parent !== null && (u[v] = o(v, f));
        }
        return u;
      };
    });
    var gu = ve((e2, t) => {
      j(), k(), N(), I();
      var r = oo(), n = hu(), i = {}, a = Object.keys(r);
      function o(f) {
        let u = d(function(...c) {
          let p = c[0];
          return p == null ? p : (p.length > 1 && (c = p), f(c));
        }, "wrappedFn");
        return "conversion" in f && (u.conversion = f.conversion), u;
      }
      y(o, "Pc"), d(o, "wrapRaw");
      function l(f) {
        let u = d(function(...c) {
          let p = c[0];
          if (p == null)
            return p;
          p.length > 1 && (c = p);
          let g = f(c);
          if (typeof g == "object")
            for (let v = g.length, b = 0; b < v; b++)
              g[b] = Math.round(g[b]);
          return g;
        }, "wrappedFn");
        return "conversion" in f && (u.conversion = f.conversion), u;
      }
      y(l, "Mc"), d(l, "wrapRounded"), a.forEach((f) => {
        i[f] = {}, Object.defineProperty(i[f], "channels", { value: r[f].channels }), Object.defineProperty(i[f], "labels", { value: r[f].labels });
        let u = n(f);
        Object.keys(u).forEach((c) => {
          let p = u[c];
          i[f][c] = l(p), i[f][c].raw = o(p);
        });
      }), t.exports = i;
    });
    var yu = ve((e2, t) => {
      j(), k(), N(), I();
      var r = d((p, g) => (...v) => `[${p(...v) + g}m`, "wrapAnsi16"), n = d((p, g) => (...v) => {
        let b = p(...v);
        return `[${38 + g};5;${b}m`;
      }, "wrapAnsi256"), i = d((p, g) => (...v) => {
        let b = p(...v);
        return `[${38 + g};2;${b[0]};${b[1]};${b[2]}m`;
      }, "wrapAnsi16m"), a = d((p) => p, "ansi2ansi"), o = d((p, g, v) => [p, g, v], "rgb2rgb"), l = d((p, g, v) => {
        Object.defineProperty(p, g, { get: () => {
          let b = v();
          return Object.defineProperty(p, g, { value: b, enumerable: true, configurable: true }), b;
        }, enumerable: true, configurable: true });
      }, "setLazyProperty"), f, u = d((p, g, v, b) => {
        f === void 0 && (f = gu());
        let w = b ? 10 : 0, E = {};
        for (let [S, T] of Object.entries(f)) {
          let A = S === "ansi16" ? "ansi" : S;
          S === g ? E[A] = p(v, w) : typeof T == "object" && (E[A] = p(T[g], w));
        }
        return E;
      }, "makeDynamicStyles");
      function c() {
        let p = new Map(), g = { modifier: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, color: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], blackBright: [90, 39], redBright: [91, 39], greenBright: [92, 39], yellowBright: [93, 39], blueBright: [94, 39], magentaBright: [95, 39], cyanBright: [96, 39], whiteBright: [97, 39] }, bgColor: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49], bgBlackBright: [100, 49], bgRedBright: [101, 49], bgGreenBright: [102, 49], bgYellowBright: [103, 49], bgBlueBright: [104, 49], bgMagentaBright: [105, 49], bgCyanBright: [106, 49], bgWhiteBright: [107, 49] } };
        g.color.gray = g.color.blackBright, g.bgColor.bgGray = g.bgColor.bgBlackBright, g.color.grey = g.color.blackBright, g.bgColor.bgGrey = g.bgColor.bgBlackBright;
        for (let [v, b] of Object.entries(g)) {
          for (let [w, E] of Object.entries(b))
            g[w] = { open: `[${E[0]}m`, close: `[${E[1]}m` }, b[w] = g[w], p.set(E[0], E[1]);
          Object.defineProperty(g, v, { value: b, enumerable: false });
        }
        return Object.defineProperty(g, "codes", { value: p, enumerable: false }), g.color.close = "[39m", g.bgColor.close = "[49m", l(g.color, "ansi", () => u(r, "ansi16", a, false)), l(g.color, "ansi256", () => u(n, "ansi256", a, false)), l(g.color, "ansi16m", () => u(i, "rgb", o, false)), l(g.bgColor, "ansi", () => u(r, "ansi16", a, true)), l(g.bgColor, "ansi256", () => u(n, "ansi256", a, true)), l(g.bgColor, "ansi16m", () => u(i, "rgb", o, true)), g;
      }
      y(c, "Oc"), d(c, "assembleStyles"), Object.defineProperty(t, "exports", { enumerable: true, get: c });
    });
    var mu = ve(() => {
      j(), k(), N(), I();
    });
    var vu = ve((e2, t) => {
      j(), k(), N(), I();
      var r = d((i, a, o) => {
        let l = i.indexOf(a);
        if (l === -1)
          return i;
        let f = a.length, u = 0, c = "";
        do
          c += i.substr(u, l - u) + a + o, u = l + f, l = i.indexOf(a, u);
        while (l !== -1);
        return c += i.substr(u), c;
      }, "stringReplaceAll"), n = d((i, a, o, l) => {
        let f = 0, u = "";
        do {
          let c = i[l - 1] === "\r";
          u += i.substr(f, (c ? l - 1 : l) - f) + a + (c ? `\r
` : `
`) + o, f = l + 1, l = i.indexOf(`
`, f);
        } while (l !== -1);
        return u += i.substr(f), u;
      }, "stringEncaseCRLFWithFirstIndex");
      t.exports = { stringReplaceAll: r, stringEncaseCRLFWithFirstIndex: n };
    });
    var bu = ve((e2, t) => {
      j(), k(), N(), I();
      var r = /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, n = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, i = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, a = /\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi, o = new Map([["n", `
`], ["r", "\r"], ["t", "	"], ["b", "\b"], ["f", "\f"], ["v", "\v"], ["0", "\0"], ["\\", "\\"], ["e", ""], ["a", "\x07"]]);
      function l(p) {
        let g = p[0] === "u", v = p[1] === "{";
        return g && !v && p.length === 5 || p[0] === "x" && p.length === 3 ? String.fromCharCode(parseInt(p.slice(1), 16)) : g && v ? String.fromCodePoint(parseInt(p.slice(2, -1), 16)) : o.get(p) || p;
      }
      y(l, "Ms"), d(l, "unescape");
      function f(p, g) {
        let v = [], b = g.trim().split(/\s*,\s*/g), w;
        for (let E of b) {
          let S = Number(E);
          if (!Number.isNaN(S))
            v.push(S);
          else if (w = E.match(i))
            v.push(w[2].replace(a, (T, A, R) => A ? l(A) : R));
          else
            throw new Error(`Invalid Chalk template style argument: ${E} (in style '${p}')`);
        }
        return v;
      }
      y(f, "Nc"), d(f, "parseArguments");
      function u(p) {
        n.lastIndex = 0;
        let g = [], v;
        for (; (v = n.exec(p)) !== null; ) {
          let b = v[1];
          if (v[2]) {
            let w = f(b, v[2]);
            g.push([b].concat(w));
          } else
            g.push([b]);
        }
        return g;
      }
      y(u, "Cc"), d(u, "parseStyle");
      function c(p, g) {
        let v = {};
        for (let w of g)
          for (let E of w.styles)
            v[E[0]] = w.inverse ? null : E.slice(1);
        let b = p;
        for (let [w, E] of Object.entries(v))
          if (Array.isArray(E)) {
            if (!(w in b))
              throw new Error(`Unknown Chalk style: ${w}`);
            b = E.length > 0 ? b[w](...E) : b[w];
          }
        return b;
      }
      y(c, "Os"), d(c, "buildStyle"), t.exports = (p, g) => {
        let v = [], b = [], w = [];
        if (g.replace(r, (E, S, T, A, R, q) => {
          if (S)
            w.push(l(S));
          else if (A) {
            let B = w.join("");
            w = [], b.push(v.length === 0 ? B : c(p, v)(B)), v.push({ inverse: T, styles: u(A) });
          } else if (R) {
            if (v.length === 0)
              throw new Error("Found extraneous } in Chalk template literal");
            b.push(c(p, v)(w.join(""))), w = [], v.pop();
          } else
            w.push(q);
        }), b.push(w.join("")), v.length > 0) {
          let E = `Chalk template literal is missing ${v.length} closing bracket${v.length === 1 ? "" : "s"} (\`}\`)`;
          throw new Error(E);
        }
        return b.join("");
      };
    });
    var Wt = ve((e2, t) => {
      j(), k(), N(), I();
      var r = yu(), { stdout: n, stderr: i } = mu(), { stringReplaceAll: a, stringEncaseCRLFWithFirstIndex: o } = vu(), { isArray: l } = Array, f = ["ansi", "ansi", "ansi256", "ansi16m"], u = Object.create(null), c = d((B, F = {}) => {
        if (F.level && !(Number.isInteger(F.level) && F.level >= 0 && F.level <= 3))
          throw new Error("The `level` option should be an integer from 0 to 3");
        let C = n ? n.level : 0;
        B.level = F.level === void 0 ? C : F.level;
      }, "applyOptions"), p = y(class {
        constructor(B) {
          return g(B);
        }
      }, "so");
      d(p, "ChalkClass");
      var g = d((B) => {
        let F = {};
        return c(F, B), F.template = (...C) => R(F.template, ...C), Object.setPrototypeOf(F, v.prototype), Object.setPrototypeOf(F.template, F), F.template.constructor = () => {
          throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.");
        }, F.template.Instance = p, F.template;
      }, "chalkFactory");
      function v(B) {
        return g(B);
      }
      y(v, "Kr"), d(v, "Chalk");
      for (let [B, F] of Object.entries(r))
        u[B] = { get() {
          let C = S(this, E(F.open, F.close, this._styler), this._isEmpty);
          return Object.defineProperty(this, B, { value: C }), C;
        } };
      u.visible = { get() {
        let B = S(this, this._styler, true);
        return Object.defineProperty(this, "visible", { value: B }), B;
      } };
      var b = ["rgb", "hex", "keyword", "hsl", "hsv", "hwb", "ansi", "ansi256"];
      for (let B of b)
        u[B] = { get() {
          let { level: F } = this;
          return function(...C) {
            let W = E(r.color[f[F]][B](...C), r.color.close, this._styler);
            return S(this, W, this._isEmpty);
          };
        } };
      for (let B of b) {
        let F = "bg" + B[0].toUpperCase() + B.slice(1);
        u[F] = { get() {
          let { level: C } = this;
          return function(...W) {
            let G = E(r.bgColor[f[C]][B](...W), r.bgColor.close, this._styler);
            return S(this, G, this._isEmpty);
          };
        } };
      }
      var w = Object.defineProperties(() => {
      }, { ...u, level: { enumerable: true, get() {
        return this._generator.level;
      }, set(B) {
        this._generator.level = B;
      } } }), E = d((B, F, C) => {
        let W, G;
        return C === void 0 ? (W = B, G = F) : (W = C.openAll + B, G = F + C.closeAll), { open: B, close: F, openAll: W, closeAll: G, parent: C };
      }, "createStyler"), S = d((B, F, C) => {
        let W = d((...G) => l(G[0]) && l(G[0].raw) ? T(W, R(W, ...G)) : T(W, G.length === 1 ? "" + G[0] : G.join(" ")), "builder");
        return Object.setPrototypeOf(W, w), W._generator = B, W._styler = F, W._isEmpty = C, W;
      }, "createBuilder"), T = d((B, F) => {
        if (B.level <= 0 || !F)
          return B._isEmpty ? "" : F;
        let C = B._styler;
        if (C === void 0)
          return F;
        let { openAll: W, closeAll: G } = C;
        if (F.indexOf("") !== -1)
          for (; C !== void 0; )
            F = a(F, C.close, C.open), C = C.parent;
        let pe = F.indexOf(`
`);
        return pe !== -1 && (F = o(F, G, W, pe)), W + F + G;
      }, "applyStyle"), A, R = d((B, ...F) => {
        let [C] = F;
        if (!l(C) || !l(C.raw))
          return F.join(" ");
        let W = F.slice(1), G = [C.raw[0]];
        for (let pe = 1; pe < C.length; pe++)
          G.push(String(W[pe - 1]).replace(/[{}\\]/g, "\\$&"), String(C.raw[pe]));
        return A === void 0 && (A = bu()), A(B, G.join(""));
      }, "chalkTag");
      Object.defineProperties(v.prototype, u);
      var q = v();
      q.supportsColor = n, q.stderr = v({ level: i ? i.level : 0 }), q.stderr.supportsColor = i, t.exports = q;
    });
    var ao = ve((e2, t) => {
      j(), k(), N(), I(), t.exports = (r, n = 1, i) => {
        if (i = { indent: " ", includeEmptyLines: false, ...i }, typeof r != "string")
          throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof r}\``);
        if (typeof n != "number")
          throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof n}\``);
        if (typeof i.indent != "string")
          throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof i.indent}\``);
        if (n === 0)
          return r;
        let a = i.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
        return r.replace(a, i.indent.repeat(n));
      };
    });
    var so = ve((e2, t) => {
      j(), k(), N(), I(), t.exports = function() {
        function r(n, i, a, o, l) {
          return n < i || a < i ? n > a ? a + 1 : n + 1 : o === l ? i : i + 1;
        }
        return y(r, "e"), d(r, "_min"), function(n, i) {
          if (n === i)
            return 0;
          if (n.length > i.length) {
            var a = n;
            n = i, i = a;
          }
          for (var o = n.length, l = i.length; o > 0 && n.charCodeAt(o - 1) === i.charCodeAt(l - 1); )
            o--, l--;
          for (var f = 0; f < o && n.charCodeAt(f) === i.charCodeAt(f); )
            f++;
          if (o -= f, l -= f, o === 0 || l < 3)
            return l;
          var u = 0, c, p, g, v, b, w, E, S, T, A, R, q, B = [];
          for (c = 0; c < o; c++)
            B.push(c + 1), B.push(n.charCodeAt(f + c));
          for (var F = B.length - 1; u < l - 3; )
            for (T = i.charCodeAt(f + (p = u)), A = i.charCodeAt(f + (g = u + 1)), R = i.charCodeAt(f + (v = u + 2)), q = i.charCodeAt(f + (b = u + 3)), w = u += 4, c = 0; c < F; c += 2)
              E = B[c], S = B[c + 1], p = r(E, p, g, T, S), g = r(p, g, v, A, S), v = r(g, v, b, R, S), w = r(v, b, w, q, S), B[c] = w, b = v, v = g, g = p, p = E;
          for (; u < l; )
            for (T = i.charCodeAt(f + (p = u)), w = ++u, c = 0; c < F; c += 2)
              E = B[c], B[c] = w = r(E, p, w, T, B[c + 1]), p = E;
          return w;
        };
      }();
    });
    var uo = ve((e2) => {
      j(), k(), N(), I();
      var t = d((x, $) => () => ($ || x(($ = { exports: {} }).exports, $), $.exports), "c"), r = t((x, $) => {
        "use strict";
        $.exports = function() {
          if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
            return false;
          if (typeof Symbol.iterator == "symbol")
            return true;
          var P = {}, U = Symbol("test"), Q = Object(U);
          if (typeof U == "string" || Object.prototype.toString.call(U) !== "[object Symbol]" || Object.prototype.toString.call(Q) !== "[object Symbol]")
            return false;
          var H = 42;
          P[U] = H;
          for (U in P)
            return false;
          if (typeof Object.keys == "function" && Object.keys(P).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(P).length !== 0)
            return false;
          var z = Object.getOwnPropertySymbols(P);
          if (z.length !== 1 || z[0] !== U || !Object.prototype.propertyIsEnumerable.call(P, U))
            return false;
          if (typeof Object.getOwnPropertyDescriptor == "function") {
            var Z = Object.getOwnPropertyDescriptor(P, U);
            if (Z.value !== H || Z.enumerable !== true)
              return false;
          }
          return true;
        };
      }), n = t((x, $) => {
        "use strict";
        var P = r();
        $.exports = function() {
          return P() && !!Symbol.toStringTag;
        };
      }), i = t((x, $) => {
        "use strict";
        var P = typeof Symbol != "undefined" && Symbol, U = r();
        $.exports = function() {
          return typeof P != "function" || typeof Symbol != "function" || typeof P("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? false : U();
        };
      }), a = t((x, $) => {
        "use strict";
        var P = "Function.prototype.bind called on incompatible ", U = Array.prototype.slice, Q = Object.prototype.toString, H = "[object Function]";
        $.exports = function(z) {
          var Z = this;
          if (typeof Z != "function" || Q.call(Z) !== H)
            throw new TypeError(P + Z);
          for (var s = U.call(arguments, 1), h, m = function() {
            if (this instanceof h) {
              var J = Z.apply(this, s.concat(U.call(arguments)));
              return Object(J) === J ? J : this;
            } else
              return Z.apply(z, s.concat(U.call(arguments)));
          }, _ = Math.max(0, Z.length - s.length), O = [], M = 0; M < _; M++)
            O.push("$" + M);
          if (h = Function("binder", "return function (" + O.join(",") + "){ return binder.apply(this,arguments); }")(m), Z.prototype) {
            var L = d(function() {
            }, "p");
            L.prototype = Z.prototype, h.prototype = new L(), L.prototype = null;
          }
          return h;
        };
      }), o = t((x, $) => {
        "use strict";
        var P = a();
        $.exports = Function.prototype.bind || P;
      }), l = t((x, $) => {
        "use strict";
        var P = o();
        $.exports = P.call(Function.call, Object.prototype.hasOwnProperty);
      }), f = t((x, $) => {
        "use strict";
        var P, U = SyntaxError, Q = Function, H = TypeError, z = d(function(ce) {
          try {
            return Q('"use strict"; return (' + ce + ").constructor;")();
          } catch (ge) {
          }
        }, "ur"), Z = Object.getOwnPropertyDescriptor;
        if (Z)
          try {
            Z({}, "");
          } catch (ce) {
            Z = null;
          }
        var s = d(function() {
          throw new H();
        }, "pr"), h = Z ? function() {
          try {
            return arguments.callee, s;
          } catch (ce) {
            try {
              return Z(arguments, "callee").get;
            } catch (ge) {
              return s;
            }
          }
        }() : s, m = i()(), _ = Object.getPrototypeOf || function(ce) {
          return ce.__proto__;
        }, O = {}, M = typeof Uint8Array == "undefined" ? P : _(Uint8Array), L = { "%AggregateError%": typeof AggregateError == "undefined" ? P : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer == "undefined" ? P : ArrayBuffer, "%ArrayIteratorPrototype%": m ? _([][Symbol.iterator]()) : P, "%AsyncFromSyncIteratorPrototype%": P, "%AsyncFunction%": O, "%AsyncGenerator%": O, "%AsyncGeneratorFunction%": O, "%AsyncIteratorPrototype%": O, "%Atomics%": typeof Atomics == "undefined" ? P : Atomics, "%BigInt%": typeof BigInt == "undefined" ? P : BigInt, "%Boolean%": Boolean, "%DataView%": typeof DataView == "undefined" ? P : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": Error, "%eval%": eval, "%EvalError%": EvalError, "%Float32Array%": typeof Float32Array == "undefined" ? P : Float32Array, "%Float64Array%": typeof Float64Array == "undefined" ? P : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry == "undefined" ? P : FinalizationRegistry, "%Function%": Q, "%GeneratorFunction%": O, "%Int8Array%": typeof Int8Array == "undefined" ? P : Int8Array, "%Int16Array%": typeof Int16Array == "undefined" ? P : Int16Array, "%Int32Array%": typeof Int32Array == "undefined" ? P : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": m ? _(_([][Symbol.iterator]())) : P, "%JSON%": typeof JSON == "object" ? JSON : P, "%Map%": typeof Map == "undefined" ? P : Map, "%MapIteratorPrototype%": typeof Map == "undefined" || !m ? P : _(new Map()[Symbol.iterator]()), "%Math%": Math, "%Number%": Number, "%Object%": Object, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise == "undefined" ? P : Promise, "%Proxy%": typeof Proxy == "undefined" ? P : Proxy, "%RangeError%": RangeError, "%ReferenceError%": ReferenceError, "%Reflect%": typeof Reflect == "undefined" ? P : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set == "undefined" ? P : Set, "%SetIteratorPrototype%": typeof Set == "undefined" || !m ? P : _(new Set()[Symbol.iterator]()), "%SharedArrayBuffer%": typeof SharedArrayBuffer == "undefined" ? P : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": m ? _(""[Symbol.iterator]()) : P, "%Symbol%": m ? Symbol : P, "%SyntaxError%": U, "%ThrowTypeError%": h, "%TypedArray%": M, "%TypeError%": H, "%Uint8Array%": typeof Uint8Array == "undefined" ? P : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray == "undefined" ? P : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array == "undefined" ? P : Uint16Array, "%Uint32Array%": typeof Uint32Array == "undefined" ? P : Uint32Array, "%URIError%": URIError, "%WeakMap%": typeof WeakMap == "undefined" ? P : WeakMap, "%WeakRef%": typeof WeakRef == "undefined" ? P : WeakRef, "%WeakSet%": typeof WeakSet == "undefined" ? P : WeakSet }, J = d(y(function ce(ge) {
          var ye;
          if (ge === "%AsyncFunction%")
            ye = z("async function () {}");
          else if (ge === "%GeneratorFunction%")
            ye = z("function* () {}");
          else if (ge === "%AsyncGeneratorFunction%")
            ye = z("async function* () {}");
          else if (ge === "%AsyncGenerator%") {
            var me = ce("%AsyncGeneratorFunction%");
            me && (ye = me.prototype);
          } else if (ge === "%AsyncIteratorPrototype%") {
            var $e = ce("%AsyncGenerator%");
            $e && (ye = _($e.prototype));
          }
          return L[ge] = ye, ye;
        }, "V"), "r"), re = { "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, X = o(), ee = l(), ne = X.call(Function.call, Array.prototype.concat), xe = X.call(Function.apply, Array.prototype.splice), Be = X.call(Function.call, String.prototype.replace), ie = X.call(Function.call, String.prototype.slice), he = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, _e = /\\(\\)?/g, Se = d(function(ce) {
          var ge = ie(ce, 0, 1), ye = ie(ce, -1);
          if (ge === "%" && ye !== "%")
            throw new U("invalid intrinsic syntax, expected closing `%`");
          if (ye === "%" && ge !== "%")
            throw new U("invalid intrinsic syntax, expected opening `%`");
          var me = [];
          return Be(ce, he, function($e, We, Ie, gt) {
            me[me.length] = Ie ? Be(gt, _e, "$1") : We || $e;
          }), me;
        }, "it"), ke = d(function(ce, ge) {
          var ye = ce, me;
          if (ee(re, ye) && (me = re[ye], ye = "%" + me[0] + "%"), ee(L, ye)) {
            var $e = L[ye];
            if ($e === O && ($e = J(ye)), typeof $e == "undefined" && !ge)
              throw new H("intrinsic " + ce + " exists, but is not available. Please file an issue!");
            return { alias: me, name: ye, value: $e };
          }
          throw new U("intrinsic " + ce + " does not exist!");
        }, "at");
        $.exports = function(ce, ge) {
          if (typeof ce != "string" || ce.length === 0)
            throw new H("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && typeof ge != "boolean")
            throw new H('"allowMissing" argument must be a boolean');
          var ye = Se(ce), me = ye.length > 0 ? ye[0] : "", $e = ke("%" + me + "%", ge), We = $e.name, Ie = $e.value, gt = false, Jt = $e.alias;
          Jt && (me = Jt[0], xe(ye, ne([0, 1], Jt)));
          for (var lt = 1, yt = true; lt < ye.length; lt += 1) {
            var Ce = ye[lt], Et = ie(Ce, 0, 1), At = ie(Ce, -1);
            if ((Et === '"' || Et === "'" || Et === "`" || At === '"' || At === "'" || At === "`") && Et !== At)
              throw new U("property names with quotes must have matching quotes");
            if ((Ce === "constructor" || !yt) && (gt = true), me += "." + Ce, We = "%" + me + "%", ee(L, We))
              Ie = L[We];
            else if (Ie != null) {
              if (!(Ce in Ie)) {
                if (!ge)
                  throw new H("base intrinsic for " + ce + " exists, but the property is not available.");
                return;
              }
              if (Z && lt + 1 >= ye.length) {
                var et = Z(Ie, Ce);
                yt = !!et, yt && "get" in et && !("originalValue" in et.get) ? Ie = et.get : Ie = Ie[Ce];
              } else
                yt = ee(Ie, Ce), Ie = Ie[Ce];
              yt && !gt && (L[We] = Ie);
            }
          }
          return Ie;
        };
      }), u = t((x, $) => {
        "use strict";
        var P = o(), U = f(), Q = U("%Function.prototype.apply%"), H = U("%Function.prototype.call%"), z = U("%Reflect.apply%", true) || P.call(H, Q), Z = U("%Object.getOwnPropertyDescriptor%", true), s = U("%Object.defineProperty%", true), h = U("%Math.max%");
        if (s)
          try {
            s({}, "a", { value: 1 });
          } catch (_) {
            s = null;
          }
        $.exports = function(_) {
          var O = z(P, H, arguments);
          if (Z && s) {
            var M = Z(O, "length");
            M.configurable && s(O, "length", { value: 1 + h(0, _.length - (arguments.length - 1)) });
          }
          return O;
        };
        var m = d(function() {
          return z(P, Q, arguments);
        }, "Kr");
        s ? s($.exports, "apply", { value: m }) : $.exports.apply = m;
      }), c = t((x, $) => {
        "use strict";
        var P = f(), U = u(), Q = U(P("String.prototype.indexOf"));
        $.exports = function(H, z) {
          var Z = P(H, !!z);
          return typeof Z == "function" && Q(H, ".prototype.") > -1 ? U(Z) : Z;
        };
      }), p = t((x, $) => {
        "use strict";
        var P = n()(), U = c(), Q = U("Object.prototype.toString"), H = d(function(s) {
          return P && s && typeof s == "object" && Symbol.toStringTag in s ? false : Q(s) === "[object Arguments]";
        }, "H"), z = d(function(s) {
          return H(s) ? true : s !== null && typeof s == "object" && typeof s.length == "number" && s.length >= 0 && Q(s) !== "[object Array]" && Q(s.callee) === "[object Function]";
        }, "te"), Z = function() {
          return H(arguments);
        }();
        H.isLegacyArguments = z, $.exports = Z ? H : z;
      }), g = t((x, $) => {
        "use strict";
        var P = Object.prototype.toString, U = Function.prototype.toString, Q = /^\s*(?:function)?\*/, H = n()(), z = Object.getPrototypeOf, Z = d(function() {
          if (!H)
            return false;
          try {
            return Function("return function*() {}")();
          } catch (h) {
          }
        }, "dt"), s;
        $.exports = function(h) {
          if (typeof h != "function")
            return false;
          if (Q.test(U.call(h)))
            return true;
          if (!H) {
            var m = P.call(h);
            return m === "[object GeneratorFunction]";
          }
          if (!z)
            return false;
          if (typeof s == "undefined") {
            var _ = Z();
            s = _ ? z(_) : false;
          }
          return z(h) === s;
        };
      }), v = t((x, $) => {
        var P = Object.prototype.hasOwnProperty, U = Object.prototype.toString;
        $.exports = function(Q, H, z) {
          if (U.call(H) !== "[object Function]")
            throw new TypeError("iterator must be a function");
          var Z = Q.length;
          if (Z === +Z)
            for (var s = 0; s < Z; s++)
              H.call(z, Q[s], s, Q);
          else
            for (var h in Q)
              P.call(Q, h) && H.call(z, Q[h], h, Q);
        };
      }), b = t((x, $) => {
        "use strict";
        var P = ["BigInt64Array", "BigUint64Array", "Float32Array", "Float64Array", "Int16Array", "Int32Array", "Int8Array", "Uint16Array", "Uint32Array", "Uint8Array", "Uint8ClampedArray"], U = typeof ct == "undefined" ? fr : ct;
        $.exports = function() {
          for (var Q = [], H = 0; H < P.length; H++)
            typeof U[P[H]] == "function" && (Q[Q.length] = P[H]);
          return Q;
        };
      }), w = t((x, $) => {
        "use strict";
        var P = f(), U = P("%Object.getOwnPropertyDescriptor%", true);
        if (U)
          try {
            U([], "length");
          } catch (Q) {
            U = null;
          }
        $.exports = U;
      }), E = t((x, $) => {
        "use strict";
        var P = v(), U = b(), Q = c(), H = Q("Object.prototype.toString"), z = n()(), Z = typeof ct == "undefined" ? fr : ct, s = U(), h = Q("Array.prototype.indexOf", true) || function(J, re) {
          for (var X = 0; X < J.length; X += 1)
            if (J[X] === re)
              return X;
          return -1;
        }, m = Q("String.prototype.slice"), _ = {}, O = w(), M = Object.getPrototypeOf;
        z && O && M && P(s, function(J) {
          var re = new Z[J]();
          if (Symbol.toStringTag in re) {
            var X = M(re), ee = O(X, Symbol.toStringTag);
            if (!ee) {
              var ne = M(X);
              ee = O(ne, Symbol.toStringTag);
            }
            _[J] = ee.get;
          }
        });
        var L = d(function(J) {
          var re = false;
          return P(_, function(X, ee) {
            if (!re)
              try {
                re = X.call(J) === ee;
              } catch (ne) {
              }
          }), re;
        }, "jt");
        $.exports = function(J) {
          if (!J || typeof J != "object")
            return false;
          if (!z || !(Symbol.toStringTag in J)) {
            var re = m(H(J), 8, -1);
            return h(s, re) > -1;
          }
          return O ? L(J) : false;
        };
      }), S = t((x, $) => {
        "use strict";
        var P = v(), U = b(), Q = c(), H = Q("Object.prototype.toString"), z = n()(), Z = typeof ct == "undefined" ? fr : ct, s = U(), h = Q("String.prototype.slice"), m = {}, _ = w(), O = Object.getPrototypeOf;
        z && _ && O && P(s, function(J) {
          if (typeof Z[J] == "function") {
            var re = new Z[J]();
            if (Symbol.toStringTag in re) {
              var X = O(re), ee = _(X, Symbol.toStringTag);
              if (!ee) {
                var ne = O(X);
                ee = _(ne, Symbol.toStringTag);
              }
              m[J] = ee.get;
            }
          }
        });
        var M = d(function(J) {
          var re = false;
          return P(m, function(X, ee) {
            if (!re)
              try {
                var ne = X.call(J);
                ne === ee && (re = ne);
              } catch (xe) {
              }
          }), re;
        }, "Ft"), L = E();
        $.exports = function(J) {
          return L(J) ? !z || !(Symbol.toStringTag in J) ? h(H(J), 8, -1) : M(J) : false;
        };
      }), T = t((x) => {
        "use strict";
        var $ = p(), P = g(), U = S(), Q = E();
        function H(V) {
          return V.call.bind(V);
        }
        y(H, "i"), d(H, "F");
        var z = typeof BigInt != "undefined", Z = typeof Symbol != "undefined", s = H(Object.prototype.toString), h = H(Number.prototype.valueOf), m = H(String.prototype.valueOf), _ = H(Boolean.prototype.valueOf);
        z && (O = H(BigInt.prototype.valueOf));
        var O;
        Z && (M = H(Symbol.prototype.valueOf));
        var M;
        function L(V, tu) {
          if (typeof V != "object")
            return false;
          try {
            return tu(V), true;
          } catch (cf) {
            return false;
          }
        }
        y(L, "E"), d(L, "D"), x.isArgumentsObject = $, x.isGeneratorFunction = P, x.isTypedArray = Q;
        function J(V) {
          return typeof Promise != "undefined" && V instanceof Promise || V !== null && typeof V == "object" && typeof V.then == "function" && typeof V.catch == "function";
        }
        y(J, "b"), d(J, "Mt"), x.isPromise = J;
        function re(V) {
          return typeof ArrayBuffer != "undefined" && ArrayBuffer.isView ? ArrayBuffer.isView(V) : Q(V) || Et(V);
        }
        y(re, "_"), d(re, "qt"), x.isArrayBufferView = re;
        function X(V) {
          return U(V) === "Uint8Array";
        }
        y(X, "x"), d(X, "Gt"), x.isUint8Array = X;
        function ee(V) {
          return U(V) === "Uint8ClampedArray";
        }
        y(ee, "P"), d(ee, "$t"), x.isUint8ClampedArray = ee;
        function ne(V) {
          return U(V) === "Uint16Array";
        }
        y(ne, "O"), d(ne, "Wt"), x.isUint16Array = ne;
        function xe(V) {
          return U(V) === "Uint32Array";
        }
        y(xe, "M"), d(xe, "zt"), x.isUint32Array = xe;
        function Be(V) {
          return U(V) === "Int8Array";
        }
        y(Be, "I"), d(Be, "Ct"), x.isInt8Array = Be;
        function ie(V) {
          return U(V) === "Int16Array";
        }
        y(ie, "j"), d(ie, "_t"), x.isInt16Array = ie;
        function he(V) {
          return U(V) === "Int32Array";
        }
        y(he, "N"), d(he, "Vt"), x.isInt32Array = he;
        function _e(V) {
          return U(V) === "Float32Array";
        }
        y(_e, "J"), d(_e, "Jt"), x.isFloat32Array = _e;
        function Se(V) {
          return U(V) === "Float64Array";
        }
        y(Se, "Y"), d(Se, "Ht"), x.isFloat64Array = Se;
        function ke(V) {
          return U(V) === "BigInt64Array";
        }
        y(ke, "pe"), d(ke, "Lt"), x.isBigInt64Array = ke;
        function ce(V) {
          return U(V) === "BigUint64Array";
        }
        y(ce, "V"), d(ce, "Zt"), x.isBigUint64Array = ce;
        function ge(V) {
          return s(V) === "[object Map]";
        }
        y(ge, "Q"), d(ge, "Y"), ge.working = typeof Map != "undefined" && ge(new Map());
        function ye(V) {
          return typeof Map == "undefined" ? false : ge.working ? ge(V) : V instanceof Map;
        }
        y(ye, "L"), d(ye, "Yt"), x.isMap = ye;
        function me(V) {
          return s(V) === "[object Set]";
        }
        y(me, "X"), d(me, "K"), me.working = typeof Set != "undefined" && me(new Set());
        function $e(V) {
          return typeof Set == "undefined" ? false : me.working ? me(V) : V instanceof Set;
        }
        y($e, "H"), d($e, "Kt"), x.isSet = $e;
        function We(V) {
          return s(V) === "[object WeakMap]";
        }
        y(We, "G"), d(We, "Q"), We.working = typeof WeakMap != "undefined" && We(new WeakMap());
        function Ie(V) {
          return typeof WeakMap == "undefined" ? false : We.working ? We(V) : V instanceof WeakMap;
        }
        y(Ie, "ue"), d(Ie, "Qt"), x.isWeakMap = Ie;
        function gt(V) {
          return s(V) === "[object WeakSet]";
        }
        y(gt, "Qe"), d(gt, "jr"), gt.working = typeof WeakSet != "undefined" && gt(new WeakSet());
        function Jt(V) {
          return gt(V);
        }
        y(Jt, "rr"), d(Jt, "Xt"), x.isWeakSet = Jt;
        function lt(V) {
          return s(V) === "[object ArrayBuffer]";
        }
        y(lt, "Ge"), d(lt, "X"), lt.working = typeof ArrayBuffer != "undefined" && lt(new ArrayBuffer());
        function yt(V) {
          return typeof ArrayBuffer == "undefined" ? false : lt.working ? lt(V) : V instanceof ArrayBuffer;
        }
        y(yt, "Ke"), d(yt, "Te"), x.isArrayBuffer = yt;
        function Ce(V) {
          return s(V) === "[object DataView]";
        }
        y(Ce, "ye"), d(Ce, "rr"), Ce.working = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined" && Ce(new DataView(new ArrayBuffer(1), 0, 1));
        function Et(V) {
          return typeof DataView == "undefined" ? false : Ce.working ? Ce(V) : V instanceof DataView;
        }
        y(Et, "mt"), d(Et, "Ie"), x.isDataView = Et;
        var At = typeof SharedArrayBuffer != "undefined" ? SharedArrayBuffer : void 0;
        function et(V) {
          return s(V) === "[object SharedArrayBuffer]";
        }
        y(et, "De"), d(et, "N");
        function vn(V) {
          return typeof At == "undefined" ? false : (typeof et.working == "undefined" && (et.working = et(new At())), et.working ? et(V) : V instanceof At);
        }
        y(vn, "Ni"), d(vn, "Fe"), x.isSharedArrayBuffer = vn;
        function Hi(V) {
          return s(V) === "[object AsyncFunction]";
        }
        y(Hi, "Ol"), d(Hi, "rn"), x.isAsyncFunction = Hi;
        function Yi(V) {
          return s(V) === "[object Map Iterator]";
        }
        y(Yi, "Sl"), d(Yi, "en"), x.isMapIterator = Yi;
        function Zi(V) {
          return s(V) === "[object Set Iterator]";
        }
        y(Zi, "Il"), d(Zi, "tn"), x.isSetIterator = Zi;
        function Ki(V) {
          return s(V) === "[object Generator]";
        }
        y(Ki, "kl"), d(Ki, "nn"), x.isGeneratorObject = Ki;
        function Qi(V) {
          return s(V) === "[object WebAssembly.Module]";
        }
        y(Qi, "Fl"), d(Qi, "on"), x.isWebAssemblyCompiledModule = Qi;
        function bn(V) {
          return L(V, h);
        }
        y(bn, "Ci"), d(bn, "Ue"), x.isNumberObject = bn;
        function wn(V) {
          return L(V, m);
        }
        y(wn, "Di"), d(wn, "ke"), x.isStringObject = wn;
        function _n(V) {
          return L(V, _);
        }
        y(_n, "$i"), d(_n, "Re"), x.isBooleanObject = _n;
        function En(V) {
          return z && L(V, O);
        }
        y(En, "Bi"), d(En, "De"), x.isBigIntObject = En;
        function An(V) {
          return Z && L(V, M);
        }
        y(An, "Li"), d(An, "Ne"), x.isSymbolObject = An;
        function Xi(V) {
          return bn(V) || wn(V) || _n(V) || En(V) || An(V);
        }
        y(Xi, "jl"), d(Xi, "an"), x.isBoxedPrimitive = Xi;
        function eo(V) {
          return typeof Uint8Array != "undefined" && (yt(V) || vn(V));
        }
        y(eo, "Rl"), d(eo, "fn"), x.isAnyArrayBuffer = eo, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(V) {
          Object.defineProperty(x, V, { enumerable: false, value: function() {
            throw new Error(V + " is not supported in userland");
          } });
        });
      }), A = t((x, $) => {
        $.exports = function(P) {
          return P instanceof Ve.Buffer;
        };
      }), R = t((x, $) => {
        typeof Object.create == "function" ? $.exports = function(P, U) {
          U && (P.super_ = U, P.prototype = Object.create(U.prototype, { constructor: { value: P, enumerable: false, writable: true, configurable: true } }));
        } : $.exports = function(P, U) {
          if (U) {
            P.super_ = U;
            var Q = d(function() {
            }, "n");
            Q.prototype = U.prototype, P.prototype = new Q(), P.prototype.constructor = P;
          }
        };
      }), q = Object.getOwnPropertyDescriptors || function(x) {
        for (var $ = Object.keys(x), P = {}, U = 0; U < $.length; U++)
          P[$[U]] = Object.getOwnPropertyDescriptor(x, $[U]);
        return P;
      }, B = /%[sdj%]/g;
      e2.format = function(x) {
        if (!Te(x)) {
          for (var $ = [], P = 0; P < arguments.length; P++)
            $.push(G(arguments[P]));
          return $.join(" ");
        }
        for (var P = 1, U = arguments, Q = U.length, H = String(x).replace(B, function(s) {
          if (s === "%%")
            return "%";
          if (P >= Q)
            return s;
          switch (s) {
            case "%s":
              return String(U[P++]);
            case "%d":
              return Number(U[P++]);
            case "%j":
              try {
                return JSON.stringify(U[P++]);
              } catch (h) {
                return "[Circular]";
              }
            default:
              return s;
          }
        }), z = U[P]; P < Q; z = U[++P])
          wt(z) || !Xe(z) ? H += " " + z : H += " " + G(z);
        return H;
      }, e2.deprecate = function(x, $) {
        if (typeof we != "undefined" && we.noDeprecation === true)
          return x;
        if (typeof we == "undefined")
          return function() {
            return e2.deprecate(x, $).apply(this, arguments);
          };
        var P = false;
        function U() {
          if (!P) {
            if (we.throwDeprecation)
              throw new Error($);
            we.traceDeprecation ? console.trace($) : console.error($), P = true;
          }
          return x.apply(this, arguments);
        }
        return y(U, "n"), d(U, "n"), U;
      };
      var F = {}, C = /^$/;
      we.env.NODE_DEBUG && (W = we.env.NODE_DEBUG, W = W.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), C = new RegExp("^" + W + "$", "i"));
      var W;
      e2.debuglog = function(x) {
        if (x = x.toUpperCase(), !F[x])
          if (C.test(x)) {
            var $ = we.pid;
            F[x] = function() {
              var P = e2.format.apply(e2, arguments);
              console.error("%s %d: %s", x, $, P);
            };
          } else
            F[x] = function() {
            };
        return F[x];
      };
      function G(x, $) {
        var P = { seen: [], stylize: Y };
        return arguments.length >= 3 && (P.depth = arguments[2]), arguments.length >= 4 && (P.colors = arguments[3]), jt($) ? P.showHidden = $ : $ && e2._extend(P, $), Je(P.showHidden) && (P.showHidden = false), Je(P.depth) && (P.depth = 2), Je(P.colors) && (P.colors = false), Je(P.customInspect) && (P.customInspect = true), P.colors && (P.stylize = pe), be(P, x, P.depth);
      }
      y(G, "it"), d(G, "A"), e2.inspect = G, G.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, G.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" };
      function pe(x, $) {
        var P = G.styles[$];
        return P ? "[" + G.colors[P][0] + "m" + x + "[" + G.colors[P][1] + "m" : x;
      }
      y(pe, "Qf"), d(pe, "yn");
      function Y(x, $) {
        return x;
      }
      y(Y, "Kf"), d(Y, "un");
      function de(x) {
        var $ = {};
        return x.forEach(function(P, U) {
          $[P] = true;
        }), $;
      }
      y(de, "Zf"), d(de, "pn");
      function be(x, $, P) {
        if (x.customInspect && $ && st($.inspect) && $.inspect !== e2.inspect && !($.constructor && $.constructor.prototype === $)) {
          var U = $.inspect(P, x);
          return Te(U) || (U = be(x, U, P)), U;
        }
        var Q = se(x, $);
        if (Q)
          return Q;
        var H = Object.keys($), z = de(H);
        if (x.showHidden && (H = Object.getOwnPropertyNames($)), De($) && (H.indexOf("message") >= 0 || H.indexOf("description") >= 0))
          return le($);
        if (H.length === 0) {
          if (st($)) {
            var Z = $.name ? ": " + $.name : "";
            return x.stylize("[Function" + Z + "]", "special");
          }
          if (at($))
            return x.stylize(RegExp.prototype.toString.call($), "regexp");
          if (pt($))
            return x.stylize(Date.prototype.toString.call($), "date");
          if (De($))
            return le($);
        }
        var s = "", h = false, m = ["{", "}"];
        if (Dt($) && (h = true, m = ["[", "]"]), st($)) {
          var _ = $.name ? ": " + $.name : "";
          s = " [Function" + _ + "]";
        }
        if (at($) && (s = " " + RegExp.prototype.toString.call($)), pt($) && (s = " " + Date.prototype.toUTCString.call($)), De($) && (s = " " + le($)), H.length === 0 && (!h || $.length == 0))
          return m[0] + s + m[1];
        if (P < 0)
          return at($) ? x.stylize(RegExp.prototype.toString.call($), "regexp") : x.stylize("[Object]", "special");
        x.seen.push($);
        var O;
        return h ? O = Ue(x, $, P, z, H) : O = H.map(function(M) {
          return Pt(x, $, P, z, M, h);
        }), x.seen.pop(), or(O, s, m);
      }
      y(be, "dn"), d(be, "nr");
      function se(x, $) {
        if (Je($))
          return x.stylize("undefined", "undefined");
        if (Te($)) {
          var P = "'" + JSON.stringify($).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
          return x.stylize(P, "string");
        }
        if (Oe($))
          return x.stylize("" + $, "number");
        if (jt($))
          return x.stylize("" + $, "boolean");
        if (wt($))
          return x.stylize("null", "null");
      }
      y(se, "Xf"), d(se, "cn");
      function le(x) {
        return "[" + Error.prototype.toString.call(x) + "]";
      }
      y(le, "Ao"), d(le, "Tr");
      function Ue(x, $, P, U, Q) {
        for (var H = [], z = 0, Z = $.length; z < Z; ++z)
          sr($, String(z)) ? H.push(Pt(x, $, P, U, String(z), true)) : H.push("");
        return Q.forEach(function(s) {
          s.match(/^\d+$/) || H.push(Pt(x, $, P, U, s, true));
        }), H;
      }
      y(Ue, "ep"), d(Ue, "ln");
      function Pt(x, $, P, U, Q, H) {
        var z, Z, s;
        if (s = Object.getOwnPropertyDescriptor($, Q) || { value: $[Q] }, s.get ? s.set ? Z = x.stylize("[Getter/Setter]", "special") : Z = x.stylize("[Getter]", "special") : s.set && (Z = x.stylize("[Setter]", "special")), sr(U, Q) || (z = "[" + Q + "]"), Z || (x.seen.indexOf(s.value) < 0 ? (wt(P) ? Z = be(x, s.value, null) : Z = be(x, s.value, P - 1), Z.indexOf(`
`) > -1 && (H ? Z = Z.split(`
`).map(function(h) {
          return "  " + h;
        }).join(`
`).substr(2) : Z = `
` + Z.split(`
`).map(function(h) {
          return "   " + h;
        }).join(`
`))) : Z = x.stylize("[Circular]", "special")), Je(z)) {
          if (H && Q.match(/^\d+$/))
            return Z;
          z = JSON.stringify("" + Q), z.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (z = z.substr(1, z.length - 2), z = x.stylize(z, "name")) : (z = z.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), z = x.stylize(z, "string"));
        }
        return z + ": " + Z;
      }
      y(Pt, "xo"), d(Pt, "Ir");
      function or(x, $, P) {
        var U = 0, Q = x.reduce(function(H, z) {
          return U++, z.indexOf(`
`) >= 0 && U++, H + z.replace(/\u001b\[\d\d?m/g, "").length + 1;
        }, 0);
        return Q > 60 ? P[0] + ($ === "" ? "" : $ + `
 `) + " " + x.join(`,
  `) + " " + P[1] : P[0] + $ + " " + x.join(", ") + " " + P[1];
      }
      y(or, "tp"), d(or, "gn"), e2.types = T();
      function Dt(x) {
        return Array.isArray(x);
      }
      y(Dt, "la"), d(Dt, "ze"), e2.isArray = Dt;
      function jt(x) {
        return typeof x == "boolean";
      }
      y(jt, "To"), d(jt, "Fr"), e2.isBoolean = jt;
      function wt(x) {
        return x === null;
      }
      y(wt, "gn"), d(wt, "or"), e2.isNull = wt;
      function ar(x) {
        return x == null;
      }
      y(ar, "rp"), d(ar, "dn"), e2.isNullOrUndefined = ar;
      function Oe(x) {
        return typeof x == "number";
      }
      y(Oe, "ca"), d(Oe, "Ce"), e2.isNumber = Oe;
      function Te(x) {
        return typeof x == "string";
      }
      y(Te, "mn"), d(Te, "ir"), e2.isString = Te;
      function Vt(x) {
        return typeof x == "symbol";
      }
      y(Vt, "np"), d(Vt, "bn"), e2.isSymbol = Vt;
      function Je(x) {
        return x === void 0;
      }
      y(Je, "wt"), d(Je, "O"), e2.isUndefined = Je;
      function at(x) {
        return Xe(x) && kt(x) === "[object RegExp]";
      }
      y(at, "dr"), d(at, "x"), e2.isRegExp = at, e2.types.isRegExp = at;
      function Xe(x) {
        return typeof x == "object" && x !== null;
      }
      y(Xe, "qt"), d(Xe, "U"), e2.isObject = Xe;
      function pt(x) {
        return Xe(x) && kt(x) === "[object Date]";
      }
      y(pt, "hn"), d(pt, "ar"), e2.isDate = pt, e2.types.isDate = pt;
      function De(x) {
        return Xe(x) && (kt(x) === "[object Error]" || x instanceof Error);
      }
      y(De, "gr"), d(De, "M"), e2.isError = De, e2.types.isNativeError = De;
      function st(x) {
        return typeof x == "function";
      }
      y(st, "yn"), d(st, "fr"), e2.isFunction = st;
      function Gt(x) {
        return x === null || typeof x == "boolean" || typeof x == "number" || typeof x == "string" || typeof x == "symbol" || typeof x == "undefined";
      }
      y(Gt, "op"), d(Gt, "mn"), e2.isPrimitive = Gt, e2.isBuffer = A();
      function kt(x) {
        return Object.prototype.toString.call(x);
      }
      y(kt, "Po"), d(kt, "Ur");
      function _t(x) {
        return x < 10 ? "0" + x.toString(10) : x.toString(10);
      }
      y(_t, "Mo"), d(_t, "kr");
      var dt = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
      function ht() {
        var x = new Date(), $ = [_t(x.getHours()), _t(x.getMinutes()), _t(x.getSeconds())].join(":");
        return [x.getDate(), dt[x.getMonth()], $].join(" ");
      }
      y(ht, "sp"), d(ht, "hn"), e2.log = function() {
        console.log("%s - %s", ht(), e2.format.apply(e2, arguments));
      }, e2.inherits = R(), e2._extend = function(x, $) {
        if (!$ || !Xe($))
          return x;
        for (var P = Object.keys($), U = P.length; U--; )
          x[P[U]] = $[P[U]];
        return x;
      };
      function sr(x, $) {
        return Object.prototype.hasOwnProperty.call(x, $);
      }
      y(sr, "fa"), d(sr, "_e");
      var ut = typeof Symbol != "undefined" ? Symbol("util.promisify.custom") : void 0;
      e2.promisify = function(x) {
        if (typeof x != "function")
          throw new TypeError('The "original" argument must be of type Function');
        if (ut && x[ut]) {
          var $ = x[ut];
          if (typeof $ != "function")
            throw new TypeError('The "util.promisify.custom" argument must be of type Function');
          return Object.defineProperty($, ut, { value: $, enumerable: false, writable: false, configurable: true }), $;
        }
        function $() {
          for (var P, U, Q = new Promise(function(Z, s) {
            P = Z, U = s;
          }), H = [], z = 0; z < arguments.length; z++)
            H.push(arguments[z]);
          H.push(function(Z, s) {
            Z ? U(Z) : P(s);
          });
          try {
            x.apply(this, H);
          } catch (Z) {
            U(Z);
          }
          return Q;
        }
        return y($, "t"), d($, "t"), Object.setPrototypeOf($, Object.getPrototypeOf(x)), ut && Object.defineProperty($, ut, { value: $, enumerable: false, writable: false, configurable: true }), Object.defineProperties($, q(x));
      }, e2.promisify.custom = ut;
      function It(x, $) {
        if (!x) {
          var P = new Error("Promise was rejected with a falsy value");
          P.reason = x, x = P;
        }
        return $(x);
      }
      y(It, "ap"), d(It, "vn");
      function ur(x) {
        if (typeof x != "function")
          throw new TypeError('The "original" argument must be of type Function');
        function $() {
          for (var P = [], U = 0; U < arguments.length; U++)
            P.push(arguments[U]);
          var Q = P.pop();
          if (typeof Q != "function")
            throw new TypeError("The last argument must be of type Function");
          var H = this, z = d(function() {
            return Q.apply(H, arguments);
          }, "i");
          x.apply(this, P).then(function(Z) {
            we.nextTick(z.bind(null, null, Z));
          }, function(Z) {
            we.nextTick(It.bind(null, Z, z));
          });
        }
        return y($, "t"), d($, "e"), Object.setPrototypeOf($, Object.getPrototypeOf(x)), Object.defineProperties($, q(x)), $;
      }
      y(ur, "up"), d(ur, "Sn"), e2.callbackify = ur;
    });
    var wu = ve((e2) => {
      j(), k(), N(), I(), e2.isatty = function() {
        return false;
      };
      function t() {
        throw new Error("tty.ReadStream is not implemented");
      }
      y(t, "lp"), d(t, "t"), e2.ReadStream = t;
      function r() {
        throw new Error("tty.WriteStream is not implemented");
      }
      y(r, "cp"), d(r, "e"), e2.WriteStream = r;
    });
    var _u = ve((e2, t) => {
      j(), k(), N(), I();
      var r = 1e3, n = r * 60, i = n * 60, a = i * 24, o = a * 7, l = a * 365.25;
      t.exports = function(g, v) {
        v = v || {};
        var b = typeof g;
        if (b === "string" && g.length > 0)
          return f(g);
        if (b === "number" && isFinite(g))
          return v.long ? c(g) : u(g);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(g));
      };
      function f(g) {
        if (g = String(g), !(g.length > 100)) {
          var v = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(g);
          if (v) {
            var b = parseFloat(v[1]), w = (v[2] || "ms").toLowerCase();
            switch (w) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return b * l;
              case "weeks":
              case "week":
              case "w":
                return b * o;
              case "days":
              case "day":
              case "d":
                return b * a;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return b * i;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return b * n;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return b * r;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return b;
              default:
                return;
            }
          }
        }
      }
      y(f, "dp"), d(f, "parse");
      function u(g) {
        var v = Math.abs(g);
        return v >= a ? Math.round(g / a) + "d" : v >= i ? Math.round(g / i) + "h" : v >= n ? Math.round(g / n) + "m" : v >= r ? Math.round(g / r) + "s" : g + "ms";
      }
      y(u, "gp"), d(u, "fmtShort");
      function c(g) {
        var v = Math.abs(g);
        return v >= a ? p(g, v, a, "day") : v >= i ? p(g, v, i, "hour") : v >= n ? p(g, v, n, "minute") : v >= r ? p(g, v, r, "second") : g + " ms";
      }
      y(c, "mp"), d(c, "fmtLong");
      function p(g, v, b, w) {
        var E = v >= b * 1.5;
        return Math.round(g / b) + " " + w + (E ? "s" : "");
      }
      y(p, "wn"), d(p, "plural");
    });
    var Eu = ve((e2) => {
      j(), k(), N(), I();
      var t = Object.defineProperty, r = d((f) => t(f, "__esModule", { value: true }), "__markAsModule"), n = d((f, u) => t(f, "name", { value: u, configurable: true }), "__name"), i = d((f, u) => {
        r(f);
        for (var c in u)
          t(f, c, { get: u[c], enumerable: true });
      }, "__export");
      i(e2, { setup: () => l });
      var a = Object.defineProperty, o = n((f, u) => a(f, "name", { value: u, configurable: true }), "__name");
      function l(f) {
        let u = o((T, A) => {
          let R, q = null, B, F, C = o((...W) => {
            let G = C, pe = Number(new Date()), Y = pe - (R || pe);
            G.diff = Y, G.prev = R, G.curr = pe, R = pe, W[0] = u.coerce(W[0]), typeof W[0] != "string" && W.unshift("%O");
            let de = 0;
            W[0] = W[0].replace(/%([a-zA-Z%])/g, (be, se) => {
              if (be === "%%")
                return "%";
              de++;
              let le = u.formatters[se];
              if (typeof le == "function") {
                let Ue = W[de];
                be = le.call(G, Ue), W.splice(de, 1), de--;
              }
              return be;
            }), u.formatArgs.call(G, W), A && typeof A == "function" && A.apply(G, W), C.enabled && (G.log || u.log).apply(G, W);
          }, "debug");
          return C.namespace = T, C.useColors = u.useColors(), C.color = u.selectColor(T), C.extend = p, C.destroy = u.destroy, Object.defineProperty(C, "enabled", { enumerable: true, configurable: false, get: () => q !== null ? q : (B !== u.namespaces && (B = u.namespaces, F = u.enabled(T)), F), set: (W) => {
            q = W;
          } }), typeof u.init == "function" && u.init(C), C;
        }, "createDebug");
        u.debug = u, u.default = u, u.coerce = E, u.disable = v, u.enable = g, u.enabled = b, u.humanize = _u(), u.destroy = S, Object.keys(f).forEach((T) => {
          u[T] = f[T];
        }), u.names = [], u.skips = [], u.formatters = {};
        function c(T) {
          let A = 0;
          for (let R = 0; R < T.length; R++)
            A = (A << 5) - A + T.charCodeAt(R), A |= 0;
          return u.colors[Math.abs(A) % u.colors.length];
        }
        y(c, "r"), d(c, "selectColor"), n(c, "selectColor"), o(c, "selectColor"), u.selectColor = c;
        function p(T, A) {
          let R = u(this.namespace + (typeof A == "undefined" ? ":" : A) + T);
          return R.log = this.log, R;
        }
        y(p, "n"), d(p, "extend"), n(p, "extend"), o(p, "extend");
        function g(T) {
          u.save(T), u.namespaces = T, u.names = [], u.skips = [];
          let A, R = (typeof T == "string" ? T : "").split(/[\s,]+/), q = R.length;
          for (A = 0; A < q; A++)
            !R[A] || (T = R[A].replace(/\*/g, ".*?"), T[0] === "-" ? u.skips.push(new RegExp("^" + T.substr(1) + "$")) : u.names.push(new RegExp("^" + T + "$")));
        }
        y(g, "o"), d(g, "enable"), n(g, "enable"), o(g, "enable");
        function v() {
          let T = [...u.names.map(w), ...u.skips.map(w).map((A) => "-" + A)].join(",");
          return u.enable(""), T;
        }
        y(v, "i"), d(v, "disable"), n(v, "disable"), o(v, "disable");
        function b(T) {
          if (T[T.length - 1] === "*")
            return true;
          let A, R;
          for (A = 0, R = u.skips.length; A < R; A++)
            if (u.skips[A].test(T))
              return false;
          for (A = 0, R = u.names.length; A < R; A++)
            if (u.names[A].test(T))
              return true;
          return false;
        }
        y(b, "s"), d(b, "enabled"), n(b, "enabled"), o(b, "enabled");
        function w(T) {
          return T.toString().substring(2, T.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        y(w, "a"), d(w, "toNamespace"), n(w, "toNamespace"), o(w, "toNamespace");
        function E(T) {
          return T instanceof Error ? T.stack || T.message : T;
        }
        y(E, "l"), d(E, "coerce"), n(E, "coerce"), o(E, "coerce");
        function S() {
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
        return y(S, "c"), d(S, "destroy"), n(S, "destroy"), o(S, "destroy"), u.enable(u.load()), u;
      }
      y(l, "Io"), d(l, "setup"), n(l, "setup"), o(l, "setup");
    });
    var Au = ve((e2, t) => {
      j(), k(), N(), I();
      var r = Object.create, n = Object.defineProperty, i = Object.getOwnPropertyDescriptor, a = Object.getOwnPropertyNames, o = Object.getPrototypeOf, l = Object.prototype.hasOwnProperty, f = d((Y) => n(Y, "__esModule", { value: true }), "__markAsModule"), u = d((Y, de) => n(Y, "name", { value: de, configurable: true }), "__name"), c = d((Y, de) => {
        f(Y);
        for (var be in de)
          n(Y, be, { get: de[be], enumerable: true });
      }, "__export"), p = d((Y, de, be) => {
        if (de && typeof de == "object" || typeof de == "function")
          for (let se of a(de))
            !l.call(Y, se) && se !== "default" && n(Y, se, { get: () => de[se], enumerable: !(be = i(de, se)) || be.enumerable });
        return Y;
      }, "__reExport"), g = d((Y) => p(f(n(Y != null ? r(o(Y)) : {}, "default", Y && Y.__esModule && "default" in Y ? { get: () => Y.default, enumerable: true } : { value: Y, enumerable: true })), Y), "__toModule");
      c(e2, { default: () => G });
      var v = g(wu()), b = g(uo()), w = g(Eu()), E = Object.defineProperty, S = u((Y, de) => E(Y, "name", { value: de, configurable: true }), "__name");
      e2.init = C, e2.log = q, e2.formatArgs = A, e2.save = B, e2.load = F, e2.useColors = T, e2.destroy = b.default.deprecate(() => {
      }, "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."), e2.colors = [6, 2, 3, 4, 5, 1], e2.inspectOpts = Object.keys(we.env).filter((Y) => /^debug_/i.test(Y)).reduce((Y, de) => {
        let be = de.substring(6).toLowerCase().replace(/_([a-z])/g, (le, Ue) => Ue.toUpperCase()), se = we.env[de];
        return /^(yes|on|true|enabled)$/i.test(se) ? se = true : /^(no|off|false|disabled)$/i.test(se) ? se = false : se === "null" ? se = null : se = Number(se), Y[be] = se, Y;
      }, {});
      function T() {
        var Y;
        return "colors" in e2.inspectOpts ? Boolean(e2.inspectOpts.colors) : v.default.isatty((Y = we.stderr) == null ? void 0 : Y.fd);
      }
      y(T, "Fo"), d(T, "useColors"), u(T, "useColors"), S(T, "useColors");
      function A(Y) {
        let { namespace: de, useColors: be } = this;
        if (be) {
          let se = this.color, le = "[3" + (se < 8 ? se : "8;5;" + se), Ue = `  ${le};1m${de} [0m`;
          Y[0] = Ue + Y[0].split(`
`).join(`
` + Ue), Y.push(le + "m+" + t.exports.humanize(this.diff) + "[0m");
        } else
          Y[0] = R() + de + " " + Y[0];
      }
      y(A, "jo"), d(A, "formatArgs"), u(A, "formatArgs"), S(A, "formatArgs");
      function R() {
        return e2.inspectOpts.hideDate ? "" : new Date().toISOString() + " ";
      }
      y(R, "Ro"), d(R, "getDate"), u(R, "getDate"), S(R, "getDate");
      function q(...Y) {
        return we.stderr.write(b.default.format(...Y) + `
`);
      }
      y(q, "No"), d(q, "log"), u(q, "log"), S(q, "log");
      function B(Y) {
        Y ? we.env.DEBUG = Y : delete we.env.DEBUG;
      }
      y(B, "Co"), d(B, "save"), u(B, "save"), S(B, "save");
      function F() {
        return we.env.DEBUG;
      }
      y(F, "Do"), d(F, "load"), u(F, "load"), S(F, "load");
      function C(Y) {
        Y.inspectOpts = {};
        let de = Object.keys(e2.inspectOpts);
        for (let be = 0; be < de.length; be++)
          Y.inspectOpts[de[be]] = e2.inspectOpts[de[be]];
      }
      y(C, "$o"), d(C, "init"), u(C, "init"), S(C, "init");
      var W = (0, w.setup)(e2);
      t.exports = W;
      var G = W, { formatters: pe } = W;
      pe.o = function(Y) {
        return this.inspectOpts.colors = this.useColors, b.default.inspect(Y, this.inspectOpts).split(`
`).map((de) => de.trim()).join(" ");
      }, pe.O = function(Y) {
        return this.inspectOpts.colors = this.useColors, b.default.inspect(Y, this.inspectOpts);
      };
    });
    var lo = ve((e2) => {
      j(), k(), N(), I();
      var t = Object.create, r = Object.defineProperty, n = Object.getOwnPropertyDescriptor, i = Object.getOwnPropertyNames, a = Object.getPrototypeOf, o = Object.prototype.hasOwnProperty, l = d((A) => r(A, "__esModule", { value: true }), "__markAsModule"), f = d((A, R) => r(A, "name", { value: R, configurable: true }), "__name"), u = d((A, R) => {
        l(A);
        for (var q in R)
          r(A, q, { get: R[q], enumerable: true });
      }, "__export"), c = d((A, R, q) => {
        if (R && typeof R == "object" || typeof R == "function")
          for (let B of i(R))
            !o.call(A, B) && B !== "default" && r(A, B, { get: () => R[B], enumerable: !(q = n(R, B)) || q.enumerable });
        return A;
      }, "__reExport"), p = d((A) => c(l(r(A != null ? t(a(A)) : {}, "default", A && A.__esModule && "default" in A ? { get: () => A.default, enumerable: true } : { value: A, enumerable: true })), A), "__toModule");
      u(e2, { Debug: () => S, default: () => S, getLogs: () => T });
      var g = p(Au()), v = Object.defineProperty, b = f((A, R) => v(A, "name", { value: R, configurable: true }), "__name"), w = [], E = 100;
      function S(A) {
        return (0, g.default)(A, (...R) => {
          w.push(R), w.length > E && w.shift();
        });
      }
      y(S, "Jt"), d(S, "Debug"), f(S, "Debug"), b(S, "Debug"), S.enable = (A) => {
        g.default.enable(A);
      }, S.enabled = (A) => g.default.enabled(A);
      function T(A = 7500) {
        let R = w.map((q) => q.map((B) => typeof B == "string" ? B : JSON.stringify(B)).join("  ")).join(`
`);
        return R.length < A ? R : R.slice(-A);
      }
      y(T, "Vo"), d(T, "getLogs"), f(T, "getLogs"), b(T, "getLogs");
    });
    var Ou = ve(() => {
      j(), k(), N(), I();
    });
    var xu = ve((e2, t) => {
      j(), k(), N(), I();
      var r = Object.prototype.hasOwnProperty, n = "~";
      function i() {
      }
      y(i, "yr"), d(i, "_"), Object.create && (i.prototype = Object.create(null), new i().__proto__ || (n = false));
      function a(u, c, p) {
        this.fn = u, this.context = c, this.once = p || false;
      }
      y(a, "qp"), d(a, "g");
      function o(u, c, p, g, v) {
        if (typeof p != "function")
          throw new TypeError("The listener must be a function");
        var b = new a(p, g || u, v), w = n ? n + c : c;
        return u._events[w] ? u._events[w].fn ? u._events[w] = [u._events[w], b] : u._events[w].push(b) : (u._events[w] = b, u._eventsCount++), u;
      }
      y(o, "xa"), d(o, "w");
      function l(u, c) {
        --u._eventsCount == 0 ? u._events = new i() : delete u._events[c];
      }
      y(l, "_n"), d(l, "y");
      function f() {
        this._events = new i(), this._eventsCount = 0;
      }
      y(f, "fe"), d(f, "u"), f.prototype.eventNames = function() {
        var u = [], c, p;
        if (this._eventsCount === 0)
          return u;
        for (p in c = this._events)
          r.call(c, p) && u.push(n ? p.slice(1) : p);
        return Object.getOwnPropertySymbols ? u.concat(Object.getOwnPropertySymbols(c)) : u;
      }, f.prototype.listeners = function(u) {
        var c = n ? n + u : u, p = this._events[c];
        if (!p)
          return [];
        if (p.fn)
          return [p.fn];
        for (var g = 0, v = p.length, b = new Array(v); g < v; g++)
          b[g] = p[g].fn;
        return b;
      }, f.prototype.listenerCount = function(u) {
        var c = n ? n + u : u, p = this._events[c];
        return p ? p.fn ? 1 : p.length : 0;
      }, f.prototype.emit = function(u, c, p, g, v, b) {
        var w = n ? n + u : u;
        if (!this._events[w])
          return false;
        var E = this._events[w], S = arguments.length, T, A;
        if (E.fn) {
          switch (E.once && this.removeListener(u, E.fn, void 0, true), S) {
            case 1:
              return E.fn.call(E.context), true;
            case 2:
              return E.fn.call(E.context, c), true;
            case 3:
              return E.fn.call(E.context, c, p), true;
            case 4:
              return E.fn.call(E.context, c, p, g), true;
            case 5:
              return E.fn.call(E.context, c, p, g, v), true;
            case 6:
              return E.fn.call(E.context, c, p, g, v, b), true;
          }
          for (A = 1, T = new Array(S - 1); A < S; A++)
            T[A - 1] = arguments[A];
          E.fn.apply(E.context, T);
        } else {
          var R = E.length, q;
          for (A = 0; A < R; A++)
            switch (E[A].once && this.removeListener(u, E[A].fn, void 0, true), S) {
              case 1:
                E[A].fn.call(E[A].context);
                break;
              case 2:
                E[A].fn.call(E[A].context, c);
                break;
              case 3:
                E[A].fn.call(E[A].context, c, p);
                break;
              case 4:
                E[A].fn.call(E[A].context, c, p, g);
                break;
              default:
                if (!T)
                  for (q = 1, T = new Array(S - 1); q < S; q++)
                    T[q - 1] = arguments[q];
                E[A].fn.apply(E[A].context, T);
            }
        }
        return true;
      }, f.prototype.on = function(u, c, p) {
        return o(this, u, c, p, false);
      }, f.prototype.once = function(u, c, p) {
        return o(this, u, c, p, true);
      }, f.prototype.removeListener = function(u, c, p, g) {
        var v = n ? n + u : u;
        if (!this._events[v])
          return this;
        if (!c)
          return l(this, v), this;
        var b = this._events[v];
        if (b.fn)
          b.fn === c && (!g || b.once) && (!p || b.context === p) && l(this, v);
        else {
          for (var w = 0, E = [], S = b.length; w < S; w++)
            (b[w].fn !== c || g && !b[w].once || p && b[w].context !== p) && E.push(b[w]);
          E.length ? this._events[v] = E.length === 1 ? E[0] : E : l(this, v);
        }
        return this;
      }, f.prototype.removeAllListeners = function(u) {
        var c;
        return u ? (c = n ? n + u : u, this._events[c] && l(this, c)) : (this._events = new i(), this._eventsCount = 0), this;
      }, f.prototype.off = f.prototype.removeListener, f.prototype.addListener = f.prototype.on, f.prefixed = n, f.EventEmitter = f, typeof t != "undefined" && (t.exports = f);
    });
    var co = {};
    no(co, { default: () => xn, existsSync: () => fo });
    function fo() {
      return false;
    }
    y(fo, "Up");
    var po;
    var xn;
    var ho = cr(() => {
      j(), k(), N(), I(), d(fo, "existsSync"), po = { existsSync() {
        return false;
      } }, xn = po;
    });
    var go = ve((e2, t) => {
      j(), k(), N(), I();
      function r(o) {
        if (typeof o != "string")
          throw new TypeError("Path must be a string. Received " + JSON.stringify(o));
      }
      y(r, "qe"), d(r, "c");
      function n(o, l) {
        for (var f = "", u = 0, c = -1, p = 0, g, v = 0; v <= o.length; ++v) {
          if (v < o.length)
            g = o.charCodeAt(v);
          else {
            if (g === 47)
              break;
            g = 47;
          }
          if (g === 47) {
            if (!(c === v - 1 || p === 1))
              if (c !== v - 1 && p === 2) {
                if (f.length < 2 || u !== 2 || f.charCodeAt(f.length - 1) !== 46 || f.charCodeAt(f.length - 2) !== 46) {
                  if (f.length > 2) {
                    var b = f.lastIndexOf("/");
                    if (b !== f.length - 1) {
                      b === -1 ? (f = "", u = 0) : (f = f.slice(0, b), u = f.length - 1 - f.lastIndexOf("/")), c = v, p = 0;
                      continue;
                    }
                  } else if (f.length === 2 || f.length === 1) {
                    f = "", u = 0, c = v, p = 0;
                    continue;
                  }
                }
                l && (f.length > 0 ? f += "/.." : f = "..", u = 2);
              } else
                f.length > 0 ? f += "/" + o.slice(c + 1, v) : f = o.slice(c + 1, v), u = v - c - 1;
            c = v, p = 0;
          } else
            g === 46 && p !== -1 ? ++p : p = -1;
        }
        return f;
      }
      y(n, "Ma"), d(n, "A");
      function i(o, l) {
        var f = l.dir || l.root, u = l.base || (l.name || "") + (l.ext || "");
        return f ? f === l.root ? f + u : f + o + u : u;
      }
      y(i, "Gp"), d(i, "b");
      var a = { resolve: function() {
        for (var o = "", l = false, f, u = arguments.length - 1; u >= -1 && !l; u--) {
          var c;
          u >= 0 ? c = arguments[u] : (f === void 0 && (f = we.cwd()), c = f), r(c), c.length !== 0 && (o = c + "/" + o, l = c.charCodeAt(0) === 47);
        }
        return o = n(o, !l), l ? o.length > 0 ? "/" + o : "/" : o.length > 0 ? o : ".";
      }, normalize: function(o) {
        if (r(o), o.length === 0)
          return ".";
        var l = o.charCodeAt(0) === 47, f = o.charCodeAt(o.length - 1) === 47;
        return o = n(o, !l), o.length === 0 && !l && (o = "."), o.length > 0 && f && (o += "/"), l ? "/" + o : o;
      }, isAbsolute: function(o) {
        return r(o), o.length > 0 && o.charCodeAt(0) === 47;
      }, join: function() {
        if (arguments.length === 0)
          return ".";
        for (var o, l = 0; l < arguments.length; ++l) {
          var f = arguments[l];
          r(f), f.length > 0 && (o === void 0 ? o = f : o += "/" + f);
        }
        return o === void 0 ? "." : a.normalize(o);
      }, relative: function(o, l) {
        if (r(o), r(l), o === l || (o = a.resolve(o), l = a.resolve(l), o === l))
          return "";
        for (var f = 1; f < o.length && o.charCodeAt(f) === 47; ++f)
          ;
        for (var u = o.length, c = u - f, p = 1; p < l.length && l.charCodeAt(p) === 47; ++p)
          ;
        for (var g = l.length, v = g - p, b = c < v ? c : v, w = -1, E = 0; E <= b; ++E) {
          if (E === b) {
            if (v > b) {
              if (l.charCodeAt(p + E) === 47)
                return l.slice(p + E + 1);
              if (E === 0)
                return l.slice(p + E);
            } else
              c > b && (o.charCodeAt(f + E) === 47 ? w = E : E === 0 && (w = 0));
            break;
          }
          var S = o.charCodeAt(f + E), T = l.charCodeAt(p + E);
          if (S !== T)
            break;
          S === 47 && (w = E);
        }
        var A = "";
        for (E = f + w + 1; E <= u; ++E)
          (E === u || o.charCodeAt(E) === 47) && (A.length === 0 ? A += ".." : A += "/..");
        return A.length > 0 ? A + l.slice(p + w) : (p += w, l.charCodeAt(p) === 47 && ++p, l.slice(p));
      }, _makeLong: function(o) {
        return o;
      }, dirname: function(o) {
        if (r(o), o.length === 0)
          return ".";
        for (var l = o.charCodeAt(0), f = l === 47, u = -1, c = true, p = o.length - 1; p >= 1; --p)
          if (l = o.charCodeAt(p), l === 47) {
            if (!c) {
              u = p;
              break;
            }
          } else
            c = false;
        return u === -1 ? f ? "/" : "." : f && u === 1 ? "//" : o.slice(0, u);
      }, basename: function(o, l) {
        if (l !== void 0 && typeof l != "string")
          throw new TypeError('"ext" argument must be a string');
        r(o);
        var f = 0, u = -1, c = true, p;
        if (l !== void 0 && l.length > 0 && l.length <= o.length) {
          if (l.length === o.length && l === o)
            return "";
          var g = l.length - 1, v = -1;
          for (p = o.length - 1; p >= 0; --p) {
            var b = o.charCodeAt(p);
            if (b === 47) {
              if (!c) {
                f = p + 1;
                break;
              }
            } else
              v === -1 && (c = false, v = p + 1), g >= 0 && (b === l.charCodeAt(g) ? --g == -1 && (u = p) : (g = -1, u = v));
          }
          return f === u ? u = v : u === -1 && (u = o.length), o.slice(f, u);
        } else {
          for (p = o.length - 1; p >= 0; --p)
            if (o.charCodeAt(p) === 47) {
              if (!c) {
                f = p + 1;
                break;
              }
            } else
              u === -1 && (c = false, u = p + 1);
          return u === -1 ? "" : o.slice(f, u);
        }
      }, extname: function(o) {
        r(o);
        for (var l = -1, f = 0, u = -1, c = true, p = 0, g = o.length - 1; g >= 0; --g) {
          var v = o.charCodeAt(g);
          if (v === 47) {
            if (!c) {
              f = g + 1;
              break;
            }
            continue;
          }
          u === -1 && (c = false, u = g + 1), v === 46 ? l === -1 ? l = g : p !== 1 && (p = 1) : l !== -1 && (p = -1);
        }
        return l === -1 || u === -1 || p === 0 || p === 1 && l === u - 1 && l === f + 1 ? "" : o.slice(l, u);
      }, format: function(o) {
        if (o === null || typeof o != "object")
          throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof o);
        return i("/", o);
      }, parse: function(o) {
        r(o);
        var l = { root: "", dir: "", base: "", ext: "", name: "" };
        if (o.length === 0)
          return l;
        var f = o.charCodeAt(0), u = f === 47, c;
        u ? (l.root = "/", c = 1) : c = 0;
        for (var p = -1, g = 0, v = -1, b = true, w = o.length - 1, E = 0; w >= c; --w) {
          if (f = o.charCodeAt(w), f === 47) {
            if (!b) {
              g = w + 1;
              break;
            }
            continue;
          }
          v === -1 && (b = false, v = w + 1), f === 46 ? p === -1 ? p = w : E !== 1 && (E = 1) : p !== -1 && (E = -1);
        }
        return p === -1 || v === -1 || E === 0 || E === 1 && p === v - 1 && p === g + 1 ? v !== -1 && (g === 0 && u ? l.base = l.name = o.slice(1, v) : l.base = l.name = o.slice(g, v)) : (g === 0 && u ? (l.name = o.slice(1, p), l.base = o.slice(1, v)) : (l.name = o.slice(g, p), l.base = o.slice(g, v)), l.ext = o.slice(p, v)), g > 0 ? l.dir = o.slice(0, g - 1) : u && (l.dir = "/"), l;
      }, sep: "/", delimiter: ":", win32: null, posix: null };
      a.posix = a, t.exports = a;
    });
    var Tu = ve((e2, t) => {
      j(), k(), N(), I(), t.exports = ({ onlyFirst: r = false } = {}) => {
        let n = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");
        return new RegExp(n, r ? void 0 : "g");
      };
    });
    var Tn = ve((e2, t) => {
      j(), k(), N(), I();
      var r = Tu();
      t.exports = (n) => typeof n == "string" ? n.replace(r(), "") : n;
    });
    var Su = ve((e2, t) => {
      j(), k(), N(), I();
      var r = Symbol("arg flag"), n = y(class extends Error {
        constructor(a, o) {
          super(a);
          this.name = "ArgError", this.code = o, Object.setPrototypeOf(this, n.prototype);
        }
      }, "ve");
      d(n, "ArgError");
      function i(a, { argv: o = we.argv.slice(2), permissive: l = false, stopAtPositional: f = false } = {}) {
        if (!a)
          throw new n("argument specification object is required", "ARG_CONFIG_NO_SPEC");
        let u = { _: [] }, c = {}, p = {};
        for (let g of Object.keys(a)) {
          if (!g)
            throw new n("argument key cannot be an empty string", "ARG_CONFIG_EMPTY_KEY");
          if (g[0] !== "-")
            throw new n(`argument key must start with '-' but found: '${g}'`, "ARG_CONFIG_NONOPT_KEY");
          if (g.length === 1)
            throw new n(`argument key must have a name; singular '-' keys are not allowed: ${g}`, "ARG_CONFIG_NONAME_KEY");
          if (typeof a[g] == "string") {
            c[g] = a[g];
            continue;
          }
          let v = a[g], b = false;
          if (Array.isArray(v) && v.length === 1 && typeof v[0] == "function") {
            let [w] = v;
            v = d((E, S, T = []) => (T.push(w(E, S, T[T.length - 1])), T), "type"), b = w === Boolean || w[r] === true;
          } else if (typeof v == "function")
            b = v === Boolean || v[r] === true;
          else
            throw new n(`type missing or not a function or valid array type: ${g}`, "ARG_CONFIG_VAD_TYPE");
          if (g[1] !== "-" && g.length > 2)
            throw new n(`short argument keys (with a single hyphen) must have only one character: ${g}`, "ARG_CONFIG_SHORTOPT_TOOLONG");
          p[g] = [v, b];
        }
        for (let g = 0, v = o.length; g < v; g++) {
          let b = o[g];
          if (f && u._.length > 0) {
            u._ = u._.concat(o.slice(g));
            break;
          }
          if (b === "--") {
            u._ = u._.concat(o.slice(g + 1));
            break;
          }
          if (b.length > 1 && b[0] === "-") {
            let w = b[1] === "-" || b.length === 2 ? [b] : b.slice(1).split("").map((E) => `-${E}`);
            for (let E = 0; E < w.length; E++) {
              let S = w[E], [T, A] = S[1] === "-" ? S.split(/=(.*)/, 2) : [S, void 0], R = T;
              for (; R in c; )
                R = c[R];
              if (!(R in p))
                if (l) {
                  u._.push(S);
                  continue;
                } else
                  throw new n(`unknown or unexpected option: ${T}`, "ARG_UNKNOWN_OPTION");
              let [q, B] = p[R];
              if (!B && E + 1 < w.length)
                throw new n(`option requires argument (but was followed by another short argument): ${T}`, "ARG_MISSING_REQUIRED_SHORTARG");
              if (B)
                u[R] = q(true, R, u[R]);
              else if (A === void 0) {
                if (o.length < g + 2 || o[g + 1].length > 1 && o[g + 1][0] === "-" && !(o[g + 1].match(/^-?\d*(\.(?=\d))?\d*$/) && (q === Number || typeof BigInt != "undefined" && q === BigInt))) {
                  let F = T === R ? "" : ` (alias for ${R})`;
                  throw new n(`option requires argument: ${T}${F}`, "ARG_MISSING_REQUIRED_LONGARG");
                }
                u[R] = q(o[g + 1], R, u[R]), ++g;
              } else
                u[R] = q(A, R, u[R]);
            }
          } else
            u._.push(b);
        }
        return u;
      }
      y(i, "Tr"), d(i, "arg"), i.flag = (a) => (a[r] = true, a), i.COUNT = i.flag((a, o, l) => (l || 0) + 1), i.ArgError = n, t.exports = i;
    });
    var Pu = ve((e2, t) => {
      j(), k(), N(), I(), t.exports = (r) => {
        let n = r.match(/^[ \t]*(?=\S)/gm);
        return n ? n.reduce((i, a) => Math.min(i, a.length), 1 / 0) : 0;
      };
    });
    var yo = ve((e2, t) => {
      j(), k(), N(), I();
      var r = Pu();
      t.exports = (n) => {
        let i = r(n);
        if (i === 0)
          return n;
        let a = new RegExp(`^[ \\t]{${i}}`, "gm");
        return n.replace(a, "");
      };
    });
    var ju = ve(() => {
      j(), k(), N(), I();
    });
    var mo = ve((e2) => {
      j(), k(), N(), I(), Object.defineProperty(e2, "__esModule", { value: true }), e2.sqltag = e2.empty = e2.raw = e2.join = e2.Sql = void 0;
      var t = uo(), r = y(class {
        constructor(o, l) {
          let f = l.length, u = o.length;
          if (u === 0)
            throw new TypeError("Expected at least 1 string");
          if (u - 1 !== f)
            throw new TypeError(`Expected ${u} strings to have ${u - 1} values`);
          for (let g of l)
            g instanceof r && (f += g.values.length - 1, u += g.strings.length - 2);
          this.values = new Array(f), this.strings = new Array(u), this.strings[0] = o[0];
          let c = 1, p = 0;
          for (; c < o.length; ) {
            let g = l[c - 1], v = o[c++];
            if (g instanceof r) {
              this.strings[p] += g.strings[0];
              let b = 0;
              for (; b < g.values.length; )
                this.values[p++] = g.values[b++], this.strings[p] = g.strings[b];
              this.strings[p] += v;
            } else
              this.values[p++] = g, this.strings[p] = v;
          }
        }
        get text() {
          return this.strings.reduce((o, l, f) => `${o}$${f}${l}`);
        }
        get sql() {
          return this.strings.join("?");
        }
        [t.inspect.custom]() {
          return { text: this.text, sql: this.sql, values: this.values };
        }
      }, "Fe");
      d(r, "Sql"), e2.Sql = r, Object.defineProperty(r.prototype, "sql", { enumerable: true }), Object.defineProperty(r.prototype, "text", { enumerable: true });
      function n(o, l = ",") {
        if (o.length === 0)
          throw new TypeError("Expected `join([])` to be called with an array of multiple elements, but got an empty array");
        return new r(["", ...Array(o.length - 1).fill(l), ""], o);
      }
      y(n, "Kd"), d(n, "join"), e2.join = n;
      function i(o) {
        return new r([o], []);
      }
      y(i, "nu"), d(i, "raw"), e2.raw = i, e2.empty = i("");
      function a(o, ...l) {
        return new r(o, l);
      }
      y(a, "ou"), d(a, "sqltag"), e2.sqltag = a, e2.default = a;
    });
    var ku = ve((e2, t) => {
      j(), k(), N(), I(), t.exports = (r) => Object.prototype.toString.call(r) === "[object RegExp]";
    });
    var Iu = ve((e2, t) => {
      j(), k(), N(), I(), t.exports = (r) => {
        let n = typeof r;
        return r !== null && (n === "object" || n === "function");
      };
    });
    var Nu = ve((e2) => {
      j(), k(), N(), I(), Object.defineProperty(e2, "__esModule", { value: true }), e2.default = (t) => Object.getOwnPropertySymbols(t).filter((r) => Object.prototype.propertyIsEnumerable.call(t, r));
    });
    var $u = ve((e2, t) => {
      t.exports = { name: "@prisma/client", version: "3.10.0", description: "Prisma Client is an auto-generated, type-safe and modern JavaScript/TypeScript ORM for Node.js that's tailored to your data. Supports MySQL, PostgreSQL, MariaDB, SQLite databases.", keywords: ["orm", "prisma2", "prisma", "client", "query", "database", "sql", "postgres", "postgresql", "mysql", "sqlite", "mariadb", "mssql", "typescript", "query-builder"], main: "index.js", browser: "index-browser.js", types: "index.d.ts", license: "Apache-2.0", engines: { node: ">=12.6" }, homepage: "https://www.prisma.io", repository: { type: "git", url: "https://github.com/prisma/prisma.git", directory: "packages/client" }, author: "Tim Suchanek <suchanek@prisma.io>", maintainers: ["Jo\xEBl Galeran <galeran@prisma.io>", "Pierre-Antoine Mills <mills@prisma.io>", "Alexey Orlenko <orlenko@prisma.io>"], bugs: "https://github.com/prisma/prisma/issues", scripts: { dev: "DEV=true node -r esbuild-register helpers/build.ts", build: "node -r esbuild-register helpers/build.ts", test: "jest --verbose", "test-notypes": "jest --verbose --testPathIgnorePatterns src/__tests__/types/types.test.ts", generate: "node scripts/postinstall.js", postinstall: "node scripts/postinstall.js", prepare: "cp scripts/backup-index.js index.js && cp scripts/backup-index.d.ts index.d.ts", prepublishOnly: "pnpm run build" }, files: ["README.md", "runtime", "scripts", "generator-build", "index.js", "index.d.ts", "index-browser.js"], devDependencies: { "@microsoft/api-extractor": "7.19.3", "@opentelemetry/api": "1.0.3", "@prisma/debug": "workspace:*", "@prisma/engine-core": "workspace:*", "@prisma/engines": "3.10.0-50.73e60b76d394f8d37d8ebd1f8918c79029f0db86", "@prisma/fetch-engine": "3.10.0-50.73e60b76d394f8d37d8ebd1f8918c79029f0db86", "@prisma/generator-helper": "workspace:*", "@prisma/get-platform": "3.10.0-50.73e60b76d394f8d37d8ebd1f8918c79029f0db86", "@prisma/migrate": "workspace:*", "@prisma/sdk": "workspace:*", "@timsuchanek/copy": "1.4.5", "@types/debug": "4.1.7", "@types/jest": "27.4.0", "@types/js-levenshtein": "1.1.1", "@types/mssql": "7.1.5", "@types/node": "12.20.46", "@types/pg": "8.6.4", arg: "5.0.1", benchmark: "2.1.4", chalk: "4.1.2", "decimal.js": "10.3.1", esbuild: "0.13.14", execa: "5.1.1", "flat-map-polyfill": "0.3.8", "fs-monkey": "1.0.3", "get-own-enumerable-property-symbols": "3.0.2", "indent-string": "4.0.0", "is-obj": "2.0.0", "is-regexp": "2.1.0", jest: "27.5.1", "js-levenshtein": "1.1.6", klona: "2.0.5", "lz-string": "1.4.4", "make-dir": "3.1.0", mariadb: "2.5.5", mssql: "8.0.1", pg: "8.7.1", "pkg-up": "3.1.0", pluralize: "8.0.0", "replace-string": "3.1.0", rimraf: "3.0.2", "sort-keys": "4.2.0", "source-map-support": "0.5.21", "sql-template-tag": "4.0.0", "stacktrace-parser": "0.1.10", "strip-ansi": "6.0.1", "strip-indent": "3.0.0", "ts-jest": "27.1.3", "ts-node": "10.4.0", tsd: "0.19.1", typescript: "4.5.4" }, peerDependencies: { prisma: "*" }, peerDependenciesMeta: { prisma: { optional: true } }, dependencies: { "@prisma/engines-version": "3.10.0-50.73e60b76d394f8d37d8ebd1f8918c79029f0db86" }, sideEffects: false };
    });
    j();
    k();
    N();
    I();
    var Mu = Ae(pu());
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Nt = Ae(Wt());
    j();
    k();
    N();
    I();
    var zt = 9e15;
    var Ot = 1e9;
    var Sn = "0123456789abcdef";
    var Br = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058";
    var Cr = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789";
    var Pn = { precision: 20, rounding: 4, modulo: 1, toExpNeg: -7, toExpPos: 21, minE: -zt, maxE: zt, crypto: false };
    var vo;
    var mt;
    var ae = true;
    var Fr = "[DecimalError] ";
    var xt = Fr + "Invalid argument: ";
    var bo = Fr + "Precision limit exceeded";
    var wo = Fr + "crypto unavailable";
    var _o = "[object Decimal]";
    var Me = Math.floor;
    var Pe = Math.pow;
    var Ru = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
    var Bu = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
    var Cu = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
    var Eo = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
    var tt = 1e7;
    var oe = 7;
    var Fu = 9007199254740991;
    var qu = Br.length - 1;
    var jn = Cr.length - 1;
    var D = { toStringTag: _o };
    D.absoluteValue = D.abs = function() {
      var e2 = new this.constructor(this);
      return e2.s < 0 && (e2.s = 1), te(e2);
    };
    D.ceil = function() {
      return te(new this.constructor(this), this.e + 1, 2);
    };
    D.clampedTo = D.clamp = function(e2, t) {
      var r, n = this, i = n.constructor;
      if (e2 = new i(e2), t = new i(t), !e2.s || !t.s)
        return new i(NaN);
      if (e2.gt(t))
        throw Error(xt + t);
      return r = n.cmp(e2), r < 0 ? e2 : n.cmp(t) > 0 ? t : new i(n);
    };
    D.comparedTo = D.cmp = function(e2) {
      var t, r, n, i, a = this, o = a.d, l = (e2 = new a.constructor(e2)).d, f = a.s, u = e2.s;
      if (!o || !l)
        return !f || !u ? NaN : f !== u ? f : o === l ? 0 : !o ^ f < 0 ? 1 : -1;
      if (!o[0] || !l[0])
        return o[0] ? f : l[0] ? -u : 0;
      if (f !== u)
        return f;
      if (a.e !== e2.e)
        return a.e > e2.e ^ f < 0 ? 1 : -1;
      for (n = o.length, i = l.length, t = 0, r = n < i ? n : i; t < r; ++t)
        if (o[t] !== l[t])
          return o[t] > l[t] ^ f < 0 ? 1 : -1;
      return n === i ? 0 : n > i ^ f < 0 ? 1 : -1;
    };
    D.cosine = D.cos = function() {
      var e2, t, r = this, n = r.constructor;
      return r.d ? r.d[0] ? (e2 = n.precision, t = n.rounding, n.precision = e2 + Math.max(r.e, r.sd()) + oe, n.rounding = 1, r = Ao(n, Rn(n, r)), n.precision = e2, n.rounding = t, te(mt == 2 || mt == 3 ? r.neg() : r, e2, t, true)) : new n(1) : new n(NaN);
    };
    D.cubeRoot = D.cbrt = function() {
      var e2, t, r, n, i, a, o, l, f, u, c = this, p = c.constructor;
      if (!c.isFinite() || c.isZero())
        return new p(c);
      for (ae = false, a = c.s * Pe(c.s * c, 1 / 3), !a || Math.abs(a) == 1 / 0 ? (r = je(c.d), e2 = c.e, (a = (e2 - r.length + 1) % 3) && (r += a == 1 || a == -2 ? "0" : "00"), a = Pe(r, 1 / 3), e2 = Me((e2 + 1) / 3) - (e2 % 3 == (e2 < 0 ? -1 : 2)), a == 1 / 0 ? r = "5e" + e2 : (r = a.toExponential(), r = r.slice(0, r.indexOf("e") + 1) + e2), n = new p(r), n.s = c.s) : n = new p(a.toString()), o = (e2 = p.precision) + 3; ; )
        if (l = n, f = l.times(l).times(l), u = f.plus(c), n = Ee(u.plus(c).times(l), u.plus(f), o + 2, 1), je(l.d).slice(0, o) === (r = je(n.d)).slice(0, o))
          if (r = r.slice(o - 3, o + 1), r == "9999" || !i && r == "4999") {
            if (!i && (te(l, e2 + 1, 0), l.times(l).times(l).eq(c))) {
              n = l;
              break;
            }
            o += 4, i = 1;
          } else {
            (!+r || !+r.slice(1) && r.charAt(0) == "5") && (te(n, e2 + 1, 1), t = !n.times(n).times(n).eq(c));
            break;
          }
      return ae = true, te(n, e2, p.rounding, t);
    };
    D.decimalPlaces = D.dp = function() {
      var e2, t = this.d, r = NaN;
      if (t) {
        if (e2 = t.length - 1, r = (e2 - Me(this.e / oe)) * oe, e2 = t[e2], e2)
          for (; e2 % 10 == 0; e2 /= 10)
            r--;
        r < 0 && (r = 0);
      }
      return r;
    };
    D.dividedBy = D.div = function(e2) {
      return Ee(this, new this.constructor(e2));
    };
    D.dividedToIntegerBy = D.divToInt = function(e2) {
      var t = this, r = t.constructor;
      return te(Ee(t, new r(e2), 0, 1, 1), r.precision, r.rounding);
    };
    D.equals = D.eq = function(e2) {
      return this.cmp(e2) === 0;
    };
    D.floor = function() {
      return te(new this.constructor(this), this.e + 1, 3);
    };
    D.greaterThan = D.gt = function(e2) {
      return this.cmp(e2) > 0;
    };
    D.greaterThanOrEqualTo = D.gte = function(e2) {
      var t = this.cmp(e2);
      return t == 1 || t === 0;
    };
    D.hyperbolicCosine = D.cosh = function() {
      var e2, t, r, n, i, a = this, o = a.constructor, l = new o(1);
      if (!a.isFinite())
        return new o(a.s ? 1 / 0 : NaN);
      if (a.isZero())
        return l;
      r = o.precision, n = o.rounding, o.precision = r + Math.max(a.e, a.sd()) + 4, o.rounding = 1, i = a.d.length, i < 32 ? (e2 = Math.ceil(i / 3), t = (1 / gr(4, e2)).toString()) : (e2 = 16, t = "2.3283064365386962890625e-10"), a = $t(o, 1, a.times(t), new o(1), true);
      for (var f, u = e2, c = new o(8); u--; )
        f = a.times(a), a = l.minus(f.times(c.minus(f.times(c))));
      return te(a, o.precision = r, o.rounding = n, true);
    };
    D.hyperbolicSine = D.sinh = function() {
      var e2, t, r, n, i = this, a = i.constructor;
      if (!i.isFinite() || i.isZero())
        return new a(i);
      if (t = a.precision, r = a.rounding, a.precision = t + Math.max(i.e, i.sd()) + 4, a.rounding = 1, n = i.d.length, n < 3)
        i = $t(a, 2, i, i, true);
      else {
        e2 = 1.4 * Math.sqrt(n), e2 = e2 > 16 ? 16 : e2 | 0, i = i.times(1 / gr(5, e2)), i = $t(a, 2, i, i, true);
        for (var o, l = new a(5), f = new a(16), u = new a(20); e2--; )
          o = i.times(i), i = i.times(l.plus(o.times(f.times(o).plus(u))));
      }
      return a.precision = t, a.rounding = r, te(i, t, r, true);
    };
    D.hyperbolicTangent = D.tanh = function() {
      var e2, t, r = this, n = r.constructor;
      return r.isFinite() ? r.isZero() ? new n(r) : (e2 = n.precision, t = n.rounding, n.precision = e2 + 7, n.rounding = 1, Ee(r.sinh(), r.cosh(), n.precision = e2, n.rounding = t)) : new n(r.s);
    };
    D.inverseCosine = D.acos = function() {
      var e2, t = this, r = t.constructor, n = t.abs().cmp(1), i = r.precision, a = r.rounding;
      return n !== -1 ? n === 0 ? t.isNeg() ? He(r, i, a) : new r(0) : new r(NaN) : t.isZero() ? He(r, i + 4, a).times(0.5) : (r.precision = i + 6, r.rounding = 1, t = t.asin(), e2 = He(r, i + 4, a).times(0.5), r.precision = i, r.rounding = a, e2.minus(t));
    };
    D.inverseHyperbolicCosine = D.acosh = function() {
      var e2, t, r = this, n = r.constructor;
      return r.lte(1) ? new n(r.eq(1) ? 0 : NaN) : r.isFinite() ? (e2 = n.precision, t = n.rounding, n.precision = e2 + Math.max(Math.abs(r.e), r.sd()) + 4, n.rounding = 1, ae = false, r = r.times(r).minus(1).sqrt().plus(r), ae = true, n.precision = e2, n.rounding = t, r.ln()) : new n(r);
    };
    D.inverseHyperbolicSine = D.asinh = function() {
      var e2, t, r = this, n = r.constructor;
      return !r.isFinite() || r.isZero() ? new n(r) : (e2 = n.precision, t = n.rounding, n.precision = e2 + 2 * Math.max(Math.abs(r.e), r.sd()) + 6, n.rounding = 1, ae = false, r = r.times(r).plus(1).sqrt().plus(r), ae = true, n.precision = e2, n.rounding = t, r.ln());
    };
    D.inverseHyperbolicTangent = D.atanh = function() {
      var e2, t, r, n, i = this, a = i.constructor;
      return i.isFinite() ? i.e >= 0 ? new a(i.abs().eq(1) ? i.s / 0 : i.isZero() ? i : NaN) : (e2 = a.precision, t = a.rounding, n = i.sd(), Math.max(n, e2) < 2 * -i.e - 1 ? te(new a(i), e2, t, true) : (a.precision = r = n - i.e, i = Ee(i.plus(1), new a(1).minus(i), r + e2, 1), a.precision = e2 + 4, a.rounding = 1, i = i.ln(), a.precision = e2, a.rounding = t, i.times(0.5))) : new a(NaN);
    };
    D.inverseSine = D.asin = function() {
      var e2, t, r, n, i = this, a = i.constructor;
      return i.isZero() ? new a(i) : (t = i.abs().cmp(1), r = a.precision, n = a.rounding, t !== -1 ? t === 0 ? (e2 = He(a, r + 4, n).times(0.5), e2.s = i.s, e2) : new a(NaN) : (a.precision = r + 6, a.rounding = 1, i = i.div(new a(1).minus(i.times(i)).sqrt().plus(1)).atan(), a.precision = r, a.rounding = n, i.times(2)));
    };
    D.inverseTangent = D.atan = function() {
      var e2, t, r, n, i, a, o, l, f, u = this, c = u.constructor, p = c.precision, g = c.rounding;
      if (u.isFinite()) {
        if (u.isZero())
          return new c(u);
        if (u.abs().eq(1) && p + 4 <= jn)
          return o = He(c, p + 4, g).times(0.25), o.s = u.s, o;
      } else {
        if (!u.s)
          return new c(NaN);
        if (p + 4 <= jn)
          return o = He(c, p + 4, g).times(0.5), o.s = u.s, o;
      }
      for (c.precision = l = p + 10, c.rounding = 1, r = Math.min(28, l / oe + 2 | 0), e2 = r; e2; --e2)
        u = u.div(u.times(u).plus(1).sqrt().plus(1));
      for (ae = false, t = Math.ceil(l / oe), n = 1, f = u.times(u), o = new c(u), i = u; e2 !== -1; )
        if (i = i.times(f), a = o.minus(i.div(n += 2)), i = i.times(f), o = a.plus(i.div(n += 2)), o.d[t] !== void 0)
          for (e2 = t; o.d[e2] === a.d[e2] && e2--; )
            ;
      return r && (o = o.times(2 << r - 1)), ae = true, te(o, c.precision = p, c.rounding = g, true);
    };
    D.isFinite = function() {
      return !!this.d;
    };
    D.isInteger = D.isInt = function() {
      return !!this.d && Me(this.e / oe) > this.d.length - 2;
    };
    D.isNaN = function() {
      return !this.s;
    };
    D.isNegative = D.isNeg = function() {
      return this.s < 0;
    };
    D.isPositive = D.isPos = function() {
      return this.s > 0;
    };
    D.isZero = function() {
      return !!this.d && this.d[0] === 0;
    };
    D.lessThan = D.lt = function(e2) {
      return this.cmp(e2) < 0;
    };
    D.lessThanOrEqualTo = D.lte = function(e2) {
      return this.cmp(e2) < 1;
    };
    D.logarithm = D.log = function(e2) {
      var t, r, n, i, a, o, l, f, u = this, c = u.constructor, p = c.precision, g = c.rounding, v = 5;
      if (e2 == null)
        e2 = new c(10), t = true;
      else {
        if (e2 = new c(e2), r = e2.d, e2.s < 0 || !r || !r[0] || e2.eq(1))
          return new c(NaN);
        t = e2.eq(10);
      }
      if (r = u.d, u.s < 0 || !r || !r[0] || u.eq(1))
        return new c(r && !r[0] ? -1 / 0 : u.s != 1 ? NaN : r ? 0 : 1 / 0);
      if (t)
        if (r.length > 1)
          a = true;
        else {
          for (i = r[0]; i % 10 == 0; )
            i /= 10;
          a = i !== 1;
        }
      if (ae = false, l = p + v, o = bt(u, l), n = t ? hr(c, l + 10) : bt(e2, l), f = Ee(o, n, l, 1), Ht(f.d, i = p, g))
        do
          if (l += 10, o = bt(u, l), n = t ? hr(c, l + 10) : bt(e2, l), f = Ee(o, n, l, 1), !a) {
            +je(f.d).slice(i + 1, i + 15) + 1 == 1e14 && (f = te(f, p + 1, 0));
            break;
          }
        while (Ht(f.d, i += 10, g));
      return ae = true, te(f, p, g);
    };
    D.minus = D.sub = function(e2) {
      var t, r, n, i, a, o, l, f, u, c, p, g, v = this, b = v.constructor;
      if (e2 = new b(e2), !v.d || !e2.d)
        return !v.s || !e2.s ? e2 = new b(NaN) : v.d ? e2.s = -e2.s : e2 = new b(e2.d || v.s !== e2.s ? v : NaN), e2;
      if (v.s != e2.s)
        return e2.s = -e2.s, v.plus(e2);
      if (u = v.d, g = e2.d, l = b.precision, f = b.rounding, !u[0] || !g[0]) {
        if (g[0])
          e2.s = -e2.s;
        else if (u[0])
          e2 = new b(v);
        else
          return new b(f === 3 ? -0 : 0);
        return ae ? te(e2, l, f) : e2;
      }
      if (r = Me(e2.e / oe), c = Me(v.e / oe), u = u.slice(), a = c - r, a) {
        for (p = a < 0, p ? (t = u, a = -a, o = g.length) : (t = g, r = c, o = u.length), n = Math.max(Math.ceil(l / oe), o) + 2, a > n && (a = n, t.length = 1), t.reverse(), n = a; n--; )
          t.push(0);
        t.reverse();
      } else {
        for (n = u.length, o = g.length, p = n < o, p && (o = n), n = 0; n < o; n++)
          if (u[n] != g[n]) {
            p = u[n] < g[n];
            break;
          }
        a = 0;
      }
      for (p && (t = u, u = g, g = t, e2.s = -e2.s), o = u.length, n = g.length - o; n > 0; --n)
        u[o++] = 0;
      for (n = g.length; n > a; ) {
        if (u[--n] < g[n]) {
          for (i = n; i && u[--i] === 0; )
            u[i] = tt - 1;
          --u[i], u[n] += tt;
        }
        u[n] -= g[n];
      }
      for (; u[--o] === 0; )
        u.pop();
      for (; u[0] === 0; u.shift())
        --r;
      return u[0] ? (e2.d = u, e2.e = dr(u, r), ae ? te(e2, l, f) : e2) : new b(f === 3 ? -0 : 0);
    };
    D.modulo = D.mod = function(e2) {
      var t, r = this, n = r.constructor;
      return e2 = new n(e2), !r.d || !e2.s || e2.d && !e2.d[0] ? new n(NaN) : !e2.d || r.d && !r.d[0] ? te(new n(r), n.precision, n.rounding) : (ae = false, n.modulo == 9 ? (t = Ee(r, e2.abs(), 0, 3, 1), t.s *= e2.s) : t = Ee(r, e2, 0, n.modulo, 1), t = t.times(e2), ae = true, r.minus(t));
    };
    D.naturalExponential = D.exp = function() {
      return qr(this);
    };
    D.naturalLogarithm = D.ln = function() {
      return bt(this);
    };
    D.negated = D.neg = function() {
      var e2 = new this.constructor(this);
      return e2.s = -e2.s, te(e2);
    };
    D.plus = D.add = function(e2) {
      var t, r, n, i, a, o, l, f, u, c, p = this, g = p.constructor;
      if (e2 = new g(e2), !p.d || !e2.d)
        return !p.s || !e2.s ? e2 = new g(NaN) : p.d || (e2 = new g(e2.d || p.s === e2.s ? p : NaN)), e2;
      if (p.s != e2.s)
        return e2.s = -e2.s, p.minus(e2);
      if (u = p.d, c = e2.d, l = g.precision, f = g.rounding, !u[0] || !c[0])
        return c[0] || (e2 = new g(p)), ae ? te(e2, l, f) : e2;
      if (a = Me(p.e / oe), n = Me(e2.e / oe), u = u.slice(), i = a - n, i) {
        for (i < 0 ? (r = u, i = -i, o = c.length) : (r = c, n = a, o = u.length), a = Math.ceil(l / oe), o = a > o ? a + 1 : o + 1, i > o && (i = o, r.length = 1), r.reverse(); i--; )
          r.push(0);
        r.reverse();
      }
      for (o = u.length, i = c.length, o - i < 0 && (i = o, r = c, c = u, u = r), t = 0; i; )
        t = (u[--i] = u[i] + c[i] + t) / tt | 0, u[i] %= tt;
      for (t && (u.unshift(t), ++n), o = u.length; u[--o] == 0; )
        u.pop();
      return e2.d = u, e2.e = dr(u, n), ae ? te(e2, l, f) : e2;
    };
    D.precision = D.sd = function(e2) {
      var t, r = this;
      if (e2 !== void 0 && e2 !== !!e2 && e2 !== 1 && e2 !== 0)
        throw Error(xt + e2);
      return r.d ? (t = kn(r.d), e2 && r.e + 1 > t && (t = r.e + 1)) : t = NaN, t;
    };
    D.round = function() {
      var e2 = this, t = e2.constructor;
      return te(new t(e2), e2.e + 1, t.rounding);
    };
    D.sine = D.sin = function() {
      var e2, t, r = this, n = r.constructor;
      return r.isFinite() ? r.isZero() ? new n(r) : (e2 = n.precision, t = n.rounding, n.precision = e2 + Math.max(r.e, r.sd()) + oe, n.rounding = 1, r = xo(n, Rn(n, r)), n.precision = e2, n.rounding = t, te(mt > 2 ? r.neg() : r, e2, t, true)) : new n(NaN);
    };
    D.squareRoot = D.sqrt = function() {
      var e2, t, r, n, i, a, o = this, l = o.d, f = o.e, u = o.s, c = o.constructor;
      if (u !== 1 || !l || !l[0])
        return new c(!u || u < 0 && (!l || l[0]) ? NaN : l ? o : 1 / 0);
      for (ae = false, u = Math.sqrt(+o), u == 0 || u == 1 / 0 ? (t = je(l), (t.length + f) % 2 == 0 && (t += "0"), u = Math.sqrt(t), f = Me((f + 1) / 2) - (f < 0 || f % 2), u == 1 / 0 ? t = "5e" + f : (t = u.toExponential(), t = t.slice(0, t.indexOf("e") + 1) + f), n = new c(t)) : n = new c(u.toString()), r = (f = c.precision) + 3; ; )
        if (a = n, n = a.plus(Ee(o, a, r + 2, 1)).times(0.5), je(a.d).slice(0, r) === (t = je(n.d)).slice(0, r))
          if (t = t.slice(r - 3, r + 1), t == "9999" || !i && t == "4999") {
            if (!i && (te(a, f + 1, 0), a.times(a).eq(o))) {
              n = a;
              break;
            }
            r += 4, i = 1;
          } else {
            (!+t || !+t.slice(1) && t.charAt(0) == "5") && (te(n, f + 1, 1), e2 = !n.times(n).eq(o));
            break;
          }
      return ae = true, te(n, f, c.rounding, e2);
    };
    D.tangent = D.tan = function() {
      var e2, t, r = this, n = r.constructor;
      return r.isFinite() ? r.isZero() ? new n(r) : (e2 = n.precision, t = n.rounding, n.precision = e2 + 10, n.rounding = 1, r = r.sin(), r.s = 1, r = Ee(r, new n(1).minus(r.times(r)).sqrt(), e2 + 10, 0), n.precision = e2, n.rounding = t, te(mt == 2 || mt == 4 ? r.neg() : r, e2, t, true)) : new n(NaN);
    };
    D.times = D.mul = function(e2) {
      var t, r, n, i, a, o, l, f, u, c = this, p = c.constructor, g = c.d, v = (e2 = new p(e2)).d;
      if (e2.s *= c.s, !g || !g[0] || !v || !v[0])
        return new p(!e2.s || g && !g[0] && !v || v && !v[0] && !g ? NaN : !g || !v ? e2.s / 0 : e2.s * 0);
      for (r = Me(c.e / oe) + Me(e2.e / oe), f = g.length, u = v.length, f < u && (a = g, g = v, v = a, o = f, f = u, u = o), a = [], o = f + u, n = o; n--; )
        a.push(0);
      for (n = u; --n >= 0; ) {
        for (t = 0, i = f + n; i > n; )
          l = a[i] + v[n] * g[i - n - 1] + t, a[i--] = l % tt | 0, t = l / tt | 0;
        a[i] = (a[i] + t) % tt | 0;
      }
      for (; !a[--o]; )
        a.pop();
      return t ? ++r : a.shift(), e2.d = a, e2.e = dr(a, r), ae ? te(e2, p.precision, p.rounding) : e2;
    };
    D.toBinary = function(e2, t) {
      return Ur(this, 2, e2, t);
    };
    D.toDecimalPlaces = D.toDP = function(e2, t) {
      var r = this, n = r.constructor;
      return r = new n(r), e2 === void 0 ? r : (Fe(e2, 0, Ot), t === void 0 ? t = n.rounding : Fe(t, 0, 8), te(r, e2 + r.e + 1, t));
    };
    D.toExponential = function(e2, t) {
      var r, n = this, i = n.constructor;
      return e2 === void 0 ? r = rt(n, true) : (Fe(e2, 0, Ot), t === void 0 ? t = i.rounding : Fe(t, 0, 8), n = te(new i(n), e2 + 1, t), r = rt(n, true, e2 + 1)), n.isNeg() && !n.isZero() ? "-" + r : r;
    };
    D.toFixed = function(e2, t) {
      var r, n, i = this, a = i.constructor;
      return e2 === void 0 ? r = rt(i) : (Fe(e2, 0, Ot), t === void 0 ? t = a.rounding : Fe(t, 0, 8), n = te(new a(i), e2 + i.e + 1, t), r = rt(n, false, e2 + n.e + 1)), i.isNeg() && !i.isZero() ? "-" + r : r;
    };
    D.toFraction = function(e2) {
      var t, r, n, i, a, o, l, f, u, c, p, g, v = this, b = v.d, w = v.constructor;
      if (!b)
        return new w(v);
      if (u = r = new w(1), n = f = new w(0), t = new w(n), a = t.e = kn(b) - v.e - 1, o = a % oe, t.d[0] = Pe(10, o < 0 ? oe + o : o), e2 == null)
        e2 = a > 0 ? t : u;
      else {
        if (l = new w(e2), !l.isInt() || l.lt(u))
          throw Error(xt + l);
        e2 = l.gt(t) ? a > 0 ? t : u : l;
      }
      for (ae = false, l = new w(je(b)), c = w.precision, w.precision = a = b.length * oe * 2; p = Ee(l, t, 0, 1, 1), i = r.plus(p.times(n)), i.cmp(e2) != 1; )
        r = n, n = i, i = u, u = f.plus(p.times(i)), f = i, i = t, t = l.minus(p.times(i)), l = i;
      return i = Ee(e2.minus(r), n, 0, 1, 1), f = f.plus(i.times(u)), r = r.plus(i.times(n)), f.s = u.s = v.s, g = Ee(u, n, a, 1).minus(v).abs().cmp(Ee(f, r, a, 1).minus(v).abs()) < 1 ? [u, n] : [f, r], w.precision = c, ae = true, g;
    };
    D.toHexadecimal = D.toHex = function(e2, t) {
      return Ur(this, 16, e2, t);
    };
    D.toNearest = function(e2, t) {
      var r = this, n = r.constructor;
      if (r = new n(r), e2 == null) {
        if (!r.d)
          return r;
        e2 = new n(1), t = n.rounding;
      } else {
        if (e2 = new n(e2), t === void 0 ? t = n.rounding : Fe(t, 0, 8), !r.d)
          return e2.s ? r : e2;
        if (!e2.d)
          return e2.s && (e2.s = r.s), e2;
      }
      return e2.d[0] ? (ae = false, r = Ee(r, e2, 0, t, 1).times(e2), ae = true, te(r)) : (e2.s = r.s, r = e2), r;
    };
    D.toNumber = function() {
      return +this;
    };
    D.toOctal = function(e2, t) {
      return Ur(this, 8, e2, t);
    };
    D.toPower = D.pow = function(e2) {
      var t, r, n, i, a, o, l = this, f = l.constructor, u = +(e2 = new f(e2));
      if (!l.d || !e2.d || !l.d[0] || !e2.d[0])
        return new f(Pe(+l, u));
      if (l = new f(l), l.eq(1))
        return l;
      if (n = f.precision, a = f.rounding, e2.eq(1))
        return te(l, n, a);
      if (t = Me(e2.e / oe), t >= e2.d.length - 1 && (r = u < 0 ? -u : u) <= Fu)
        return i = In(f, l, r, n), e2.s < 0 ? new f(1).div(i) : te(i, n, a);
      if (o = l.s, o < 0) {
        if (t < e2.d.length - 1)
          return new f(NaN);
        if ((e2.d[t] & 1) == 0 && (o = 1), l.e == 0 && l.d[0] == 1 && l.d.length == 1)
          return l.s = o, l;
      }
      return r = Pe(+l, u), t = r == 0 || !isFinite(r) ? Me(u * (Math.log("0." + je(l.d)) / Math.LN10 + l.e + 1)) : new f(r + "").e, t > f.maxE + 1 || t < f.minE - 1 ? new f(t > 0 ? o / 0 : 0) : (ae = false, f.rounding = l.s = 1, r = Math.min(12, (t + "").length), i = qr(e2.times(bt(l, n + r)), n), i.d && (i = te(i, n + 5, 1), Ht(i.d, n, a) && (t = n + 10, i = te(qr(e2.times(bt(l, t + r)), t), t + 5, 1), +je(i.d).slice(n + 1, n + 15) + 1 == 1e14 && (i = te(i, n + 1, 0)))), i.s = o, ae = true, f.rounding = a, te(i, n, a));
    };
    D.toPrecision = function(e2, t) {
      var r, n = this, i = n.constructor;
      return e2 === void 0 ? r = rt(n, n.e <= i.toExpNeg || n.e >= i.toExpPos) : (Fe(e2, 1, Ot), t === void 0 ? t = i.rounding : Fe(t, 0, 8), n = te(new i(n), e2, t), r = rt(n, e2 <= n.e || n.e <= i.toExpNeg, e2)), n.isNeg() && !n.isZero() ? "-" + r : r;
    };
    D.toSignificantDigits = D.toSD = function(e2, t) {
      var r = this, n = r.constructor;
      return e2 === void 0 ? (e2 = n.precision, t = n.rounding) : (Fe(e2, 1, Ot), t === void 0 ? t = n.rounding : Fe(t, 0, 8)), te(new n(r), e2, t);
    };
    D.toString = function() {
      var e2 = this, t = e2.constructor, r = rt(e2, e2.e <= t.toExpNeg || e2.e >= t.toExpPos);
      return e2.isNeg() && !e2.isZero() ? "-" + r : r;
    };
    D.truncated = D.trunc = function() {
      return te(new this.constructor(this), this.e + 1, 1);
    };
    D.valueOf = D.toJSON = function() {
      var e2 = this, t = e2.constructor, r = rt(e2, e2.e <= t.toExpNeg || e2.e >= t.toExpPos);
      return e2.isNeg() ? "-" + r : r;
    };
    function je(e2) {
      var t, r, n, i = e2.length - 1, a = "", o = e2[0];
      if (i > 0) {
        for (a += o, t = 1; t < i; t++)
          n = e2[t] + "", r = oe - n.length, r && (a += vt(r)), a += n;
        o = e2[t], n = o + "", r = oe - n.length, r && (a += vt(r));
      } else if (o === 0)
        return "0";
      for (; o % 10 == 0; )
        o /= 10;
      return a + o;
    }
    y(je, "se");
    d(je, "digitsToString");
    function Fe(e2, t, r) {
      if (e2 !== ~~e2 || e2 < t || e2 > r)
        throw Error(xt + e2);
    }
    y(Fe, "we");
    d(Fe, "checkInt32");
    function Ht(e2, t, r, n) {
      var i, a, o, l;
      for (a = e2[0]; a >= 10; a /= 10)
        --t;
      return --t < 0 ? (t += oe, i = 0) : (i = Math.ceil((t + 1) / oe), t %= oe), a = Pe(10, oe - t), l = e2[i] % a | 0, n == null ? t < 3 ? (t == 0 ? l = l / 100 | 0 : t == 1 && (l = l / 10 | 0), o = r < 4 && l == 99999 || r > 3 && l == 49999 || l == 5e4 || l == 0) : o = (r < 4 && l + 1 == a || r > 3 && l + 1 == a / 2) && (e2[i + 1] / a / 100 | 0) == Pe(10, t - 2) - 1 || (l == a / 2 || l == 0) && (e2[i + 1] / a / 100 | 0) == 0 : t < 4 ? (t == 0 ? l = l / 1e3 | 0 : t == 1 ? l = l / 100 | 0 : t == 2 && (l = l / 10 | 0), o = (n || r < 4) && l == 9999 || !n && r > 3 && l == 4999) : o = ((n || r < 4) && l + 1 == a || !n && r > 3 && l + 1 == a / 2) && (e2[i + 1] / a / 1e3 | 0) == Pe(10, t - 3) - 1, o;
    }
    y(Ht, "ur");
    d(Ht, "checkRoundingDigits");
    function pr(e2, t, r) {
      for (var n, i = [0], a, o = 0, l = e2.length; o < l; ) {
        for (a = i.length; a--; )
          i[a] *= t;
        for (i[0] += Sn.indexOf(e2.charAt(o++)), n = 0; n < i.length; n++)
          i[n] > r - 1 && (i[n + 1] === void 0 && (i[n + 1] = 0), i[n + 1] += i[n] / r | 0, i[n] %= r);
      }
      return i.reverse();
    }
    y(pr, "nn");
    d(pr, "convertBase");
    function Ao(e2, t) {
      var r, n, i;
      if (t.isZero())
        return t;
      n = t.d.length, n < 32 ? (r = Math.ceil(n / 3), i = (1 / gr(4, r)).toString()) : (r = 16, i = "2.3283064365386962890625e-10"), e2.precision += r, t = $t(e2, 1, t.times(i), new e2(1));
      for (var a = r; a--; ) {
        var o = t.times(t);
        t = o.times(o).minus(o).times(8).plus(1);
      }
      return e2.precision -= r, t;
    }
    y(Ao, "zc");
    d(Ao, "cosine");
    var Ee = function() {
      function e2(n, i, a) {
        var o, l = 0, f = n.length;
        for (n = n.slice(); f--; )
          o = n[f] * i + l, n[f] = o % a | 0, l = o / a | 0;
        return l && n.unshift(l), n;
      }
      y(e2, "e"), d(e2, "multiplyInteger");
      function t(n, i, a, o) {
        var l, f;
        if (a != o)
          f = a > o ? 1 : -1;
        else
          for (l = f = 0; l < a; l++)
            if (n[l] != i[l]) {
              f = n[l] > i[l] ? 1 : -1;
              break;
            }
        return f;
      }
      y(t, "t"), d(t, "compare");
      function r(n, i, a, o) {
        for (var l = 0; a--; )
          n[a] -= l, l = n[a] < i[a] ? 1 : 0, n[a] = l * o + n[a] - i[a];
        for (; !n[0] && n.length > 1; )
          n.shift();
      }
      return y(r, "r"), d(r, "subtract"), function(n, i, a, o, l, f) {
        var u, c, p, g, v, b, w, E, S, T, A, R, q, B, F, C, W, G, pe, Y, de = n.constructor, be = n.s == i.s ? 1 : -1, se = n.d, le = i.d;
        if (!se || !se[0] || !le || !le[0])
          return new de(!n.s || !i.s || (se ? le && se[0] == le[0] : !le) ? NaN : se && se[0] == 0 || !le ? be * 0 : be / 0);
        for (f ? (v = 1, c = n.e - i.e) : (f = tt, v = oe, c = Me(n.e / v) - Me(i.e / v)), pe = le.length, W = se.length, S = new de(be), T = S.d = [], p = 0; le[p] == (se[p] || 0); p++)
          ;
        if (le[p] > (se[p] || 0) && c--, a == null ? (B = a = de.precision, o = de.rounding) : l ? B = a + (n.e - i.e) + 1 : B = a, B < 0)
          T.push(1), b = true;
        else {
          if (B = B / v + 2 | 0, p = 0, pe == 1) {
            for (g = 0, le = le[0], B++; (p < W || g) && B--; p++)
              F = g * f + (se[p] || 0), T[p] = F / le | 0, g = F % le | 0;
            b = g || p < W;
          } else {
            for (g = f / (le[0] + 1) | 0, g > 1 && (le = e2(le, g, f), se = e2(se, g, f), pe = le.length, W = se.length), C = pe, A = se.slice(0, pe), R = A.length; R < pe; )
              A[R++] = 0;
            Y = le.slice(), Y.unshift(0), G = le[0], le[1] >= f / 2 && ++G;
            do
              g = 0, u = t(le, A, pe, R), u < 0 ? (q = A[0], pe != R && (q = q * f + (A[1] || 0)), g = q / G | 0, g > 1 ? (g >= f && (g = f - 1), w = e2(le, g, f), E = w.length, R = A.length, u = t(w, A, E, R), u == 1 && (g--, r(w, pe < E ? Y : le, E, f))) : (g == 0 && (u = g = 1), w = le.slice()), E = w.length, E < R && w.unshift(0), r(A, w, R, f), u == -1 && (R = A.length, u = t(le, A, pe, R), u < 1 && (g++, r(A, pe < R ? Y : le, R, f))), R = A.length) : u === 0 && (g++, A = [0]), T[p++] = g, u && A[0] ? A[R++] = se[C] || 0 : (A = [se[C]], R = 1);
            while ((C++ < W || A[0] !== void 0) && B--);
            b = A[0] !== void 0;
          }
          T[0] || T.shift();
        }
        if (v == 1)
          S.e = c, vo = b;
        else {
          for (p = 1, g = T[0]; g >= 10; g /= 10)
            p++;
          S.e = p + c * v - 1, te(S, l ? a + S.e + 1 : a, o, b);
        }
        return S;
      };
    }();
    function te(e2, t, r, n) {
      var i, a, o, l, f, u, c, p, g, v = e2.constructor;
      e:
        if (t != null) {
          if (p = e2.d, !p)
            return e2;
          for (i = 1, l = p[0]; l >= 10; l /= 10)
            i++;
          if (a = t - i, a < 0)
            a += oe, o = t, c = p[g = 0], f = c / Pe(10, i - o - 1) % 10 | 0;
          else if (g = Math.ceil((a + 1) / oe), l = p.length, g >= l)
            if (n) {
              for (; l++ <= g; )
                p.push(0);
              c = f = 0, i = 1, a %= oe, o = a - oe + 1;
            } else
              break e;
          else {
            for (c = l = p[g], i = 1; l >= 10; l /= 10)
              i++;
            a %= oe, o = a - oe + i, f = o < 0 ? 0 : c / Pe(10, i - o - 1) % 10 | 0;
          }
          if (n = n || t < 0 || p[g + 1] !== void 0 || (o < 0 ? c : c % Pe(10, i - o - 1)), u = r < 4 ? (f || n) && (r == 0 || r == (e2.s < 0 ? 3 : 2)) : f > 5 || f == 5 && (r == 4 || n || r == 6 && (a > 0 ? o > 0 ? c / Pe(10, i - o) : 0 : p[g - 1]) % 10 & 1 || r == (e2.s < 0 ? 8 : 7)), t < 1 || !p[0])
            return p.length = 0, u ? (t -= e2.e + 1, p[0] = Pe(10, (oe - t % oe) % oe), e2.e = -t || 0) : p[0] = e2.e = 0, e2;
          if (a == 0 ? (p.length = g, l = 1, g--) : (p.length = g + 1, l = Pe(10, oe - a), p[g] = o > 0 ? (c / Pe(10, i - o) % Pe(10, o) | 0) * l : 0), u)
            for (; ; )
              if (g == 0) {
                for (a = 1, o = p[0]; o >= 10; o /= 10)
                  a++;
                for (o = p[0] += l, l = 1; o >= 10; o /= 10)
                  l++;
                a != l && (e2.e++, p[0] == tt && (p[0] = 1));
                break;
              } else {
                if (p[g] += l, p[g] != tt)
                  break;
                p[g--] = 0, l = 1;
              }
          for (a = p.length; p[--a] === 0; )
            p.pop();
        }
      return ae && (e2.e > v.maxE ? (e2.d = null, e2.e = NaN) : e2.e < v.minE && (e2.e = 0, e2.d = [0])), e2;
    }
    y(te, "D");
    d(te, "finalise");
    function rt(e2, t, r) {
      if (!e2.isFinite())
        return Mn(e2);
      var n, i = e2.e, a = je(e2.d), o = a.length;
      return t ? (r && (n = r - o) > 0 ? a = a.charAt(0) + "." + a.slice(1) + vt(n) : o > 1 && (a = a.charAt(0) + "." + a.slice(1)), a = a + (e2.e < 0 ? "e" : "e+") + e2.e) : i < 0 ? (a = "0." + vt(-i - 1) + a, r && (n = r - o) > 0 && (a += vt(n))) : i >= o ? (a += vt(i + 1 - o), r && (n = r - i - 1) > 0 && (a = a + "." + vt(n))) : ((n = i + 1) < o && (a = a.slice(0, n) + "." + a.slice(n)), r && (n = r - o) > 0 && (i + 1 === o && (a += "."), a += vt(n))), a;
    }
    y(rt, "Be");
    d(rt, "finiteToString");
    function dr(e2, t) {
      var r = e2[0];
      for (t *= oe; r >= 10; r /= 10)
        t++;
      return t;
    }
    y(dr, "on");
    d(dr, "getBase10Exponent");
    function hr(e2, t, r) {
      if (t > qu)
        throw ae = true, r && (e2.precision = r), Error(bo);
      return te(new e2(Br), t, 1, true);
    }
    y(hr, "sn");
    d(hr, "getLn10");
    function He(e2, t, r) {
      if (t > jn)
        throw Error(bo);
      return te(new e2(Cr), t, r, true);
    }
    y(He, "Ie");
    d(He, "getPi");
    function kn(e2) {
      var t = e2.length - 1, r = t * oe + 1;
      if (t = e2[t], t) {
        for (; t % 10 == 0; t /= 10)
          r--;
        for (t = e2[0]; t >= 10; t /= 10)
          r++;
      }
      return r;
    }
    y(kn, "Us");
    d(kn, "getPrecision");
    function vt(e2) {
      for (var t = ""; e2--; )
        t += "0";
      return t;
    }
    y(vt, "rt");
    d(vt, "getZeroString");
    function In(e2, t, r, n) {
      var i, a = new e2(1), o = Math.ceil(n / oe + 4);
      for (ae = false; ; ) {
        if (r % 2 && (a = a.times(t), Bn(a.d, o) && (i = true)), r = Me(r / 2), r === 0) {
          r = a.d.length - 1, i && a.d[r] === 0 && ++a.d[r];
          break;
        }
        t = t.times(t), Bn(t.d, o);
      }
      return ae = true, a;
    }
    y(In, "Vs");
    d(In, "intPow");
    function Nn(e2) {
      return e2.d[e2.d.length - 1] & 1;
    }
    y(Nn, "Gs");
    d(Nn, "isOdd");
    function $n(e2, t, r) {
      for (var n, i = new e2(t[0]), a = 0; ++a < t.length; )
        if (n = new e2(t[a]), n.s)
          i[r](n) && (i = n);
        else {
          i = n;
          break;
        }
      return i;
    }
    y($n, "Js");
    d($n, "maxOrMin");
    function qr(e2, t) {
      var r, n, i, a, o, l, f, u = 0, c = 0, p = 0, g = e2.constructor, v = g.rounding, b = g.precision;
      if (!e2.d || !e2.d[0] || e2.e > 17)
        return new g(e2.d ? e2.d[0] ? e2.s < 0 ? 0 : 1 / 0 : 1 : e2.s ? e2.s < 0 ? 0 : e2 : 0 / 0);
      for (t == null ? (ae = false, f = b) : f = t, l = new g(0.03125); e2.e > -2; )
        e2 = e2.times(l), p += 5;
      for (n = Math.log(Pe(2, p)) / Math.LN10 * 2 + 5 | 0, f += n, r = a = o = new g(1), g.precision = f; ; ) {
        if (a = te(a.times(e2), f, 1), r = r.times(++c), l = o.plus(Ee(a, r, f, 1)), je(l.d).slice(0, f) === je(o.d).slice(0, f)) {
          for (i = p; i--; )
            o = te(o.times(o), f, 1);
          if (t == null)
            if (u < 3 && Ht(o.d, f - n, v, u))
              g.precision = f += 10, r = a = l = new g(1), c = 0, u++;
            else
              return te(o, g.precision = b, v, ae = true);
          else
            return g.precision = b, o;
        }
        o = l;
      }
    }
    y(qr, "po");
    d(qr, "naturalExponential");
    function bt(e2, t) {
      var r, n, i, a, o, l, f, u, c, p, g, v = 1, b = 10, w = e2, E = w.d, S = w.constructor, T = S.rounding, A = S.precision;
      if (w.s < 0 || !E || !E[0] || !w.e && E[0] == 1 && E.length == 1)
        return new S(E && !E[0] ? -1 / 0 : w.s != 1 ? NaN : E ? 0 : w);
      if (t == null ? (ae = false, c = A) : c = t, S.precision = c += b, r = je(E), n = r.charAt(0), Math.abs(a = w.e) < 15e14) {
        for (; n < 7 && n != 1 || n == 1 && r.charAt(1) > 3; )
          w = w.times(e2), r = je(w.d), n = r.charAt(0), v++;
        a = w.e, n > 1 ? (w = new S("0." + r), a++) : w = new S(n + "." + r.slice(1));
      } else
        return u = hr(S, c + 2, A).times(a + ""), w = bt(new S(n + "." + r.slice(1)), c - b).plus(u), S.precision = A, t == null ? te(w, A, T, ae = true) : w;
      for (p = w, f = o = w = Ee(w.minus(1), w.plus(1), c, 1), g = te(w.times(w), c, 1), i = 3; ; ) {
        if (o = te(o.times(g), c, 1), u = f.plus(Ee(o, new S(i), c, 1)), je(u.d).slice(0, c) === je(f.d).slice(0, c))
          if (f = f.times(2), a !== 0 && (f = f.plus(hr(S, c + 2, A).times(a + ""))), f = Ee(f, new S(v), c, 1), t == null)
            if (Ht(f.d, c - b, T, l))
              S.precision = c += b, u = o = w = Ee(p.minus(1), p.plus(1), c, 1), g = te(w.times(w), c, 1), i = l = 1;
            else
              return te(f, S.precision = A, T, ae = true);
          else
            return S.precision = A, f;
        f = u, i += 2;
      }
    }
    y(bt, "nt");
    d(bt, "naturalLogarithm");
    function Mn(e2) {
      return String(e2.s * e2.s / 0);
    }
    y(Mn, "zs");
    d(Mn, "nonFiniteToString");
    function Lr(e2, t) {
      var r, n, i;
      for ((r = t.indexOf(".")) > -1 && (t = t.replace(".", "")), (n = t.search(/e/i)) > 0 ? (r < 0 && (r = n), r += +t.slice(n + 1), t = t.substring(0, n)) : r < 0 && (r = t.length), n = 0; t.charCodeAt(n) === 48; n++)
        ;
      for (i = t.length; t.charCodeAt(i - 1) === 48; --i)
        ;
      if (t = t.slice(n, i), t) {
        if (i -= n, e2.e = r = r - n - 1, e2.d = [], n = (r + 1) % oe, r < 0 && (n += oe), n < i) {
          for (n && e2.d.push(+t.slice(0, n)), i -= oe; n < i; )
            e2.d.push(+t.slice(n, n += oe));
          t = t.slice(n), n = oe - t.length;
        } else
          n -= i;
        for (; n--; )
          t += "0";
        e2.d.push(+t), ae && (e2.e > e2.constructor.maxE ? (e2.d = null, e2.e = NaN) : e2.e < e2.constructor.minE && (e2.e = 0, e2.d = [0]));
      } else
        e2.e = 0, e2.d = [0];
      return e2;
    }
    y(Lr, "go");
    d(Lr, "parseDecimal");
    function Oo(e2, t) {
      var r, n, i, a, o, l, f, u, c;
      if (t.indexOf("_") > -1) {
        if (t = t.replace(/(\d)_(?=\d)/g, "$1"), Eo.test(t))
          return Lr(e2, t);
      } else if (t === "Infinity" || t === "NaN")
        return +t || (e2.s = NaN), e2.e = NaN, e2.d = null, e2;
      if (Bu.test(t))
        r = 16, t = t.toLowerCase();
      else if (Ru.test(t))
        r = 2;
      else if (Cu.test(t))
        r = 8;
      else
        throw Error(xt + t);
      for (a = t.search(/p/i), a > 0 ? (f = +t.slice(a + 1), t = t.substring(2, a)) : t = t.slice(2), a = t.indexOf("."), o = a >= 0, n = e2.constructor, o && (t = t.replace(".", ""), l = t.length, a = l - a, i = In(n, new n(r), a, a * 2)), u = pr(t, r, tt), c = u.length - 1, a = c; u[a] === 0; --a)
        u.pop();
      return a < 0 ? new n(e2.s * 0) : (e2.e = dr(u, c), e2.d = u, ae = false, o && (e2 = Ee(e2, i, l * 4)), f && (e2 = e2.times(Math.abs(f) < 54 ? Pe(2, f) : yr.pow(2, f))), ae = true, e2);
    }
    y(Oo, "Wc");
    d(Oo, "parseOther");
    function xo(e2, t) {
      var r, n = t.d.length;
      if (n < 3)
        return t.isZero() ? t : $t(e2, 2, t, t);
      r = 1.4 * Math.sqrt(n), r = r > 16 ? 16 : r | 0, t = t.times(1 / gr(5, r)), t = $t(e2, 2, t, t);
      for (var i, a = new e2(5), o = new e2(16), l = new e2(20); r--; )
        i = t.times(t), t = t.times(a.plus(i.times(o.times(i).minus(l))));
      return t;
    }
    y(xo, "Hc");
    d(xo, "sine");
    function $t(e2, t, r, n, i) {
      var a, o, l, f, u = 1, c = e2.precision, p = Math.ceil(c / oe);
      for (ae = false, f = r.times(r), l = new e2(n); ; ) {
        if (o = Ee(l.times(f), new e2(t++ * t++), c, 1), l = i ? n.plus(o) : n.minus(o), n = Ee(o.times(f), new e2(t++ * t++), c, 1), o = l.plus(n), o.d[p] !== void 0) {
          for (a = p; o.d[a] === l.d[a] && a--; )
            ;
          if (a == -1)
            break;
        }
        a = l, l = n, n = o, o = a, u++;
      }
      return ae = true, o.d.length = p + 1, o;
    }
    y($t, "Nt");
    d($t, "taylorSeries");
    function gr(e2, t) {
      for (var r = e2; --t; )
        r *= e2;
      return r;
    }
    y(gr, "an");
    d(gr, "tinyPow");
    function Rn(e2, t) {
      var r, n = t.s < 0, i = He(e2, e2.precision, 1), a = i.times(0.5);
      if (t = t.abs(), t.lte(a))
        return mt = n ? 4 : 1, t;
      if (r = t.divToInt(i), r.isZero())
        mt = n ? 3 : 2;
      else {
        if (t = t.minus(r.times(i)), t.lte(a))
          return mt = Nn(r) ? n ? 2 : 3 : n ? 4 : 1, t;
        mt = Nn(r) ? n ? 1 : 4 : n ? 3 : 2;
      }
      return t.minus(i).abs();
    }
    y(Rn, "Ws");
    d(Rn, "toLessThanHalfPi");
    function Ur(e2, t, r, n) {
      var i, a, o, l, f, u, c, p, g, v = e2.constructor, b = r !== void 0;
      if (b ? (Fe(r, 1, Ot), n === void 0 ? n = v.rounding : Fe(n, 0, 8)) : (r = v.precision, n = v.rounding), !e2.isFinite())
        c = Mn(e2);
      else {
        for (c = rt(e2), o = c.indexOf("."), b ? (i = 2, t == 16 ? r = r * 4 - 3 : t == 8 && (r = r * 3 - 2)) : i = t, o >= 0 && (c = c.replace(".", ""), g = new v(1), g.e = c.length - o, g.d = pr(rt(g), 10, i), g.e = g.d.length), p = pr(c, 10, i), a = f = p.length; p[--f] == 0; )
          p.pop();
        if (!p[0])
          c = b ? "0p+0" : "0";
        else {
          if (o < 0 ? a-- : (e2 = new v(e2), e2.d = p, e2.e = a, e2 = Ee(e2, g, r, n, 0, i), p = e2.d, a = e2.e, u = vo), o = p[r], l = i / 2, u = u || p[r + 1] !== void 0, u = n < 4 ? (o !== void 0 || u) && (n === 0 || n === (e2.s < 0 ? 3 : 2)) : o > l || o === l && (n === 4 || u || n === 6 && p[r - 1] & 1 || n === (e2.s < 0 ? 8 : 7)), p.length = r, u)
            for (; ++p[--r] > i - 1; )
              p[r] = 0, r || (++a, p.unshift(1));
          for (f = p.length; !p[f - 1]; --f)
            ;
          for (o = 0, c = ""; o < f; o++)
            c += Sn.charAt(p[o]);
          if (b) {
            if (f > 1)
              if (t == 16 || t == 8) {
                for (o = t == 16 ? 4 : 3, --f; f % o; f++)
                  c += "0";
                for (p = pr(c, i, t), f = p.length; !p[f - 1]; --f)
                  ;
                for (o = 1, c = "1."; o < f; o++)
                  c += Sn.charAt(p[o]);
              } else
                c = c.charAt(0) + "." + c.slice(1);
            c = c + (a < 0 ? "p" : "p+") + a;
          } else if (a < 0) {
            for (; ++a; )
              c = "0" + c;
            c = "0." + c;
          } else if (++a > f)
            for (a -= f; a--; )
              c += "0";
          else
            a < f && (c = c.slice(0, a) + "." + c.slice(a));
        }
        c = (t == 16 ? "0x" : t == 2 ? "0b" : t == 8 ? "0o" : "") + c;
      }
      return e2.s < 0 ? "-" + c : c;
    }
    y(Ur, "mo");
    d(Ur, "toStringBinary");
    function Bn(e2, t) {
      if (e2.length > t)
        return e2.length = t, true;
    }
    y(Bn, "Hs");
    d(Bn, "truncate");
    function To(e2) {
      return new this(e2).abs();
    }
    y(To, "Yc");
    d(To, "abs");
    function So(e2) {
      return new this(e2).acos();
    }
    y(So, "Qc");
    d(So, "acos");
    function Po(e2) {
      return new this(e2).acosh();
    }
    y(Po, "Kc");
    d(Po, "acosh");
    function jo(e2, t) {
      return new this(e2).plus(t);
    }
    y(jo, "Zc");
    d(jo, "add");
    function ko(e2) {
      return new this(e2).asin();
    }
    y(ko, "Xc");
    d(ko, "asin");
    function Io(e2) {
      return new this(e2).asinh();
    }
    y(Io, "ef");
    d(Io, "asinh");
    function No(e2) {
      return new this(e2).atan();
    }
    y(No, "tf");
    d(No, "atan");
    function $o(e2) {
      return new this(e2).atanh();
    }
    y($o, "rf");
    d($o, "atanh");
    function Mo(e2, t) {
      e2 = new this(e2), t = new this(t);
      var r, n = this.precision, i = this.rounding, a = n + 4;
      return !e2.s || !t.s ? r = new this(NaN) : !e2.d && !t.d ? (r = He(this, a, 1).times(t.s > 0 ? 0.25 : 0.75), r.s = e2.s) : !t.d || e2.isZero() ? (r = t.s < 0 ? He(this, n, i) : new this(0), r.s = e2.s) : !e2.d || t.isZero() ? (r = He(this, a, 1).times(0.5), r.s = e2.s) : t.s < 0 ? (this.precision = a, this.rounding = 1, r = this.atan(Ee(e2, t, a, 1)), t = He(this, a, 1), this.precision = n, this.rounding = i, r = e2.s < 0 ? r.minus(t) : r.plus(t)) : r = this.atan(Ee(e2, t, a, 1)), r;
    }
    y(Mo, "nf");
    d(Mo, "atan2");
    function Ro(e2) {
      return new this(e2).cbrt();
    }
    y(Ro, "of");
    d(Ro, "cbrt");
    function Bo(e2) {
      return te(e2 = new this(e2), e2.e + 1, 2);
    }
    y(Bo, "sf");
    d(Bo, "ceil");
    function Co(e2, t, r) {
      return new this(e2).clamp(t, r);
    }
    y(Co, "af");
    d(Co, "clamp");
    function Fo(e2) {
      if (!e2 || typeof e2 != "object")
        throw Error(Fr + "Object expected");
      var t, r, n, i = e2.defaults === true, a = ["precision", 1, Ot, "rounding", 0, 8, "toExpNeg", -zt, 0, "toExpPos", 0, zt, "maxE", 0, zt, "minE", -zt, 0, "modulo", 0, 9];
      for (t = 0; t < a.length; t += 3)
        if (r = a[t], i && (this[r] = Pn[r]), (n = e2[r]) !== void 0)
          if (Me(n) === n && n >= a[t + 1] && n <= a[t + 2])
            this[r] = n;
          else
            throw Error(xt + r + ": " + n);
      if (r = "crypto", i && (this[r] = Pn[r]), (n = e2[r]) !== void 0)
        if (n === true || n === false || n === 0 || n === 1)
          if (n)
            if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes))
              this[r] = true;
            else
              throw Error(wo);
          else
            this[r] = false;
        else
          throw Error(xt + r + ": " + n);
      return this;
    }
    y(Fo, "uf");
    d(Fo, "config");
    function qo(e2) {
      return new this(e2).cos();
    }
    y(qo, "lf");
    d(qo, "cos");
    function Lo(e2) {
      return new this(e2).cosh();
    }
    y(Lo, "cf");
    d(Lo, "cosh");
    function Cn(e2) {
      var t, r, n;
      function i(a) {
        var o, l, f, u = this;
        if (!(u instanceof i))
          return new i(a);
        if (u.constructor = i, Fn(a)) {
          u.s = a.s, ae ? !a.d || a.e > i.maxE ? (u.e = NaN, u.d = null) : a.e < i.minE ? (u.e = 0, u.d = [0]) : (u.e = a.e, u.d = a.d.slice()) : (u.e = a.e, u.d = a.d ? a.d.slice() : a.d);
          return;
        }
        if (f = typeof a, f === "number") {
          if (a === 0) {
            u.s = 1 / a < 0 ? -1 : 1, u.e = 0, u.d = [0];
            return;
          }
          if (a < 0 ? (a = -a, u.s = -1) : u.s = 1, a === ~~a && a < 1e7) {
            for (o = 0, l = a; l >= 10; l /= 10)
              o++;
            ae ? o > i.maxE ? (u.e = NaN, u.d = null) : o < i.minE ? (u.e = 0, u.d = [0]) : (u.e = o, u.d = [a]) : (u.e = o, u.d = [a]);
            return;
          } else if (a * 0 != 0) {
            a || (u.s = NaN), u.e = NaN, u.d = null;
            return;
          }
          return Lr(u, a.toString());
        } else if (f !== "string")
          throw Error(xt + a);
        return (l = a.charCodeAt(0)) === 45 ? (a = a.slice(1), u.s = -1) : (l === 43 && (a = a.slice(1)), u.s = 1), Eo.test(a) ? Lr(u, a) : Oo(u, a);
      }
      if (y(i, "o"), d(i, "Decimal"), i.prototype = D, i.ROUND_UP = 0, i.ROUND_DOWN = 1, i.ROUND_CEIL = 2, i.ROUND_FLOOR = 3, i.ROUND_HALF_UP = 4, i.ROUND_HALF_DOWN = 5, i.ROUND_HALF_EVEN = 6, i.ROUND_HALF_CEIL = 7, i.ROUND_HALF_FLOOR = 8, i.EUCLID = 9, i.config = i.set = Fo, i.clone = Cn, i.isDecimal = Fn, i.abs = To, i.acos = So, i.acosh = Po, i.add = jo, i.asin = ko, i.asinh = Io, i.atan = No, i.atanh = $o, i.atan2 = Mo, i.cbrt = Ro, i.ceil = Bo, i.clamp = Co, i.cos = qo, i.cosh = Lo, i.div = Uo, i.exp = Do, i.floor = Vo, i.hypot = Go, i.ln = Jo, i.log = Wo, i.log10 = Ho, i.log2 = zo, i.max = Yo, i.min = Zo, i.mod = Ko, i.mul = Qo, i.pow = Xo, i.random = ea, i.round = ta, i.sign = ra, i.sin = na, i.sinh = ia, i.sqrt = oa, i.sub = aa, i.sum = sa, i.tan = ua, i.tanh = la, i.trunc = ca, e2 === void 0 && (e2 = {}), e2 && e2.defaults !== true)
        for (n = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"], t = 0; t < n.length; )
          e2.hasOwnProperty(r = n[t++]) || (e2[r] = this[r]);
      return i.config(e2), i;
    }
    y(Cn, "Ys");
    d(Cn, "clone");
    function Uo(e2, t) {
      return new this(e2).div(t);
    }
    y(Uo, "ff");
    d(Uo, "div");
    function Do(e2) {
      return new this(e2).exp();
    }
    y(Do, "pf");
    d(Do, "exp");
    function Vo(e2) {
      return te(e2 = new this(e2), e2.e + 1, 3);
    }
    y(Vo, "df");
    d(Vo, "floor");
    function Go() {
      var e2, t, r = new this(0);
      for (ae = false, e2 = 0; e2 < arguments.length; )
        if (t = new this(arguments[e2++]), t.d)
          r.d && (r = r.plus(t.times(t)));
        else {
          if (t.s)
            return ae = true, new this(1 / 0);
          r = t;
        }
      return ae = true, r.sqrt();
    }
    y(Go, "gf");
    d(Go, "hypot");
    function Fn(e2) {
      return e2 instanceof yr || e2 && e2.toStringTag === _o || false;
    }
    y(Fn, "Qs");
    d(Fn, "isDecimalInstance");
    function Jo(e2) {
      return new this(e2).ln();
    }
    y(Jo, "mf");
    d(Jo, "ln");
    function Wo(e2, t) {
      return new this(e2).log(t);
    }
    y(Wo, "hf");
    d(Wo, "log");
    function zo(e2) {
      return new this(e2).log(2);
    }
    y(zo, "yf");
    d(zo, "log2");
    function Ho(e2) {
      return new this(e2).log(10);
    }
    y(Ho, "bf");
    d(Ho, "log10");
    function Yo() {
      return $n(this, arguments, "lt");
    }
    y(Yo, "wf");
    d(Yo, "max");
    function Zo() {
      return $n(this, arguments, "gt");
    }
    y(Zo, "vf");
    d(Zo, "min");
    function Ko(e2, t) {
      return new this(e2).mod(t);
    }
    y(Ko, "Ef");
    d(Ko, "mod");
    function Qo(e2, t) {
      return new this(e2).mul(t);
    }
    y(Qo, "_f");
    d(Qo, "mul");
    function Xo(e2, t) {
      return new this(e2).pow(t);
    }
    y(Xo, "Af");
    d(Xo, "pow");
    function ea(e2) {
      var t, r, n, i, a = 0, o = new this(1), l = [];
      if (e2 === void 0 ? e2 = this.precision : Fe(e2, 1, Ot), n = Math.ceil(e2 / oe), this.crypto)
        if (crypto.getRandomValues)
          for (t = crypto.getRandomValues(new Uint32Array(n)); a < n; )
            i = t[a], i >= 429e7 ? t[a] = crypto.getRandomValues(new Uint32Array(1))[0] : l[a++] = i % 1e7;
        else if (crypto.randomBytes) {
          for (t = crypto.randomBytes(n *= 4); a < n; )
            i = t[a] + (t[a + 1] << 8) + (t[a + 2] << 16) + ((t[a + 3] & 127) << 24), i >= 214e7 ? crypto.randomBytes(4).copy(t, a) : (l.push(i % 1e7), a += 4);
          a = n / 4;
        } else
          throw Error(wo);
      else
        for (; a < n; )
          l[a++] = Math.random() * 1e7 | 0;
      for (n = l[--a], e2 %= oe, n && e2 && (i = Pe(10, oe - e2), l[a] = (n / i | 0) * i); l[a] === 0; a--)
        l.pop();
      if (a < 0)
        r = 0, l = [0];
      else {
        for (r = -1; l[0] === 0; r -= oe)
          l.shift();
        for (n = 1, i = l[0]; i >= 10; i /= 10)
          n++;
        n < oe && (r -= oe - n);
      }
      return o.e = r, o.d = l, o;
    }
    y(ea, "xf");
    d(ea, "random");
    function ta(e2) {
      return te(e2 = new this(e2), e2.e + 1, this.rounding);
    }
    y(ta, "Tf");
    d(ta, "round");
    function ra(e2) {
      return e2 = new this(e2), e2.d ? e2.d[0] ? e2.s : 0 * e2.s : e2.s || NaN;
    }
    y(ra, "Pf");
    d(ra, "sign");
    function na(e2) {
      return new this(e2).sin();
    }
    y(na, "Mf");
    d(na, "sin");
    function ia(e2) {
      return new this(e2).sinh();
    }
    y(ia, "Of");
    d(ia, "sinh");
    function oa(e2) {
      return new this(e2).sqrt();
    }
    y(oa, "Sf");
    d(oa, "sqrt");
    function aa(e2, t) {
      return new this(e2).sub(t);
    }
    y(aa, "If");
    d(aa, "sub");
    function sa() {
      var e2 = 0, t = arguments, r = new this(t[e2]);
      for (ae = false; r.s && ++e2 < t.length; )
        r = r.plus(t[e2]);
      return ae = true, te(r, this.precision, this.rounding);
    }
    y(sa, "kf");
    d(sa, "sum");
    function ua(e2) {
      return new this(e2).tan();
    }
    y(ua, "Ff");
    d(ua, "tan");
    function la(e2) {
      return new this(e2).tanh();
    }
    y(la, "jf");
    d(la, "tanh");
    function ca(e2) {
      return te(e2 = new this(e2), e2.e + 1, 1);
    }
    y(ca, "Rf");
    d(ca, "trunc");
    D[Symbol.for("nodejs.util.inspect.custom")] = D.toString;
    D[Symbol.toStringTag] = "Decimal";
    var yr = D.constructor = Cn(Pn);
    Br = new yr(Br);
    Cr = new yr(Cr);
    var Dr = yr;
    var fa = Ae(ao());
    var Lu = Ae(so());
    var qe = d((e2, t) => {
      let r = {};
      for (let n of e2) {
        let i = n[t];
        r[i] = n;
      }
      return r;
    }, "keyBy");
    var mr = { String: true, Int: true, Float: true, Boolean: true, Long: true, DateTime: true, ID: true, UUID: true, Json: true, Bytes: true, Decimal: true, BigInt: true };
    var Uu = { string: "String", boolean: "Boolean", object: "Json" };
    function Yt(e2) {
      return typeof e2 == "string" ? e2 : e2.name;
    }
    y(Yt, "$t");
    d(Yt, "stringifyGraphQLType");
    function vr(e2, t) {
      return t ? `List<${e2}>` : e2;
    }
    y(vr, "cr");
    d(vr, "wrapWithList");
    var Du = /^(\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60))(\.\d{1,})?(([Z])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/;
    var Vu = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
    function Zt(e2, t) {
      if (e2 === null)
        return "null";
      if (Object.prototype.toString.call(e2) === "[object BigInt]")
        return "BigInt";
      if (Dr.isDecimal(e2))
        return "Decimal";
      if (Ve.Buffer.isBuffer(e2))
        return "Bytes";
      if (Array.isArray(e2)) {
        let n = e2.reduce((i, a) => {
          let o = Zt(a, t);
          return i.includes(o) || i.push(o), i;
        }, []);
        return n.includes("Float") && n.includes("Int") && (n = ["Float"]), `List<${n.join(" | ")}>`;
      }
      let r = typeof e2;
      if (r === "number")
        return Math.trunc(e2) === e2 ? "Int" : "Float";
      if (Object.prototype.toString.call(e2) === "[object Date]")
        return "DateTime";
      if (r === "string") {
        if (Vu.test(e2))
          return "UUID";
        let n = new Date(e2);
        if (t && typeof t == "object" && t.values && t.values.includes(e2))
          return t.name;
        if (n.toString() === "Invalid Date")
          return "String";
        if (Du.test(e2))
          return "DateTime";
      }
      return Uu[r];
    }
    y(Zt, "Bt");
    d(Zt, "getGraphQLType");
    function Vr(e2, t) {
      return t.reduce((r, n) => {
        let i = (0, Lu.default)(e2, n);
        return i < r.distance ? { distance: i, str: n } : r;
      }, { distance: Math.min(Math.floor(e2.length) * 1.1, ...t.map((r) => r.length * 3)), str: null }).str;
    }
    y(Vr, "un");
    d(Vr, "getSuggestion");
    function Kt(e2, t = false) {
      if (typeof e2 == "string")
        return e2;
      if (e2.values)
        return `enum ${e2.name} {
${(0, fa.default)(e2.values.join(", "), 2)}
}`;
      {
        let r = (0, fa.default)(e2.fields.map((n) => {
          let i = `${n.name}`, a = `${t ? Nt.default.green(i) : i}${n.isRequired ? "" : "?"}: ${Nt.default.white(n.inputTypes.map((o) => vr(pa(o.type) ? o.type.name : Yt(o.type), o.isList)).join(" | "))}`;
          return n.isRequired ? a : Nt.default.dim(a);
        }).join(`
`), 2);
        return `${Nt.default.dim("type")} ${Nt.default.bold.dim(e2.name)} ${Nt.default.dim("{")}
${r}
${Nt.default.dim("}")}`;
      }
    }
    y(Kt, "Lt");
    d(Kt, "stringifyInputType");
    function pa(e2) {
      return typeof e2 != "string";
    }
    y(pa, "$f");
    d(pa, "argIsInputType");
    function br(e2) {
      return typeof e2 == "string" ? e2 === "Null" ? "null" : e2 : e2.name;
    }
    y(br, "fr");
    d(br, "getInputTypeName");
    function Qt(e2) {
      return typeof e2 == "string" ? e2 : e2.name;
    }
    y(Qt, "bt");
    d(Qt, "getOutputTypeName");
    function qn(e2, t, r = false) {
      if (typeof e2 == "string")
        return e2 === "Null" ? "null" : e2;
      if (e2.values)
        return e2.values.join(" | ");
      let n = e2, i = t && n.fields.every((a) => {
        var o;
        return a.inputTypes[0].location === "inputObjectTypes" || ((o = a.inputTypes[1]) == null ? void 0 : o.location) === "inputObjectTypes";
      });
      return r ? br(e2) : n.fields.reduce((a, o) => {
        let l = "";
        return !i && !o.isRequired ? l = o.inputTypes.map((f) => br(f.type)).join(" | ") : l = o.inputTypes.map((f) => qn(f.type, o.isRequired, true)).join(" | "), a[o.name + (o.isRequired ? "" : "?")] = l, a;
      }, {});
    }
    y(qn, "wo");
    d(qn, "inputTypeToJson");
    function da(e2, t, r) {
      let n = {};
      for (let i of e2)
        n[r(i)] = i;
      for (let i of t) {
        let a = r(i);
        n[a] || (n[a] = i);
      }
      return Object.values(n);
    }
    y(da, "ea");
    d(da, "unionBy");
    function ha(e2) {
      return e2.endsWith("GroupByOutputType");
    }
    y(ha, "ta");
    d(ha, "isGroupByOutputName");
    var Ln = y(class {
      constructor({ datamodel: e2, schema: t, mappings: r }) {
        this.outputTypeToMergedOutputType = (n) => ({ ...n, fields: n.fields }), this.datamodel = e2, this.schema = t, this.mappings = r, this.enumMap = this.getEnumMap(), this.datamodelEnumMap = this.getDatamodelEnumMap(), this.queryType = this.getQueryType(), this.mutationType = this.getMutationType(), this.modelMap = this.getModelMap(), this.typeMap = this.getTypeMap(), this.typeAndModelMap = this.getTypeModelMap(), this.outputTypes = this.getOutputTypes(), this.outputTypeMap = this.getMergedOutputTypeMap(), this.resolveOutputTypes(), this.inputObjectTypes = this.schema.inputObjectTypes, this.inputTypeMap = this.getInputTypeMap(), this.resolveInputTypes(), this.resolveFieldArgumentTypes(), this.mappingsMap = this.getMappingsMap(), this.queryType = this.outputTypeMap.Query, this.mutationType = this.outputTypeMap.Mutation, this.rootFieldMap = this.getRootFieldMap();
      }
      get [Symbol.toStringTag]() {
        return "DMMFClass";
      }
      resolveOutputTypes() {
        for (let e2 of this.outputTypes.model) {
          for (let t of e2.fields)
            typeof t.outputType.type == "string" && !mr[t.outputType.type] && (t.outputType.type = this.outputTypeMap[t.outputType.type] || this.outputTypeMap[t.outputType.type] || this.enumMap[t.outputType.type] || t.outputType.type);
          e2.fieldMap = qe(e2.fields, "name");
        }
        for (let e2 of this.outputTypes.prisma) {
          for (let t of e2.fields)
            typeof t.outputType.type == "string" && !mr[t.outputType.type] && (t.outputType.type = this.outputTypeMap[t.outputType.type] || this.outputTypeMap[t.outputType.type] || this.enumMap[t.outputType.type] || t.outputType.type);
          e2.fieldMap = qe(e2.fields, "name");
        }
      }
      resolveInputTypes() {
        let e2 = this.inputObjectTypes.prisma;
        this.inputObjectTypes.model && e2.push(...this.inputObjectTypes.model);
        for (let t of e2) {
          for (let r of t.fields)
            for (let n of r.inputTypes) {
              let i = n.type;
              typeof i == "string" && !mr[i] && (this.inputTypeMap[i] || this.enumMap[i]) && (n.type = this.inputTypeMap[i] || this.enumMap[i] || i);
            }
          t.fieldMap = qe(t.fields, "name");
        }
      }
      resolveFieldArgumentTypes() {
        for (let e2 of this.outputTypes.prisma)
          for (let t of e2.fields)
            for (let r of t.args)
              for (let n of r.inputTypes) {
                let i = n.type;
                typeof i == "string" && !mr[i] && (n.type = this.inputTypeMap[i] || this.enumMap[i] || i);
              }
        for (let e2 of this.outputTypes.model)
          for (let t of e2.fields)
            for (let r of t.args)
              for (let n of r.inputTypes) {
                let i = n.type;
                typeof i == "string" && !mr[i] && (n.type = this.inputTypeMap[i] || this.enumMap[i] || n.type);
              }
      }
      getQueryType() {
        return this.schema.outputObjectTypes.prisma.find((e2) => e2.name === "Query");
      }
      getMutationType() {
        return this.schema.outputObjectTypes.prisma.find((e2) => e2.name === "Mutation");
      }
      getOutputTypes() {
        return { model: this.schema.outputObjectTypes.model.map(this.outputTypeToMergedOutputType), prisma: this.schema.outputObjectTypes.prisma.map(this.outputTypeToMergedOutputType) };
      }
      getDatamodelEnumMap() {
        return qe(this.datamodel.enums, "name");
      }
      getEnumMap() {
        return { ...qe(this.schema.enumTypes.prisma, "name"), ...this.schema.enumTypes.model ? qe(this.schema.enumTypes.model, "name") : void 0 };
      }
      getModelMap() {
        return { ...qe(this.datamodel.models, "name") };
      }
      getTypeMap() {
        return { ...qe(this.datamodel.types, "name") };
      }
      getTypeModelMap() {
        return { ...this.getTypeMap(), ...this.getModelMap() };
      }
      getMergedOutputTypeMap() {
        return { ...qe(this.outputTypes.model, "name"), ...qe(this.outputTypes.prisma, "name") };
      }
      getInputTypeMap() {
        return { ...this.schema.inputObjectTypes.model ? qe(this.schema.inputObjectTypes.model, "name") : void 0, ...qe(this.schema.inputObjectTypes.prisma, "name") };
      }
      getMappingsMap() {
        return qe(this.mappings.modelOperations, "model");
      }
      getRootFieldMap() {
        return { ...qe(this.queryType.fields, "name"), ...qe(this.mutationType.fields, "name") };
      }
    }, "pr");
    d(Ln, "DMMFHelper");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Un;
    (function(e2) {
      let t;
      (function(r) {
        r.findUnique = "findUnique", r.findFirst = "findFirst", r.findMany = "findMany", r.create = "create", r.createMany = "createMany", r.update = "update", r.updateMany = "updateMany", r.upsert = "upsert", r.delete = "delete", r.deleteMany = "deleteMany", r.groupBy = "groupBy", r.count = "count", r.aggregate = "aggregate", r.findRaw = "findRaw", r.aggregateRaw = "aggregateRaw";
      })(t = e2.ModelAction || (e2.ModelAction = {}));
    })(Un || (Un = {}));
    j();
    k();
    N();
    I();
    var Dn = Ae(lo());
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Gu = Object.defineProperty;
    var Ju = d((e2, t) => Gu(e2, "name", { value: t, configurable: true }), "__name");
    var Gr = y(class {
    }, "At");
    d(Gr, "Engine");
    Ju(Gr, "Engine");
    j();
    k();
    N();
    I();
    var Wu = Object.defineProperty;
    var zu = d((e2, t) => Wu(e2, "name", { value: t, configurable: true }), "__name");
    var Xt = y(class extends Error {
      constructor(e2, t, r) {
        super(e2);
        this.clientVersion = t, this.errorCode = r, Error.captureStackTrace(Xt);
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientInitializationError";
      }
    }, "Ue");
    d(Xt, "PrismaClientInitializationError");
    zu(Xt, "PrismaClientInitializationError");
    j();
    k();
    N();
    I();
    var Hu = Object.defineProperty;
    var Yu = d((e2, t) => Hu(e2, "name", { value: t, configurable: true }), "__name");
    var wr = y(class extends Error {
      constructor(e2, t, r, n) {
        super(e2);
        this.code = t, this.clientVersion = r, this.meta = n;
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientKnownRequestError";
      }
    }, "We");
    d(wr, "PrismaClientKnownRequestError");
    Yu(wr, "PrismaClientKnownRequestError");
    j();
    k();
    N();
    I();
    var Zu = Object.defineProperty;
    var Ku = d((e2, t) => Zu(e2, "name", { value: t, configurable: true }), "__name");
    var er = y(class extends Error {
      constructor(e2, t) {
        super(e2);
        this.clientVersion = t;
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientRustPanicError";
      }
    }, "He");
    d(er, "PrismaClientRustPanicError");
    Ku(er, "PrismaClientRustPanicError");
    j();
    k();
    N();
    I();
    var Qu = Object.defineProperty;
    var Xu = d((e2, t) => Qu(e2, "name", { value: t, configurable: true }), "__name");
    var tr = y(class extends Error {
      constructor(e2, t) {
        super(e2);
        this.clientVersion = t;
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientUnknownRequestError";
      }
    }, "Ve");
    d(tr, "PrismaClientUnknownRequestError");
    Xu(tr, "PrismaClientUnknownRequestError");
    j();
    k();
    N();
    I();
    var el = Object.defineProperty;
    var tl = d((e2, t) => el(e2, "name", { value: t, configurable: true }), "__name");
    function Vn(e2, t) {
      return e2.user_facing_error.error_code ? new wr(e2.user_facing_error.message, e2.user_facing_error.error_code, t, e2.user_facing_error.meta) : new tr(e2.error, t);
    }
    y(Vn, "Yo");
    d(Vn, "prismaGraphQLToJSError");
    tl(Vn, "prismaGraphQLToJSError");
    j();
    k();
    N();
    I();
    var rl = Ae(xu());
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var nl = Object.defineProperty;
    var il = d((e2, t) => nl(e2, "name", { value: t, configurable: true }), "__name");
    var Gn = y(class extends Error {
      constructor(e2, t) {
        super(e2);
        this.clientVersion = t.clientVersion, this.cause = t.cause;
      }
      get [Symbol.toStringTag]() {
        return this.name;
      }
    }, "br");
    d(Gn, "PrismaClientError");
    il(Gn, "PrismaClientError");
    var ol = Object.defineProperty;
    var al = d((e2, t) => ol(e2, "name", { value: t, configurable: true }), "__name");
    var Mt = y(class extends Gn {
      constructor(e2, t) {
        super(e2, t);
        var r;
        this.isRetryable = (r = t.isRetryable) != null ? r : true;
      }
    }, "_e");
    d(Mt, "DataProxyError");
    al(Mt, "DataProxyError");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var sl = Object.defineProperty;
    var ul = d((e2, t) => sl(e2, "name", { value: t, configurable: true }), "__name");
    function nt(e2, t) {
      return { ...e2, isRetryable: t };
    }
    y(nt, "re");
    d(nt, "setRetryable");
    ul(nt, "setRetryable");
    var ll = Object.defineProperty;
    var cl = d((e2, t) => ll(e2, "name", { value: t, configurable: true }), "__name");
    var Jr = y(class extends Mt {
      constructor(e2) {
        super("This request must be retried", nt(e2, true));
        this.name = "ForcedRetryError", this.code = "P5001";
      }
    }, "Wt");
    d(Jr, "ForcedRetryError");
    cl(Jr, "ForcedRetryError");
    j();
    k();
    N();
    I();
    var fl = Object.defineProperty;
    var pl = d((e2, t) => fl(e2, "name", { value: t, configurable: true }), "__name");
    var _r = y(class extends Mt {
      constructor(e2, t) {
        super(e2, nt(t, false));
        this.name = "InvalidDatasourceError", this.code = "P5002";
      }
    }, "xt");
    d(_r, "InvalidDatasourceError");
    pl(_r, "InvalidDatasourceError");
    j();
    k();
    N();
    I();
    var dl = Object.defineProperty;
    var hl = d((e2, t) => dl(e2, "name", { value: t, configurable: true }), "__name");
    var Wr = y(class extends Mt {
      constructor(e2, t) {
        super(e2, nt(t, false));
        this.name = "NotImplementedYetError", this.code = "P5004";
      }
    }, "Ht");
    d(Wr, "NotImplementedYetError");
    hl(Wr, "NotImplementedYetError");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var gl = Object.defineProperty;
    var yl = d((e2, t) => gl(e2, "name", { value: t, configurable: true }), "__name");
    var Tt = y(class extends Mt {
      constructor(e2, t) {
        super(e2, t);
        this.response = t.response;
      }
    }, "ge");
    d(Tt, "DataProxyAPIError");
    yl(Tt, "DataProxyAPIError");
    var ml = Object.defineProperty;
    var vl = d((e2, t) => ml(e2, "name", { value: t, configurable: true }), "__name");
    var zr = y(class extends Tt {
      constructor(e2) {
        super("Schema needs to be uploaded", nt(e2, true));
        this.name = "SchemaMissingError", this.code = "P5005";
      }
    }, "Tt");
    d(zr, "SchemaMissingError");
    vl(zr, "SchemaMissingError");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var bl = Object.defineProperty;
    var wl = d((e2, t) => bl(e2, "name", { value: t, configurable: true }), "__name");
    var Jn = y(class extends Tt {
      constructor(e2) {
        super("This request could not be understood by the server", nt(e2, false));
        this.name = "BadRequestError", this.code = "P5000";
      }
    }, "wr");
    d(Jn, "BadRequestError");
    wl(Jn, "BadRequestError");
    j();
    k();
    N();
    I();
    var _l = Object.defineProperty;
    var El = d((e2, t) => _l(e2, "name", { value: t, configurable: true }), "__name");
    var Hr = y(class extends Tt {
      constructor(e2) {
        super("Requested resource does not exist", nt(e2, false));
        this.name = "NotFoundError", this.code = "P5003";
      }
    }, "Yt");
    d(Hr, "NotFoundError");
    El(Hr, "NotFoundError");
    j();
    k();
    N();
    I();
    var Al = Object.defineProperty;
    var Ol = d((e2, t) => Al(e2, "name", { value: t, configurable: true }), "__name");
    var Wn = y(class extends Tt {
      constructor(e2) {
        super("Unknown server error", nt(e2, true));
        this.name = "ServerError", this.code = "P5006";
      }
    }, "vr");
    d(Wn, "ServerError");
    Ol(Wn, "ServerError");
    j();
    k();
    N();
    I();
    var xl = Object.defineProperty;
    var Tl = d((e2, t) => xl(e2, "name", { value: t, configurable: true }), "__name");
    var zn = y(class extends Tt {
      constructor(e2) {
        super("Unauthorized, check your connection string", nt(e2, false));
        this.name = "UnauthorizedError", this.code = "P5007";
      }
    }, "Er");
    d(zn, "UnauthorizedError");
    Tl(zn, "UnauthorizedError");
    j();
    k();
    N();
    I();
    var Sl = Object.defineProperty;
    var Pl = d((e2, t) => Sl(e2, "name", { value: t, configurable: true }), "__name");
    var Hn = y(class extends Tt {
      constructor(e2) {
        super("Usage exceeded, retry again later", nt(e2, true));
        this.name = "UsageExceededError", this.code = "P5008";
      }
    }, "_r");
    d(Hn, "UsageExceededError");
    Pl(Hn, "UsageExceededError");
    var jl = Object.defineProperty;
    var kl = d((e2, t) => jl(e2, "name", { value: t, configurable: true }), "__name");
    async function Yr(e2, t) {
      var n, i;
      if (e2.ok)
        return;
      let r = { clientVersion: t, response: e2 };
      if (e2.status === 401)
        throw new zn(r);
      if (e2.status === 404)
        try {
          return ((i = (n = await e2.json()) == null ? void 0 : n.EngineNotStarted) == null ? void 0 : i.reason) === "SchemaMissing" ? new zr(r) : new Hr(r);
        } catch (a) {
          return new Hr(r);
        }
      if (e2.status === 429)
        throw new Hn(r);
      if (e2.status >= 500)
        throw new Wn(r);
      if (e2.status >= 400)
        throw new Jn(r);
    }
    y(Yr, "xn");
    d(Yr, "responseToError");
    kl(Yr, "responseToError");
    j();
    k();
    N();
    I();
    var Il = Object.defineProperty;
    var Nl = d((e2, t) => Il(e2, "name", { value: t, configurable: true }), "__name");
    var $l = 50;
    function Yn(e2) {
      let t = Math.pow(2, e2) * $l, r = Math.ceil(Math.random() * t) - Math.ceil(t / 2), n = t + r;
      return new Promise((i) => setTimeout(() => i(n), n));
    }
    y(Yn, "Qo");
    d(Yn, "backOff");
    Nl(Yn, "backOff");
    j();
    k();
    N();
    I();
    var Ml = Object.defineProperty;
    var Rl = d((e2, t) => Ml(e2, "name", { value: t, configurable: true }), "__name");
    function Zn(e2) {
      var n, i;
      let [t, r] = (i = (n = e2.clientVersion) == null ? void 0 : n.split("-")) != null ? i : [];
      return !r && /^[1-9][0-9]*\.[0-9]+\.[0-9]+$/.test(t) ? t : "3.4.1";
    }
    y(Zn, "Ko");
    d(Zn, "getClientVersion");
    Rl(Zn, "getClientVersion");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Bl = Object.defineProperty;
    var Cl = d((e2, t) => Bl(e2, "name", { value: t, configurable: true }), "__name");
    function Kn() {
      return typeof self == "undefined" ? "node" : "browser";
    }
    y(Kn, "Zo");
    d(Kn, "getJSRuntimeName");
    Cl(Kn, "getJSRuntimeName");
    var Fl = Object.defineProperty;
    var Er = d((e2, t) => Fl(e2, "name", { value: t, configurable: true }), "__name");
    async function Ar(e2, t = {}) {
      return Kn() === "browser" ? fetch(e2, t) : ti(e2, t);
    }
    y(Ar, "xr");
    d(Ar, "request");
    Er(Ar, "request");
    function Qn(e2) {
      return { ...JSON.parse(JSON.stringify(e2.headers)), "Content-Type": "application/json" };
    }
    y(Qn, "Fa");
    d(Qn, "buildHeaders");
    Er(Qn, "buildHeaders");
    function Xn(e2) {
      return { method: e2.method, headers: Qn(e2) };
    }
    y(Xn, "ja");
    d(Xn, "buildOptions");
    Er(Xn, "buildOptions");
    function ei(e2, t) {
      return { json: () => JSON.parse(Ve.Buffer.concat(e2).toString()), ok: t.statusCode >= 200 && t.statusCode < 300, status: t.statusCode, url: t.url };
    }
    y(ei, "Ra");
    d(ei, "buildResponse");
    Er(ei, "buildResponse");
    function ti(url, options = {}) {
      let httpsOptions = Xn(options), incomingData = [];
      return new Promise((resolve, reject) => {
        var e;
        let https = eval("require('https')"), request = https.request(url, httpsOptions, (t) => {
          t.on("data", (r) => incomingData.push(r)), t.on("end", () => resolve(ei(incomingData, t))), t.on("error", reject);
        });
        request.on("error", reject), request.write((e = options.body) != null ? e : ""), request.end();
      });
    }
    y(ti, "Na");
    d(ti, "nodeFetch");
    Er(ti, "nodeFetch");
    var ql = Object.defineProperty;
    var Ll = d((e2, t) => ql(e2, "name", { value: t, configurable: true }), "__name");
    var Ul = 10;
    var ri = y(class extends Gr {
      constructor(e2) {
        super();
        var i, a, o, l, f;
        this.config = e2, this.env = (i = this.config.env) != null ? i : {}, this.inlineSchema = (a = e2.inlineSchema) != null ? a : "", this.inlineDatasources = (o = e2.inlineDatasources) != null ? o : {}, this.inlineSchemaHash = (l = e2.inlineSchemaHash) != null ? l : "", this.clientVersion = (f = e2.clientVersion) != null ? f : "unknown", this.logEmitter = new rl.default(), this.logEmitter.on("error", () => {
        });
        let [t, r] = this.extractHostAndApiKey();
        this.remoteClientVersion = Zn(this.config), this.headers = { Authorization: `Bearer ${r}` }, this.host = t;
        let n = Promise.resolve();
        this.pushPromise = n.then(() => this.pushSchema());
      }
      async pushSchema() {
        (await Ar(this.url("schema"), { method: "GET", headers: this.headers })).status === 404 && await this.uploadSchema();
      }
      version() {
        return "unknown";
      }
      async start() {
      }
      async stop() {
      }
      on(e2, t) {
        if (e2 === "beforeExit")
          throw new Wr("beforeExit event is not yet supported", { clientVersion: this.clientVersion });
        this.logEmitter.on(e2, t);
      }
      url(e2) {
        return `https://${this.host}/${this.remoteClientVersion}/${this.inlineSchemaHash}/${e2}`;
      }
      async getConfig() {
        return Promise.resolve({ datasources: [{ activeProvider: this.config.activeProvider }] });
      }
      async uploadSchema() {
        let e2 = await Ar(this.url("schema"), { method: "PUT", headers: this.headers, body: this.inlineSchema }), t = await Yr(e2, this.clientVersion);
        if (t)
          throw this.logEmitter.emit("warn", { message: `Error while uploading schema: ${t.message}` }), t;
        this.logEmitter.emit("info", { message: `Schema (re)uploaded (hash: ${this.inlineSchemaHash})` });
      }
      request(e2, t, r = 0) {
        return this.logEmitter.emit("query", { query: e2 }), this.requestInternal({ query: e2, variables: {} }, t, r);
      }
      async requestBatch(e2, t, r = false, n = 0) {
        this.logEmitter.emit("query", { query: `Batch${r ? " in transaction" : ""} (${e2.length}):
${e2.join(`
`)}` });
        let i = { batch: e2.map((o) => ({ query: o, variables: {} })), transaction: r }, { batchResult: a } = await this.requestInternal(i, t, n);
        return a;
      }
      async requestInternal(e2, t, r) {
        var n;
        await this.pushPromise;
        try {
          this.logEmitter.emit("info", { message: `Calling ${this.url("graphql")} (n=${r})` });
          let i = await Ar(this.url("graphql"), { method: "POST", headers: { ...t, ...this.headers }, body: JSON.stringify(e2) }), a = await Yr(i, this.clientVersion);
          if (a instanceof zr)
            throw await this.uploadSchema(), new Jr({ clientVersion: this.clientVersion, cause: a });
          if (a)
            throw a;
          let o = await i.json();
          if (o.errors && o.errors.length === 1)
            throw Vn(o.errors[0], this.config.clientVersion);
          return o;
        } catch (i) {
          if (this.logEmitter.emit("error", { message: `Error while querying: ${(n = i.message) != null ? n : "(unknown)"}` }), !(i instanceof Mt) || !i.isRetryable)
            throw i;
          if (r >= Ul)
            throw i instanceof Jr ? i.cause : i;
          this.logEmitter.emit("warn", { message: "This request can be retried" });
          let a = await Yn(r);
          return this.logEmitter.emit("warn", { message: `Retrying after ${a}ms` }), this.requestInternal(e2, t, r + 1);
        }
      }
      transaction() {
        throw new Wr("Interactive transactions are not yet supported", { clientVersion: this.clientVersion });
      }
      extractHostAndApiKey() {
        let e2 = Object.keys(this.inlineDatasources)[0], t = this.inlineDatasources[e2], r = t == null ? void 0 : t.url.value, n = t == null ? void 0 : t.url.fromEnvVar, i = this.env[n], a = r != null ? r : i, o;
        try {
          o = new URL(a != null ? a : "");
        } catch (p) {
          throw new _r("Could not parse URL of the datasource", { clientVersion: this.clientVersion });
        }
        let { protocol: l, host: f, searchParams: u } = o;
        if (l !== "prisma:")
          throw new _r("Datasource URL should use prisma:// protocol", { clientVersion: this.clientVersion });
        let c = u.get("api_key");
        if (c === null || c.length < 1)
          throw new _r("No valid API key found in the datasource URL", { clientVersion: this.clientVersion });
        return [f, c];
      }
    }, "Qt");
    d(ri, "DataProxyEngine");
    Ll(ri, "DataProxyEngine");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Dl = Object.defineProperty;
    var ga = d((e2, t) => Dl(e2, "name", { value: t, configurable: true }), "__name");
    var Ne;
    (function(e2) {
      e2.Library = "library", e2.Binary = "binary", e2.DataProxy = "dataproxy";
    })(Ne || (Ne = {}));
    var Vl = Ne.Library;
    function ni(e2) {
      return ii() || ((e2 == null ? void 0 : e2.config.engineType) === Ne.Library ? Ne.Library : (e2 == null ? void 0 : e2.config.engineType) === Ne.Binary ? Ne.Binary : (e2 == null ? void 0 : e2.config.engineType) === Ne.DataProxy ? Ne.DataProxy : Vl);
    }
    y(ni, "Tn");
    d(ni, "getClientEngineType");
    ga(ni, "getClientEngineType");
    function ii() {
      let e2 = we.env.PRISMA_CLIENT_ENGINE_TYPE;
      return e2 === Ne.Library ? Ne.Library : e2 === Ne.Binary ? Ne.Binary : e2 === Ne.DataProxy ? Ne.DataProxy : void 0;
    }
    y(ii, "Ba");
    d(ii, "getEngineTypeFromEnvVar");
    ga(ii, "getEngineTypeFromEnvVar");
    j();
    k();
    N();
    I();
    var Gl = Ae(Su());
    var Jl = Ae(yo());
    var Wl = Object.defineProperty;
    var oi = d((e2, t) => Wl(e2, "name", { value: t, configurable: true }), "__name");
    function ya(e2 = "") {
      return (0, Jl.default)(e2).trimRight() + `
`;
    }
    y(ya, "Wa");
    d(ya, "format");
    oi(ya, "format");
    function ma(e2, t, r = true, n = false) {
      try {
        return (0, Gl.default)(t, { argv: e2, stopAtPositional: r, permissive: n });
      } catch (i) {
        return i;
      }
    }
    y(ma, "Ha");
    d(ma, "arg");
    oi(ma, "arg");
    function Zr(e2) {
      return e2 instanceof Error;
    }
    y(Zr, "Kt");
    d(Zr, "isError");
    oi(Zr, "isError");
    j();
    k();
    N();
    I();
    var zl = Object.defineProperty;
    var Hl = d((e2, t) => zl(e2, "name", { value: t, configurable: true }), "__name");
    var Yl = { transactionApi: "transaction", aggregateApi: "aggregations" };
    function ai(e2) {
      return Array.isArray(e2) && e2.length > 0 ? e2.map((t) => {
        var r;
        return (r = Yl[t]) != null ? r : t;
      }) : [];
    }
    y(ai, "Pn");
    d(ai, "mapPreviewFeatures");
    Hl(ai, "mapPreviewFeatures");
    var si = {};
    no(si, { error: () => fi, info: () => ci, log: () => ui, query: () => pi, should: () => va, tags: () => xr, warn: () => li });
    j();
    k();
    N();
    I();
    var Kr = Ae(Wt());
    var Zl = Object.defineProperty;
    var Or = d((e2, t) => Zl(e2, "name", { value: t, configurable: true }), "__name");
    var xr = { error: Kr.default.red("prisma:error"), warn: Kr.default.yellow("prisma:warn"), info: Kr.default.cyan("prisma:info"), query: Kr.default.blue("prisma:query") };
    var va = { warn: !we.env.PRISMA_DISABLE_WARNINGS };
    function ui(...e2) {
      console.log(...e2);
    }
    y(ui, "Qa");
    d(ui, "log");
    Or(ui, "log");
    function li(e2, ...t) {
      va.warn && console.warn(`${xr.warn} ${e2}`, ...t);
    }
    y(li, "Ka");
    d(li, "warn");
    Or(li, "warn");
    function ci(e2, ...t) {
      console.info(`${xr.info} ${e2}`, ...t);
    }
    y(ci, "Za");
    d(ci, "info");
    Or(ci, "info");
    function fi(e2, ...t) {
      console.error(`${xr.error} ${e2}`, ...t);
    }
    y(fi, "Xa");
    d(fi, "error");
    Or(fi, "error");
    function pi(e2, ...t) {
      console.log(`${xr.query} ${e2}`, ...t);
    }
    y(pi, "eu");
    d(pi, "query");
    Or(pi, "query");
    var hf = Ae(Ou());
    var gf = Ae(ju());
    ho();
    var Qr = Ae(go());
    var Tr = Ae(mo());
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Kl = typeof ct == "object" ? ct : fr;
    j();
    k();
    N();
    I();
    var rr = "1.0.3";
    j();
    k();
    N();
    I();
    var ba = /^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;
    function wa(e2) {
      var t = new Set([e2]), r = new Set(), n = e2.match(ba);
      if (!n)
        return function() {
          return false;
        };
      var i = { major: +n[1], minor: +n[2], patch: +n[3], prerelease: n[4] };
      if (i.prerelease != null)
        return d(function(l) {
          return l === e2;
        }, "isExactmatch");
      function a(l) {
        return r.add(l), false;
      }
      y(a, "i"), d(a, "_reject");
      function o(l) {
        return t.add(l), true;
      }
      return y(o, "s"), d(o, "_accept"), d(function(l) {
        if (t.has(l))
          return true;
        if (r.has(l))
          return false;
        var f = l.match(ba);
        if (!f)
          return a(l);
        var u = { major: +f[1], minor: +f[2], patch: +f[3], prerelease: f[4] };
        return u.prerelease != null || i.major !== u.major ? a(l) : i.major === 0 ? i.minor === u.minor && i.patch <= u.patch ? o(l) : a(l) : i.minor <= u.minor ? o(l) : a(l);
      }, "isCompatible");
    }
    y(wa, "Zd");
    d(wa, "_makeCompatibilityCheck");
    var Ql = wa(rr);
    var Xl = rr.split(".")[0];
    var Sr = Symbol.for("opentelemetry.js.api." + Xl);
    var Pr = Kl;
    function jr(e2, t, r, n) {
      var i;
      n === void 0 && (n = false);
      var a = Pr[Sr] = (i = Pr[Sr]) !== null && i !== void 0 ? i : { version: rr };
      if (!n && a[e2]) {
        var o = new Error("@opentelemetry/api: Attempted duplicate registration of API: " + e2);
        return r.error(o.stack || o.message), false;
      }
      if (a.version !== rr) {
        var o = new Error("@opentelemetry/api: All API registration versions must match");
        return r.error(o.stack || o.message), false;
      }
      return a[e2] = t, r.debug("@opentelemetry/api: Registered a global for " + e2 + " v" + rr + "."), true;
    }
    y(jr, "ut");
    d(jr, "registerGlobal");
    function Rt(e2) {
      var t, r, n = (t = Pr[Sr]) === null || t === void 0 ? void 0 : t.version;
      if (!(!n || !Ql(n)))
        return (r = Pr[Sr]) === null || r === void 0 ? void 0 : r[e2];
    }
    y(Rt, "je");
    d(Rt, "getGlobal");
    function kr(e2, t) {
      t.debug("@opentelemetry/api: Unregistering a global for " + e2 + " v" + rr + ".");
      var r = Pr[Sr];
      r && delete r[e2];
    }
    y(kr, "lt");
    d(kr, "unregisterGlobal");
    var ec = function() {
      function e2(t) {
        this._namespace = t.namespace || "DiagComponentLogger";
      }
      return y(e2, "e"), d(e2, "DiagComponentLogger"), e2.prototype.debug = function() {
        for (var t = [], r = 0; r < arguments.length; r++)
          t[r] = arguments[r];
        return nr("debug", this._namespace, t);
      }, e2.prototype.error = function() {
        for (var t = [], r = 0; r < arguments.length; r++)
          t[r] = arguments[r];
        return nr("error", this._namespace, t);
      }, e2.prototype.info = function() {
        for (var t = [], r = 0; r < arguments.length; r++)
          t[r] = arguments[r];
        return nr("info", this._namespace, t);
      }, e2.prototype.warn = function() {
        for (var t = [], r = 0; r < arguments.length; r++)
          t[r] = arguments[r];
        return nr("warn", this._namespace, t);
      }, e2.prototype.verbose = function() {
        for (var t = [], r = 0; r < arguments.length; r++)
          t[r] = arguments[r];
        return nr("verbose", this._namespace, t);
      }, e2;
    }();
    function nr(e2, t, r) {
      var n = Rt("diag");
      if (n)
        return r.unshift(t), n[e2].apply(n, r);
    }
    y(nr, "Fr");
    d(nr, "logProxy");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Ye;
    (function(e2) {
      e2[e2.NONE = 0] = "NONE", e2[e2.ERROR = 30] = "ERROR", e2[e2.WARN = 50] = "WARN", e2[e2.INFO = 60] = "INFO", e2[e2.DEBUG = 70] = "DEBUG", e2[e2.VERBOSE = 80] = "VERBOSE", e2[e2.ALL = 9999] = "ALL";
    })(Ye || (Ye = {}));
    function _a(e2, t) {
      e2 < Ye.NONE ? e2 = Ye.NONE : e2 > Ye.ALL && (e2 = Ye.ALL), t = t || {};
      function r(n, i) {
        var a = t[n];
        return typeof a == "function" && e2 >= i ? a.bind(t) : function() {
        };
      }
      return y(r, "r"), d(r, "_filterFunc"), { error: r("error", Ye.ERROR), warn: r("warn", Ye.WARN), info: r("info", Ye.INFO), debug: r("debug", Ye.DEBUG), verbose: r("verbose", Ye.VERBOSE) };
    }
    y(_a, "lu");
    d(_a, "createLogLevelDiagLogger");
    var tc = "diag";
    var St = function() {
      function e2() {
        function t(n) {
          return function() {
            var i = Rt("diag");
            if (i)
              return i[n].apply(i, arguments);
          };
        }
        y(t, "t"), d(t, "_logProxy");
        var r = this;
        r.setLogger = function(n, i) {
          var a, o;
          if (i === void 0 && (i = Ye.INFO), n === r) {
            var l = new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");
            return r.error((a = l.stack) !== null && a !== void 0 ? a : l.message), false;
          }
          var f = Rt("diag"), u = _a(i, n);
          if (f) {
            var c = (o = new Error().stack) !== null && o !== void 0 ? o : "<failed to generate stacktrace>";
            f.warn("Current logger will be overwritten from " + c), u.warn("Current logger will overwrite one already registered from " + c);
          }
          return jr("diag", u, r, true);
        }, r.disable = function() {
          kr(tc, r);
        }, r.createComponentLogger = function(n) {
          return new ec(n);
        }, r.verbose = t("verbose"), r.debug = t("debug"), r.info = t("info"), r.warn = t("warn"), r.error = t("error");
      }
      return y(e2, "e"), d(e2, "DiagAPI"), e2.instance = function() {
        return this._instance || (this._instance = new e2()), this._instance;
      }, e2;
    }();
    j();
    k();
    N();
    I();
    var rc = function() {
      function e2(t) {
        this._entries = t ? new Map(t) : new Map();
      }
      return y(e2, "e"), d(e2, "BaggageImpl"), e2.prototype.getEntry = function(t) {
        var r = this._entries.get(t);
        if (r)
          return Object.assign({}, r);
      }, e2.prototype.getAllEntries = function() {
        return Array.from(this._entries.entries()).map(function(t) {
          var r = t[0], n = t[1];
          return [r, n];
        });
      }, e2.prototype.setEntry = function(t, r) {
        var n = new e2(this._entries);
        return n._entries.set(t, r), n;
      }, e2.prototype.removeEntry = function(t) {
        var r = new e2(this._entries);
        return r._entries.delete(t), r;
      }, e2.prototype.removeEntries = function() {
        for (var t = [], r = 0; r < arguments.length; r++)
          t[r] = arguments[r];
        for (var n = new e2(this._entries), i = 0, a = t; i < a.length; i++) {
          var o = a[i];
          n._entries.delete(o);
        }
        return n;
      }, e2.prototype.clear = function() {
        return new e2();
      }, e2;
    }();
    j();
    k();
    N();
    I();
    var yf = Symbol("BaggageEntryMetadata");
    var mf = St.instance();
    function Ea(e2) {
      return e2 === void 0 && (e2 = {}), new rc(new Map(Object.entries(e2)));
    }
    y(Ea, "fu");
    d(Ea, "createBaggage");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var di = [{ n: "error", c: "error" }, { n: "warn", c: "warn" }, { n: "info", c: "info" }, { n: "debug", c: "debug" }, { n: "verbose", c: "trace" }];
    var vf = function() {
      function e2() {
        function t(n) {
          return function() {
            var i = arguments;
            if (console) {
              var a = console[n];
              if (typeof a != "function" && (a = console.log), typeof a == "function")
                return a.apply(console, i);
            }
          };
        }
        y(t, "t"), d(t, "_consoleFunc");
        for (var r = 0; r < di.length; r++)
          this[di[r].n] = t(di[r].c);
      }
      return y(e2, "e"), d(e2, "DiagConsoleLogger"), e2;
    }();
    j();
    k();
    N();
    I();
    var nc = { get: function(e2, t) {
      if (e2 != null)
        return e2[t];
    }, keys: function(e2) {
      return e2 == null ? [] : Object.keys(e2);
    } };
    var ic = { set: function(e2, t, r) {
      e2 != null && (e2[t] = r);
    } };
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    function hi(e2) {
      return Symbol.for(e2);
    }
    y(hi, "Mn");
    d(hi, "createContextKey");
    var oc = function() {
      function e2(t) {
        var r = this;
        r._currentContext = t ? new Map(t) : new Map(), r.getValue = function(n) {
          return r._currentContext.get(n);
        }, r.setValue = function(n, i) {
          var a = new e2(r._currentContext);
          return a._currentContext.set(n, i), a;
        }, r.deleteValue = function(n) {
          var i = new e2(r._currentContext);
          return i._currentContext.delete(n), i;
        };
      }
      return y(e2, "e"), d(e2, "BaseContext"), e2;
    }();
    var ac = new oc();
    var sc = y(function(e2, t) {
      for (var r = 0, n = t.length, i = e2.length; r < n; r++, i++)
        e2[i] = t[r];
      return e2;
    }, "ng");
    var uc = function() {
      function e2() {
      }
      return y(e2, "e"), d(e2, "NoopContextManager"), e2.prototype.active = function() {
        return ac;
      }, e2.prototype.with = function(t, r, n) {
        for (var i = [], a = 3; a < arguments.length; a++)
          i[a - 3] = arguments[a];
        return r.call.apply(r, sc([n], i));
      }, e2.prototype.bind = function(t, r) {
        return r;
      }, e2.prototype.enable = function() {
        return this;
      }, e2.prototype.disable = function() {
        return this;
      }, e2;
    }();
    var lc = y(function(e2, t) {
      for (var r = 0, n = t.length, i = e2.length; r < n; r++, i++)
        e2[i] = t[r];
      return e2;
    }, "og");
    var gi = "context";
    var cc = new uc();
    var Aa = function() {
      function e2() {
      }
      return y(e2, "e"), d(e2, "ContextAPI"), e2.getInstance = function() {
        return this._instance || (this._instance = new e2()), this._instance;
      }, e2.prototype.setGlobalContextManager = function(t) {
        return jr(gi, t, St.instance());
      }, e2.prototype.active = function() {
        return this._getContextManager().active();
      }, e2.prototype.with = function(t, r, n) {
        for (var i, a = [], o = 3; o < arguments.length; o++)
          a[o - 3] = arguments[o];
        return (i = this._getContextManager()).with.apply(i, lc([t, r, n], a));
      }, e2.prototype.bind = function(t, r) {
        return this._getContextManager().bind(t, r);
      }, e2.prototype._getContextManager = function() {
        return Rt(gi) || cc;
      }, e2.prototype.disable = function() {
        this._getContextManager().disable(), kr(gi, St.instance());
      }, e2;
    }();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var yi;
    (function(e2) {
      e2[e2.NONE = 0] = "NONE", e2[e2.SAMPLED = 1] = "SAMPLED";
    })(yi || (yi = {}));
    var Oa = "0000000000000000";
    var xa = "00000000000000000000000000000000";
    var fc = { traceId: xa, spanId: Oa, traceFlags: yi.NONE };
    var Ir = function() {
      function e2(t) {
        t === void 0 && (t = fc), this._spanContext = t;
      }
      return y(e2, "e"), d(e2, "NonRecordingSpan"), e2.prototype.spanContext = function() {
        return this._spanContext;
      }, e2.prototype.setAttribute = function(t, r) {
        return this;
      }, e2.prototype.setAttributes = function(t) {
        return this;
      }, e2.prototype.addEvent = function(t, r) {
        return this;
      }, e2.prototype.setStatus = function(t) {
        return this;
      }, e2.prototype.updateName = function(t) {
        return this;
      }, e2.prototype.end = function(t) {
      }, e2.prototype.isRecording = function() {
        return false;
      }, e2.prototype.recordException = function(t, r) {
      }, e2;
    }();
    var mi = hi("OpenTelemetry Context Key SPAN");
    function vi(e2) {
      return e2.getValue(mi) || void 0;
    }
    y(vi, "ai");
    d(vi, "getSpan");
    function Xr(e2, t) {
      return e2.setValue(mi, t);
    }
    y(Xr, "jr");
    d(Xr, "setSpan");
    function Ta(e2) {
      return e2.deleteValue(mi);
    }
    y(Ta, "hu");
    d(Ta, "deleteSpan");
    function Sa(e2, t) {
      return Xr(e2, new Ir(t));
    }
    y(Sa, "yu");
    d(Sa, "setSpanContext");
    function bi(e2) {
      var t;
      return (t = vi(e2)) === null || t === void 0 ? void 0 : t.spanContext();
    }
    y(bi, "Fn");
    d(bi, "getSpanContext");
    j();
    k();
    N();
    I();
    var pc = /^([0-9a-f]{32})$/i;
    var dc = /^[0-9a-f]{16}$/i;
    function Pa(e2) {
      return pc.test(e2) && e2 !== xa;
    }
    y(Pa, "bu");
    d(Pa, "isValidTraceId");
    function ja(e2) {
      return dc.test(e2) && e2 !== Oa;
    }
    y(ja, "wu");
    d(ja, "isValidSpanId");
    function wi(e2) {
      return Pa(e2.traceId) && ja(e2.spanId);
    }
    y(wi, "Rr");
    d(wi, "isSpanContextValid");
    function ka(e2) {
      return new Ir(e2);
    }
    y(ka, "vu");
    d(ka, "wrapSpanContext");
    var Ia = Aa.getInstance();
    var Na = function() {
      function e2() {
      }
      return y(e2, "e"), d(e2, "NoopTracer"), e2.prototype.startSpan = function(t, r, n) {
        var i = Boolean(r == null ? void 0 : r.root);
        if (i)
          return new Ir();
        var a = n && bi(n);
        return $a(a) && wi(a) ? new Ir(a) : new Ir();
      }, e2.prototype.startActiveSpan = function(t, r, n, i) {
        var a, o, l;
        if (!(arguments.length < 2)) {
          arguments.length === 2 ? l = r : arguments.length === 3 ? (a = r, l = n) : (a = r, o = n, l = i);
          var f = o != null ? o : Ia.active(), u = this.startSpan(t, a, f), c = Xr(f, u);
          return Ia.with(c, l, void 0, u);
        }
      }, e2;
    }();
    function $a(e2) {
      return typeof e2 == "object" && typeof e2.spanId == "string" && typeof e2.traceId == "string" && typeof e2.traceFlags == "number";
    }
    y($a, "ug");
    d($a, "isSpanContext");
    var hc = new Na();
    var gc = function() {
      function e2(t, r, n) {
        this._provider = t, this.name = r, this.version = n;
      }
      return y(e2, "e"), d(e2, "ProxyTracer"), e2.prototype.startSpan = function(t, r, n) {
        return this._getTracer().startSpan(t, r, n);
      }, e2.prototype.startActiveSpan = function(t, r, n, i) {
        var a = this._getTracer();
        return Reflect.apply(a.startActiveSpan, a, arguments);
      }, e2.prototype._getTracer = function() {
        if (this._delegate)
          return this._delegate;
        var t = this._provider.getDelegateTracer(this.name, this.version);
        return t ? (this._delegate = t, this._delegate) : hc;
      }, e2;
    }();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var yc = function() {
      function e2() {
      }
      return y(e2, "e"), d(e2, "NoopTracerProvider"), e2.prototype.getTracer = function(t, r) {
        return new Na();
      }, e2;
    }();
    var mc = new yc();
    var Ma = function() {
      function e2() {
      }
      return y(e2, "e"), d(e2, "ProxyTracerProvider"), e2.prototype.getTracer = function(t, r) {
        var n;
        return (n = this.getDelegateTracer(t, r)) !== null && n !== void 0 ? n : new gc(this, t, r);
      }, e2.prototype.getDelegate = function() {
        var t;
        return (t = this._delegate) !== null && t !== void 0 ? t : mc;
      }, e2.prototype.setDelegate = function(t) {
        this._delegate = t;
      }, e2.prototype.getDelegateTracer = function(t, r) {
        var n;
        return (n = this._delegate) === null || n === void 0 ? void 0 : n.getTracer(t, r);
      }, e2;
    }();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Ra;
    (function(e2) {
      e2[e2.NOT_RECORD = 0] = "NOT_RECORD", e2[e2.RECORD = 1] = "RECORD", e2[e2.RECORD_AND_SAMPLED = 2] = "RECORD_AND_SAMPLED";
    })(Ra || (Ra = {}));
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Ba;
    (function(e2) {
      e2[e2.INTERNAL = 0] = "INTERNAL", e2[e2.SERVER = 1] = "SERVER", e2[e2.CLIENT = 2] = "CLIENT", e2[e2.PRODUCER = 3] = "PRODUCER", e2[e2.CONSUMER = 4] = "CONSUMER";
    })(Ba || (Ba = {}));
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Ca;
    (function(e2) {
      e2[e2.UNSET = 0] = "UNSET", e2[e2.OK = 1] = "OK", e2[e2.ERROR = 2] = "ERROR";
    })(Ca || (Ca = {}));
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var _i = "trace";
    var vc = function() {
      function e2() {
        this._proxyTracerProvider = new Ma(), this.wrapSpanContext = ka, this.isSpanContextValid = wi, this.deleteSpan = Ta, this.getSpan = vi, this.getSpanContext = bi, this.setSpan = Xr, this.setSpanContext = Sa;
      }
      return y(e2, "e"), d(e2, "TraceAPI"), e2.getInstance = function() {
        return this._instance || (this._instance = new e2()), this._instance;
      }, e2.prototype.setGlobalTracerProvider = function(t) {
        var r = jr(_i, this._proxyTracerProvider, St.instance());
        return r && this._proxyTracerProvider.setDelegate(t), r;
      }, e2.prototype.getTracerProvider = function() {
        return Rt(_i) || this._proxyTracerProvider;
      }, e2.prototype.getTracer = function(t, r) {
        return this.getTracerProvider().getTracer(t, r);
      }, e2.prototype.disable = function() {
        kr(_i, St.instance()), this._proxyTracerProvider = new Ma();
      }, e2;
    }();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var bc = function() {
      function e2() {
      }
      return y(e2, "e"), d(e2, "NoopTextMapPropagator"), e2.prototype.inject = function(t, r) {
      }, e2.prototype.extract = function(t, r) {
        return t;
      }, e2.prototype.fields = function() {
        return [];
      }, e2;
    }();
    j();
    k();
    N();
    I();
    var Ei = hi("OpenTelemetry Baggage Key");
    function Fa(e2) {
      return e2.getValue(Ei) || void 0;
    }
    y(Fa, "Su");
    d(Fa, "getBaggage");
    function qa(e2, t) {
      return e2.setValue(Ei, t);
    }
    y(qa, "Iu");
    d(qa, "setBaggage");
    function La(e2) {
      return e2.deleteValue(Ei);
    }
    y(La, "ku");
    d(La, "deleteBaggage");
    var Ai = "propagation";
    var wc = new bc();
    var _c = function() {
      function e2() {
        this.createBaggage = Ea, this.getBaggage = Fa, this.setBaggage = qa, this.deleteBaggage = La;
      }
      return y(e2, "e"), d(e2, "PropagationAPI"), e2.getInstance = function() {
        return this._instance || (this._instance = new e2()), this._instance;
      }, e2.prototype.setGlobalPropagator = function(t) {
        return jr(Ai, t, St.instance());
      }, e2.prototype.inject = function(t, r, n) {
        return n === void 0 && (n = ic), this._getGlobalPropagator().inject(t, r, n);
      }, e2.prototype.extract = function(t, r, n) {
        return n === void 0 && (n = nc), this._getGlobalPropagator().extract(t, r, n);
      }, e2.prototype.fields = function() {
        return this._getGlobalPropagator().fields();
      }, e2.prototype.disable = function() {
        kr(Ai, St.instance());
      }, e2.prototype._getGlobalPropagator = function() {
        return Rt(Ai) || wc;
      }, e2;
    }();
    var Ua = Aa.getInstance();
    var Oi = vc.getInstance();
    var bf = _c.getInstance();
    var wf = St.instance();
    function Bt(e2) {
      let t = Ua.active(), r, n = d((i, a) => {
        try {
          return r != null ? r : r = e2(i, a, t);
        } catch (o) {
          return Promise.reject(o);
        }
      }, "_callback");
      return { then(i, a, o) {
        return n(o).then(i, a, o);
      }, catch(i, a) {
        return n(a).catch(i, a);
      }, finally(i, a) {
        return n(a).finally(i, a);
      }, requestTransaction(i, a) {
        let o = n(i, a);
        return o.requestTransaction ? o.requestTransaction(i, a) : o;
      }, [Symbol.toStringTag]: "PrismaPromise" };
    }
    y(Bt, "ft");
    d(Bt, "createPrismaPromise");
    j();
    k();
    N();
    I();
    function Ct(e2) {
      if (e2 !== "minimal")
        return new Error().stack;
    }
    y(Ct, "Ye");
    d(Ct, "getCallSite");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Ec = { _avg: true, _count: true, _sum: true, _min: true, _max: true };
    function xi(e2) {
      let t = Da(e2);
      return Object.entries(t).reduce((r, [n, i]) => (Ec[n] !== void 0 ? r.select[n] = { select: i } : r[n] = i, r), { select: {} });
    }
    y(xi, "pi");
    d(xi, "desugarUserArgs");
    function Da(e2) {
      return typeof e2._count == "boolean" ? { ...e2, _count: { _all: e2._count } } : e2;
    }
    y(Da, "pg");
    d(Da, "desugarCountInUserArgs");
    function Va(e2) {
      return (t) => (typeof e2._count == "boolean" && (t._count = t._count._all), t);
    }
    y(Va, "dg");
    d(Va, "createUnpacker");
    function en(e2, t, r) {
      let n = xi(t != null ? t : {}), i = Va(t != null ? t : {});
      return r({ action: "aggregate", unpacker: i })(n);
    }
    y(en, "Cr");
    d(en, "aggregate");
    j();
    k();
    N();
    I();
    function Ga(e2, t, r) {
      let { select: n, ...i } = t != null ? t : {};
      return typeof n == "object" ? en(e2, { ...i, _count: n }, (a) => r({ ...a, unpacker: (o) => {
        var l;
        return (l = a.unpacker) == null ? void 0 : l.call(a, o)._count;
      } })) : en(e2, { ...i, _count: { _all: true } }, (a) => r({ ...a, unpacker: (o) => {
        var l;
        return (l = a.unpacker) == null ? void 0 : l.call(a, o)._count._all;
      } }));
    }
    y(Ga, "Ru");
    d(Ga, "count");
    j();
    k();
    N();
    I();
    function Ja(e2) {
      let t = xi(e2);
      if (Array.isArray(e2.by))
        for (let r of e2.by)
          typeof r == "string" && (t.select[r] = true);
      return t;
    }
    y(Ja, "gg");
    d(Ja, "desugarUserArgs");
    function Wa(e2) {
      return (t) => (typeof e2._count == "boolean" && t.forEach((r) => {
        r._count = r._count._all;
      }), t);
    }
    y(Wa, "mg");
    d(Wa, "createUnpacker");
    function za(e2, t, r) {
      let n = Ja(t != null ? t : {}), i = Wa(t != null ? t : {});
      return r({ action: "groupBy", unpacker: i })(n);
    }
    y(za, "Nu");
    d(za, "groupBy");
    function Ha(e2, t, r) {
      if (t === "aggregate")
        return (n) => en(e2, n, r);
      if (t === "count")
        return (n) => Ga(e2, n, r);
      if (t === "groupBy")
        return (n) => za(e2, n, r);
    }
    y(Ha, "Cu");
    d(Ha, "applyAggregates");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Ya = d((e2) => Array.isArray(e2) ? e2 : e2.split("."), "keys");
    var Za = d((e2, t) => Ya(t).reduce((r, n) => r && r[n], e2), "deepGet");
    var Ka = d((e2, t, r) => Ya(t).reduceRight((n, i, a, o) => Object.assign({}, Za(e2, o.slice(0, a)), { [i]: n }), r), "deepSet");
    j();
    k();
    N();
    I();
    var Ac = { enumerable: true, configurable: true, writable: true };
    function tn(e2) {
      let t = new Set(e2);
      return { getOwnPropertyDescriptor: () => Ac, has: (r, n) => t.has(n), set: (r, n, i) => t.add(n) && Reflect.set(r, n, i), ownKeys: () => [...t] };
    }
    y(tn, "Zt");
    d(tn, "defaultProxyHandlers");
    function Qa(e2, t) {
      return e2 === void 0 || t === void 0 ? [] : [...t, "select", e2];
    }
    y(Qa, "yg");
    d(Qa, "getNextDataPath");
    function Xa(e2, t, r) {
      return t === void 0 ? e2 != null ? e2 : {} : Ka(t, r, e2 || true);
    }
    y(Xa, "bg");
    d(Xa, "getNextUserArgs");
    function Ti(e2, t, r, n, i, a) {
      let o = e2._dmmf.modelMap[t].fields.reduce((l, f) => ({ ...l, [f.name]: f }), {});
      return (l) => {
        let f = Ct(), u = Qa(n, i), c = Xa(l, a, u), p = r({ dataPath: u, callsite: f })(c), g = es(e2, t);
        return new Proxy(p, { get(v, b) {
          if (!g.includes(b))
            return v[b];
          let w = [o[b].type, r, b], E = [u, c];
          return Ti(e2, ...w, ...E);
        }, ...tn(g) });
      };
    }
    y(Ti, "gi");
    d(Ti, "applyFluent");
    function es(e2, t) {
      return e2._dmmf.modelMap[t].fields.filter((r) => r.kind === "object").map((r) => r.name);
    }
    y(es, "wg");
    d(es, "getOwnKeys");
    j();
    k();
    N();
    I();
    function Si(e2) {
      return e2.replace(/^./, (t) => t.toLowerCase());
    }
    y(Si, "Cn");
    d(Si, "dmmfToJSModelName");
    var Oc = ["findUnique", "findFirst", "create", "update", "upsert", "delete"];
    var xc = ["aggregate", "count", "groupBy"];
    function Pi(e2, t) {
      let r = Si(t), n = ji(e2, t), i = {};
      return new Proxy(i, { get(a, o) {
        if (o in a || typeof o == "symbol")
          return a[o];
        if (!ts(e2, t, o))
          return;
        let l = d((f) => (u) => {
          let c = Ct(e2._errorFormat);
          return Bt((p, g, v) => {
            let b = { args: u, dataPath: [] }, w = { action: o, model: t }, E = { clientMethod: `${r}.${o}` }, S = { ...b, ...w, ...E, runInTransaction: !!p, transactionId: p, lock: g, callsite: c, otelCtx: v };
            return e2._request({ ...S, ...f });
          });
        }, "action");
        return Oc.includes(o) ? Ti(e2, t, l) : xc.includes(o) ? Ha(e2, o, l) : l({});
      }, ...tn(n) });
    }
    y(Pi, "mi");
    d(Pi, "applyModel");
    function ji(e2, t) {
      return [...Object.keys(e2._dmmf.mappingsMap[t]), "count"].filter((r) => !["model", "plural"].includes(r));
    }
    y(ji, "$u");
    d(ji, "getOwnKeys");
    function ts(e2, t, r) {
      return ji(e2, t).includes(r);
    }
    y(ts, "_g");
    d(ts, "isValidActionName");
    j();
    k();
    N();
    I();
    function rs(e2) {
      return e2.replace(/^./, (t) => t.toUpperCase());
    }
    y(rs, "Bu");
    d(rs, "jsToDMMFModelName");
    function ns(e2) {
      let t = {}, r = is(e2);
      return new Proxy(e2, { get(n, i) {
        if (i in n || typeof i == "symbol")
          return n[i];
        let a = rs(i);
        if (t[a] !== void 0)
          return t[a];
        if (e2._dmmf.modelMap[a] !== void 0)
          return t[a] = Pi(e2, a);
        if (e2._dmmf.modelMap[i] !== void 0)
          return t[a] = Pi(e2, i);
      }, ...tn(r) });
    }
    y(ns, "Lu");
    d(ns, "applyModels");
    function is(e2) {
      return [...Object.keys(e2._dmmf.modelMap).map(Si), ...Object.keys(e2)];
    }
    y(is, "Ag");
    d(is, "getOwnKeys");
    j();
    k();
    N();
    I();
    function os(e2, t = () => {
    }) {
      let r, n = new Promise((i) => r = i);
      return { then(i) {
        return --e2 == 0 && r(t()), i == null ? void 0 : i(n);
      } };
    }
    y(os, "qu");
    d(os, "getLockCountPromise");
    j();
    k();
    N();
    I();
    function as(e2) {
      return typeof e2 == "string" ? e2 : e2.reduce((t, r) => {
        let n = typeof r == "string" ? r : r.level;
        return n === "query" ? t : t && (r === "info" || t === "info") ? "info" : n;
      }, void 0);
    }
    y(as, "Uu");
    d(as, "getLogLevel");
    j();
    k();
    N();
    I();
    function ss(e2, t, r) {
      let n = us(e2, r), i = us(t, r), a = Object.values(i).map((l) => l[l.length - 1]), o = Object.keys(i);
      return Object.entries(n).forEach(([l, f]) => {
        o.includes(l) || a.push(f[f.length - 1]);
      }), a;
    }
    y(ss, "Vu");
    d(ss, "mergeBy");
    var us = d((e2, t) => e2.reduce((r, n) => {
      let i = t(n);
      return r[i] || (r[i] = []), r[i].push(n), r;
    }, {}), "groupBy");
    j();
    k();
    N();
    I();
    var ki = y(class {
      constructor() {
        this._middlewares = [];
      }
      use(e2) {
        this._middlewares.push(e2);
      }
      get(e2) {
        return this._middlewares[e2];
      }
      has(e2) {
        return !!this._middlewares[e2];
      }
      length() {
        return this._middlewares.length;
      }
    }, "Dn");
    d(ki, "MiddlewareHandler");
    var ls = y(class {
      constructor() {
        this.query = new ki(), this.engine = new ki();
      }
    }, "$n");
    d(ls, "Middlewares");
    j();
    k();
    N();
    I();
    var K = Ae(Wt());
    var Ft = Ae(ao());
    var cs = Ae(Tn());
    j();
    k();
    N();
    I();
    function Ii(e2) {
      return e2 instanceof Ve.Buffer || e2 instanceof Date || e2 instanceof RegExp;
    }
    y(Ii, "Ju");
    d(Ii, "isSpecificValue");
    function Ni(e2) {
      if (e2 instanceof Ve.Buffer) {
        let t = Ve.Buffer.alloc ? Ve.Buffer.alloc(e2.length) : new Ve.Buffer(e2.length);
        return e2.copy(t), t;
      } else {
        if (e2 instanceof Date)
          return new Date(e2.getTime());
        if (e2 instanceof RegExp)
          return new RegExp(e2);
        throw new Error("Unexpected situation");
      }
    }
    y(Ni, "zu");
    d(Ni, "cloneSpecificValue");
    function $i(e2) {
      let t = [];
      return e2.forEach(function(r, n) {
        typeof r == "object" && r !== null ? Array.isArray(r) ? t[n] = $i(r) : Ii(r) ? t[n] = Ni(r) : t[n] = rn({}, r) : t[n] = r;
      }), t;
    }
    y($i, "Wu");
    d($i, "deepCloneArray");
    function Mi(e2, t) {
      return t === "__proto__" ? void 0 : e2[t];
    }
    y(Mi, "Hu");
    d(Mi, "safeGetProperty");
    var rn = d(function(e2, ...t) {
      if (!e2 || typeof e2 != "object")
        return false;
      if (t.length === 0)
        return e2;
      let r, n;
      for (let i of t)
        if (!(typeof i != "object" || i === null || Array.isArray(i))) {
          for (let a of Object.keys(i))
            if (n = Mi(e2, a), r = Mi(i, a), r !== e2)
              if (typeof r != "object" || r === null) {
                e2[a] = r;
                continue;
              } else if (Array.isArray(r)) {
                e2[a] = $i(r);
                continue;
              } else if (Ii(r)) {
                e2[a] = Ni(r);
                continue;
              } else if (typeof n != "object" || n === null || Array.isArray(n)) {
                e2[a] = rn({}, r);
                continue;
              } else {
                e2[a] = rn(n, r);
                continue;
              }
        }
      return e2;
    }, "deepExtend");
    j();
    k();
    N();
    I();
    function fs(e2, t) {
      if (!e2 || typeof e2 != "object" || typeof e2.hasOwnProperty != "function")
        return e2;
      let r = {};
      for (let n in e2) {
        let i = e2[n];
        Object.hasOwnProperty.call(e2, n) && t(n, i) && (r[n] = i);
      }
      return r;
    }
    y(fs, "Yu");
    d(fs, "filterObject");
    j();
    k();
    N();
    I();
    function ps(e2) {
      return Array.prototype.concat.apply([], e2);
    }
    y(ps, "xg");
    d(ps, "flatten");
    function Ri(e2, t, r) {
      return ps(e2.map(t, r));
    }
    y(Ri, "hi");
    d(Ri, "flatMap");
    j();
    k();
    N();
    I();
    var Tc = { "[object Date]": true, "[object BitInt]": true, "[object Uint8Array]": true, "[object Function]": true };
    function ds(e2) {
      return e2 && typeof e2 == "object" && !Tc[Object.prototype.toString.call(e2)];
    }
    y(ds, "Qu");
    d(ds, "isObject");
    j();
    k();
    N();
    I();
    function hs(e2, t) {
      let r = {}, n = Array.isArray(t) ? t : [t];
      for (let i in e2)
        Object.hasOwnProperty.call(e2, i) && !n.includes(i) && (r[i] = e2[i]);
      return r;
    }
    y(hs, "Ku");
    d(hs, "omit");
    j();
    k();
    N();
    I();
    var Ze = Ae(Wt());
    var gs = Ae(Tn());
    j();
    k();
    N();
    I();
    var Sc = ku();
    var Pc = Iu();
    var jc = Nu().default;
    var kc = d((e2, t, r) => {
      let n = [];
      return d(y(function i(a, o = {}, l = "", f = []) {
        o.indent = o.indent || "	";
        let u;
        o.inlineCharacterLimit === void 0 ? u = { newLine: `
`, newLineOrSpace: `
`, pad: l, indent: l + o.indent } : u = { newLine: "@@__STRINGIFY_OBJECT_NEW_LINE__@@", newLineOrSpace: "@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@", pad: "@@__STRINGIFY_OBJECT_PAD__@@", indent: "@@__STRINGIFY_OBJECT_INDENT__@@" };
        let c = d((p) => {
          if (o.inlineCharacterLimit === void 0)
            return p;
          let g = p.replace(new RegExp(u.newLine, "g"), "").replace(new RegExp(u.newLineOrSpace, "g"), " ").replace(new RegExp(u.pad + "|" + u.indent, "g"), "");
          return g.length <= o.inlineCharacterLimit ? g : p.replace(new RegExp(u.newLine + "|" + u.newLineOrSpace, "g"), `
`).replace(new RegExp(u.pad, "g"), l).replace(new RegExp(u.indent, "g"), l + o.indent);
        }, "expandWhiteSpace");
        if (n.indexOf(a) !== -1)
          return '"[Circular]"';
        if (Ve.Buffer.isBuffer(a))
          return `Buffer(${Ve.Buffer.length})`;
        if (a == null || typeof a == "number" || typeof a == "boolean" || typeof a == "function" || typeof a == "symbol" || Sc(a))
          return String(a);
        if (a instanceof Date)
          return `new Date('${a.toISOString()}')`;
        if (Array.isArray(a)) {
          if (a.length === 0)
            return "[]";
          n.push(a);
          let p = "[" + u.newLine + a.map((g, v) => {
            let b = a.length - 1 === v ? u.newLine : "," + u.newLineOrSpace, w = i(g, o, l + o.indent, [...f, v]);
            return o.transformValue && (w = o.transformValue(a, v, w)), u.indent + w + b;
          }).join("") + u.pad + "]";
          return n.pop(), c(p);
        }
        if (Pc(a)) {
          let p = Object.keys(a).concat(jc(a));
          if (o.filter && (p = p.filter((v) => o.filter(a, v))), p.length === 0)
            return "{}";
          n.push(a);
          let g = "{" + u.newLine + p.map((v, b) => {
            let w = p.length - 1 === b ? u.newLine : "," + u.newLineOrSpace, E = typeof v == "symbol", S = !E && /^[a-z$_][a-z$_0-9]*$/i.test(v), T = E || S ? v : i(v, o, void 0, [...f, v]), A = i(a[v], o, l + o.indent, [...f, v]);
            o.transformValue && (A = o.transformValue(a, v, A));
            let R = u.indent + String(T) + ": " + A + w;
            return o.transformLine && (R = o.transformLine({ obj: a, indent: u.indent, key: T, stringifiedValue: A, value: a[v], eol: w, originalLine: R, path: f.concat(T) })), R;
          }).join("") + u.pad + "}";
          return n.pop(), c(g);
        }
        return a = String(a).replace(/[\r\n]/g, (p) => p === `
` ? "\\n" : "\\r"), o.singleQuotes === false ? (a = a.replace(/"/g, '\\"'), `"${a}"`) : (a = a.replace(/\\?'/g, "\\'"), `'${a}'`);
      }, "o"), "stringifyObject")(e2, t, r);
    }, "stringifyObject");
    var Bi = kc;
    var Ci = "@@__DIM_POINTER__@@";
    function Fi({ ast: e2, keyPaths: t, valuePaths: r, missingItems: n }) {
      let i = e2;
      for (let { path: a, type: o } of n)
        i = Ka(i, a, o);
      return Bi(i, { indent: "  ", transformLine: ({ indent: a, key: o, value: l, stringifiedValue: f, eol: u, path: c }) => {
        let p = c.join("."), g = t.includes(p), v = r.includes(p), b = n.find((E) => E.path === p), w = f;
        if (b) {
          typeof l == "string" && (w = w.slice(1, w.length - 1));
          let E = b.isRequired ? "" : "?", S = b.isRequired ? "+" : "?", T = (b.isRequired ? Ze.default.greenBright : Ze.default.green)(vs(o + E + ": " + w + u, a, S));
          return b.isRequired || (T = Ze.default.dim(T)), T;
        } else {
          let E = n.some((R) => p.startsWith(R.path)), S = o[o.length - 2] === "?";
          S && (o = o.slice(1, o.length - 1)), S && typeof l == "object" && l !== null && (w = w.split(`
`).map((R, q, B) => q === B.length - 1 ? R + Ci : R).join(`
`)), E && typeof l == "string" && (w = w.slice(1, w.length - 1), S || (w = Ze.default.bold(w))), (typeof l != "object" || l === null) && !v && !E && (w = Ze.default.dim(w));
          let T = g ? Ze.default.redBright(o) : o;
          w = v ? Ze.default.redBright(w) : w;
          let A = a + T + ": " + w + (E ? u : Ze.default.dim(u));
          if (g || v) {
            let R = A.split(`
`), q = String(o).length, B = g ? Ze.default.redBright("~".repeat(q)) : " ".repeat(q), F = v ? ys(a, o, l, f) : 0, C = Boolean(v && typeof l == "object" && l !== null), W = v ? "  " + Ze.default.redBright("~".repeat(F)) : "";
            B && B.length > 0 && !C && R.splice(1, 0, a + B + W), B && B.length > 0 && C && R.splice(R.length - 1, 0, a.slice(0, a.length - 2) + W), A = R.join(`
`);
          }
          return A;
        }
      } });
    }
    y(Fi, "Bn");
    d(Fi, "printJsonWithErrors");
    function ys(e2, t, r, n) {
      return r === null ? 4 : typeof r == "string" ? r.length + 2 : typeof r == "object" ? Math.abs(ms(`${t}: ${(0, gs.default)(n)}`) - e2.length) : String(r).length;
    }
    y(ys, "Ig");
    d(ys, "getValueLength");
    function ms(e2) {
      return e2.split(`
`).reduce((t, r) => r.length > t ? r.length : t, 0);
    }
    y(ms, "kg");
    d(ms, "getLongestLine");
    function vs(e2, t, r) {
      return e2.split(`
`).map((n, i, a) => i === 0 ? r + t.slice(1) + n : i < a.length - 1 ? r + n.slice(1) : n).map((n) => (0, gs.default)(n).includes(Ci) ? Ze.default.dim(n.replace(Ci, "")) : n.includes("?") ? Ze.default.dim(n) : n).join(`
`);
    }
    y(vs, "Fg");
    d(vs, "prefixLines");
    j();
    k();
    N();
    I();
    var Ke = Ae(Wt());
    j();
    k();
    N();
    I();
    var Nr = "<unknown>";
    function bs(e2) {
      var t = e2.split(`
`);
      return t.reduce(function(r, n) {
        var i = ws(n) || _s(n) || Es(n) || Os(n) || As(n);
        return i && r.push(i), r;
      }, []);
    }
    y(bs, "nl");
    d(bs, "parse");
    var Ic = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
    var Nc = /\((\S*)(?::(\d+))(?::(\d+))\)/;
    function ws(e2) {
      var t = Ic.exec(e2);
      if (!t)
        return null;
      var r = t[2] && t[2].indexOf("native") === 0, n = t[2] && t[2].indexOf("eval") === 0, i = Nc.exec(t[2]);
      return n && i != null && (t[2] = i[1], t[3] = i[2], t[4] = i[3]), { file: r ? null : t[2], methodName: t[1] || Nr, arguments: r ? [t[2]] : [], lineNumber: t[3] ? +t[3] : null, column: t[4] ? +t[4] : null };
    }
    y(ws, "Ng");
    d(ws, "parseChrome");
    var $c = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
    function _s(e2) {
      var t = $c.exec(e2);
      return t ? { file: t[2], methodName: t[1] || Nr, arguments: [], lineNumber: +t[3], column: t[4] ? +t[4] : null } : null;
    }
    y(_s, "Dg");
    d(_s, "parseWinjs");
    var Mc = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
    var Rc = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
    function Es(e2) {
      var t = Mc.exec(e2);
      if (!t)
        return null;
      var r = t[3] && t[3].indexOf(" > eval") > -1, n = Rc.exec(t[3]);
      return r && n != null && (t[3] = n[1], t[4] = n[2], t[5] = null), { file: t[3], methodName: t[1] || Nr, arguments: t[2] ? t[2].split(",") : [], lineNumber: t[4] ? +t[4] : null, column: t[5] ? +t[5] : null };
    }
    y(Es, "Lg");
    d(Es, "parseGecko");
    var Bc = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;
    function As(e2) {
      var t = Bc.exec(e2);
      return t ? { file: t[3], methodName: t[1] || Nr, arguments: [], lineNumber: +t[4], column: t[5] ? +t[5] : null } : null;
    }
    y(As, "Ug");
    d(As, "parseJSC");
    var Cc = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;
    function Os(e2) {
      var t = Cc.exec(e2);
      return t ? { file: t[2], methodName: t[1] || Nr, arguments: [], lineNumber: +t[3], column: t[4] ? +t[4] : null } : null;
    }
    y(Os, "Gg");
    d(Os, "parseNode");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var qt = Ae(Wt());
    var Fc = qt.default.rgb(246, 145, 95);
    var qc = qt.default.rgb(107, 139, 140);
    var nn = qt.default.cyan;
    var xs = qt.default.rgb(127, 155, 155);
    var Lc = d((e2) => e2, "identity");
    var Uc = { keyword: nn, entity: nn, value: xs, punctuation: qc, directive: nn, function: nn, variable: xs, string: qt.default.greenBright, boolean: Fc, number: qt.default.cyan, comment: qt.default.grey };
    var on = {};
    var Dc = 0;
    var fe = { manual: on.Prism && on.Prism.manual, disableWorkerMessageHandler: on.Prism && on.Prism.disableWorkerMessageHandler, util: { encode: function(e2) {
      if (e2 instanceof it) {
        let t = e2;
        return new it(t.type, fe.util.encode(t.content), t.alias);
      } else
        return Array.isArray(e2) ? e2.map(fe.util.encode) : e2.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
    }, type: function(e2) {
      return Object.prototype.toString.call(e2).slice(8, -1);
    }, objId: function(e2) {
      return e2.__id || Object.defineProperty(e2, "__id", { value: ++Dc }), e2.__id;
    }, clone: d(y(function e2(t, r) {
      let n, i, a = fe.util.type(t);
      switch (r = r || {}, a) {
        case "Object":
          if (i = fe.util.objId(t), r[i])
            return r[i];
          n = {}, r[i] = n;
          for (let o in t)
            t.hasOwnProperty(o) && (n[o] = e2(t[o], r));
          return n;
        case "Array":
          return i = fe.util.objId(t), r[i] ? r[i] : (n = [], r[i] = n, t.forEach(function(o, l) {
            n[l] = e2(o, r);
          }), n);
        default:
          return t;
      }
    }, "e"), "deepClone") }, languages: { extend: function(e2, t) {
      let r = fe.util.clone(fe.languages[e2]);
      for (let n in t)
        r[n] = t[n];
      return r;
    }, insertBefore: function(e2, t, r, n) {
      n = n || fe.languages;
      let i = n[e2], a = {};
      for (let l in i)
        if (i.hasOwnProperty(l)) {
          if (l == t)
            for (let f in r)
              r.hasOwnProperty(f) && (a[f] = r[f]);
          r.hasOwnProperty(l) || (a[l] = i[l]);
        }
      let o = n[e2];
      return n[e2] = a, fe.languages.DFS(fe.languages, function(l, f) {
        f === o && l != e2 && (this[l] = a);
      }), a;
    }, DFS: d(y(function e2(t, r, n, i) {
      i = i || {};
      let a = fe.util.objId;
      for (let o in t)
        if (t.hasOwnProperty(o)) {
          r.call(t, o, t[o], n || o);
          let l = t[o], f = fe.util.type(l);
          f === "Object" && !i[a(l)] ? (i[a(l)] = true, e2(l, r, null, i)) : f === "Array" && !i[a(l)] && (i[a(l)] = true, e2(l, r, o, i));
        }
    }, "e"), "DFS") }, plugins: {}, highlight: function(e2, t, r) {
      let n = { code: e2, grammar: t, language: r };
      return fe.hooks.run("before-tokenize", n), n.tokens = fe.tokenize(n.code, n.grammar), fe.hooks.run("after-tokenize", n), it.stringify(fe.util.encode(n.tokens), n.language);
    }, matchGrammar: function(e2, t, r, n, i, a, o) {
      for (let w in r) {
        if (!r.hasOwnProperty(w) || !r[w])
          continue;
        if (w == o)
          return;
        let E = r[w];
        E = fe.util.type(E) === "Array" ? E : [E];
        for (let S = 0; S < E.length; ++S) {
          let T = E[S], A = T.inside, R = !!T.lookbehind, q = !!T.greedy, B = 0, F = T.alias;
          if (q && !T.pattern.global) {
            let C = T.pattern.toString().match(/[imuy]*$/)[0];
            T.pattern = RegExp(T.pattern.source, C + "g");
          }
          T = T.pattern || T;
          for (let C = n, W = i; C < t.length; W += t[C].length, ++C) {
            let G = t[C];
            if (t.length > e2.length)
              return;
            if (G instanceof it)
              continue;
            if (q && C != t.length - 1) {
              T.lastIndex = W;
              var p = T.exec(e2);
              if (!p)
                break;
              var c = p.index + (R ? p[1].length : 0), g = p.index + p[0].length, l = C, f = W;
              for (let le = t.length; l < le && (f < g || !t[l].type && !t[l - 1].greedy); ++l)
                f += t[l].length, c >= f && (++C, W = f);
              if (t[C] instanceof it)
                continue;
              u = l - C, G = e2.slice(W, f), p.index -= W;
            } else {
              T.lastIndex = 0;
              var p = T.exec(G), u = 1;
            }
            if (!p) {
              if (a)
                break;
              continue;
            }
            R && (B = p[1] ? p[1].length : 0);
            var c = p.index + B, p = p[0].slice(B), g = c + p.length, v = G.slice(0, c), b = G.slice(g);
            let pe = [C, u];
            v && (++C, W += v.length, pe.push(v));
            let Y = new it(w, A ? fe.tokenize(p, A) : p, F, p, q);
            if (pe.push(Y), b && pe.push(b), Array.prototype.splice.apply(t, pe), u != 1 && fe.matchGrammar(e2, t, r, C, W, true, w), a)
              break;
          }
        }
      }
    }, tokenize: function(e2, t) {
      let r = [e2], n = t.rest;
      if (n) {
        for (let i in n)
          t[i] = n[i];
        delete t.rest;
      }
      return fe.matchGrammar(e2, r, t, 0, 0, false), r;
    }, hooks: { all: {}, add: function(e2, t) {
      let r = fe.hooks.all;
      r[e2] = r[e2] || [], r[e2].push(t);
    }, run: function(e2, t) {
      let r = fe.hooks.all[e2];
      if (!(!r || !r.length))
        for (var n = 0, i; i = r[n++]; )
          i(t);
    } }, Token: it };
    fe.languages.clike = { comment: [{ pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: true }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: true, greedy: true }], string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: true }, "class-name": { pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i, lookbehind: true, inside: { punctuation: /[.\\]/ } }, keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/, boolean: /\b(?:true|false)\b/, function: /\w+(?=\()/, number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i, operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/, punctuation: /[{}[\];(),.:]/ };
    fe.languages.javascript = fe.languages.extend("clike", { "class-name": [fe.languages.clike["class-name"], { pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/, lookbehind: true }], keyword: [{ pattern: /((?:^|})\s*)(?:catch|finally)\b/, lookbehind: true }, { pattern: /(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/, lookbehind: true }], number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/, function: /[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/, operator: /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/ });
    fe.languages.javascript["class-name"][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/;
    fe.languages.insertBefore("javascript", "keyword", { regex: { pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*($|[\r\n,.;})\]]))/, lookbehind: true, greedy: true }, "function-variable": { pattern: /[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/, alias: "function" }, parameter: [{ pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/, lookbehind: true, inside: fe.languages.javascript }, { pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i, inside: fe.languages.javascript }, { pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/, lookbehind: true, inside: fe.languages.javascript }, { pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/, lookbehind: true, inside: fe.languages.javascript }], constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/ });
    fe.languages.markup && fe.languages.markup.tag.addInlined("script", "javascript");
    fe.languages.js = fe.languages.javascript;
    fe.languages.typescript = fe.languages.extend("javascript", { keyword: /\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\b/, builtin: /\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/ });
    fe.languages.ts = fe.languages.typescript;
    function it(e2, t, r, n, i) {
      this.type = e2, this.content = t, this.alias = r, this.length = (n || "").length | 0, this.greedy = !!i;
    }
    y(it, "Re");
    d(it, "Token");
    it.stringify = function(e2, t) {
      return typeof e2 == "string" ? e2 : Array.isArray(e2) ? e2.map(function(r) {
        return it.stringify(r, t);
      }).join("") : Ts(e2.type)(e2.content);
    };
    function Ts(e2) {
      return Uc[e2] || Lc;
    }
    y(Ts, "Hg");
    d(Ts, "getColorForSyntaxKind");
    function Ss(e2) {
      return Ps(e2, fe.languages.javascript);
    }
    y(Ss, "al");
    d(Ss, "highlightTS");
    function Ps(e2, t) {
      return fe.tokenize(e2, t).map((r) => it.stringify(r)).join("");
    }
    y(Ps, "Yg");
    d(Ps, "highlight");
    j();
    k();
    N();
    I();
    var Vc = Ae(yo());
    function js(e2) {
      return (0, Vc.default)(e2);
    }
    y(js, "ll");
    d(js, "dedent");
    function ks(e2, t) {
      let r = String(t).length, n = String(e2).length;
      return n >= r ? String(e2) : " ".repeat(r - n) + e2;
    }
    y(ks, "Qg");
    d(ks, "renderN");
    function Is(e2) {
      let t = 0;
      for (let r = 0; r < e2.length; r++) {
        if (e2.charAt(r) !== " ")
          return t;
        t++;
      }
      return t;
    }
    y(Is, "Kg");
    d(Is, "getIndent");
    function Ns({ callsite: e2, renderPathRelative: t, originalMethod: r, onUs: n, showColors: i, isValidationError: a }) {
      let o = { callsiteStr: ":", prevLines: `
`, functionName: `prisma.${r}()`, afterLines: "", indentValue: 0, lastErrorHeight: 20 };
      if (!e2 || typeof window != "undefined")
        return o;
      let l = bs(e2).find((f) => f.file && f.file !== "<anonymous>" && !f.file.includes("@prisma") && !f.file.includes("getPrismaClient") && !f.file.startsWith("internal/") && !f.methodName.includes("new ") && !f.methodName.includes("getCallSite") && !f.methodName.includes("Proxy.") && f.methodName.split(".").length < 4);
      if (we.env.NODE_ENV !== "production" && l && l.file && l.lineNumber && l.column) {
        let f = l.lineNumber, u = t ? go().relative(we.cwd(), l.file) : l.file, c = Math.max(0, f - 4), p = (ho(), co);
        if (p.existsSync(l.file)) {
          let g = p.readFileSync(l.file, "utf-8").split(`
`).slice(c, f).map((w) => w.endsWith("\r") ? w.slice(0, -1) : w).join(`
`), v = js(g).split(`
`), b = v[v.length - 1];
          if (!b || b.trim() === "")
            o.callsiteStr = ":";
          else {
            let w = /(\S+(create|createMany|updateMany|deleteMany|update|delete|findMany|findUnique)\()/.exec(b);
            if (!w)
              return o;
            o.functionName = `${w[1]})`, o.callsiteStr = ` in
${Ke.default.underline(`${u}:${l.lineNumber}:${l.column}`)}`;
            let E = b.indexOf("{"), S = v.map((A, R, q) => !n && R === q.length - 1 ? A.slice(0, E > -1 ? E : A.length - 1) : A).join(`
`), T = i ? Ss(S).split(`
`) : S.split(`
`);
            o.prevLines = `
` + T.map((A, R) => Ke.default.grey(ks(R + c + 1, f + c + 1) + " ") + Ke.default.reset() + A).map((A, R, q) => R === q.length - 1 ? `${Ke.default.red.bold("\u2192")} ${Ke.default.dim(A)}` : Ke.default.dim("  " + A)).join(`
`), !w && !a && (o.prevLines += `

`), o.afterLines = ")", o.indentValue = String(f + c + 1).length + Is(b) + 1 + (w ? 2 : 0);
          }
        }
      }
      return o;
    }
    y(Ns, "Zg");
    d(Ns, "parseStack");
    var $s = d((e2) => {
      let { callsiteStr: t, prevLines: r, functionName: n, afterLines: i, indentValue: a, lastErrorHeight: o } = Ns(e2), l = `
${e2.onUs ? Ke.default.red(`Oops, an unknown error occured! This is ${Ke.default.bold("on us")}, you did nothing wrong.
It occured in the ${Ke.default.bold(`\`${n}\``)} invocation${t}`) : Ke.default.red(`Invalid ${Ke.default.bold(`\`${n}\``)} invocation${t}`)}
${r}${Ke.default.reset()}`;
      return { indent: a, stack: l, afterLines: i, lastErrorHeight: o };
    }, "printStack");
    var $r = 2;
    var Ms = y(class {
      constructor(e2, t) {
        this.type = e2, this.children = t, this.printFieldError = ({ error: r }, n, i) => {
          if (r.type === "emptySelect") {
            let a = i ? "" : ` Available options are listed in ${K.default.greenBright.dim("green")}.`;
            return `The ${K.default.redBright("`select`")} statement for type ${K.default.bold(Qt(r.field.outputType.type))} must not be empty.${a}`;
          }
          if (r.type === "emptyInclude") {
            if (n.length === 0)
              return `${K.default.bold(Qt(r.field.outputType.type))} does not have any relation and therefore can't have an ${K.default.redBright("`include`")} statement.`;
            let a = i ? "" : ` Available options are listed in ${K.default.greenBright.dim("green")}.`;
            return `The ${K.default.redBright("`include`")} statement for type ${K.default.bold(Qt(r.field.outputType.type))} must not be empty.${a}`;
          }
          if (r.type === "noTrueSelect")
            return `The ${K.default.redBright("`select`")} statement for type ${K.default.bold(Qt(r.field.outputType.type))} needs ${K.default.bold("at least one truthy value")}.`;
          if (r.type === "includeAndSelect")
            return `Please ${K.default.bold("either")} use ${K.default.greenBright("`include`")} or ${K.default.greenBright("`select`")}, but ${K.default.redBright("not both")} at the same time.`;
          if (r.type === "invalidFieldName") {
            let a = r.isInclude ? "include" : "select", o = r.isIncludeScalar ? "Invalid scalar" : "Unknown", l = i ? "" : r.isInclude && n.length === 0 ? `
This model has no relations, so you can't use ${K.default.redBright("include")} with it.` : ` Available options are listed in ${K.default.greenBright.dim("green")}.`, f = `${o} field ${K.default.redBright(`\`${r.providedName}\``)} for ${K.default.bold(a)} statement on model ${K.default.bold.white(r.modelName)}.${l}`;
            return r.didYouMean && (f += ` Did you mean ${K.default.greenBright(`\`${r.didYouMean}\``)}?`), r.isIncludeScalar && (f += `
Note, that ${K.default.bold("include")} statements only accept relation fields.`), f;
          }
          if (r.type === "invalidFieldType")
            return `Invalid value ${K.default.redBright(`${Bi(r.providedValue)}`)} of type ${K.default.redBright(Zt(r.providedValue, void 0))} for field ${K.default.bold(`${r.fieldName}`)} on model ${K.default.bold.white(r.modelName)}. Expected either ${K.default.greenBright("true")} or ${K.default.greenBright("false")}.`;
        }, this.printArgError = ({ error: r, path: n, id: i }, a, o) => {
          if (r.type === "invalidName") {
            let l = `Unknown arg ${K.default.redBright(`\`${r.providedName}\``)} in ${K.default.bold(n.join("."))} for type ${K.default.bold(r.outputType ? r.outputType.name : br(r.originalType))}.`;
            return r.didYouMeanField ? l += `
\u2192 Did you forget to wrap it with \`${K.default.greenBright("select")}\`? ${K.default.dim("e.g. " + K.default.greenBright(`{ select: { ${r.providedName}: ${r.providedValue} } }`))}` : r.didYouMeanArg ? (l += ` Did you mean \`${K.default.greenBright(r.didYouMeanArg)}\`?`, !a && !o && (l += ` ${K.default.dim("Available args:")}
` + Kt(r.originalType, true))) : r.originalType.fields.length === 0 ? l += ` The field ${K.default.bold(r.originalType.name)} has no arguments.` : !a && !o && (l += ` Available args:

` + Kt(r.originalType, true)), l;
          }
          if (r.type === "invalidType") {
            let l = Bi(r.providedValue, { indent: "  " }), f = l.split(`
`).length > 1;
            if (f && (l = `
${l}
`), r.requiredType.bestFittingType.location === "enumTypes")
              return `Argument ${K.default.bold(r.argName)}: Provided value ${K.default.redBright(l)}${f ? "" : " "}of type ${K.default.redBright(Zt(r.providedValue))} on ${K.default.bold(`prisma.${this.children[0].name}`)} is not a ${K.default.greenBright(vr(Yt(r.requiredType.bestFittingType.location), r.requiredType.bestFittingType.isList))}.
\u2192 Possible values: ${r.requiredType.bestFittingType.type.values.map((g) => K.default.greenBright(`${Yt(r.requiredType.bestFittingType.type)}.${g}`)).join(", ")}`;
            let u = ".";
            Lt(r.requiredType.bestFittingType.type) && (u = `:
` + Kt(r.requiredType.bestFittingType.type));
            let c = `${r.requiredType.inputType.map((g) => K.default.greenBright(vr(Yt(g.type), r.requiredType.bestFittingType.isList))).join(" or ")}${u}`, p = r.requiredType.inputType.length === 2 && r.requiredType.inputType.find((g) => Lt(g.type)) || null;
            return p && (c += `
` + Kt(p.type, true)), `Argument ${K.default.bold(r.argName)}: Got invalid value ${K.default.redBright(l)}${f ? "" : " "}on ${K.default.bold(`prisma.${this.children[0].name}`)}. Provided ${K.default.redBright(Zt(r.providedValue))}, expected ${c}`;
          }
          if (r.type === "invalidNullArg") {
            let l = n.length === 1 && n[0] === r.name ? "" : ` for ${K.default.bold(`${n.join(".")}`)}`, f = ` Please use ${K.default.bold.greenBright("undefined")} instead.`;
            return `Argument ${K.default.greenBright(r.name)}${l} must not be ${K.default.bold("null")}.${f}`;
          }
          if (r.type === "missingArg") {
            let l = n.length === 1 && n[0] === r.missingName ? "" : ` for ${K.default.bold(`${n.join(".")}`)}`;
            return `Argument ${K.default.greenBright(r.missingName)}${l} is missing.`;
          }
          if (r.type === "atLeastOne") {
            let l = o ? "" : ` Available args are listed in ${K.default.dim.green("green")}.`;
            return `Argument ${K.default.bold(n.join("."))} of type ${K.default.bold(r.inputType.name)} needs ${K.default.greenBright("at least one")} argument.${l}`;
          }
          if (r.type === "atMostOne") {
            let l = o ? "" : ` Please choose one. ${K.default.dim("Available args:")} 
${Kt(r.inputType, true)}`;
            return `Argument ${K.default.bold(n.join("."))} of type ${K.default.bold(r.inputType.name)} needs ${K.default.greenBright("exactly one")} argument, but you provided ${r.providedKeys.map((f) => K.default.redBright(f)).join(" and ")}.${l}`;
          }
        }, this.type = e2, this.children = t;
      }
      get [Symbol.toStringTag]() {
        return "Document";
      }
      toString() {
        return `${this.type} {
${(0, Ft.default)(this.children.map(String).join(`
`), $r)}
}`;
      }
      validate(e2, t = false, r, n, i) {
        var E;
        e2 || (e2 = {});
        let a = this.children.filter((S) => S.hasInvalidChild || S.hasInvalidArg);
        if (a.length === 0)
          return;
        let o = [], l = [], f = e2 && e2.select ? "select" : e2.include ? "include" : void 0;
        for (let S of a) {
          let T = S.collectErrors(f);
          o.push(...T.fieldErrors.map((A) => ({ ...A, path: t ? A.path : A.path.slice(1) }))), l.push(...T.argErrors.map((A) => ({ ...A, path: t ? A.path : A.path.slice(1) })));
        }
        let u = this.children[0].name, c = t ? this.type : u, p = [], g = [], v = [];
        for (let S of o) {
          let T = this.normalizePath(S.path, e2).join(".");
          if (S.error.type === "invalidFieldName") {
            p.push(T);
            let A = S.error.outputType, { isInclude: R } = S.error;
            A.fields.filter((q) => R ? q.outputType.location === "outputObjectTypes" : true).forEach((q) => {
              let B = T.split(".");
              v.push({ path: `${B.slice(0, B.length - 1).join(".")}.${q.name}`, type: "true", isRequired: false });
            });
          } else
            S.error.type === "includeAndSelect" ? (p.push("select"), p.push("include")) : g.push(T);
          if (S.error.type === "emptySelect" || S.error.type === "noTrueSelect" || S.error.type === "emptyInclude") {
            let A = this.normalizePath(S.path, e2), R = A.slice(0, A.length - 1).join(".");
            (E = S.error.field.outputType.type.fields) == null || E.filter((q) => S.error.type === "emptyInclude" ? q.outputType.location === "outputObjectTypes" : true).forEach((q) => {
              v.push({ path: `${R}.${q.name}`, type: "true", isRequired: false });
            });
          }
        }
        for (let S of l) {
          let T = this.normalizePath(S.path, e2).join(".");
          if (S.error.type === "invalidName")
            p.push(T);
          else if (S.error.type !== "missingArg" && S.error.type !== "atLeastOne")
            g.push(T);
          else if (S.error.type === "missingArg") {
            let A = S.error.missingArg.inputTypes.length === 1 ? S.error.missingArg.inputTypes[0].type : S.error.missingArg.inputTypes.map((R) => {
              let q = br(R.type);
              return q === "Null" ? "null" : R.isList ? q + "[]" : q;
            }).join(" | ");
            v.push({ path: T, type: qn(A, true, T.split("where.").length === 2), isRequired: S.error.missingArg.isRequired });
          }
        }
        let b = d((S) => {
          let T = l.some((Y) => Y.error.type === "missingArg" && Y.error.missingArg.isRequired), A = Boolean(l.find((Y) => Y.error.type === "missingArg" && !Y.error.missingArg.isRequired)), R = A || T, q = "";
          T && (q += `
${K.default.dim("Note: Lines with ")}${K.default.reset.greenBright("+")} ${K.default.dim("are required")}`), A && (q.length === 0 && (q = `
`), T ? q += K.default.dim(`, lines with ${K.default.green("?")} are optional`) : q += K.default.dim(`Note: Lines with ${K.default.green("?")} are optional`), q += K.default.dim("."));
          let B = l.filter((Y) => Y.error.type !== "missingArg" || Y.error.missingArg.isRequired).map((Y) => this.printArgError(Y, R, n === "minimal")).join(`
`);
          if (B += `
${o.map((Y) => this.printFieldError(Y, v, n === "minimal")).join(`
`)}`, n === "minimal")
            return (0, cs.default)(B);
          let { stack: F, indent: C, afterLines: W } = $s({ callsite: S, originalMethod: r || c, showColors: n && n === "pretty", isValidationError: true }), G = { ast: t ? { [u]: e2 } : e2, keyPaths: p, valuePaths: g, missingItems: v };
          (r == null ? void 0 : r.endsWith("aggregate")) && (G = Ds(G));
          let pe = `${F}${(0, Ft.default)(Fi(G), C).slice(C)}${K.default.dim(W)}

${B}${q}
`;
          return we.env.NO_COLOR || n === "colorless" ? (0, cs.default)(pe) : pe;
        }, "renderErrorStr"), w = new ir(b(i));
        throw we.env.NODE_ENV !== "production" && Object.defineProperty(w, "render", { get: () => b, enumerable: false }), w;
      }
      normalizePath(e2, t) {
        let r = e2.slice(), n = [], i, a = t;
        for (; (i = r.shift()) !== void 0; )
          !Array.isArray(a) && i === 0 || (i === "select" ? a[i] ? a = a[i] : a = a.include : a && a[i] && (a = a[i]), n.push(i));
        return n;
      }
    }, "Ei");
    d(Ms, "Document");
    var ir = y(class extends Error {
      get [Symbol.toStringTag]() {
        return "PrismaClientValidationError";
      }
    }, "gt");
    d(ir, "PrismaClientValidationError");
    var Re = y(class extends Error {
      constructor(e2) {
        super(e2 + `
Read more at https://pris.ly/d/client-constructor`);
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientConstructorValidationError";
      }
    }, "ie");
    d(Re, "PrismaClientConstructorValidationError");
    var Le = y(class {
      constructor({ name: e2, args: t, children: r, error: n, schemaField: i }) {
        this.name = e2, this.args = t, this.children = r, this.error = n, this.schemaField = i, this.hasInvalidChild = r ? r.some((a) => Boolean(a.error || a.hasInvalidArg || a.hasInvalidChild)) : false, this.hasInvalidArg = t ? t.hasInvalidArg : false;
      }
      get [Symbol.toStringTag]() {
        return "Field";
      }
      toString() {
        let e2 = this.name;
        return this.error ? e2 + " # INVALID_FIELD" : (this.args && this.args.args && this.args.args.length > 0 && (this.args.args.length === 1 ? e2 += `(${this.args.toString()})` : e2 += `(
${(0, Ft.default)(this.args.toString(), $r)}
)`), this.children && (e2 += ` {
${(0, Ft.default)(this.children.map(String).join(`
`), $r)}
}`), e2);
      }
      collectErrors(e2 = "select") {
        let t = [], r = [];
        if (this.error && t.push({ path: [this.name], error: this.error }), this.children)
          for (let n of this.children) {
            let i = n.collectErrors(e2);
            t.push(...i.fieldErrors.map((a) => ({ ...a, path: [this.name, e2, ...a.path] }))), r.push(...i.argErrors.map((a) => ({ ...a, path: [this.name, e2, ...a.path] })));
          }
        return this.args && r.push(...this.args.collectErrors().map((n) => ({ ...n, path: [this.name, ...n.path] }))), { fieldErrors: t, argErrors: r };
      }
    }, "me");
    d(Le, "Field");
    var Ge = y(class {
      constructor(e2 = []) {
        this.args = e2, this.hasInvalidArg = e2 ? e2.some((t) => Boolean(t.hasError)) : false;
      }
      get [Symbol.toStringTag]() {
        return "Args";
      }
      toString() {
        return this.args.length === 0 ? "" : `${this.args.map((e2) => e2.toString()).filter((e2) => e2).join(`
`)}`;
      }
      collectErrors() {
        return this.hasInvalidArg ? Ri(this.args, (e2) => e2.collectErrors()) : [];
      }
    }, "he");
    d(Ge, "Args");
    function an(e2, t) {
      return Ve.Buffer.isBuffer(e2) ? JSON.stringify(e2.toString("base64")) : Object.prototype.toString.call(e2) === "[object BigInt]" ? e2.toString() : typeof (t == null ? void 0 : t.type) == "string" && t.type === "Json" ? e2 === null ? "null" : e2 && e2.values && e2.__prismaRawParamaters__ ? JSON.stringify(e2.values) : (t == null ? void 0 : t.isList) && Array.isArray(e2) ? JSON.stringify(e2.map((r) => JSON.stringify(r))) : JSON.stringify(JSON.stringify(e2)) : e2 === void 0 ? null : e2 === null ? "null" : Dr.isDecimal(e2) ? e2.toString() : (t == null ? void 0 : t.location) === "enumTypes" && typeof e2 == "string" ? Array.isArray(e2) ? `[${e2.join(", ")}]` : e2 : JSON.stringify(e2, null, 2);
    }
    y(an, "_i");
    d(an, "stringify");
    var ft = y(class {
      constructor({ key: e2, value: t, isEnum: r = false, error: n, schemaArg: i, inputType: a }) {
        this.inputType = a, this.key = e2, this.value = t, this.isEnum = r, this.error = n, this.schemaArg = i, this.isNullable = (i == null ? void 0 : i.inputTypes.reduce((o) => o && i.isNullable, true)) || false, this.hasError = Boolean(n) || (t instanceof Ge ? t.hasInvalidArg : false) || Array.isArray(t) && t.some((o) => o instanceof Ge ? o.hasInvalidArg : false);
      }
      get [Symbol.toStringTag]() {
        return "Arg";
      }
      _toString(e2, t) {
        var r;
        if (typeof e2 != "undefined") {
          if (e2 instanceof Ge)
            return `${t}: {
${(0, Ft.default)(e2.toString(), 2)}
}`;
          if (Array.isArray(e2)) {
            if (((r = this.inputType) == null ? void 0 : r.type) === "Json")
              return `${t}: ${an(e2, this.inputType)}`;
            let n = !e2.some((i) => typeof i == "object");
            return `${t}: [${n ? "" : `
`}${(0, Ft.default)(e2.map((i) => i instanceof Ge ? `{
${(0, Ft.default)(i.toString(), $r)}
}` : an(i, this.inputType)).join(`,${n ? " " : `
`}`), n ? 0 : $r)}${n ? "" : `
`}]`;
          }
          return `${t}: ${an(e2, this.inputType)}`;
        }
      }
      toString() {
        return this._toString(this.value, this.key);
      }
      collectErrors() {
        var t;
        if (!this.hasError)
          return [];
        let e2 = [];
        if (this.error) {
          let r = typeof ((t = this.inputType) == null ? void 0 : t.type) == "object" ? `${this.inputType.type.name}${this.inputType.isList ? "[]" : ""}` : void 0;
          e2.push({ error: this.error, path: [this.key], id: r });
        }
        return Array.isArray(this.value) && e2.push(...Ri(this.value, (r, n) => (r == null ? void 0 : r.collectErrors) ? r.collectErrors().map((i) => ({ ...i, path: [this.key, n, ...i.path] })) : [])), this.value instanceof Ge && e2.push(...this.value.collectErrors().map((r) => ({ ...r, path: [this.key, ...r.path] }))), e2;
      }
    }, "Ne");
    d(ft, "Arg");
    function qi({ dmmf: e2, rootTypeName: t, rootField: r, select: n }) {
      n || (n = {});
      let i = t === "query" ? e2.queryType : e2.mutationType, a = { args: [], outputType: { isList: false, type: i, location: "outputObjectTypes" }, name: t }, o = Ui(e2, { [r]: n }, a, [t]);
      return new Ms(t, o);
    }
    y(qi, "Ai");
    d(qi, "makeDocument");
    function Li(e2) {
      return e2;
    }
    y(Li, "xi");
    d(Li, "transformDocument");
    function Ui(e2, t, r, n) {
      let i = r.outputType.type;
      return Object.entries(t).reduce((a, [o, l]) => {
        let f = i.fieldMap ? i.fieldMap[o] : i.fields.find((E) => E.name === o);
        if (!f)
          return a.push(new Le({ name: o, children: [], error: { type: "invalidFieldName", modelName: i.name, providedName: o, didYouMean: Vr(o, i.fields.map((E) => E.name)), outputType: i } })), a;
        if (typeof l != "boolean" && f.outputType.location === "scalar" && f.name !== "executeRaw" && f.name !== "queryRaw" && f.name !== "runCommandRaw" && i.name !== "Query" && !o.startsWith("aggregate") && f.name !== "count")
          return a.push(new Le({ name: o, children: [], error: { type: "invalidFieldType", modelName: i.name, fieldName: o, providedValue: l } })), a;
        if (l === false)
          return a;
        let u = { name: f.name, fields: f.args, constraints: { minNumFields: null, maxNumFields: null } }, c = typeof l == "object" ? hs(l, ["include", "select"]) : void 0, p = c ? Mr(c, u, [], typeof f == "string" ? void 0 : f.outputType.type) : void 0, g = f.outputType.location === "outputObjectTypes";
        if (l) {
          if (l.select && l.include)
            a.push(new Le({ name: o, children: [new Le({ name: "include", args: new Ge(), error: { type: "includeAndSelect", field: f } })] }));
          else if (l.include) {
            let E = Object.keys(l.include);
            if (E.length === 0)
              return a.push(new Le({ name: o, children: [new Le({ name: "include", args: new Ge(), error: { type: "emptyInclude", field: f } })] })), a;
            if (f.outputType.location === "outputObjectTypes") {
              let S = f.outputType.type, T = S.fields.filter((R) => R.outputType.location === "outputObjectTypes").map((R) => R.name), A = E.filter((R) => !T.includes(R));
              if (A.length > 0)
                return a.push(...A.map((R) => new Le({ name: R, children: [new Le({ name: R, args: new Ge(), error: { type: "invalidFieldName", modelName: S.name, outputType: S, providedName: R, didYouMean: Vr(R, T) || void 0, isInclude: true, isIncludeScalar: S.fields.some((q) => q.name === R) } })] }))), a;
            }
          } else if (l.select) {
            let E = Object.values(l.select);
            if (E.length === 0)
              return a.push(new Le({ name: o, children: [new Le({ name: "select", args: new Ge(), error: { type: "emptySelect", field: f } })] })), a;
            if (E.filter((S) => S).length === 0)
              return a.push(new Le({ name: o, children: [new Le({ name: "select", args: new Ge(), error: { type: "noTrueSelect", field: f } })] })), a;
          }
        }
        let v = g ? Bs(e2, f.outputType.type) : null, b = v;
        l && (l.select ? b = l.select : l.include ? b = rn(v, l.include) : l.by && Array.isArray(l.by) && f.outputType.namespace === "prisma" && f.outputType.location === "outputObjectTypes" && ha(f.outputType.type.name) && (b = Rs(l.by)));
        let w = b !== false && g ? Ui(e2, b, f, [...n, o]) : void 0;
        return a.push(new Le({ name: o, args: p, children: w, schemaField: f })), a;
      }, []);
    }
    y(Ui, "cl");
    d(Ui, "selectionToFields");
    function Rs(e2) {
      let t = Object.create(null);
      for (let r of e2)
        t[r] = true;
      return t;
    }
    y(Rs, "Xg");
    d(Rs, "byToSelect");
    function Bs(e2, t) {
      let r = Object.create(null);
      for (let n of t.fields)
        e2.typeMap[n.outputType.type.name] !== void 0 && (r[n.name] = true), (n.outputType.location === "scalar" || n.outputType.location === "enumTypes") && (r[n.name] = true);
      return r;
    }
    y(Bs, "em");
    d(Bs, "getDefaultSelection");
    function sn(e2, t, r, n) {
      return new ft({ key: e2, value: t, isEnum: n.location === "enumTypes", inputType: n, error: { type: "invalidType", providedValue: t, argName: e2, requiredType: { inputType: r.inputTypes, bestFittingType: n } } });
    }
    y(sn, "Ti");
    d(sn, "getInvalidTypeArg");
    function Cs(e2, t, r) {
      let { type: n, isList: i } = r, a = vr(Yt(n), i), o = Zt(e2, n);
      return !!(o === a || i && o === "List<>" || a === "Json" || o === "Int" && a === "BigInt" || o === "List<Int>" && a === "List<BigInt>" || o === "List<BigInt | Int>" && a === "List<BigInt>" || o === "List<Int | BigInt>" && a === "List<BigInt>" || (o === "Int" || o === "Float") && a === "Decimal" || (o === "List<Int>" || o === "List<Float>") && a === "List<Decimal>" || o === "DateTime" && a === "String" || o === "List<DateTime>" && a === "List<String>" || o === "UUID" && a === "String" || o === "List<UUID>" && a === "List<String>" || o === "String" && a === "ID" || o === "List<String>" && a === "List<ID>" || o === "List<String>" && a === "List<Json>" || a === "List<String>" && (o === "List<String | UUID>" || o === "List<UUID | String>") || o === "Int" && a === "Float" || o === "List<Int>" && a === "List<Float>" || o === "Int" && a === "Long" || o === "List<Int>" && a === "List<Long>" || o === "String" && a === "Decimal" && /^\-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i.test(e2) || e2 === null);
    }
    y(Cs, "tm");
    d(Cs, "hasCorrectScalarType");
    var un = d((e2) => fs(e2, (t, r) => r !== void 0), "cleanObject");
    function Fs(e2, t, r) {
      let n = null, i = [];
      for (let a of r.inputTypes) {
        if (n = Ls(e2, t, r, a), (n == null ? void 0 : n.collectErrors().length) === 0)
          return n;
        if (n && (n == null ? void 0 : n.collectErrors())) {
          let o = n == null ? void 0 : n.collectErrors();
          o && o.length > 0 && i.push({ arg: n, errors: o });
        }
      }
      if ((n == null ? void 0 : n.hasError) && i.length > 0) {
        let a = i.map(({ arg: o, errors: l }) => {
          let f = l.map((u) => {
            let c = 1;
            return u.error.type === "invalidType" && (c = 2 * Math.exp(Di(u.error.providedValue)) + 1), c += Math.log(u.path.length), u.error.type === "missingArg" && o.inputType && Lt(o.inputType.type) && o.inputType.type.name.includes("Unchecked") && (c *= 2), u.error.type === "invalidName" && Lt(u.error.originalType) && u.error.originalType.name.includes("Unchecked") && (c *= 2), c;
          });
          return { score: l.length + qs(f), arg: o, errors: l };
        });
        return a.sort((o, l) => o.score < l.score ? -1 : 1), a[0].arg;
      }
      return n;
    }
    y(Fs, "rm");
    d(Fs, "valueToArg");
    function Di(e2) {
      let t = 1;
      if (!e2 || typeof e2 != "object")
        return t;
      for (let r in e2)
        if (!!Object.prototype.hasOwnProperty.call(e2, r) && typeof e2[r] == "object") {
          let n = Di(e2[r]) + 1;
          t = Math.max(n, t);
        }
      return t;
    }
    y(Di, "fl");
    d(Di, "getDepth");
    function qs(e2) {
      return e2.reduce((t, r) => t + r, 0);
    }
    y(qs, "nm");
    d(qs, "sum");
    function Ls(e2, t, r, n) {
      var f, u, c, p;
      if (typeof t == "undefined")
        return r.isRequired ? new ft({ key: e2, value: t, isEnum: n.location === "enumTypes", inputType: n, error: { type: "missingArg", missingName: e2, missingArg: r, atLeastOne: false, atMostOne: false } }) : null;
      let { isNullable: i, isRequired: a } = r;
      if (t === null && !i && !a && !(Lt(n.type) ? n.type.constraints.minNumFields !== null && n.type.constraints.minNumFields > 0 : false))
        return new ft({ key: e2, value: t, isEnum: n.location === "enumTypes", inputType: n, error: { type: "invalidNullArg", name: e2, invalidType: r.inputTypes, atLeastOne: false, atMostOne: false } });
      if (!n.isList)
        if (Lt(n.type)) {
          if (typeof t != "object" || Array.isArray(t) || n.location === "inputObjectTypes" && !ds(t))
            return sn(e2, t, r, n);
          {
            let g = un(t), v, b = Object.keys(g || {}), w = b.length;
            return w === 0 && typeof n.type.constraints.minNumFields == "number" && n.type.constraints.minNumFields > 0 ? v = { type: "atLeastOne", key: e2, inputType: n.type } : w > 1 && typeof n.type.constraints.maxNumFields == "number" && n.type.constraints.maxNumFields < 2 && (v = { type: "atMostOne", key: e2, inputType: n.type, providedKeys: b }), new ft({ key: e2, value: g === null ? null : Mr(g, n.type, r.inputTypes), isEnum: n.location === "enumTypes", error: v, inputType: n, schemaArg: r });
          }
        } else
          return Vi(e2, t, r, n);
      if (!Array.isArray(t) && n.isList && e2 !== "updateMany" && (t = [t]), n.location === "enumTypes" || n.location === "scalar")
        return Vi(e2, t, r, n);
      let o = n.type, l = (typeof ((f = o.constraints) == null ? void 0 : f.minNumFields) == "number" && ((u = o.constraints) == null ? void 0 : u.minNumFields) > 0 ? Array.isArray(t) && t.some((g) => !g || Object.keys(un(g)).length === 0) : false) ? { inputType: o, key: e2, type: "atLeastOne" } : void 0;
      if (!l) {
        let g = typeof ((c = o.constraints) == null ? void 0 : c.maxNumFields) == "number" && ((p = o.constraints) == null ? void 0 : p.maxNumFields) < 2 ? Array.isArray(t) && t.find((v) => !v || Object.keys(un(v)).length !== 1) : false;
        g && (l = { inputType: o, key: e2, type: "atMostOne", providedKeys: Object.keys(g) });
      }
      if (!Array.isArray(t))
        for (let g of r.inputTypes) {
          let v = Mr(t, g.type);
          if (v.collectErrors().length === 0)
            return new ft({ key: e2, value: v, isEnum: false, schemaArg: r, inputType: g });
        }
      return new ft({ key: e2, value: t.map((g) => n.isList && typeof g != "object" ? g : typeof g != "object" || !t ? sn(e2, g, r, n) : Mr(g, o)), isEnum: false, inputType: n, schemaArg: r, error: l });
    }
    y(Ls, "om");
    d(Ls, "tryInferArgs");
    function Lt(e2) {
      return !(typeof e2 == "string" || Object.hasOwnProperty.call(e2, "values"));
    }
    y(Lt, "Xt");
    d(Lt, "isInputArgType");
    function Vi(e2, t, r, n) {
      return Cs(t, r, n) ? new ft({ key: e2, value: t, isEnum: n.location === "enumTypes", schemaArg: r, inputType: n }) : sn(e2, t, r, n);
    }
    y(Vi, "pl");
    d(Vi, "scalarToArg");
    function Mr(e2, t, r, n) {
      let i = un(e2), { fields: a, fieldMap: o } = t, l = a.map((c) => [c.name, void 0]), f = Object.entries(i || {}), u = da(f, l, (c) => c[0]).reduce((c, [p, g]) => {
        let v = o ? o[p] : a.find((w) => w.name === p);
        if (!v) {
          let w = typeof g == "boolean" && n && n.fields.some((E) => E.name === p) ? p : null;
          return c.push(new ft({ key: p, value: g, error: { type: "invalidName", providedName: p, providedValue: g, didYouMeanField: w, didYouMeanArg: !w && Vr(p, [...a.map((E) => E.name), "select"]) || void 0, originalType: t, possibilities: r, outputType: n } })), c;
        }
        let b = Fs(p, g, v);
        return b && c.push(b), c;
      }, []);
      if (typeof t.constraints.minNumFields == "number" && f.length < t.constraints.minNumFields || u.find((c) => {
        var p, g;
        return ((p = c.error) == null ? void 0 : p.type) === "missingArg" || ((g = c.error) == null ? void 0 : g.type) === "atLeastOne";
      })) {
        let c = t.fields.filter((p) => !p.isRequired && i && (typeof i[p.name] == "undefined" || i[p.name] === null));
        u.push(...c.map((p) => {
          let g = p.inputTypes[0];
          return new ft({ key: p.name, value: void 0, isEnum: g.location === "enumTypes", error: { type: "missingArg", missingName: p.name, missingArg: p, atLeastOne: Boolean(t.constraints.minNumFields) || false, atMostOne: t.constraints.maxNumFields === 1 || false }, inputType: g });
        }));
      }
      return new Ge(u);
    }
    y(Mr, "Gn");
    d(Mr, "objectToArgs");
    function Gi({ document: e2, path: t, data: r }) {
      let n = Za(r, t);
      if (n === "undefined")
        return null;
      if (typeof n != "object")
        return n;
      let i = Us(e2, t);
      return ln({ field: i, data: n });
    }
    y(Gi, "Pi");
    d(Gi, "unpack");
    function ln({ field: e2, data: t }) {
      var n;
      if (!t || typeof t != "object" || !e2.children || !e2.schemaField)
        return t;
      let r = { DateTime: (i) => new Date(i), Json: (i) => JSON.parse(i), Bytes: (i) => Ve.Buffer.from(i, "base64"), Decimal: (i) => new Dr(i), BigInt: (i) => BigInt(i) };
      for (let i of e2.children) {
        let a = (n = i.schemaField) == null ? void 0 : n.outputType.type;
        if (a && typeof a == "string") {
          let o = r[a];
          if (o)
            if (Array.isArray(t))
              for (let l of t)
                typeof l[i.name] != "undefined" && l[i.name] !== null && (Array.isArray(l[i.name]) ? l[i.name] = l[i.name].map(o) : l[i.name] = o(l[i.name]));
            else
              typeof t[i.name] != "undefined" && t[i.name] !== null && (Array.isArray(t[i.name]) ? t[i.name] = t[i.name].map(o) : t[i.name] = o(t[i.name]));
        }
        if (i.schemaField && i.schemaField.outputType.location === "outputObjectTypes")
          if (Array.isArray(t))
            for (let o of t)
              ln({ field: i, data: o[i.name] });
          else
            ln({ field: i, data: t[i.name] });
      }
      return t;
    }
    y(ln, "Mi");
    d(ln, "mapScalars");
    function Us(e2, t) {
      let r = t.slice(), n = r.shift(), i = e2.children.find((a) => a.name === n);
      if (!i)
        throw new Error(`Could not find field ${n} in document ${e2}`);
      for (; r.length > 0; ) {
        let a = r.shift();
        if (!i.children)
          throw new Error(`Can't get children for field ${i} with child ${a}`);
        let o = i.children.find((l) => l.name === a);
        if (!o)
          throw new Error(`Can't find child ${a} of field ${i}`);
        i = o;
      }
      return i;
    }
    y(Us, "im");
    d(Us, "getField");
    function cn(e2) {
      return e2.split(".").filter((t) => t !== "select").join(".");
    }
    y(cn, "Oi");
    d(cn, "removeSelectFromPath");
    function fn(e2) {
      if (Object.prototype.toString.call(e2) === "[object Object]") {
        let t = {};
        for (let r in e2)
          if (r === "select")
            for (let n in e2.select)
              t[n] = fn(e2.select[n]);
          else
            t[r] = fn(e2[r]);
        return t;
      }
      return e2;
    }
    y(fn, "Si");
    d(fn, "removeSelectFromObject");
    function Ds({ ast: e2, keyPaths: t, missingItems: r, valuePaths: n }) {
      let i = t.map(cn), a = n.map(cn), o = r.map((l) => ({ path: cn(l.path), isRequired: l.isRequired, type: l.type }));
      return { ast: fn(e2), keyPaths: i, missingItems: o, valuePaths: a };
    }
    y(Ds, "sm");
    d(Ds, "transformAggregatePrintJsonArgs");
    j();
    k();
    N();
    I();
    var Gc = Ae(lo());
    var Jc = Ae(Tn());
    j();
    k();
    N();
    I();
    var Vs = y(class {
      constructor(e2) {
        this.options = e2, this.tickActive = false, this.batches = {};
      }
      request(e2) {
        let t = this.options.batchBy(e2);
        return t ? (this.batches[t] || (this.batches[t] = [], this.tickActive || (this.tickActive = true, we.nextTick(() => {
          this.dispatchBatches(), this.tickActive = false;
        }))), new Promise((r, n) => {
          this.batches[t].push({ request: e2, resolve: r, reject: n });
        })) : this.options.singleLoader(e2);
      }
      dispatchBatches() {
        for (let e2 in this.batches) {
          let t = this.batches[e2];
          delete this.batches[e2], t.length === 1 ? this.options.singleLoader(t[0].request).then((r) => {
            r instanceof Error ? t[0].reject(r) : t[0].resolve(r);
          }).catch((r) => {
            t[0].reject(r);
          }) : this.options.batchLoader(t.map((r) => r.request)).then((r) => {
            if (r instanceof Error)
              for (let n = 0; n < t.length; n++)
                t[n].reject(r);
            else
              for (let n = 0; n < t.length; n++) {
                let i = r[n];
                i instanceof Error ? t[n].reject(i) : t[n].resolve(i);
              }
          }).catch((r) => {
            for (let n = 0; n < t.length; n++)
              t[n].reject(r);
          });
        }
      }
      get [Symbol.toStringTag]() {
        return "DataLoader";
      }
    }, "Jn");
    d(Vs, "DataLoader");
    j();
    k();
    N();
    I();
    var pn = y(class extends Error {
      constructor(e2) {
        super(e2);
        this.name = "NotFoundError";
      }
    }, "qr");
    d(pn, "NotFoundError");
    function Ji(e2, t, r, n) {
      let i;
      if (r && typeof r == "object" && "rejectOnNotFound" in r && r.rejectOnNotFound !== void 0)
        i = r.rejectOnNotFound, delete r.rejectOnNotFound;
      else if (typeof n == "boolean")
        i = n;
      else if (n && typeof n == "object" && e2 in n) {
        let a = n[e2];
        if (a && typeof a == "object")
          return t in a ? a[t] : void 0;
        i = Ji(e2, t, r, a);
      } else
        typeof n == "function" ? i = n : i = false;
      return i;
    }
    y(Ji, "Ii");
    d(Ji, "getRejectOnNotFound");
    var Wc = /(findUnique|findFirst)/;
    function Gs(e2, t, r, n) {
      if (n && !e2 && Wc.exec(t))
        throw typeof n == "boolean" && n ? new pn(`No ${r} found`) : typeof n == "function" ? n(new pn(`No ${r} found`)) : Zr(n) ? n : new pn(`No ${r} found`);
    }
    y(Gs, "dl");
    d(Gs, "throwIfNotFound");
    var zc = (0, Gc.default)("prisma:client:request_handler");
    function Wi(e2) {
      let t = e2[0].transactionId, r = e2[0].runInTransaction, n = e2[0].headers;
      return { inTx: typeof t == "number" && r ? true : void 0, headers: { transactionId: typeof t == "string" && r ? t : void 0, ...n } };
    }
    y(Wi, "hl");
    d(Wi, "getRequestInfo");
    var Js = y(class {
      constructor(e2, t) {
        this.client = e2, this.hooks = t, this.dataloader = new Vs({ batchLoader: (r) => {
          let n = Wi(r), i = r.map((a) => String(a.document));
          return this.client._engine.requestBatch(i, n.headers, n.inTx);
        }, singleLoader: (r) => {
          let n = Wi([r]), i = String(r.document);
          return this.client._engine.request(i, n.headers);
        }, batchBy: (r) => r.transactionId ? `transaction-${r.transactionId}` : Ws(r) });
      }
      async request({ document: e2, dataPath: t = [], rootField: r, typeName: n, isList: i, callsite: a, rejectOnNotFound: o, clientMethod: l, runInTransaction: f, showColors: u, engineHook: c, args: p, headers: g, transactionId: v, unpacker: b }) {
        if (this.hooks && this.hooks.beforeRequest) {
          let w = String(e2);
          this.hooks.beforeRequest({ query: w, path: t, rootField: r, typeName: n, document: e2, isList: i, clientMethod: l, args: p });
        }
        try {
          let w, E;
          if (c) {
            let T = await c({ document: e2, runInTransaction: f }, (A) => this.dataloader.request(A));
            w = T.data, E = T.elapsed;
          } else {
            let T = await this.dataloader.request({ document: e2, runInTransaction: f, headers: g, transactionId: v });
            w = T == null ? void 0 : T.data, E = T == null ? void 0 : T.elapsed;
          }
          let S = this.unpack(e2, w, t, r, b);
          return Gs(S, l, n, o), we.env.PRISMA_CLIENT_GET_TIME ? { data: S, elapsed: E } : S;
        } catch (w) {
          zc(w);
          let E = w.message;
          if (a) {
            let { stack: S } = $s({ callsite: a, originalMethod: l, onUs: w.isPanic, showColors: u });
            E = `${S}
  ${w.message}`;
          }
          throw E = this.sanitizeMessage(E), w.code ? new wr(E, w.code, this.client._clientVersion, w.meta) : w.isPanic ? new er(E, this.client._clientVersion) : w instanceof tr ? new tr(E, this.client._clientVersion) : w instanceof Xt ? new Xt(E, this.client._clientVersion) : w instanceof er ? new er(E, this.client._clientVersion) : (w.clientVersion = this.client._clientVersion, w);
        }
      }
      sanitizeMessage(e2) {
        return this.client._errorFormat && this.client._errorFormat !== "pretty" ? (0, Jc.default)(e2) : e2;
      }
      unpack(e2, t, r, n, i) {
        (t == null ? void 0 : t.data) && (t = t.data), i && (t[n] = i(t[n]));
        let a = [];
        return n && a.push(n), a.push(...r.filter((o) => o !== "select" && o !== "include")), Gi({ document: e2, data: t, path: a });
      }
      get [Symbol.toStringTag]() {
        return "RequestHandler";
      }
    }, "zn");
    d(Js, "RequestHandler");
    function Ws(e2) {
      var n;
      if (!e2.document.children[0].name.startsWith("findUnique"))
        return;
      let t = (n = e2.document.children[0].args) == null ? void 0 : n.args.map((i) => i.value instanceof Ge ? `${i.key}-${i.value.args.map((a) => a.key).join(",")}` : i.key).join(","), r = e2.document.children[0].children.join(",");
      return `${e2.document.children[0].name}|${t}|${r}`;
    }
    y(Ws, "lm");
    d(Ws, "batchFindUniqueBy");
    j();
    k();
    N();
    I();
    var Hc = $u().version;
    j();
    k();
    N();
    I();
    var dn = d((e2) => e2.reduce((t, r, n) => `${t}@P${n}${r}`), "mssqlPreparedStatement");
    j();
    k();
    N();
    I();
    function zs(e2, t) {
      let r = t && Oi.getSpanContext(t);
      return (r == null ? void 0 : r.traceFlags) === 1 ? { traceparent: `00-${r.traceId}-${r.spanId}-01`, ...e2 } : e2 != null ? e2 : {};
    }
    y(zs, "wl");
    d(zs, "applyTracingHeaders");
    j();
    k();
    N();
    I();
    async function Hs(e2, t, r) {
      if (t === void 0)
        return r(void 0);
      let n = Oi.getTracer("prisma").startSpan(e2, void 0, t), i = Oi.setSpan(t, n), a = await Ua.with(i, () => r(n));
      return n == null || n.end(), a;
    }
    y(Hs, "vl");
    d(Hs, "runInChildSpan");
    j();
    k();
    N();
    I();
    function ot(e2) {
      return JSON.stringify(gn(hn(e2)));
    }
    y(ot, "Ce");
    d(ot, "serializeRawParameters");
    function hn(e2) {
      let t = Object.prototype.toString.call(e2);
      if (t === "[object Date]")
        return { prisma__type: "date", prisma__value: e2.toJSON() };
      if (t === "[object Object]") {
        let r = {};
        for (let n in e2)
          n !== "__proto__" && (r[n] = hn(e2[n]));
        return r;
      }
      if (t === "[object Array]") {
        let r = e2.length, n;
        for (n = new Array(r); r--; )
          n[r] = hn(e2[r]);
        return n;
      }
      return e2;
    }
    y(hn, "ki");
    d(hn, "replaceDates");
    function gn(e2) {
      let t = Object.prototype.toString.call(e2);
      if (t === "[object BigInt]")
        return e2.toString();
      if (t === "[object Object]") {
        let r = {};
        for (let n in e2)
          n !== "__proto__" && (r[n] = gn(e2[n]));
        return r;
      }
      if (t === "[object Array]") {
        let r = e2.length, n;
        for (n = new Array(r); r--; )
          n[r] = gn(e2[r]);
        return n;
      }
      return e2;
    }
    y(gn, "Fi");
    d(gn, "serializeBigInt");
    j();
    k();
    N();
    I();
    var Yc = Ae(so());
    var Ys = ["datasources", "errorFormat", "log", "__internal", "rejectOnNotFound"];
    var Zs = ["pretty", "colorless", "minimal"];
    var Ks = ["info", "query", "warn", "error"];
    var Zc = { datasources: (e2, t) => {
      if (e2) {
        if (typeof e2 != "object" || Array.isArray(e2))
          throw new Re(`Invalid value ${JSON.stringify(e2)} for "datasources" provided to PrismaClient constructor`);
        for (let [r, n] of Object.entries(e2)) {
          if (!t.includes(r)) {
            let i = Ut(r, t) || `Available datasources: ${t.join(", ")}`;
            throw new Re(`Unknown datasource ${r} provided to PrismaClient constructor.${i}`);
          }
          if (typeof n != "object" || Array.isArray(n))
            throw new Re(`Invalid value ${JSON.stringify(e2)} for datasource "${r}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
          if (n && typeof n == "object")
            for (let [i, a] of Object.entries(n)) {
              if (i !== "url")
                throw new Re(`Invalid value ${JSON.stringify(e2)} for datasource "${r}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
              if (typeof a != "string")
                throw new Re(`Invalid value ${JSON.stringify(a)} for datasource "${r}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
            }
        }
      }
    }, errorFormat: (e2) => {
      if (e2) {
        if (typeof e2 != "string")
          throw new Re(`Invalid value ${JSON.stringify(e2)} for "errorFormat" provided to PrismaClient constructor.`);
        if (!Zs.includes(e2)) {
          let t = Ut(e2, Zs);
          throw new Re(`Invalid errorFormat ${e2} provided to PrismaClient constructor.${t}`);
        }
      }
    }, log: (e2) => {
      if (!e2)
        return;
      if (!Array.isArray(e2))
        throw new Re(`Invalid value ${JSON.stringify(e2)} for "log" provided to PrismaClient constructor.`);
      function t(r) {
        if (typeof r == "string" && !Ks.includes(r)) {
          let n = Ut(r, Ks);
          throw new Re(`Invalid log level "${r}" provided to PrismaClient constructor.${n}`);
        }
      }
      y(t, "t"), d(t, "validateLogLevel");
      for (let r of e2) {
        t(r);
        let n = { level: t, emit: (i) => {
          let a = ["stdout", "event"];
          if (!a.includes(i)) {
            let o = Ut(i, a);
            throw new Re(`Invalid value ${JSON.stringify(i)} for "emit" in logLevel provided to PrismaClient constructor.${o}`);
          }
        } };
        if (r && typeof r == "object")
          for (let [i, a] of Object.entries(r))
            if (n[i])
              n[i](a);
            else
              throw new Re(`Invalid property ${i} for "log" provided to PrismaClient constructor`);
      }
    }, __internal: (e2) => {
      if (!e2)
        return;
      let t = ["debug", "hooks", "engine", "measurePerformance"];
      if (typeof e2 != "object")
        throw new Re(`Invalid value ${JSON.stringify(e2)} for "__internal" to PrismaClient constructor`);
      for (let [r] of Object.entries(e2))
        if (!t.includes(r)) {
          let n = Ut(r, t);
          throw new Re(`Invalid property ${JSON.stringify(r)} for "__internal" provided to PrismaClient constructor.${n}`);
        }
    }, rejectOnNotFound: (e2) => {
      if (e2) {
        if (Zr(e2) || typeof e2 == "boolean" || typeof e2 == "object" || typeof e2 == "function")
          return e2;
        throw new Re(`Invalid rejectOnNotFound expected a boolean/Error/{[modelName: Error | boolean]} but received ${JSON.stringify(e2)}`);
      }
    } };
    function Qs(e2, t) {
      for (let [r, n] of Object.entries(e2)) {
        if (!Ys.includes(r)) {
          let i = Ut(r, Ys);
          throw new Re(`Unknown property ${r} provided to PrismaClient constructor.${i}`);
        }
        Zc[r](n, t);
      }
    }
    y(Qs, "Tl");
    d(Qs, "validatePrismaClientOptions");
    function Ut(e2, t) {
      if (t.length === 0 || typeof e2 != "string")
        return "";
      let r = Xs(e2, t);
      return r ? ` Did you mean "${r}"?` : "";
    }
    y(Ut, "er");
    d(Ut, "getDidYouMean");
    function Xs(e2, t) {
      if (t.length === 0)
        return null;
      let r = t.map((i) => ({ value: i, distance: (0, Yc.default)(e2, i) }));
      r.sort((i, a) => i.distance < a.distance ? -1 : 1);
      let n = r[0];
      return n.distance < 3 ? n.value : null;
    }
    y(Xs, "pm");
    d(Xs, "getAlternative");
    var Qe = (0, Dn.default)("prisma:client");
    var Kc = /^(\s*alter\s)/i;
    (globalThis = ct).NOT_PRISMA_DATA_PROXY = true;
    function zi(e2) {
      return Array.isArray(e2);
    }
    y(zi, "Pl");
    d(zi, "isReadonlyArray");
    function yn(e2, t, r) {
      if (t.length > 0 && Kc.exec(e2))
        throw new Error(`Running ALTER using ${r} is not supported
Using the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.

Example:
  await prisma.$executeRawUnsafe(\`ALTER USER prisma WITH PASSWORD '\${password}'\`)

More Information: https://pris.ly/d/execute-raw
`);
    }
    y(yn, "ji");
    d(yn, "checkAlter");
    var Qc = { findUnique: "query", findFirst: "query", findMany: "query", count: "query", create: "mutation", createMany: "mutation", update: "mutation", updateMany: "mutation", upsert: "mutation", delete: "mutation", deleteMany: "mutation", executeRaw: "mutation", queryRaw: "mutation", aggregate: "query", groupBy: "query", runCommandRaw: "mutation", findRaw: "query", aggregateRaw: "query" };
    var Xc = Symbol.for("prisma.client.transaction.id");
    function eu(e2) {
      class t {
        constructor(n) {
          var o, l, f, u, c, p, g, v;
          this._middlewares = new ls(), this._transactionId = 1, n && Qs(n, e2.datasourceNames), this._rejectOnNotFound = n == null ? void 0 : n.rejectOnNotFound, this._clientVersion = (o = e2.clientVersion) != null ? o : Hc, this._activeProvider = e2.activeProvider, this._clientEngineType = ni(e2.generator);
          let i = { rootEnvPath: e2.relativeEnvPaths.rootEnvPath && Qr.default.resolve(e2.dirname, e2.relativeEnvPaths.rootEnvPath), schemaEnvPath: e2.relativeEnvPaths.schemaEnvPath && Qr.default.resolve(e2.dirname, e2.relativeEnvPaths.schemaEnvPath) }, a = false;
          try {
            let b = n != null ? n : {}, w = (l = b.__internal) != null ? l : {}, E = w.debug === true;
            E && Dn.default.enable("prisma:client"), w.hooks && (this._hooks = w.hooks);
            let S = Qr.default.resolve(e2.dirname, e2.relativePath);
            xn.existsSync(S) || (S = e2.dirname);
            let T = b.datasources || {}, A = Object.entries(T).filter(([B, F]) => F && F.url).map(([B, { url: F }]) => ({ name: B, url: F })), R = ss([], A, (B) => B.name), q = w.engine || {};
            if (b.errorFormat ? this._errorFormat = b.errorFormat : we.env.NODE_ENV === "production" ? this._errorFormat = "minimal" : we.env.NO_COLOR ? this._errorFormat = "colorless" : this._errorFormat = "colorless", this._dmmf = new Ln(e2.document), this._previewFeatures = (u = (f = e2.generator) == null ? void 0 : f.previewFeatures) != null ? u : [], this._engineConfig = { cwd: S, dirname: e2.dirname, enableDebugLogs: E, allowTriggerPanic: q.allowTriggerPanic, datamodelPath: Qr.default.join(e2.dirname, (c = e2.filename) != null ? c : "schema.prisma"), prismaPath: (p = q.binaryPath) != null ? p : void 0, engineEndpoint: q.endpoint, datasources: R, generator: e2.generator, showColors: this._errorFormat === "pretty", logLevel: b.log && as(b.log), logQueries: b.log && Boolean(typeof b.log == "string" ? b.log === "query" : b.log.find((B) => typeof B == "string" ? B === "query" : B.level === "query")), env: a ? a.parsed : (v = (g = e2.inlineEnv) == null ? void 0 : g.parsed) != null ? v : {}, flags: [], clientVersion: e2.clientVersion, previewFeatures: ai(this._previewFeatures), activeProvider: e2.activeProvider, inlineSchema: e2.inlineSchema, inlineDatasources: e2.inlineDatasources, inlineSchemaHash: e2.inlineSchemaHash }, e2.activeProvider === "mongodb") {
              let B = this._engineConfig.previewFeatures ? this._engineConfig.previewFeatures.concat("mongodb") : ["mongodb"];
              this._engineConfig.previewFeatures = B;
            }
            if (Qe(`clientVersion: ${e2.clientVersion}`), Qe(`clientEngineType: ${this._clientEngineType}`), this._engine = this.getEngine(), this._getActiveProvider(), this._fetcher = new Js(this, this._hooks), b.log)
              for (let B of b.log) {
                let F = typeof B == "string" ? B : B.emit === "stdout" ? B.level : null;
                F && this.$on(F, (C) => {
                  var W;
                  si.log(`${(W = si.tags[F]) != null ? W : ""}`, C.message || C.query);
                });
              }
          } catch (b) {
            throw b.clientVersion = this._clientVersion, b;
          }
          return ns(this);
        }
        get [Symbol.toStringTag]() {
          return "PrismaClient";
        }
        getEngine() {
          return this._clientEngineType === Ne.Library || this._clientEngineType === Ne.Binary ? false : new ri(this._engineConfig);
        }
        $use(n, i) {
          if (typeof n == "function")
            this._middlewares.query.use(n);
          else if (n === "all")
            this._middlewares.query.use(i);
          else if (n === "engine")
            this._middlewares.engine.use(i);
          else
            throw new Error(`Invalid middleware ${n}`);
        }
        $on(n, i) {
          n === "beforeExit" ? this._engine.on("beforeExit", i) : this._engine.on(n, (a) => {
            var l, f, u, c;
            let o = a.fields;
            return i(n === "query" ? { timestamp: a.timestamp, query: (l = o == null ? void 0 : o.query) != null ? l : a.query, params: (f = o == null ? void 0 : o.params) != null ? f : a.params, duration: (u = o == null ? void 0 : o.duration_ms) != null ? u : a.duration, target: a.target } : { timestamp: a.timestamp, message: (c = o == null ? void 0 : o.message) != null ? c : a.message, target: a.target });
          });
        }
        $connect() {
          try {
            return this._engine.start();
          } catch (n) {
            throw n.clientVersion = this._clientVersion, n;
          }
        }
        async _runDisconnect() {
          await this._engine.stop(), delete this._connectionPromise, this._engine = this.getEngine(), delete this._disconnectionPromise, delete this._getConfigPromise;
        }
        $disconnect() {
          try {
            return this._engine.stop();
          } catch (n) {
            throw n.clientVersion = this._clientVersion, n;
          }
        }
        async _getActiveProvider() {
          try {
            let n = await this._engine.getConfig();
            this._activeProvider = n.datasources[0].activeProvider;
          } catch (n) {
          }
        }
        $executeRawInternal(n, i, a, o, ...l) {
          let f = "", u;
          if (typeof o == "string")
            f = o, u = { values: ot(l || []), __prismaRawParamaters__: true }, yn(f, l, "prisma.$executeRawUnsafe(<SQL>, [...values])");
          else if (zi(o))
            switch (this._activeProvider) {
              case "sqlite":
              case "mysql": {
                let p = Tr.sqltag(o, ...l);
                f = p.sql, u = { values: ot(p.values), __prismaRawParamaters__: true };
                break;
              }
              case "cockroachdb":
              case "postgresql": {
                let p = Tr.sqltag(o, ...l);
                f = p.text, yn(f, p.values, "prisma.$executeRaw`<SQL>`"), u = { values: ot(p.values), __prismaRawParamaters__: true };
                break;
              }
              case "sqlserver": {
                f = dn(o), u = { values: ot(l), __prismaRawParamaters__: true };
                break;
              }
              default:
                throw new Error(`The ${this._activeProvider} provider does not support $executeRaw`);
            }
          else {
            switch (this._activeProvider) {
              case "sqlite":
              case "mysql":
                f = o.sql;
                break;
              case "cockroachdb":
              case "postgresql":
                f = o.text, yn(f, o.values, "prisma.$executeRaw(sql`<SQL>`)");
                break;
              case "sqlserver":
                f = dn(o.strings);
                break;
              default:
                throw new Error(`The ${this._activeProvider} provider does not support $executeRaw`);
            }
            u = { values: ot(o.values), __prismaRawParamaters__: true };
          }
          (u == null ? void 0 : u.values) ? Qe(`prisma.$executeRaw(${f}, ${u.values})`) : Qe(`prisma.$executeRaw(${f})`);
          let c = { query: f, parameters: u };
          return Qe("Prisma Client call:"), this._request({ args: c, clientMethod: "executeRaw", dataPath: [], action: "executeRaw", callsite: Ct(this._errorFormat), runInTransaction: !!n, transactionId: n, otelCtx: a, lock: i });
        }
        $executeRaw(n, ...i) {
          return Bt((a, o, l) => {
            if (n.raw || n.sql)
              return this.$executeRawInternal(a, o, l, n, ...i);
            throw new ir("`$executeRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\n");
          });
        }
        $executeRawUnsafe(n, ...i) {
          return Bt((a, o, l) => this.$executeRawInternal(a, o, l, n, ...i));
        }
        $runCommandRaw(n) {
          if (e2.activeProvider !== "mongodb")
            throw new ir(`The ${e2.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`);
          return Bt((i, a, o) => this._request({ args: { command: n }, clientMethod: "runCommandRaw", dataPath: [], action: "runCommandRaw", callsite: Ct(), runInTransaction: !!i, transactionId: i, otelCtx: o, lock: a }));
        }
        $queryRawInternal(n, i, a, o, ...l) {
          let f = "", u;
          if (typeof o == "string")
            f = o, u = { values: ot(l || []), __prismaRawParamaters__: true };
          else if (zi(o))
            switch (this._activeProvider) {
              case "sqlite":
              case "mysql": {
                let p = Tr.sqltag(o, ...l);
                f = p.sql, u = { values: ot(p.values), __prismaRawParamaters__: true };
                break;
              }
              case "cockroachdb":
              case "postgresql": {
                let p = Tr.sqltag(o, ...l);
                f = p.text, u = { values: ot(p.values), __prismaRawParamaters__: true };
                break;
              }
              case "sqlserver": {
                let p = Tr.sqltag(o, ...l);
                f = dn(p.strings), u = { values: ot(p.values), __prismaRawParamaters__: true };
                break;
              }
              default:
                throw new Error(`The ${this._activeProvider} provider does not support $queryRaw`);
            }
          else {
            switch (this._activeProvider) {
              case "sqlite":
              case "mysql":
                f = o.sql;
                break;
              case "cockroachdb":
              case "postgresql":
                f = o.text;
                break;
              case "sqlserver":
                f = dn(o.strings);
                break;
              default:
                throw new Error(`The ${this._activeProvider} provider does not support $queryRaw`);
            }
            u = { values: ot(o.values), __prismaRawParamaters__: true };
          }
          (u == null ? void 0 : u.values) ? Qe(`prisma.queryRaw(${f}, ${u.values})`) : Qe(`prisma.queryRaw(${f})`);
          let c = { query: f, parameters: u };
          return Qe("Prisma Client call:"), this._request({ args: c, clientMethod: "queryRaw", dataPath: [], action: "queryRaw", callsite: Ct(this._errorFormat), runInTransaction: !!n, transactionId: n, otelCtx: a, lock: i });
        }
        $queryRaw(n, ...i) {
          return Bt((a, o, l) => {
            if (n.raw || n.sql)
              return this.$queryRawInternal(a, o, l, n, ...i);
            throw new ir("`$queryRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\n");
          });
        }
        $queryRawUnsafe(n, ...i) {
          return Bt((a, o, l) => this.$queryRawInternal(a, o, l, n, ...i));
        }
        __internal_triggerPanic(n) {
          if (!this._engineConfig.allowTriggerPanic)
            throw new Error(`In order to use .__internal_triggerPanic(), please enable it like so:
new PrismaClient({
  __internal: {
    engine: {
      allowTriggerPanic: true
    }
  }
})`);
          let i = n ? { "X-DEBUG-FATAL": "1" } : { "X-DEBUG-NON-FATAL": "1" };
          return this._request({ action: "queryRaw", args: { query: "SELECT 1", parameters: void 0 }, clientMethod: "queryRaw", dataPath: [], runInTransaction: false, headers: i, callsite: Ct(this._errorFormat) });
        }
        _transactionWithArray(n) {
          let i = this._transactionId++, a = os(n.length), o = n.map((l) => {
            var f;
            if ((l == null ? void 0 : l[Symbol.toStringTag]) !== "PrismaPromise")
              throw new Error("All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.");
            return (f = l.requestTransaction) == null ? void 0 : f.call(l, i, a);
          });
          return Promise.all(o);
        }
        async _transactionWithCallback(n, i) {
          let a = await this._engine.transaction("start", i), o;
          try {
            o = await n(mn(this, a.id)), await this._engine.transaction("commit", a);
          } catch (l) {
            throw await this._engine.transaction("rollback", a).catch(() => {
            }), l.clientVersion = this._clientVersion, l;
          }
          return o;
        }
        async $transaction(n, i) {
          return this._hasPreviewFlag("interactiveTransactions") ? typeof n == "function" ? this._transactionWithCallback(n, i) : this._transactionWithArray(n) : this._transactionWithArray(n);
        }
        async _request(n) {
          this._hasPreviewFlag("tracing") || delete n.otelCtx;
          try {
            let i = { args: n.args, dataPath: n.dataPath, runInTransaction: n.runInTransaction, action: n.action, model: n.model }, a = -1, o = d((l) => {
              let f = this._middlewares.query.get(++a);
              if (f)
                return f(l, o);
              let u = { ...n, ...l };
              return this._executeRequest(u);
            }, "consumer");
            return await Hs("request", n.otelCtx, () => o(i));
          } catch (i) {
            throw i.clientVersion = this._clientVersion, i;
          }
        }
        async _executeRequest({ args: n, clientMethod: i, dataPath: a, callsite: o, runInTransaction: l, action: f, model: u, headers: c, transactionId: p, otelCtx: g, lock: v, unpacker: b }) {
          let w, E = Qc[f];
          (f === "executeRaw" || f === "queryRaw" || f === "runCommandRaw") && (w = f);
          let S;
          if (u) {
            if (S = this._dmmf.mappingsMap[u], !S)
              throw new Error(`Could not find mapping for model ${u}`);
            w = S[f];
          }
          if (E !== "query" && E !== "mutation")
            throw new Error(`Invalid operation ${E} for action ${f}`);
          let T = this._dmmf.rootFieldMap[w];
          if (!T)
            throw new Error(`Could not find rootField ${w} for action ${f} for model ${u} on rootType ${E}`);
          let { isList: A } = T.outputType, R = Qt(T.outputType.type), q = Ji(f, R, n, this._rejectOnNotFound), B = qi({ dmmf: this._dmmf, rootField: w, rootTypeName: E, select: n });
          if (B.validate(n, false, i, this._errorFormat, o), B = Li(B), Dn.default.enabled("prisma:client")) {
            let F = String(B);
            Qe("Prisma Client call:"), Qe(`prisma.${i}(${Fi({ ast: n, keyPaths: [], valuePaths: [], missingItems: [] })})`), Qe("Generated request:"), Qe(F + `
`);
          }
          return c = zs(c, g), await v, this._fetcher.request({ document: B, clientMethod: i, typeName: R, dataPath: a, rejectOnNotFound: q, isList: A, rootField: w, callsite: o, showColors: this._errorFormat === "pretty", args: n, engineHook: this._middlewares.engine.get(0), runInTransaction: l, headers: c, transactionId: p, unpacker: b });
        }
        _hasPreviewFlag(n) {
          var i;
          return !!((i = this._engineConfig.previewFeatures) == null ? void 0 : i.includes(n));
        }
      }
      return y(t, "t"), d(t, "PrismaClient"), t;
    }
    y(eu, "hm");
    d(eu, "getPrismaClient");
    var ef = ["$connect", "$disconnect", "$on", "$transaction", "$use"];
    function mn(e2, t) {
      return typeof e2 != "object" ? e2 : new Proxy(e2, { get: (r, n) => {
        if (!ef.includes(n))
          return n === Xc ? t : typeof r[n] == "function" ? (...i) => n === "then" ? r[n](i[0], i[1], t) : n === "catch" || n === "finally" ? r[n](i[0], t) : mn(r[n](...i), t) : mn(r[n], t);
      } });
    }
    y(mn, "Ri");
    d(mn, "transactionProxy");
    j();
    k();
    N();
    I();
    j();
    k();
    N();
    I();
    var Rr = Ae(mo());
    var tf = Mu.decompressFromBase64;
    var rf = Rr.Sql;
    var nf = Rr.empty;
    var of = void 0;
    var af = Rr.join;
    var sf = Rr.raw;
    var uf = Rr.sqltag;
    var lf = void 0;
  }
});

// node_modules/.prisma/client/index.js
var require_client = __commonJS({
  "node_modules/.prisma/client/index.js"(exports2) {
    init_define_process();
    Object.defineProperty(exports2, "__esModule", { value: true });
    var {
      PrismaClientKnownRequestError: PrismaClientKnownRequestError2,
      PrismaClientUnknownRequestError: PrismaClientUnknownRequestError2,
      PrismaClientRustPanicError: PrismaClientRustPanicError2,
      PrismaClientInitializationError: PrismaClientInitializationError2,
      PrismaClientValidationError: PrismaClientValidationError2,
      decompressFromBase64: decompressFromBase642,
      getPrismaClient: getPrismaClient2,
      sqltag: sqltag2,
      empty: empty2,
      join: join2,
      raw: raw2,
      Decimal: Decimal2
    } = require_proxy();
    var Prisma = {};
    exports2.Prisma = Prisma;
    Prisma.prismaVersion = {
      client: "3.10.0",
      engine: "73e60b76d394f8d37d8ebd1f8918c79029f0db86"
    };
    Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError2;
    Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError2;
    Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError2;
    Prisma.PrismaClientInitializationError = PrismaClientInitializationError2;
    Prisma.PrismaClientValidationError = PrismaClientValidationError2;
    Prisma.Decimal = Decimal2;
    Prisma.sql = sqltag2;
    Prisma.empty = empty2;
    Prisma.join = join2;
    Prisma.raw = raw2;
    Prisma.validator = () => (val) => val;
    Prisma.DbNull = "DbNull";
    Prisma.JsonNull = "JsonNull";
    Prisma.AnyNull = "AnyNull";
    var dirname = "/";
    function makeEnum(x) {
      return x;
    }
    exports2.Prisma.UserScalarFieldEnum = makeEnum({
      id: "id",
      createdAt: "createdAt",
      updatedAt: "updatedAt",
      role: "role",
      username: "username",
      password: "password",
      contactNumber: "contactNumber",
      name: "name"
    });
    exports2.Prisma.AddressScalarFieldEnum = makeEnum({
      id: "id",
      createdAt: "createdAt",
      updatedAt: "updatedAt",
      userId: "userId",
      houseNumber: "houseNumber",
      streetName: "streetName",
      barangay: "barangay",
      city: "city",
      province: "province"
    });
    exports2.Prisma.OrderScalarFieldEnum = makeEnum({
      id: "id",
      createdAt: "createdAt",
      updatedAt: "updatedAt",
      userId: "userId",
      amount: "amount",
      status: "status",
      paymentOption: "paymentOption",
      paymentReference: "paymentReference"
    });
    exports2.Prisma.ProductScalarFieldEnum = makeEnum({
      id: "id",
      createdAt: "createdAt",
      updatedAt: "updatedAt",
      orderId: "orderId",
      imageUrl: "imageUrl",
      name: "name",
      category: "category"
    });
    exports2.Prisma.SortOrder = makeEnum({
      asc: "asc",
      desc: "desc"
    });
    exports2.Prisma.QueryMode = makeEnum({
      default: "default",
      insensitive: "insensitive"
    });
    exports2.Role = makeEnum({
      ADMIN: "ADMIN",
      RIDER: "RIDER",
      CUSTOMER: "CUSTOMER",
      GUEST: "GUEST"
    });
    exports2.Status = makeEnum({
      PACKAGING: "PACKAGING",
      OUT_FOR_DELIVERY: "OUT_FOR_DELIVERY",
      COMPLETED: "COMPLETED",
      CANCELLED: "CANCELLED"
    });
    exports2.PaymentOption = makeEnum({
      COD: "COD",
      CARD: "CARD",
      GCASH: "GCASH",
      PAYMAYA: "PAYMAYA",
      GRABPAY: "GRABPAY"
    });
    exports2.Category = makeEnum({
      PORK: "PORK",
      CHICKEN: "CHICKEN",
      BEEF: "BEEF"
    });
    exports2.Prisma.ModelName = makeEnum({
      User: "User",
      Address: "Address",
      Order: "Order",
      Product: "Product"
    });
    var compressedDMMF = "";
    var decompressedDMMF = decompressFromBase642(compressedDMMF);
    var dmmf = JSON.parse(decompressedDMMF);
    exports2.Prisma.dmmf = JSON.parse(decompressedDMMF);
    var config = {
      "generator": {
        "name": "client",
        "provider": {
          "fromEnvVar": null,
          "value": "prisma-client-js"
        },
        "output": {
          "value": "/Users/jerichocalibuso/sp-app/node_modules/@prisma/client",
          "fromEnvVar": null
        },
        "config": {
          "engineType": "dataproxy"
        },
        "binaryTargets": [],
        "previewFeatures": [
          "dataProxy"
        ]
      },
      "relativeEnvPaths": {
        "rootEnvPath": "../../../.env",
        "schemaEnvPath": "../../../.env"
      },
      "relativePath": "../../../prisma",
      "clientVersion": "3.10.0",
      "engineVersion": "73e60b76d394f8d37d8ebd1f8918c79029f0db86",
      "datasourceNames": [
        "db"
      ],
      "activeProvider": "postgresql"
    };
    config.document = dmmf;
    config.dirname = dirname;
    config.inlineDatasources = {
      "db": {
        "url": {
          "fromEnvVar": "DATABASE_URL",
          "value": null
        }
      }
    };
    config.inlineSchema = "Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtanMiCiAgcHJldmlld0ZlYXR1cmVzID0gWyJkYXRhUHJveHkiXQp9CgpkYXRhc291cmNlIGRiIHsKICBwcm92aWRlciA9ICJwb3N0Z3Jlc3FsIgogIHVybCAgICAgID0gZW52KCJEQVRBQkFTRV9VUkwiKQp9CgplbnVtIFJvbGUgewogIEFETUlOCiAgUklERVIKICBDVVNUT01FUgogIEdVRVNUCn0KCm1vZGVsIFVzZXIgewogIGlkICAgICAgICAgICAgU3RyaW5nICAgIEBpZCBAZGVmYXVsdCh1dWlkKCkpCiAgY3JlYXRlZEF0ICAgICBEYXRlVGltZSAgQGRlZmF1bHQobm93KCkpCiAgdXBkYXRlZEF0ICAgICBEYXRlVGltZSAgQHVwZGF0ZWRBdAogIHJvbGUgICAgICAgICAgUm9sZQogIHVzZXJuYW1lICAgICAgU3RyaW5nPyAgIEB1bmlxdWUKICBwYXNzd29yZCAgICAgIFN0cmluZz8KICBjb250YWN0TnVtYmVyIFN0cmluZz8KICBuYW1lICAgICAgICAgIFN0cmluZz8KICBhZGRyZXNzZXMgICAgIEFkZHJlc3NbXQogIG9yZGVycyAgICAgICAgT3JkZXJbXQp9Cgptb2RlbCBBZGRyZXNzIHsKICBpZCAgICAgICAgICBTdHJpbmcgICBAaWQgQGRlZmF1bHQodXVpZCgpKQogIGNyZWF0ZWRBdCAgIERhdGVUaW1lIEBkZWZhdWx0KG5vdygpKQogIHVwZGF0ZWRBdCAgIERhdGVUaW1lIEB1cGRhdGVkQXQKICBVc2VyICAgICAgICBVc2VyPyAgICBAcmVsYXRpb24oZmllbGRzOiBbdXNlcklkXSwgcmVmZXJlbmNlczogW2lkXSkKICB1c2VySWQgICAgICBTdHJpbmc/CiAgaG91c2VOdW1iZXIgU3RyaW5nPwogIHN0cmVldE5hbWUgIFN0cmluZz8KICBiYXJhbmdheSAgICBTdHJpbmc/CiAgY2l0eSAgICAgICAgU3RyaW5nPwogIHByb3ZpbmNlICAgIFN0cmluZz8KCn0KCmVudW0gU3RhdHVzIHsKICBQQUNLQUdJTkcKICBPVVRfRk9SX0RFTElWRVJZCiAgQ09NUExFVEVECiAgQ0FOQ0VMTEVECn0KCmVudW0gUGF5bWVudE9wdGlvbiB7CiAgQ09ECiAgQ0FSRAogIEdDQVNICiAgUEFZTUFZQQogIEdSQUJQQVkKfQoKbW9kZWwgT3JkZXIgewogIGlkICAgICAgICAgICAgICAgU3RyaW5nICAgICAgICBAaWQgQGRlZmF1bHQodXVpZCgpKQogIGNyZWF0ZWRBdCAgICAgICAgRGF0ZVRpbWUgICAgICBAZGVmYXVsdChub3coKSkKICB1cGRhdGVkQXQgICAgICAgIERhdGVUaW1lICAgICAgQHVwZGF0ZWRBdAogIFVzZXIgICAgICAgICAgICAgVXNlcj8gICAgICAgICBAcmVsYXRpb24oZmllbGRzOiBbdXNlcklkXSwgcmVmZXJlbmNlczogW2lkXSkKICB1c2VySWQgICAgICAgICAgIFN0cmluZz8KICBhbW91bnQgICAgICAgICAgIEludAogIHN0YXR1cyAgICAgICAgICAgU3RhdHVzCiAgcGF5bWVudE9wdGlvbiAgICBQYXltZW50T3B0aW9uCiAgcGF5bWVudFJlZmVyZW5jZSBTdHJpbmc/CiAgcHJvZHVjdHMgICAgICAgICBQcm9kdWN0W10KCn0KCmVudW0gQ2F0ZWdvcnkgewogIFBPUksKICBDSElDS0VOCiAgQkVFRgp9Cgptb2RlbCBQcm9kdWN0IHsKICBpZCAgICAgICAgU3RyaW5nICAgQGlkIEBkZWZhdWx0KHV1aWQoKSkKICBjcmVhdGVkQXQgRGF0ZVRpbWUgQGRlZmF1bHQobm93KCkpCiAgdXBkYXRlZEF0IERhdGVUaW1lIEB1cGRhdGVkQXQKICBPcmRlciAgICAgT3JkZXI/ICAgQHJlbGF0aW9uKGZpZWxkczogW29yZGVySWRdLCByZWZlcmVuY2VzOiBbaWRdKQogIG9yZGVySWQgICBTdHJpbmc/CiAgaW1hZ2VVcmwgIFN0cmluZz8KICBuYW1lICAgICAgU3RyaW5nICAgQHVuaXF1ZQogIGNhdGVnb3J5ICBDYXRlZ29yeQp9Cg==";
    config.inlineSchemaHash = "ae036c4b672f5da98cb32a74aad5ec62426b8108d5edc5635c55f9ee6ab8931c";
    config.inlineEnv = {
      parsed: {
        DATABASE_URL: typeof globalThis !== "undefined" && globalThis["DATABASE_URL"] || define_process_default.env["DATABASE_URL"] || "postgres://jerichocalibuso@localhost:5432/jerichocalibuso"
      }
    };
    var PrismaClient = getPrismaClient2(config);
    exports2.PrismaClient = PrismaClient;
    Object.assign(exports2, Prisma);
  }
});

// node_modules/@prisma/client/index.js
var require_client2 = __commonJS({
  "node_modules/@prisma/client/index.js"(exports2, module2) {
    init_define_process();
    var prisma = require_client();
    module2.exports = prisma;
  }
});

// node_modules/remix-auth/build/authenticator.js
var require_authenticator = __commonJS({
  "node_modules/remix-auth/build/authenticator.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Authenticator = void 0;
    var server_runtime_1 = require_server_runtime();
    var Authenticator = class {
      constructor(sessionStorage2, options2 = {}) {
        var _a2;
        this.sessionStorage = sessionStorage2;
        this.strategies = new Map();
        this.sessionKey = options2.sessionKey || "user";
        this.sessionErrorKey = options2.sessionErrorKey || "auth:error";
        this.sessionStrategyKey = options2.sessionStrategyKey || "strategy";
        this.throwOnError = (_a2 = options2.throwOnError) !== null && _a2 !== void 0 ? _a2 : false;
      }
      use(strategy, name) {
        this.strategies.set(name !== null && name !== void 0 ? name : strategy.name, strategy);
        return this;
      }
      unuse(name) {
        this.strategies.delete(name);
        return this;
      }
      authenticate(strategy, request2, options2 = {}) {
        const strategyObj = this.strategies.get(strategy);
        if (!strategyObj)
          throw new Error(`Strategy ${strategy} not found.`);
        return strategyObj.authenticate(request2.clone(), this.sessionStorage, {
          throwOnError: this.throwOnError,
          ...options2,
          sessionKey: this.sessionKey,
          sessionErrorKey: this.sessionErrorKey,
          sessionStrategyKey: this.sessionStrategyKey
        });
      }
      async isAuthenticated(request2, options2 = {}) {
        var _a2;
        let session = await this.sessionStorage.getSession(request2.headers.get("Cookie"));
        let user = (_a2 = session.get(this.sessionKey)) !== null && _a2 !== void 0 ? _a2 : null;
        if (user) {
          if (options2.successRedirect)
            throw server_runtime_1.redirect(options2.successRedirect);
          else
            return user;
        }
        if (options2.failureRedirect)
          throw server_runtime_1.redirect(options2.failureRedirect);
        else
          return null;
      }
      async logout(request2, options2) {
        let session = await this.sessionStorage.getSession(request2.headers.get("Cookie"));
        throw server_runtime_1.redirect(options2.redirectTo, {
          headers: {
            "Set-Cookie": await this.sessionStorage.destroySession(session)
          }
        });
      }
    };
    exports2.Authenticator = Authenticator;
  }
});

// node_modules/react/cjs/react-jsx-runtime.development.js
var require_react_jsx_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-runtime.development.js"(exports2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV !== "production") {
      (function() {
        "use strict";
        var React = require_react();
        var _assign = require_object_assign();
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        exports2.Fragment = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          exports2.Fragment = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format, args);
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return "" + item;
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var enableScopeAPI = false;
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === exports2.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
              return true;
            }
          }
          return false;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case exports2.Fragment:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context2 = type;
                return getContextName(context2) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentName(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: _assign({}, props, {
                  value: prevLog
                }),
                info: _assign({}, props, {
                  value: prevInfo
                }),
                warn: _assign({}, props, {
                  value: prevWarn
                }),
                error: _assign({}, props, {
                  value: prevError
                }),
                group: _assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: _assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: _assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location2, componentName, element) {
          {
            var has = Function.call.bind(Object.prototype.hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location2 + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location2, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location2, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location2, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        var didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function warnIfStringRefCannotBeAutoConverted(config, self2) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
              var componentName = getComponentName(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        function defineKeyPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
        }
        function defineRefPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type,
            key,
            ref,
            props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function jsxDEV(type, config, maybeKey, source, self2) {
          {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            if (maybeKey !== void 0) {
              key = "" + maybeKey;
            }
            if (hasValidKey(config)) {
              key = "" + config.key;
            }
            if (hasValidRef(config)) {
              ref = config.ref;
              warnIfStringRefCannotBeAutoConverted(config, self2);
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
            if (type && type.defaultProps) {
              var defaultProps = type.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
            return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function isValidElement(object) {
          {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
        }
        function getDeclarationErrorAddendum() {
          {
            if (ReactCurrentOwner$1.current) {
              var name = getComponentName(ReactCurrentOwner$1.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
        }
        function getSourceInfoErrorAddendum(source) {
          {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
        }
        function validateExplicitKey(element, parentType) {
          {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
              childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          {
            if (typeof node !== "object") {
              return;
            }
            if (Array.isArray(node)) {
              for (var i = 0; i < node.length; i++) {
                var child = node[i];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentName(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentName(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
          {
            var validType = isValidElementType(type);
            if (!validType) {
              var info = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendum(source);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (Array.isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentName(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
            var element = jsxDEV(type, props, key, source, self2);
            if (element == null) {
              return element;
            }
            if (validType) {
              var children = props.children;
              if (children !== void 0) {
                if (isStaticChildren) {
                  if (Array.isArray(children)) {
                    for (var i = 0; i < children.length; i++) {
                      validateChildKeys(children[i], type);
                    }
                    if (Object.freeze) {
                      Object.freeze(children);
                    }
                  } else {
                    error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                  }
                } else {
                  validateChildKeys(children, type);
                }
              }
            }
            if (type === exports2.Fragment) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
        }
        function jsxWithValidationStatic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, true);
          }
        }
        function jsxWithValidationDynamic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, false);
          }
        }
        var jsx = jsxWithValidationDynamic;
        var jsxs = jsxWithValidationStatic;
        exports2.jsx = jsx;
        exports2.jsxs = jsxs;
      })();
    }
  }
});

// node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/react/jsx-runtime.js"(exports2, module2) {
    init_define_process();
    "use strict";
    if (define_process_default.env.NODE_ENV === "production") {
      module2.exports = __require("./cjs/react-jsx-runtime.production.min.js");
    } else {
      module2.exports = require_react_jsx_runtime_development();
    }
  }
});

// node_modules/remix-utils/browser/react/use-hydrated.js
function useHydrated() {
  let [hydrated, setHydrated] = (0, import_react.useState)(() => !hydrating);
  (0, import_react.useEffect)(function hydrate() {
    hydrating = false;
    setHydrated(true);
  }, []);
  return hydrated;
}
var import_react, hydrating;
var init_use_hydrated = __esm({
  "node_modules/remix-utils/browser/react/use-hydrated.js"() {
    init_define_process();
    import_react = __toModule(require_react());
    hydrating = true;
  }
});

// node_modules/remix-utils/browser/react/client-only.js
function ClientOnly({ children, fallback = null }) {
  return useHydrated() ? (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children }, void 0) : (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: fallback }, void 0);
}
var import_jsx_runtime;
var init_client_only = __esm({
  "node_modules/remix-utils/browser/react/client-only.js"() {
    init_define_process();
    import_jsx_runtime = __toModule(require_jsx_runtime());
    init_use_hydrated();
  }
});

// node_modules/remix-utils/browser/react/csrf.js
function AuthenticityTokenProvider({ children, token }) {
  return (0, import_jsx_runtime2.jsx)(context.Provider, Object.assign({ value: token }, { children }), void 0);
}
function useAuthenticityToken() {
  let token = (0, import_react2.useContext)(context);
  if (!token)
    throw new Error("Missing AuthenticityTokenProvider.");
  return token;
}
function AuthenticityTokenInput({ name = "csrf" }) {
  let token = useAuthenticityToken();
  return (0, import_jsx_runtime2.jsx)("input", { type: "hidden", value: token, name }, void 0);
}
var import_jsx_runtime2, import_react2, context;
var init_csrf = __esm({
  "node_modules/remix-utils/browser/react/csrf.js"() {
    init_define_process();
    import_jsx_runtime2 = __toModule(require_jsx_runtime());
    import_react2 = __toModule(require_react());
    context = (0, import_react2.createContext)(null);
  }
});

// node_modules/remix-utils/browser/react/dynamic-links.js
function DynamicLinks() {
  let links = (0, import_react4.useMatches)().flatMap((match) => {
    var _a2;
    let fn2 = (_a2 = match.handle) === null || _a2 === void 0 ? void 0 : _a2.dynamicLinks;
    if (typeof fn2 !== "function")
      return [];
    return fn2({ data: match.data });
  });
  return (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children: links.map((link) => (0, import_react3.createElement)("link", Object.assign({}, link, { key: link.integrity || JSON.stringify(link) }))) }, void 0);
}
var import_jsx_runtime3, import_react3, import_react4;
var init_dynamic_links = __esm({
  "node_modules/remix-utils/browser/react/dynamic-links.js"() {
    init_define_process();
    import_jsx_runtime3 = __toModule(require_jsx_runtime());
    import_react3 = __toModule(require_react());
    import_react4 = __toModule(require_react2());
  }
});

// node_modules/remix-utils/browser/react/external-scripts.js
function ExternalScripts() {
  let matches = (0, import_react6.useMatches)();
  let scripts = matches.flatMap((match) => {
    var _a2;
    let scripts2 = (_a2 = match.handle) === null || _a2 === void 0 ? void 0 : _a2.scripts;
    if (typeof scripts2 === "function")
      return scripts2();
    return [];
  });
  return (0, import_jsx_runtime4.jsxs)(import_jsx_runtime4.Fragment, { children: [
    scripts.map((props) => {
      let rel = props.noModule ? "modulepreload" : "preload";
      let as2 = !props.noModule ? "script" : void 0;
      return (0, import_jsx_runtime4.jsx)("link", { rel, href: props.src, as: as2, crossOrigin: props.crossOrigin, integrity: props.integrity, referrerPolicy: props.referrerPolicy }, props.src);
    }),
    scripts.map((props) => {
      return (0, import_react5.createElement)("script", Object.assign({}, props, { key: props.src }));
    })
  ] }, void 0);
}
var import_react5, import_jsx_runtime4, import_react6;
var init_external_scripts = __esm({
  "node_modules/remix-utils/browser/react/external-scripts.js"() {
    init_define_process();
    import_react5 = __toModule(require_react());
    import_jsx_runtime4 = __toModule(require_jsx_runtime());
    import_react6 = __toModule(require_react2());
  }
});

// node_modules/remix-utils/browser/react/outlet.js
function Outlet({ data }) {
  return (0, import_jsx_runtime5.jsx)(import_react7.Outlet, { context: data }, void 0);
}
function useParentData() {
  let parentData = (0, import_react7.useOutletContext)();
  if (!parentData)
    throw new Error("Missing parent data.");
  return parentData;
}
var import_jsx_runtime5, import_react7;
var init_outlet = __esm({
  "node_modules/remix-utils/browser/react/outlet.js"() {
    init_define_process();
    import_jsx_runtime5 = __toModule(require_jsx_runtime());
    import_react7 = __toModule(require_react2());
  }
});

// node_modules/remix-utils/browser/react/revalidate-link.js
function RevalidateLink(props) {
  return (0, import_jsx_runtime6.jsx)(import_react8.Link, Object.assign({ to: "." }, props), void 0);
}
var import_jsx_runtime6, import_react8;
var init_revalidate_link = __esm({
  "node_modules/remix-utils/browser/react/revalidate-link.js"() {
    init_define_process();
    import_jsx_runtime6 = __toModule(require_jsx_runtime());
    import_react8 = __toModule(require_react2());
  }
});

// node_modules/remix-utils/browser/react/use-revalidate.js
function useRevalidate() {
  let navigate = (0, import_react_router_dom.useNavigate)();
  return (0, import_react9.useCallback)(() => {
    navigate(".", { replace: true });
  }, [navigate]);
}
var import_react9, import_react_router_dom;
var init_use_revalidate = __esm({
  "node_modules/remix-utils/browser/react/use-revalidate.js"() {
    init_define_process();
    import_react9 = __toModule(require_react());
    import_react_router_dom = __toModule(require_main3());
  }
});

// node_modules/remix-utils/browser/react/use-route-data.js
function useRouteData(route) {
  var _a2;
  return (_a2 = (0, import_react10.useMatches)().find((match) => {
    var _a3;
    return ((_a3 = match.handle) === null || _a3 === void 0 ? void 0 : _a3.id) === route || match.pathname === route;
  })) === null || _a2 === void 0 ? void 0 : _a2.data;
}
var import_react10;
var init_use_route_data = __esm({
  "node_modules/remix-utils/browser/react/use-route-data.js"() {
    init_define_process();
    import_react10 = __toModule(require_react2());
  }
});

// node_modules/remix-utils/browser/react/use-should-hydrate.js
function useShouldHydrate() {
  return (0, import_react11.useMatches)().some((match) => {
    if (!match.handle)
      return false;
    let { handle, data } = match;
    if (typeof handle !== "object")
      return false;
    if (handle === null)
      return false;
    if (Array.isArray(handle))
      return false;
    let hydrate = handle.hydrate;
    if (!hydrate)
      return false;
    if (typeof hydrate === "function")
      return hydrate(data);
    return hydrate;
  });
}
var import_react11;
var init_use_should_hydrate = __esm({
  "node_modules/remix-utils/browser/react/use-should-hydrate.js"() {
    init_define_process();
    import_react11 = __toModule(require_react2());
  }
});

// node_modules/remix-utils/browser/react.js
var init_react = __esm({
  "node_modules/remix-utils/browser/react.js"() {
    init_define_process();
    init_client_only();
    init_csrf();
    init_dynamic_links();
    init_external_scripts();
    init_outlet();
    init_revalidate_link();
    init_use_hydrated();
    init_use_revalidate();
    init_use_route_data();
    init_use_should_hydrate();
  }
});

// node_modules/remix-utils/browser/server/body-parser.js
var bodyParser;
var init_body_parser = __esm({
  "node_modules/remix-utils/browser/server/body-parser.js"() {
    init_define_process();
    bodyParser = {
      async toString(request2) {
        return request2.text();
      },
      async toSearchParams(request2) {
        let body = await this.toString(request2);
        return new URLSearchParams(body);
      },
      async toJSON(request2) {
        if (request2.headers.get("Content-Type") === "application/json") {
          return request2.json();
        }
        let params = await this.toSearchParams(request2);
        return Object.fromEntries(params.entries());
      }
    };
  }
});

// node_modules/uuid/dist/esm-browser/rng.js
function rng() {
  if (!getRandomValues) {
    getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== "undefined" && typeof msCrypto.getRandomValues === "function" && msCrypto.getRandomValues.bind(msCrypto);
    if (!getRandomValues) {
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    }
  }
  return getRandomValues(rnds8);
}
var getRandomValues, rnds8;
var init_rng = __esm({
  "node_modules/uuid/dist/esm-browser/rng.js"() {
    init_define_process();
    rnds8 = new Uint8Array(16);
  }
});

// node_modules/uuid/dist/esm-browser/regex.js
var regex_default;
var init_regex = __esm({
  "node_modules/uuid/dist/esm-browser/regex.js"() {
    init_define_process();
    regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
  }
});

// node_modules/uuid/dist/esm-browser/validate.js
function validate(uuid) {
  return typeof uuid === "string" && regex_default.test(uuid);
}
var validate_default;
var init_validate = __esm({
  "node_modules/uuid/dist/esm-browser/validate.js"() {
    init_define_process();
    init_regex();
    validate_default = validate;
  }
});

// node_modules/uuid/dist/esm-browser/stringify.js
function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
  if (!validate_default(uuid)) {
    throw TypeError("Stringified UUID is invalid");
  }
  return uuid;
}
var byteToHex, i, stringify_default;
var init_stringify = __esm({
  "node_modules/uuid/dist/esm-browser/stringify.js"() {
    init_define_process();
    init_validate();
    byteToHex = [];
    for (i = 0; i < 256; ++i) {
      byteToHex.push((i + 256).toString(16).substr(1));
    }
    stringify_default = stringify;
  }
});

// node_modules/uuid/dist/esm-browser/v4.js
function v4(options2, buf, offset) {
  options2 = options2 || {};
  var rnds = options2.random || (options2.rng || rng)();
  rnds[6] = rnds[6] & 15 | 64;
  rnds[8] = rnds[8] & 63 | 128;
  if (buf) {
    offset = offset || 0;
    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }
    return buf;
  }
  return stringify_default(rnds);
}
var v4_default;
var init_v4 = __esm({
  "node_modules/uuid/dist/esm-browser/v4.js"() {
    init_define_process();
    init_rng();
    init_stringify();
    v4_default = v4;
  }
});

// node_modules/uuid/dist/esm-browser/index.js
var init_esm_browser = __esm({
  "node_modules/uuid/dist/esm-browser/index.js"() {
    init_define_process();
    init_v4();
  }
});

// node_modules/remix-utils/browser/server/responses.js
function json(data, init) {
  return (0, import_server_runtime.json)(data, init);
}
function redirectBack(request2, { fallback, ...init }) {
  var _a2;
  return (0, import_server_runtime.redirect)((_a2 = request2.headers.get("Referer")) !== null && _a2 !== void 0 ? _a2 : fallback, init);
}
function badRequest(data, init) {
  return json(data, { ...init, status: 400 });
}
function unauthorized(data, init) {
  return json(data, { ...init, status: 401 });
}
function forbidden(data, init) {
  return json(data, { ...init, status: 403 });
}
function notFound(data, init) {
  return json(data, { ...init, status: 404 });
}
function unprocessableEntity(data, init) {
  return json(data, { ...init, status: 422 });
}
function serverError(data, init) {
  return json(data, { ...init, status: 500 });
}
function notModified(init) {
  return new Response("", { ...init, status: 304 });
}
function javascript(content, init = {}) {
  let responseInit = typeof init === "number" ? { status: init } : init;
  let headers = new Headers(responseInit.headers);
  if (!headers.has("Content-Type")) {
    headers.set("Content-Type", "application/javascript; charset=utf-8");
  }
  return new Response(content, {
    ...responseInit,
    headers
  });
}
function stylesheet(content, init = {}) {
  let responseInit = typeof init === "number" ? { status: init } : init;
  let headers = new Headers(responseInit.headers);
  if (!headers.has("Content-Type")) {
    headers.set("Content-Type", "text/css; charset=utf-8");
  }
  return new Response(content, {
    ...responseInit,
    headers
  });
}
function pdf(content, init = {}) {
  let responseInit = typeof init === "number" ? { status: init } : init;
  let headers = new Headers(responseInit.headers);
  if (!headers.has("Content-Type")) {
    headers.set("Content-Type", "application/pdf");
  }
  return new Response(content, {
    ...responseInit,
    headers
  });
}
function html(content, init = {}) {
  let responseInit = typeof init === "number" ? { status: init } : init;
  let headers = new Headers(responseInit.headers);
  if (!headers.has("Content-Type")) {
    headers.set("Content-Type", "text/html; charset=utf-8");
  }
  return new Response(content, {
    ...responseInit,
    headers
  });
}
var import_server_runtime;
var init_responses = __esm({
  "node_modules/remix-utils/browser/server/responses.js"() {
    init_define_process();
    import_server_runtime = __toModule(require_server_runtime());
  }
});

// node_modules/remix-utils/browser/server/csrf.js
function createAuthenticityToken(session, sessionKey = "csrf") {
  let token = v4_default();
  session.set(sessionKey, token);
  return token;
}
async function verifyAuthenticityToken(request2, session, sessionKey = "csrf") {
  let formData = await request2.clone().formData();
  if (!session.has(sessionKey)) {
    throw unprocessableEntity({
      message: "Can't find CSRF token in session."
    });
  }
  if (!formData.get(sessionKey)) {
    throw unprocessableEntity({
      message: "Can't find CSRF token in body."
    });
  }
  if (formData.get(sessionKey) !== session.get(sessionKey)) {
    throw unprocessableEntity({
      message: "Can't verify CSRF token authenticity."
    });
  }
}
var init_csrf2 = __esm({
  "node_modules/remix-utils/browser/server/csrf.js"() {
    init_define_process();
    init_esm_browser();
    init_responses();
  }
});

// node_modules/remix-utils/browser/server.js
var init_server = __esm({
  "node_modules/remix-utils/browser/server.js"() {
    init_define_process();
    init_body_parser();
    init_csrf2();
    init_responses();
  }
});

// node_modules/remix-utils/browser/index.js
var browser_exports = {};
__export(browser_exports, {
  AuthenticityTokenInput: () => AuthenticityTokenInput,
  AuthenticityTokenProvider: () => AuthenticityTokenProvider,
  ClientOnly: () => ClientOnly,
  DynamicLinks: () => DynamicLinks,
  ExternalScripts: () => ExternalScripts,
  Outlet: () => Outlet,
  RevalidateLink: () => RevalidateLink,
  badRequest: () => badRequest,
  bodyParser: () => bodyParser,
  createAuthenticityToken: () => createAuthenticityToken,
  forbidden: () => forbidden,
  html: () => html,
  javascript: () => javascript,
  json: () => json,
  notFound: () => notFound,
  notModified: () => notModified,
  pdf: () => pdf,
  redirectBack: () => redirectBack,
  serverError: () => serverError,
  stylesheet: () => stylesheet,
  unauthorized: () => unauthorized,
  unprocessableEntity: () => unprocessableEntity,
  useAuthenticityToken: () => useAuthenticityToken,
  useHydrated: () => useHydrated,
  useParentData: () => useParentData,
  useRevalidate: () => useRevalidate,
  useRouteData: () => useRouteData,
  useShouldHydrate: () => useShouldHydrate,
  verifyAuthenticityToken: () => verifyAuthenticityToken
});
var init_browser = __esm({
  "node_modules/remix-utils/browser/index.js"() {
    init_define_process();
    init_react();
    init_server();
  }
});

// node_modules/remix-auth/build/authorizer.js
var require_authorizer = __commonJS({
  "node_modules/remix-auth/build/authorizer.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Authorizer = void 0;
    var server_runtime_1 = require_server_runtime();
    var remix_utils_1 = (init_browser(), browser_exports);
    var Authorizer = class {
      constructor(authenticator, rules = []) {
        this.authenticator = authenticator;
        this.rules = rules;
      }
      async authorize(args, { failureRedirect, raise = "response", rules = [] } = {}) {
        let user = await this.authenticator.isAuthenticated(args.request);
        if (!user) {
          if (raise === "response") {
            throw remix_utils_1.unauthorized({ message: "Not authenticated." });
          }
          if (raise === "redirect") {
            throw server_runtime_1.redirect(failureRedirect);
          }
          throw new Error("Not authenticated.");
        }
        for (let rule of [...this.rules, ...rules]) {
          if (await rule({ user, ...args }))
            continue;
          if (raise === "redirect")
            throw server_runtime_1.redirect(failureRedirect);
          if (raise === "response") {
            if (!rule.name)
              throw remix_utils_1.forbidden({ message: "Forbidden" });
            throw remix_utils_1.forbidden({ message: `Forbidden by policy ${rule.name}` });
          }
          if (!rule.name)
            throw new Error("Forbidden.");
          throw new Error(`Forbidden by policy ${rule.name}`);
        }
        return user;
      }
    };
    exports2.Authorizer = Authorizer;
  }
});

// node_modules/remix-auth/build/error.js
var require_error = __commonJS({
  "node_modules/remix-auth/build/error.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.AuthorizationError = void 0;
    var AuthorizationError = class extends Error {
    };
    exports2.AuthorizationError = AuthorizationError;
  }
});

// node_modules/remix-auth/build/strategy.js
var require_strategy = __commonJS({
  "node_modules/remix-auth/build/strategy.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Strategy = void 0;
    var server_runtime_1 = require_server_runtime();
    var error_1 = require_error();
    var Strategy = class {
      constructor(verify) {
        this.verify = verify;
      }
      async failure(message, request2, sessionStorage2, options2) {
        if (!options2.failureRedirect) {
          if (options2.throwOnError)
            throw new error_1.AuthorizationError(message);
          throw server_runtime_1.json({ message }, 401);
        }
        let session = await sessionStorage2.getSession(request2.headers.get("Cookie"));
        session.flash(options2.sessionErrorKey || "auth:error", { message });
        throw server_runtime_1.redirect(options2.failureRedirect, {
          headers: { "Set-Cookie": await sessionStorage2.commitSession(session) }
        });
      }
      async success(user, request2, sessionStorage2, options2) {
        if (!options2.successRedirect)
          return user;
        let session = await sessionStorage2.getSession(request2.headers.get("Cookie"));
        session.set(options2.sessionKey, user);
        session.set(options2.sessionStrategyKey || "strategy", this.name);
        throw server_runtime_1.redirect(options2.successRedirect, {
          headers: { "Set-Cookie": await sessionStorage2.commitSession(session) }
        });
      }
    };
    exports2.Strategy = Strategy;
  }
});

// node_modules/remix-auth/build/index.js
var require_build = __commonJS({
  "node_modules/remix-auth/build/index.js"(exports2) {
    init_define_process();
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? function(o, m, k2, k22) {
      if (k22 === void 0)
        k22 = k2;
      Object.defineProperty(o, k22, { enumerable: true, get: function() {
        return m[k2];
      } });
    } : function(o, m, k2, k22) {
      if (k22 === void 0)
        k22 = k2;
      o[k22] = m[k2];
    });
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p))
          __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    __exportStar(require_authenticator(), exports2);
    __exportStar(require_authorizer(), exports2);
    __exportStar(require_error(), exports2);
    __exportStar(require_strategy(), exports2);
  }
});

// node_modules/remix-auth-form/build/index.js
var require_build2 = __commonJS({
  "node_modules/remix-auth-form/build/index.js"(exports2) {
    init_define_process();
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.FormStrategy = void 0;
    var remix_auth_1 = require_build();
    var FormStrategy = class extends remix_auth_1.Strategy {
      constructor() {
        super(...arguments);
        this.name = "form";
      }
      async authenticate(request2, sessionStorage2, options2) {
        let form = await request2.formData();
        let user;
        try {
          user = await this.verify({ form, context: options2.context });
        } catch (error) {
          let message = error.message;
          return await this.failure(message, request2, sessionStorage2, options2);
        }
        return this.success(user, request2, sessionStorage2, options2);
      }
    };
    exports2.FormStrategy = FormStrategy;
  }
});

// node-modules-polyfills:crypto
var crypto_exports = {};
__export(crypto_exports, {
  default: () => crypto_default
});
var crypto_default;
var init_crypto = __esm({
  "node-modules-polyfills:crypto"() {
    init_define_process();
    crypto_default = {};
  }
});

// node-modules-polyfills-commonjs:crypto
var require_crypto = __commonJS({
  "node-modules-polyfills-commonjs:crypto"(exports2, module2) {
    init_define_process();
    var polyfill = (init_crypto(), crypto_exports);
    if (polyfill && polyfill.default) {
      module2.exports = polyfill.default;
      for (let k2 in polyfill) {
        module2.exports[k2] = polyfill[k2];
      }
    } else if (polyfill) {
      module2.exports = polyfill;
    }
  }
});

// node_modules/bcryptjs/dist/bcrypt.js
var require_bcrypt = __commonJS({
  "node_modules/bcryptjs/dist/bcrypt.js"(exports2, module2) {
    init_define_process();
    (function(global2, factory) {
      if (typeof define === "function" && define["amd"])
        define([], factory);
      else if (typeof __require === "function" && typeof module2 === "object" && module2 && module2["exports"])
        module2["exports"] = factory();
      else
        (global2["dcodeIO"] = global2["dcodeIO"] || {})["bcrypt"] = factory();
    })(exports2, function() {
      "use strict";
      var bcrypt = {};
      var randomFallback = null;
      function random(len) {
        if (typeof module2 !== "undefined" && module2 && module2["exports"])
          try {
            return require_crypto()["randomBytes"](len);
          } catch (e2) {
          }
        try {
          var a;
          (self["crypto"] || self["msCrypto"])["getRandomValues"](a = new Uint32Array(len));
          return Array.prototype.slice.call(a);
        } catch (e2) {
        }
        if (!randomFallback)
          throw Error("Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative");
        return randomFallback(len);
      }
      var randomAvailable = false;
      try {
        random(1);
        randomAvailable = true;
      } catch (e2) {
      }
      randomFallback = null;
      bcrypt.setRandomFallback = function(random2) {
        randomFallback = random2;
      };
      bcrypt.genSaltSync = function(rounds, seed_length) {
        rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;
        if (typeof rounds !== "number")
          throw Error("Illegal arguments: " + typeof rounds + ", " + typeof seed_length);
        if (rounds < 4)
          rounds = 4;
        else if (rounds > 31)
          rounds = 31;
        var salt = [];
        salt.push("$2a$");
        if (rounds < 10)
          salt.push("0");
        salt.push(rounds.toString());
        salt.push("$");
        salt.push(base64_encode(random(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN));
        return salt.join("");
      };
      bcrypt.genSalt = function(rounds, seed_length, callback) {
        if (typeof seed_length === "function")
          callback = seed_length, seed_length = void 0;
        if (typeof rounds === "function")
          callback = rounds, rounds = void 0;
        if (typeof rounds === "undefined")
          rounds = GENSALT_DEFAULT_LOG2_ROUNDS;
        else if (typeof rounds !== "number")
          throw Error("illegal arguments: " + typeof rounds);
        function _async(callback2) {
          nextTick(function() {
            try {
              callback2(null, bcrypt.genSaltSync(rounds));
            } catch (err) {
              callback2(err);
            }
          });
        }
        if (callback) {
          if (typeof callback !== "function")
            throw Error("Illegal callback: " + typeof callback);
          _async(callback);
        } else
          return new Promise(function(resolve2, reject2) {
            _async(function(err, res) {
              if (err) {
                reject2(err);
                return;
              }
              resolve2(res);
            });
          });
      };
      bcrypt.hashSync = function(s, salt) {
        if (typeof salt === "undefined")
          salt = GENSALT_DEFAULT_LOG2_ROUNDS;
        if (typeof salt === "number")
          salt = bcrypt.genSaltSync(salt);
        if (typeof s !== "string" || typeof salt !== "string")
          throw Error("Illegal arguments: " + typeof s + ", " + typeof salt);
        return _hash(s, salt);
      };
      bcrypt.hash = function(s, salt, callback, progressCallback) {
        function _async(callback2) {
          if (typeof s === "string" && typeof salt === "number")
            bcrypt.genSalt(salt, function(err, salt2) {
              _hash(s, salt2, callback2, progressCallback);
            });
          else if (typeof s === "string" && typeof salt === "string")
            _hash(s, salt, callback2, progressCallback);
          else
            nextTick(callback2.bind(this, Error("Illegal arguments: " + typeof s + ", " + typeof salt)));
        }
        if (callback) {
          if (typeof callback !== "function")
            throw Error("Illegal callback: " + typeof callback);
          _async(callback);
        } else
          return new Promise(function(resolve2, reject2) {
            _async(function(err, res) {
              if (err) {
                reject2(err);
                return;
              }
              resolve2(res);
            });
          });
      };
      function safeStringCompare(known, unknown) {
        var right = 0, wrong = 0;
        for (var i = 0, k2 = known.length; i < k2; ++i) {
          if (known.charCodeAt(i) === unknown.charCodeAt(i))
            ++right;
          else
            ++wrong;
        }
        if (right < 0)
          return false;
        return wrong === 0;
      }
      bcrypt.compareSync = function(s, hash) {
        if (typeof s !== "string" || typeof hash !== "string")
          throw Error("Illegal arguments: " + typeof s + ", " + typeof hash);
        if (hash.length !== 60)
          return false;
        return safeStringCompare(bcrypt.hashSync(s, hash.substr(0, hash.length - 31)), hash);
      };
      bcrypt.compare = function(s, hash, callback, progressCallback) {
        function _async(callback2) {
          if (typeof s !== "string" || typeof hash !== "string") {
            nextTick(callback2.bind(this, Error("Illegal arguments: " + typeof s + ", " + typeof hash)));
            return;
          }
          if (hash.length !== 60) {
            nextTick(callback2.bind(this, null, false));
            return;
          }
          bcrypt.hash(s, hash.substr(0, 29), function(err, comp) {
            if (err)
              callback2(err);
            else
              callback2(null, safeStringCompare(comp, hash));
          }, progressCallback);
        }
        if (callback) {
          if (typeof callback !== "function")
            throw Error("Illegal callback: " + typeof callback);
          _async(callback);
        } else
          return new Promise(function(resolve2, reject2) {
            _async(function(err, res) {
              if (err) {
                reject2(err);
                return;
              }
              resolve2(res);
            });
          });
      };
      bcrypt.getRounds = function(hash) {
        if (typeof hash !== "string")
          throw Error("Illegal arguments: " + typeof hash);
        return parseInt(hash.split("$")[2], 10);
      };
      bcrypt.getSalt = function(hash) {
        if (typeof hash !== "string")
          throw Error("Illegal arguments: " + typeof hash);
        if (hash.length !== 60)
          throw Error("Illegal hash length: " + hash.length + " != 60");
        return hash.substring(0, 29);
      };
      var nextTick = typeof define_process_default !== "undefined" && define_process_default && typeof define_process_default.nextTick === "function" ? typeof setImmediate === "function" ? setImmediate : define_process_default.nextTick : setTimeout;
      function stringToBytes(str) {
        var out = [], i = 0;
        utfx.encodeUTF16toUTF8(function() {
          if (i >= str.length)
            return null;
          return str.charCodeAt(i++);
        }, function(b) {
          out.push(b);
        });
        return out;
      }
      var BASE64_CODE = "./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split("");
      var BASE64_INDEX = [
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        0,
        1,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        -1,
        -1,
        -1,
        -1,
        -1
      ];
      var stringFromCharCode = String.fromCharCode;
      function base64_encode(b, len) {
        var off = 0, rs2 = [], c1, c2;
        if (len <= 0 || len > b.length)
          throw Error("Illegal len: " + len);
        while (off < len) {
          c1 = b[off++] & 255;
          rs2.push(BASE64_CODE[c1 >> 2 & 63]);
          c1 = (c1 & 3) << 4;
          if (off >= len) {
            rs2.push(BASE64_CODE[c1 & 63]);
            break;
          }
          c2 = b[off++] & 255;
          c1 |= c2 >> 4 & 15;
          rs2.push(BASE64_CODE[c1 & 63]);
          c1 = (c2 & 15) << 2;
          if (off >= len) {
            rs2.push(BASE64_CODE[c1 & 63]);
            break;
          }
          c2 = b[off++] & 255;
          c1 |= c2 >> 6 & 3;
          rs2.push(BASE64_CODE[c1 & 63]);
          rs2.push(BASE64_CODE[c2 & 63]);
        }
        return rs2.join("");
      }
      function base64_decode(s, len) {
        var off = 0, slen = s.length, olen = 0, rs2 = [], c1, c2, c3, c4, o, code;
        if (len <= 0)
          throw Error("Illegal len: " + len);
        while (off < slen - 1 && olen < len) {
          code = s.charCodeAt(off++);
          c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
          code = s.charCodeAt(off++);
          c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
          if (c1 == -1 || c2 == -1)
            break;
          o = c1 << 2 >>> 0;
          o |= (c2 & 48) >> 4;
          rs2.push(stringFromCharCode(o));
          if (++olen >= len || off >= slen)
            break;
          code = s.charCodeAt(off++);
          c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
          if (c3 == -1)
            break;
          o = (c2 & 15) << 4 >>> 0;
          o |= (c3 & 60) >> 2;
          rs2.push(stringFromCharCode(o));
          if (++olen >= len || off >= slen)
            break;
          code = s.charCodeAt(off++);
          c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;
          o = (c3 & 3) << 6 >>> 0;
          o |= c4;
          rs2.push(stringFromCharCode(o));
          ++olen;
        }
        var res = [];
        for (off = 0; off < olen; off++)
          res.push(rs2[off].charCodeAt(0));
        return res;
      }
      var utfx = function() {
        "use strict";
        var utfx2 = {};
        utfx2.MAX_CODEPOINT = 1114111;
        utfx2.encodeUTF8 = function(src, dst) {
          var cp = null;
          if (typeof src === "number")
            cp = src, src = function() {
              return null;
            };
          while (cp !== null || (cp = src()) !== null) {
            if (cp < 128)
              dst(cp & 127);
            else if (cp < 2048)
              dst(cp >> 6 & 31 | 192), dst(cp & 63 | 128);
            else if (cp < 65536)
              dst(cp >> 12 & 15 | 224), dst(cp >> 6 & 63 | 128), dst(cp & 63 | 128);
            else
              dst(cp >> 18 & 7 | 240), dst(cp >> 12 & 63 | 128), dst(cp >> 6 & 63 | 128), dst(cp & 63 | 128);
            cp = null;
          }
        };
        utfx2.decodeUTF8 = function(src, dst) {
          var a, b, c, d2, fail = function(b2) {
            b2 = b2.slice(0, b2.indexOf(null));
            var err = Error(b2.toString());
            err.name = "TruncatedError";
            err["bytes"] = b2;
            throw err;
          };
          while ((a = src()) !== null) {
            if ((a & 128) === 0)
              dst(a);
            else if ((a & 224) === 192)
              (b = src()) === null && fail([a, b]), dst((a & 31) << 6 | b & 63);
            else if ((a & 240) === 224)
              ((b = src()) === null || (c = src()) === null) && fail([a, b, c]), dst((a & 15) << 12 | (b & 63) << 6 | c & 63);
            else if ((a & 248) === 240)
              ((b = src()) === null || (c = src()) === null || (d2 = src()) === null) && fail([a, b, c, d2]), dst((a & 7) << 18 | (b & 63) << 12 | (c & 63) << 6 | d2 & 63);
            else
              throw RangeError("Illegal starting byte: " + a);
          }
        };
        utfx2.UTF16toUTF8 = function(src, dst) {
          var c1, c2 = null;
          while (true) {
            if ((c1 = c2 !== null ? c2 : src()) === null)
              break;
            if (c1 >= 55296 && c1 <= 57343) {
              if ((c2 = src()) !== null) {
                if (c2 >= 56320 && c2 <= 57343) {
                  dst((c1 - 55296) * 1024 + c2 - 56320 + 65536);
                  c2 = null;
                  continue;
                }
              }
            }
            dst(c1);
          }
          if (c2 !== null)
            dst(c2);
        };
        utfx2.UTF8toUTF16 = function(src, dst) {
          var cp = null;
          if (typeof src === "number")
            cp = src, src = function() {
              return null;
            };
          while (cp !== null || (cp = src()) !== null) {
            if (cp <= 65535)
              dst(cp);
            else
              cp -= 65536, dst((cp >> 10) + 55296), dst(cp % 1024 + 56320);
            cp = null;
          }
        };
        utfx2.encodeUTF16toUTF8 = function(src, dst) {
          utfx2.UTF16toUTF8(src, function(cp) {
            utfx2.encodeUTF8(cp, dst);
          });
        };
        utfx2.decodeUTF8toUTF16 = function(src, dst) {
          utfx2.decodeUTF8(src, function(cp) {
            utfx2.UTF8toUTF16(cp, dst);
          });
        };
        utfx2.calculateCodePoint = function(cp) {
          return cp < 128 ? 1 : cp < 2048 ? 2 : cp < 65536 ? 3 : 4;
        };
        utfx2.calculateUTF8 = function(src) {
          var cp, l = 0;
          while ((cp = src()) !== null)
            l += utfx2.calculateCodePoint(cp);
          return l;
        };
        utfx2.calculateUTF16asUTF8 = function(src) {
          var n = 0, l = 0;
          utfx2.UTF16toUTF8(src, function(cp) {
            ++n;
            l += utfx2.calculateCodePoint(cp);
          });
          return [n, l];
        };
        return utfx2;
      }();
      Date.now = Date.now || function() {
        return +new Date();
      };
      var BCRYPT_SALT_LEN = 16;
      var GENSALT_DEFAULT_LOG2_ROUNDS = 10;
      var BLOWFISH_NUM_ROUNDS = 16;
      var MAX_EXECUTION_TIME = 100;
      var P_ORIG = [
        608135816,
        2242054355,
        320440878,
        57701188,
        2752067618,
        698298832,
        137296536,
        3964562569,
        1160258022,
        953160567,
        3193202383,
        887688300,
        3232508343,
        3380367581,
        1065670069,
        3041331479,
        2450970073,
        2306472731
      ];
      var S_ORIG = [
        3509652390,
        2564797868,
        805139163,
        3491422135,
        3101798381,
        1780907670,
        3128725573,
        4046225305,
        614570311,
        3012652279,
        134345442,
        2240740374,
        1667834072,
        1901547113,
        2757295779,
        4103290238,
        227898511,
        1921955416,
        1904987480,
        2182433518,
        2069144605,
        3260701109,
        2620446009,
        720527379,
        3318853667,
        677414384,
        3393288472,
        3101374703,
        2390351024,
        1614419982,
        1822297739,
        2954791486,
        3608508353,
        3174124327,
        2024746970,
        1432378464,
        3864339955,
        2857741204,
        1464375394,
        1676153920,
        1439316330,
        715854006,
        3033291828,
        289532110,
        2706671279,
        2087905683,
        3018724369,
        1668267050,
        732546397,
        1947742710,
        3462151702,
        2609353502,
        2950085171,
        1814351708,
        2050118529,
        680887927,
        999245976,
        1800124847,
        3300911131,
        1713906067,
        1641548236,
        4213287313,
        1216130144,
        1575780402,
        4018429277,
        3917837745,
        3693486850,
        3949271944,
        596196993,
        3549867205,
        258830323,
        2213823033,
        772490370,
        2760122372,
        1774776394,
        2652871518,
        566650946,
        4142492826,
        1728879713,
        2882767088,
        1783734482,
        3629395816,
        2517608232,
        2874225571,
        1861159788,
        326777828,
        3124490320,
        2130389656,
        2716951837,
        967770486,
        1724537150,
        2185432712,
        2364442137,
        1164943284,
        2105845187,
        998989502,
        3765401048,
        2244026483,
        1075463327,
        1455516326,
        1322494562,
        910128902,
        469688178,
        1117454909,
        936433444,
        3490320968,
        3675253459,
        1240580251,
        122909385,
        2157517691,
        634681816,
        4142456567,
        3825094682,
        3061402683,
        2540495037,
        79693498,
        3249098678,
        1084186820,
        1583128258,
        426386531,
        1761308591,
        1047286709,
        322548459,
        995290223,
        1845252383,
        2603652396,
        3431023940,
        2942221577,
        3202600964,
        3727903485,
        1712269319,
        422464435,
        3234572375,
        1170764815,
        3523960633,
        3117677531,
        1434042557,
        442511882,
        3600875718,
        1076654713,
        1738483198,
        4213154764,
        2393238008,
        3677496056,
        1014306527,
        4251020053,
        793779912,
        2902807211,
        842905082,
        4246964064,
        1395751752,
        1040244610,
        2656851899,
        3396308128,
        445077038,
        3742853595,
        3577915638,
        679411651,
        2892444358,
        2354009459,
        1767581616,
        3150600392,
        3791627101,
        3102740896,
        284835224,
        4246832056,
        1258075500,
        768725851,
        2589189241,
        3069724005,
        3532540348,
        1274779536,
        3789419226,
        2764799539,
        1660621633,
        3471099624,
        4011903706,
        913787905,
        3497959166,
        737222580,
        2514213453,
        2928710040,
        3937242737,
        1804850592,
        3499020752,
        2949064160,
        2386320175,
        2390070455,
        2415321851,
        4061277028,
        2290661394,
        2416832540,
        1336762016,
        1754252060,
        3520065937,
        3014181293,
        791618072,
        3188594551,
        3933548030,
        2332172193,
        3852520463,
        3043980520,
        413987798,
        3465142937,
        3030929376,
        4245938359,
        2093235073,
        3534596313,
        375366246,
        2157278981,
        2479649556,
        555357303,
        3870105701,
        2008414854,
        3344188149,
        4221384143,
        3956125452,
        2067696032,
        3594591187,
        2921233993,
        2428461,
        544322398,
        577241275,
        1471733935,
        610547355,
        4027169054,
        1432588573,
        1507829418,
        2025931657,
        3646575487,
        545086370,
        48609733,
        2200306550,
        1653985193,
        298326376,
        1316178497,
        3007786442,
        2064951626,
        458293330,
        2589141269,
        3591329599,
        3164325604,
        727753846,
        2179363840,
        146436021,
        1461446943,
        4069977195,
        705550613,
        3059967265,
        3887724982,
        4281599278,
        3313849956,
        1404054877,
        2845806497,
        146425753,
        1854211946,
        1266315497,
        3048417604,
        3681880366,
        3289982499,
        290971e4,
        1235738493,
        2632868024,
        2414719590,
        3970600049,
        1771706367,
        1449415276,
        3266420449,
        422970021,
        1963543593,
        2690192192,
        3826793022,
        1062508698,
        1531092325,
        1804592342,
        2583117782,
        2714934279,
        4024971509,
        1294809318,
        4028980673,
        1289560198,
        2221992742,
        1669523910,
        35572830,
        157838143,
        1052438473,
        1016535060,
        1802137761,
        1753167236,
        1386275462,
        3080475397,
        2857371447,
        1040679964,
        2145300060,
        2390574316,
        1461121720,
        2956646967,
        4031777805,
        4028374788,
        33600511,
        2920084762,
        1018524850,
        629373528,
        3691585981,
        3515945977,
        2091462646,
        2486323059,
        586499841,
        988145025,
        935516892,
        3367335476,
        2599673255,
        2839830854,
        265290510,
        3972581182,
        2759138881,
        3795373465,
        1005194799,
        847297441,
        406762289,
        1314163512,
        1332590856,
        1866599683,
        4127851711,
        750260880,
        613907577,
        1450815602,
        3165620655,
        3734664991,
        3650291728,
        3012275730,
        3704569646,
        1427272223,
        778793252,
        1343938022,
        2676280711,
        2052605720,
        1946737175,
        3164576444,
        3914038668,
        3967478842,
        3682934266,
        1661551462,
        3294938066,
        4011595847,
        840292616,
        3712170807,
        616741398,
        312560963,
        711312465,
        1351876610,
        322626781,
        1910503582,
        271666773,
        2175563734,
        1594956187,
        70604529,
        3617834859,
        1007753275,
        1495573769,
        4069517037,
        2549218298,
        2663038764,
        504708206,
        2263041392,
        3941167025,
        2249088522,
        1514023603,
        1998579484,
        1312622330,
        694541497,
        2582060303,
        2151582166,
        1382467621,
        776784248,
        2618340202,
        3323268794,
        2497899128,
        2784771155,
        503983604,
        4076293799,
        907881277,
        423175695,
        432175456,
        1378068232,
        4145222326,
        3954048622,
        3938656102,
        3820766613,
        2793130115,
        2977904593,
        26017576,
        3274890735,
        3194772133,
        1700274565,
        1756076034,
        4006520079,
        3677328699,
        720338349,
        1533947780,
        354530856,
        688349552,
        3973924725,
        1637815568,
        332179504,
        3949051286,
        53804574,
        2852348879,
        3044236432,
        1282449977,
        3583942155,
        3416972820,
        4006381244,
        1617046695,
        2628476075,
        3002303598,
        1686838959,
        431878346,
        2686675385,
        1700445008,
        1080580658,
        1009431731,
        832498133,
        3223435511,
        2605976345,
        2271191193,
        2516031870,
        1648197032,
        4164389018,
        2548247927,
        300782431,
        375919233,
        238389289,
        3353747414,
        2531188641,
        2019080857,
        1475708069,
        455242339,
        2609103871,
        448939670,
        3451063019,
        1395535956,
        2413381860,
        1841049896,
        1491858159,
        885456874,
        4264095073,
        4001119347,
        1565136089,
        3898914787,
        1108368660,
        540939232,
        1173283510,
        2745871338,
        3681308437,
        4207628240,
        3343053890,
        4016749493,
        1699691293,
        1103962373,
        3625875870,
        2256883143,
        3830138730,
        1031889488,
        3479347698,
        1535977030,
        4236805024,
        3251091107,
        2132092099,
        1774941330,
        1199868427,
        1452454533,
        157007616,
        2904115357,
        342012276,
        595725824,
        1480756522,
        206960106,
        497939518,
        591360097,
        863170706,
        2375253569,
        3596610801,
        1814182875,
        2094937945,
        3421402208,
        1082520231,
        3463918190,
        2785509508,
        435703966,
        3908032597,
        1641649973,
        2842273706,
        3305899714,
        1510255612,
        2148256476,
        2655287854,
        3276092548,
        4258621189,
        236887753,
        3681803219,
        274041037,
        1734335097,
        3815195456,
        3317970021,
        1899903192,
        1026095262,
        4050517792,
        356393447,
        2410691914,
        3873677099,
        3682840055,
        3913112168,
        2491498743,
        4132185628,
        2489919796,
        1091903735,
        1979897079,
        3170134830,
        3567386728,
        3557303409,
        857797738,
        1136121015,
        1342202287,
        507115054,
        2535736646,
        337727348,
        3213592640,
        1301675037,
        2528481711,
        1895095763,
        1721773893,
        3216771564,
        62756741,
        2142006736,
        835421444,
        2531993523,
        1442658625,
        3659876326,
        2882144922,
        676362277,
        1392781812,
        170690266,
        3921047035,
        1759253602,
        3611846912,
        1745797284,
        664899054,
        1329594018,
        3901205900,
        3045908486,
        2062866102,
        2865634940,
        3543621612,
        3464012697,
        1080764994,
        553557557,
        3656615353,
        3996768171,
        991055499,
        499776247,
        1265440854,
        648242737,
        3940784050,
        980351604,
        3713745714,
        1749149687,
        3396870395,
        4211799374,
        3640570775,
        1161844396,
        3125318951,
        1431517754,
        545492359,
        4268468663,
        3499529547,
        1437099964,
        2702547544,
        3433638243,
        2581715763,
        2787789398,
        1060185593,
        1593081372,
        2418618748,
        4260947970,
        69676912,
        2159744348,
        86519011,
        2512459080,
        3838209314,
        1220612927,
        3339683548,
        133810670,
        1090789135,
        1078426020,
        1569222167,
        845107691,
        3583754449,
        4072456591,
        1091646820,
        628848692,
        1613405280,
        3757631651,
        526609435,
        236106946,
        48312990,
        2942717905,
        3402727701,
        1797494240,
        859738849,
        992217954,
        4005476642,
        2243076622,
        3870952857,
        3732016268,
        765654824,
        3490871365,
        2511836413,
        1685915746,
        3888969200,
        1414112111,
        2273134842,
        3281911079,
        4080962846,
        172450625,
        2569994100,
        980381355,
        4109958455,
        2819808352,
        2716589560,
        2568741196,
        3681446669,
        3329971472,
        1835478071,
        660984891,
        3704678404,
        4045999559,
        3422617507,
        3040415634,
        1762651403,
        1719377915,
        3470491036,
        2693910283,
        3642056355,
        3138596744,
        1364962596,
        2073328063,
        1983633131,
        926494387,
        3423689081,
        2150032023,
        4096667949,
        1749200295,
        3328846651,
        309677260,
        2016342300,
        1779581495,
        3079819751,
        111262694,
        1274766160,
        443224088,
        298511866,
        1025883608,
        3806446537,
        1145181785,
        168956806,
        3641502830,
        3584813610,
        1689216846,
        3666258015,
        3200248200,
        1692713982,
        2646376535,
        4042768518,
        1618508792,
        1610833997,
        3523052358,
        4130873264,
        2001055236,
        3610705100,
        2202168115,
        4028541809,
        2961195399,
        1006657119,
        2006996926,
        3186142756,
        1430667929,
        3210227297,
        1314452623,
        4074634658,
        4101304120,
        2273951170,
        1399257539,
        3367210612,
        3027628629,
        1190975929,
        2062231137,
        2333990788,
        2221543033,
        2438960610,
        1181637006,
        548689776,
        2362791313,
        3372408396,
        3104550113,
        3145860560,
        296247880,
        1970579870,
        3078560182,
        3769228297,
        1714227617,
        3291629107,
        3898220290,
        166772364,
        1251581989,
        493813264,
        448347421,
        195405023,
        2709975567,
        677966185,
        3703036547,
        1463355134,
        2715995803,
        1338867538,
        1343315457,
        2802222074,
        2684532164,
        233230375,
        2599980071,
        2000651841,
        3277868038,
        1638401717,
        4028070440,
        3237316320,
        6314154,
        819756386,
        300326615,
        590932579,
        1405279636,
        3267499572,
        3150704214,
        2428286686,
        3959192993,
        3461946742,
        1862657033,
        1266418056,
        963775037,
        2089974820,
        2263052895,
        1917689273,
        448879540,
        3550394620,
        3981727096,
        150775221,
        3627908307,
        1303187396,
        508620638,
        2975983352,
        2726630617,
        1817252668,
        1876281319,
        1457606340,
        908771278,
        3720792119,
        3617206836,
        2455994898,
        1729034894,
        1080033504,
        976866871,
        3556439503,
        2881648439,
        1522871579,
        1555064734,
        1336096578,
        3548522304,
        2579274686,
        3574697629,
        3205460757,
        3593280638,
        3338716283,
        3079412587,
        564236357,
        2993598910,
        1781952180,
        1464380207,
        3163844217,
        3332601554,
        1699332808,
        1393555694,
        1183702653,
        3581086237,
        1288719814,
        691649499,
        2847557200,
        2895455976,
        3193889540,
        2717570544,
        1781354906,
        1676643554,
        2592534050,
        3230253752,
        1126444790,
        2770207658,
        2633158820,
        2210423226,
        2615765581,
        2414155088,
        3127139286,
        673620729,
        2805611233,
        1269405062,
        4015350505,
        3341807571,
        4149409754,
        1057255273,
        2012875353,
        2162469141,
        2276492801,
        2601117357,
        993977747,
        3918593370,
        2654263191,
        753973209,
        36408145,
        2530585658,
        25011837,
        3520020182,
        2088578344,
        530523599,
        2918365339,
        1524020338,
        1518925132,
        3760827505,
        3759777254,
        1202760957,
        3985898139,
        3906192525,
        674977740,
        4174734889,
        2031300136,
        2019492241,
        3983892565,
        4153806404,
        3822280332,
        352677332,
        2297720250,
        60907813,
        90501309,
        3286998549,
        1016092578,
        2535922412,
        2839152426,
        457141659,
        509813237,
        4120667899,
        652014361,
        1966332200,
        2975202805,
        55981186,
        2327461051,
        676427537,
        3255491064,
        2882294119,
        3433927263,
        1307055953,
        942726286,
        933058658,
        2468411793,
        3933900994,
        4215176142,
        1361170020,
        2001714738,
        2830558078,
        3274259782,
        1222529897,
        1679025792,
        2729314320,
        3714953764,
        1770335741,
        151462246,
        3013232138,
        1682292957,
        1483529935,
        471910574,
        1539241949,
        458788160,
        3436315007,
        1807016891,
        3718408830,
        978976581,
        1043663428,
        3165965781,
        1927990952,
        4200891579,
        2372276910,
        3208408903,
        3533431907,
        1412390302,
        2931980059,
        4132332400,
        1947078029,
        3881505623,
        4168226417,
        2941484381,
        1077988104,
        1320477388,
        886195818,
        18198404,
        3786409e3,
        2509781533,
        112762804,
        3463356488,
        1866414978,
        891333506,
        18488651,
        661792760,
        1628790961,
        3885187036,
        3141171499,
        876946877,
        2693282273,
        1372485963,
        791857591,
        2686433993,
        3759982718,
        3167212022,
        3472953795,
        2716379847,
        445679433,
        3561995674,
        3504004811,
        3574258232,
        54117162,
        3331405415,
        2381918588,
        3769707343,
        4154350007,
        1140177722,
        4074052095,
        668550556,
        3214352940,
        367459370,
        261225585,
        2610173221,
        4209349473,
        3468074219,
        3265815641,
        314222801,
        3066103646,
        3808782860,
        282218597,
        3406013506,
        3773591054,
        379116347,
        1285071038,
        846784868,
        2669647154,
        3771962079,
        3550491691,
        2305946142,
        453669953,
        1268987020,
        3317592352,
        3279303384,
        3744833421,
        2610507566,
        3859509063,
        266596637,
        3847019092,
        517658769,
        3462560207,
        3443424879,
        370717030,
        4247526661,
        2224018117,
        4143653529,
        4112773975,
        2788324899,
        2477274417,
        1456262402,
        2901442914,
        1517677493,
        1846949527,
        2295493580,
        3734397586,
        2176403920,
        1280348187,
        1908823572,
        3871786941,
        846861322,
        1172426758,
        3287448474,
        3383383037,
        1655181056,
        3139813346,
        901632758,
        1897031941,
        2986607138,
        3066810236,
        3447102507,
        1393639104,
        373351379,
        950779232,
        625454576,
        3124240540,
        4148612726,
        2007998917,
        544563296,
        2244738638,
        2330496472,
        2058025392,
        1291430526,
        424198748,
        50039436,
        29584100,
        3605783033,
        2429876329,
        2791104160,
        1057563949,
        3255363231,
        3075367218,
        3463963227,
        1469046755,
        985887462
      ];
      var C_ORIG = [
        1332899944,
        1700884034,
        1701343084,
        1684370003,
        1668446532,
        1869963892
      ];
      function _encipher(lr2, off, P, S) {
        var n, l = lr2[off], r = lr2[off + 1];
        l ^= P[0];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[1];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[2];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[3];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[4];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[5];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[6];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[7];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[8];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[9];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[10];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[11];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[12];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[13];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[14];
        n = S[l >>> 24];
        n += S[256 | l >> 16 & 255];
        n ^= S[512 | l >> 8 & 255];
        n += S[768 | l & 255];
        r ^= n ^ P[15];
        n = S[r >>> 24];
        n += S[256 | r >> 16 & 255];
        n ^= S[512 | r >> 8 & 255];
        n += S[768 | r & 255];
        l ^= n ^ P[16];
        lr2[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];
        lr2[off + 1] = l;
        return lr2;
      }
      function _streamtoword(data, offp) {
        for (var i = 0, word = 0; i < 4; ++i)
          word = word << 8 | data[offp] & 255, offp = (offp + 1) % data.length;
        return { key: word, offp };
      }
      function _key(key, P, S) {
        var offset = 0, lr2 = [0, 0], plen = P.length, slen = S.length, sw;
        for (var i = 0; i < plen; i++)
          sw = _streamtoword(key, offset), offset = sw.offp, P[i] = P[i] ^ sw.key;
        for (i = 0; i < plen; i += 2)
          lr2 = _encipher(lr2, 0, P, S), P[i] = lr2[0], P[i + 1] = lr2[1];
        for (i = 0; i < slen; i += 2)
          lr2 = _encipher(lr2, 0, P, S), S[i] = lr2[0], S[i + 1] = lr2[1];
      }
      function _ekskey(data, key, P, S) {
        var offp = 0, lr2 = [0, 0], plen = P.length, slen = S.length, sw;
        for (var i = 0; i < plen; i++)
          sw = _streamtoword(key, offp), offp = sw.offp, P[i] = P[i] ^ sw.key;
        offp = 0;
        for (i = 0; i < plen; i += 2)
          sw = _streamtoword(data, offp), offp = sw.offp, lr2[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr2[1] ^= sw.key, lr2 = _encipher(lr2, 0, P, S), P[i] = lr2[0], P[i + 1] = lr2[1];
        for (i = 0; i < slen; i += 2)
          sw = _streamtoword(data, offp), offp = sw.offp, lr2[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr2[1] ^= sw.key, lr2 = _encipher(lr2, 0, P, S), S[i] = lr2[0], S[i + 1] = lr2[1];
      }
      function _crypt(b, salt, rounds, callback, progressCallback) {
        var cdata = C_ORIG.slice(), clen = cdata.length, err;
        if (rounds < 4 || rounds > 31) {
          err = Error("Illegal number of rounds (4-31): " + rounds);
          if (callback) {
            nextTick(callback.bind(this, err));
            return;
          } else
            throw err;
        }
        if (salt.length !== BCRYPT_SALT_LEN) {
          err = Error("Illegal salt length: " + salt.length + " != " + BCRYPT_SALT_LEN);
          if (callback) {
            nextTick(callback.bind(this, err));
            return;
          } else
            throw err;
        }
        rounds = 1 << rounds >>> 0;
        var P, S, i = 0, j2;
        if (Int32Array) {
          P = new Int32Array(P_ORIG);
          S = new Int32Array(S_ORIG);
        } else {
          P = P_ORIG.slice();
          S = S_ORIG.slice();
        }
        _ekskey(salt, b, P, S);
        function next() {
          if (progressCallback)
            progressCallback(i / rounds);
          if (i < rounds) {
            var start = Date.now();
            for (; i < rounds; ) {
              i = i + 1;
              _key(b, P, S);
              _key(salt, P, S);
              if (Date.now() - start > MAX_EXECUTION_TIME)
                break;
            }
          } else {
            for (i = 0; i < 64; i++)
              for (j2 = 0; j2 < clen >> 1; j2++)
                _encipher(cdata, j2 << 1, P, S);
            var ret = [];
            for (i = 0; i < clen; i++)
              ret.push((cdata[i] >> 24 & 255) >>> 0), ret.push((cdata[i] >> 16 & 255) >>> 0), ret.push((cdata[i] >> 8 & 255) >>> 0), ret.push((cdata[i] & 255) >>> 0);
            if (callback) {
              callback(null, ret);
              return;
            } else
              return ret;
          }
          if (callback)
            nextTick(next);
        }
        if (typeof callback !== "undefined") {
          next();
        } else {
          var res;
          while (true)
            if (typeof (res = next()) !== "undefined")
              return res || [];
        }
      }
      function _hash(s, salt, callback, progressCallback) {
        var err;
        if (typeof s !== "string" || typeof salt !== "string") {
          err = Error("Invalid string / salt: Not a string");
          if (callback) {
            nextTick(callback.bind(this, err));
            return;
          } else
            throw err;
        }
        var minor, offset;
        if (salt.charAt(0) !== "$" || salt.charAt(1) !== "2") {
          err = Error("Invalid salt version: " + salt.substring(0, 2));
          if (callback) {
            nextTick(callback.bind(this, err));
            return;
          } else
            throw err;
        }
        if (salt.charAt(2) === "$")
          minor = String.fromCharCode(0), offset = 3;
        else {
          minor = salt.charAt(2);
          if (minor !== "a" && minor !== "b" && minor !== "y" || salt.charAt(3) !== "$") {
            err = Error("Invalid salt revision: " + salt.substring(2, 4));
            if (callback) {
              nextTick(callback.bind(this, err));
              return;
            } else
              throw err;
          }
          offset = 4;
        }
        if (salt.charAt(offset + 2) > "$") {
          err = Error("Missing salt rounds");
          if (callback) {
            nextTick(callback.bind(this, err));
            return;
          } else
            throw err;
        }
        var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10, r2 = parseInt(salt.substring(offset + 1, offset + 2), 10), rounds = r1 + r2, real_salt = salt.substring(offset + 3, offset + 25);
        s += minor >= "a" ? "\0" : "";
        var passwordb = stringToBytes(s), saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);
        function finish(bytes) {
          var res = [];
          res.push("$2");
          if (minor >= "a")
            res.push(minor);
          res.push("$");
          if (rounds < 10)
            res.push("0");
          res.push(rounds.toString());
          res.push("$");
          res.push(base64_encode(saltb, saltb.length));
          res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));
          return res.join("");
        }
        if (typeof callback == "undefined")
          return finish(_crypt(passwordb, saltb, rounds));
        else {
          _crypt(passwordb, saltb, rounds, function(err2, bytes) {
            if (err2)
              callback(err2, null);
            else
              callback(null, finish(bytes));
          }, progressCallback);
        }
      }
      bcrypt.encodeBase64 = base64_encode;
      bcrypt.decodeBase64 = base64_decode;
      return bcrypt;
    });
  }
});

// build/index.js
var require_build3 = __commonJS({
  "build/index.js"(exports2, module2) {
    init_define_process();
    var __create2 = Object.create;
    var __defProp2 = Object.defineProperty;
    var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames2 = Object.getOwnPropertyNames;
    var __getProtoOf2 = Object.getPrototypeOf;
    var __hasOwnProp2 = Object.prototype.hasOwnProperty;
    var __markAsModule2 = (target) => __defProp2(target, "__esModule", { value: true });
    var __esm2 = (fn2, res) => function __init() {
      return fn2 && (res = (0, fn2[__getOwnPropNames2(fn2)[0]])(fn2 = 0)), res;
    };
    var __commonJS2 = (cb, mod) => function __require2() {
      return mod || (0, cb[__getOwnPropNames2(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
    };
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: true });
    };
    var __reExport2 = (target, module22, copyDefault, desc) => {
      if (module22 && typeof module22 === "object" || typeof module22 === "function") {
        for (let key of __getOwnPropNames2(module22))
          if (!__hasOwnProp2.call(target, key) && (copyDefault || key !== "default"))
            __defProp2(target, key, { get: () => module22[key], enumerable: !(desc = __getOwnPropDesc2(module22, key)) || desc.enumerable });
      }
      return target;
    };
    var __toESM = (module22, isNodeMode) => {
      return __reExport2(__markAsModule2(__defProp2(module22 != null ? __create2(__getProtoOf2(module22)) : {}, "default", !isNodeMode && module22 && module22.__esModule ? { get: () => module22.default, enumerable: true } : { value: module22, enumerable: true })), module22);
    };
    var __toCommonJS = /* @__PURE__ */ ((cache) => {
      return (module22, temp) => {
        return cache && cache.get(module22) || (temp = __reExport2(__markAsModule2({}), module22, 1), cache && cache.set(module22, temp), temp);
      };
    })(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
    var React;
    var init_react2 = __esm2({
      "node_modules/@remix-run/dev/compiler/shims/react.ts"() {
        React = __toESM(require_react());
      }
    });
    var require_remix = __commonJS2({
      "node_modules/remix/index.js"(exports3) {
        "use strict";
        init_react2();
        Object.defineProperty(exports3, "__esModule", { value: true });
        var cloudflarePages = require_cloudflare_pages();
        Object.defineProperty(exports3, "createCloudflareKVSessionStorage", {
          enumerable: true,
          get: function() {
            return cloudflarePages.createCloudflareKVSessionStorage;
          }
        });
        Object.defineProperty(exports3, "__esModule", { value: true });
        var serverRuntime = require_server_runtime();
        Object.defineProperty(exports3, "createCookie", {
          enumerable: true,
          get: function() {
            return serverRuntime.createCookie;
          }
        });
        Object.defineProperty(exports3, "createCookieSessionStorage", {
          enumerable: true,
          get: function() {
            return serverRuntime.createCookieSessionStorage;
          }
        });
        Object.defineProperty(exports3, "createMemorySessionStorage", {
          enumerable: true,
          get: function() {
            return serverRuntime.createMemorySessionStorage;
          }
        });
        Object.defineProperty(exports3, "createSession", {
          enumerable: true,
          get: function() {
            return serverRuntime.createSession;
          }
        });
        Object.defineProperty(exports3, "createSessionStorage", {
          enumerable: true,
          get: function() {
            return serverRuntime.createSessionStorage;
          }
        });
        Object.defineProperty(exports3, "isCookie", {
          enumerable: true,
          get: function() {
            return serverRuntime.isCookie;
          }
        });
        Object.defineProperty(exports3, "isSession", {
          enumerable: true,
          get: function() {
            return serverRuntime.isSession;
          }
        });
        Object.defineProperty(exports3, "json", {
          enumerable: true,
          get: function() {
            return serverRuntime.json;
          }
        });
        Object.defineProperty(exports3, "redirect", {
          enumerable: true,
          get: function() {
            return serverRuntime.redirect;
          }
        });
        Object.defineProperty(exports3, "__esModule", { value: true });
        var react = require_react2();
        Object.defineProperty(exports3, "Form", {
          enumerable: true,
          get: function() {
            return react.Form;
          }
        });
        Object.defineProperty(exports3, "Link", {
          enumerable: true,
          get: function() {
            return react.Link;
          }
        });
        Object.defineProperty(exports3, "Links", {
          enumerable: true,
          get: function() {
            return react.Links;
          }
        });
        Object.defineProperty(exports3, "LiveReload", {
          enumerable: true,
          get: function() {
            return react.LiveReload;
          }
        });
        Object.defineProperty(exports3, "Meta", {
          enumerable: true,
          get: function() {
            return react.Meta;
          }
        });
        Object.defineProperty(exports3, "NavLink", {
          enumerable: true,
          get: function() {
            return react.NavLink;
          }
        });
        Object.defineProperty(exports3, "Outlet", {
          enumerable: true,
          get: function() {
            return react.Outlet;
          }
        });
        Object.defineProperty(exports3, "PrefetchPageLinks", {
          enumerable: true,
          get: function() {
            return react.PrefetchPageLinks;
          }
        });
        Object.defineProperty(exports3, "RemixBrowser", {
          enumerable: true,
          get: function() {
            return react.RemixBrowser;
          }
        });
        Object.defineProperty(exports3, "RemixServer", {
          enumerable: true,
          get: function() {
            return react.RemixServer;
          }
        });
        Object.defineProperty(exports3, "Scripts", {
          enumerable: true,
          get: function() {
            return react.Scripts;
          }
        });
        Object.defineProperty(exports3, "ScrollRestoration", {
          enumerable: true,
          get: function() {
            return react.ScrollRestoration;
          }
        });
        Object.defineProperty(exports3, "useActionData", {
          enumerable: true,
          get: function() {
            return react.useActionData;
          }
        });
        Object.defineProperty(exports3, "useBeforeUnload", {
          enumerable: true,
          get: function() {
            return react.useBeforeUnload;
          }
        });
        Object.defineProperty(exports3, "useCatch", {
          enumerable: true,
          get: function() {
            return react.useCatch;
          }
        });
        Object.defineProperty(exports3, "useFetcher", {
          enumerable: true,
          get: function() {
            return react.useFetcher;
          }
        });
        Object.defineProperty(exports3, "useFetchers", {
          enumerable: true,
          get: function() {
            return react.useFetchers;
          }
        });
        Object.defineProperty(exports3, "useFormAction", {
          enumerable: true,
          get: function() {
            return react.useFormAction;
          }
        });
        Object.defineProperty(exports3, "useHref", {
          enumerable: true,
          get: function() {
            return react.useHref;
          }
        });
        Object.defineProperty(exports3, "useLoaderData", {
          enumerable: true,
          get: function() {
            return react.useLoaderData;
          }
        });
        Object.defineProperty(exports3, "useLocation", {
          enumerable: true,
          get: function() {
            return react.useLocation;
          }
        });
        Object.defineProperty(exports3, "useMatches", {
          enumerable: true,
          get: function() {
            return react.useMatches;
          }
        });
        Object.defineProperty(exports3, "useNavigate", {
          enumerable: true,
          get: function() {
            return react.useNavigate;
          }
        });
        Object.defineProperty(exports3, "useNavigationType", {
          enumerable: true,
          get: function() {
            return react.useNavigationType;
          }
        });
        Object.defineProperty(exports3, "useOutlet", {
          enumerable: true,
          get: function() {
            return react.useOutlet;
          }
        });
        Object.defineProperty(exports3, "useOutletContext", {
          enumerable: true,
          get: function() {
            return react.useOutletContext;
          }
        });
        Object.defineProperty(exports3, "useParams", {
          enumerable: true,
          get: function() {
            return react.useParams;
          }
        });
        Object.defineProperty(exports3, "useResolvedPath", {
          enumerable: true,
          get: function() {
            return react.useResolvedPath;
          }
        });
        Object.defineProperty(exports3, "useSearchParams", {
          enumerable: true,
          get: function() {
            return react.useSearchParams;
          }
        });
        Object.defineProperty(exports3, "useSubmit", {
          enumerable: true,
          get: function() {
            return react.useSubmit;
          }
        });
        Object.defineProperty(exports3, "useTransition", {
          enumerable: true,
          get: function() {
            return react.useTransition;
          }
        });
      }
    });
    var stdin_exports = {};
    __export2(stdin_exports, {
      assets: () => assets_manifest_default,
      entry: () => entry,
      routes: () => routes
    });
    init_react2();
    init_react2();
    var entry_server_exports = {};
    __export2(entry_server_exports, {
      default: () => handleRequest
    });
    init_react2();
    var import_server = require_server_browser();
    var import_remix2 = __toESM(require_remix());
    function handleRequest(request2, responseStatusCode, responseHeaders, remixContext) {
      const markup = (0, import_server.renderToString)(/* @__PURE__ */ React.createElement(import_remix2.RemixServer, {
        context: remixContext,
        url: request2.url
      }));
      responseHeaders.set("Content-Type", "text/html");
      return new Response("<!DOCTYPE html>" + markup, {
        status: responseStatusCode,
        headers: responseHeaders
      });
    }
    var root_exports = {};
    __export2(root_exports, {
      CatchBoundary: () => CatchBoundary,
      default: () => App,
      links: () => links,
      meta: () => meta
    });
    init_react2();
    var import_remix5 = __toESM(require_remix());
    var tailwind_default = "/build/_assets/tailwind-WA75AMBN.css";
    init_react2();
    var import_react12 = require_react();
    var import_react22 = require_dist();
    var import_outline = require_outline();
    var import_remix22 = __toESM(require_remix());
    var currencies = ["CADds", "USD", "AUD", "EUR", "GBP"];
    var navigation = {
      pages: [
        { name: "All Products", href: "/products" },
        { name: "Chicken", href: "/chicken" },
        { name: "Pork", href: "/pork" },
        { name: "Beef", href: "beef" }
      ]
    };
    function Example() {
      const [mobileMenuOpen, setMobileMenuOpen] = (0, import_react12.useState)(false);
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(import_react22.Transition.Root, {
        show: mobileMenuOpen,
        as: import_react12.Fragment
      }, /* @__PURE__ */ React.createElement(import_react22.Dialog, {
        as: "div",
        className: "fixed inset-0 z-50 flex lg:hidden",
        onClose: setMobileMenuOpen
      }, /* @__PURE__ */ React.createElement(import_react22.Transition.Child, {
        as: import_react12.Fragment,
        enter: "transition-opacity ease-linear duration-300",
        enterFrom: "opacity-0",
        enterTo: "opacity-100",
        leave: "transition-opacity ease-linear duration-300",
        leaveFrom: "opacity-100",
        leaveTo: "opacity-0"
      }, /* @__PURE__ */ React.createElement(import_react22.Dialog.Overlay, {
        className: "fixed inset-0 bg-black bg-opacity-25"
      })), /* @__PURE__ */ React.createElement(import_react22.Transition.Child, {
        as: import_react12.Fragment,
        enter: "transition ease-in-out duration-300 transform",
        enterFrom: "-translate-x-full",
        enterTo: "translate-x-0",
        leave: "transition ease-in-out duration-300 transform",
        leaveFrom: "translate-x-0",
        leaveTo: "-translate-x-full"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "relative flex w-full max-w-xs flex-col overflow-y-auto bg-white pb-12 shadow-xl"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex px-4 pt-5 pb-2.5"
      }, /* @__PURE__ */ React.createElement("button", {
        type: "button",
        className: "-m-2 inline-flex items-center justify-center rounded-md p-2 text-gray-400",
        onClick: () => setMobileMenuOpen(false)
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Close menu"), /* @__PURE__ */ React.createElement(import_outline.XIcon, {
        className: "h-6 w-6",
        "aria-hidden": "true"
      }))), /* @__PURE__ */ React.createElement(import_react22.Tab.Group, {
        as: "div",
        className: "mt-2"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "border-b border-gray-200"
      }), /* @__PURE__ */ React.createElement(import_react22.Tab.Panels, {
        as: import_react12.Fragment
      })), /* @__PURE__ */ React.createElement("div", {
        className: "space-y-6 border-t border-gray-200 py-6 px-4"
      }, navigation.pages.map((page) => /* @__PURE__ */ React.createElement("div", {
        key: page.name,
        className: "flow-root"
      }, /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: page.href,
        className: "-m-2 block p-2 font-medium text-gray-900"
      }, page.name)))), /* @__PURE__ */ React.createElement("div", {
        className: "space-y-6 border-t border-gray-200 py-6 px-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flow-root"
      }, /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "#",
        className: "-m-2 block p-2 font-medium text-gray-900"
      }, "Create an account")), /* @__PURE__ */ React.createElement("div", {
        className: "flow-root"
      }, /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "#",
        className: "-m-2 block p-2 font-medium text-gray-900"
      }, "Sign in"))), /* @__PURE__ */ React.createElement("div", {
        className: "space-y-6 border-t border-gray-200 py-6 px-4"
      }, /* @__PURE__ */ React.createElement("form", null, /* @__PURE__ */ React.createElement("div", {
        className: "inline-block"
      }, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "mobile-currency",
        className: "sr-only"
      }, "Currency"), /* @__PURE__ */ React.createElement("div", {
        className: "group relative -ml-2 rounded-md border-transparent focus-within:ring-2 focus-within:ring-white"
      }, /* @__PURE__ */ React.createElement("select", {
        id: "mobile-currency",
        name: "currency",
        className: "flex items-center rounded-md border-transparent bg-none py-0.5 pl-2 pr-5 text-sm font-medium text-gray-700 focus:border-transparent focus:outline-none focus:ring-0 group-hover:text-red-600"
      }, currencies.map((currency) => /* @__PURE__ */ React.createElement("option", {
        key: currency
      }, currency))), /* @__PURE__ */ React.createElement("div", {
        className: "pointer-events-none absolute inset-y-0 right-0 flex items-center"
      }, /* @__PURE__ */ React.createElement("svg", {
        "aria-hidden": "true",
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 20 20",
        className: "h-5 w-5 text-gray-500"
      }, /* @__PURE__ */ React.createElement("path", {
        stroke: "currentColor",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "1.5",
        d: "M6 8l4 4 4-4"
      }))))))))))), /* @__PURE__ */ React.createElement("header", {
        className: "relative"
      }, /* @__PURE__ */ React.createElement("nav", {
        "aria-label": "Top"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "fixed top-0 left-0 right-0 z-40 border-b border-gray-200 bg-white"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-7xl px-4 sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: ""
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex h-16 items-center justify-between"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "hidden lg:flex lg:items-center"
      }, /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "/"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Camille Meat Shop"), /* @__PURE__ */ React.createElement("img", {
        className: "h-8 w-auto",
        src: "/images/logo.png",
        alt: "Camille Meat Shop Logo"
      }))), /* @__PURE__ */ React.createElement("div", {
        className: "hidden h-full lg:flex"
      }, /* @__PURE__ */ React.createElement(import_react22.Popover.Group, {
        className: "ml-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex h-full justify-center space-x-8"
      }, navigation.pages.map((page) => /* @__PURE__ */ React.createElement(import_remix22.Link, {
        key: page.name,
        to: page.href,
        className: "flex items-center text-sm font-medium text-gray-700 hover:text-red-600"
      }, page.name))))), /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-1 items-center lg:hidden"
      }, /* @__PURE__ */ React.createElement("button", {
        type: "button",
        className: "-ml-2 rounded-md bg-white p-2 text-gray-400",
        onClick: () => {
          console.log("hello");
          setMobileMenuOpen(true);
        }
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "MobileMenuOpen menu"), /* @__PURE__ */ React.createElement(import_outline.MenuIcon, {
        className: "h-6 w-6",
        "aria-hidden": "true"
      })), /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "#",
        className: "ml-2 p-2 text-gray-400 hover:text-red-600"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Search"), /* @__PURE__ */ React.createElement(import_outline.SearchIcon, {
        className: "h-6 w-6",
        "aria-hidden": "true"
      }))), /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "/",
        className: "lg:hidden"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Camille Meat Shop"), /* @__PURE__ */ React.createElement("img", {
        src: "/images/logo.png",
        alt: "",
        className: "h-8 w-auto"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-1 items-center justify-end"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center lg:ml-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex space-x-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "hidden lg:flex"
      }, /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "#",
        className: "-m-2 p-2 text-gray-400 hover:text-red-600"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Search"), /* @__PURE__ */ React.createElement(import_outline.SearchIcon, {
        className: "h-6 w-6",
        "aria-hidden": "true"
      }))), /* @__PURE__ */ React.createElement("div", {
        className: "flex"
      }, /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "#",
        className: "-m-2 p-2 text-gray-400 hover:text-red-600"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Account"), /* @__PURE__ */ React.createElement(import_outline.UserIcon, {
        className: "h-6 w-6",
        "aria-hidden": "true"
      })))), /* @__PURE__ */ React.createElement("span", {
        className: "mx-4 h-6 w-px bg-gray-200 lg:mx-6",
        "aria-hidden": "true"
      }), /* @__PURE__ */ React.createElement("div", {
        className: "flow-root"
      }, /* @__PURE__ */ React.createElement(import_remix22.Link, {
        to: "/cart",
        className: "group -m-2 flex items-center p-2"
      }, /* @__PURE__ */ React.createElement(import_outline.ShoppingCartIcon, {
        className: "h-6 w-6 flex-shrink-0 text-gray-400 group-hover:text-red-600",
        "aria-hidden": "true"
      }), /* @__PURE__ */ React.createElement("span", {
        className: "ml-2 text-sm font-medium text-gray-700 group-hover:text-red-600"
      }, "0"), /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "items in cart, view bag"))))))))))));
    }
    init_react2();
    var import_remix3 = __toESM(require_remix());
    function Error2() {
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
        className: "mt-16 flex min-h-full flex-col bg-white pt-16 pb-12"
      }, /* @__PURE__ */ React.createElement("main", {
        className: "mx-auto flex w-full max-w-7xl flex-grow flex-col justify-center px-4 sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-shrink-0 justify-center"
      }, /* @__PURE__ */ React.createElement(import_remix3.Link, {
        to: "/",
        className: "inline-flex"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Camille Meat Shop"), /* @__PURE__ */ React.createElement("img", {
        className: "h-12 w-auto",
        src: "/images/logo.png",
        alt: "Camille Meat Shop Logo"
      }))), /* @__PURE__ */ React.createElement("div", {
        className: "py-16"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-center"
      }, /* @__PURE__ */ React.createElement("p", {
        className: "text-sm font-semibold uppercase tracking-wide text-red-600"
      }, "404 error"), /* @__PURE__ */ React.createElement("h1", {
        className: "mt-2 text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl"
      }, "Page not found."), /* @__PURE__ */ React.createElement("p", {
        className: "mt-2 text-base text-gray-500"
      }, "Sorry, we couldn\u2019t find the page you\u2019re looking for."), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6"
      }, /* @__PURE__ */ React.createElement(import_remix3.Link, {
        to: "/",
        className: "text-base font-medium text-red-600 hover:text-red-500"
      }, "Go back home", /* @__PURE__ */ React.createElement("span", {
        "aria-hidden": "true"
      }, " \u2192")))))), /* @__PURE__ */ React.createElement("footer", {
        className: "mx-auto w-full max-w-7xl flex-shrink-0 px-4 sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("nav", {
        className: "flex justify-center space-x-4"
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "text-sm font-medium text-gray-500 hover:text-gray-600"
      }, "Contact Support"), /* @__PURE__ */ React.createElement("span", {
        className: "inline-block border-l border-gray-300",
        "aria-hidden": "true"
      }), /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "text-sm font-medium text-gray-500 hover:text-gray-600"
      }, "Status"), /* @__PURE__ */ React.createElement("span", {
        className: "inline-block border-l border-gray-300",
        "aria-hidden": "true"
      }), /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "text-sm font-medium text-gray-500 hover:text-gray-600"
      }, "Twitter")))));
    }
    init_react2();
    var import_remix4 = __toESM(require_remix());
    var footerNavigation = {
      products: [
        { name: "All Products", href: "/products" },
        { name: "Chicken", href: "/chicken" },
        { name: "Pork", href: "/pork" },
        { name: "Beef", href: "/beef" }
      ],
      customerService: [
        { name: "Contact", href: "#footer" },
        { name: "Shipping", href: "#footer" },
        { name: "Returns", href: "#footer" },
        { name: "Warranty", href: "#footer" }
      ],
      company: [
        { name: "Who we are", href: "#footer" },
        { name: "Careers", href: "#footer" },
        { name: "Terms & Conditions", href: "#footer" },
        { name: "Privacy", href: "#footer" }
      ],
      legal: [
        { name: "Terms of Service", href: "#footer" },
        { name: "Return Policy", href: "#footer" },
        { name: "Privacy Policy", href: "#footer" },
        { name: "Delivery Policy", href: "#footer" }
      ],
      bottomLinks: [
        { name: "Privacy", href: "#footer" },
        { name: "Terms", href: "#footer" }
      ]
    };
    function Footer() {
      return /* @__PURE__ */ React.createElement("footer", {
        "aria-labelledby": "footer-heading",
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "footer",
        className: "sr-only"
      }, "Footer"), /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-7xl px-4 sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "border-t border-gray-200"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "pt-16 pb-20"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "md:flex md:justify-center"
      }, /* @__PURE__ */ React.createElement("img", {
        src: "/images/logo.png",
        alt: "Camille Meat Shop Logo",
        className: "h-8 w-auto"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "md:flex md:justify-center"
      }, /* @__PURE__ */ React.createElement("h2", {
        className: "text-md mt-2 font-bold text-gray-900"
      }, "Camille Meat Shop")), /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto mt-16 max-w-5xl xl:grid xl:grid-cols-2 xl:gap-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "grid grid-cols-2 gap-8 xl:col-span-2"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "space-y-12 md:grid md:grid-cols-2 md:gap-8 md:space-y-0"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h3", {
        className: "text-sm font-medium text-gray-900"
      }, "Products"), /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "mt-6 space-y-6"
      }, footerNavigation.products.map((item) => /* @__PURE__ */ React.createElement("li", {
        key: item.name,
        className: "text-sm"
      }, /* @__PURE__ */ React.createElement(import_remix4.Link, {
        to: item.href,
        className: "text-gray-500 hover:text-red-500"
      }, item.name))))), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h3", {
        className: "text-sm font-medium text-gray-900"
      }, "Customer Service"), /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "mt-6 space-y-6"
      }, footerNavigation.customerService.map((item) => /* @__PURE__ */ React.createElement("li", {
        key: item.name,
        className: "text-sm"
      }, /* @__PURE__ */ React.createElement("a", {
        href: item.href,
        className: "text-gray-500 hover:text-red-500"
      }, item.name)))))), /* @__PURE__ */ React.createElement("div", {
        className: "space-y-12 md:grid md:grid-cols-2 md:gap-8 md:space-y-0"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h3", {
        className: "text-sm font-medium text-gray-900"
      }, "Company"), /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "mt-6 space-y-6"
      }, footerNavigation.company.map((item) => /* @__PURE__ */ React.createElement("li", {
        key: item.name,
        className: "text-sm"
      }, /* @__PURE__ */ React.createElement("a", {
        href: item.href,
        className: "text-gray-500 hover:text-red-500"
      }, item.name))))), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h3", {
        className: "text-sm font-medium text-gray-900"
      }, "Legal"), /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "mt-6 space-y-6"
      }, footerNavigation.legal.map((item) => /* @__PURE__ */ React.createElement("li", {
        key: item.name,
        className: "text-sm"
      }, /* @__PURE__ */ React.createElement("a", {
        href: item.href,
        className: "text-gray-500 hover:text-red-500"
      }, item.name)))))))))), /* @__PURE__ */ React.createElement("div", {
        className: "py-10 md:flex md:items-center md:justify-between"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-center md:text-left"
      }, /* @__PURE__ */ React.createElement("p", {
        className: "text-sm text-gray-500"
      }, "\xA9 ", new Date().getFullYear(), " All Rights Reserved")), /* @__PURE__ */ React.createElement("div", {
        className: "mt-4 flex items-center justify-center md:mt-0"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex space-x-8"
      }, footerNavigation.bottomLinks.map((item) => /* @__PURE__ */ React.createElement(import_remix4.Link, {
        key: item.name,
        to: item.href,
        className: "text-sm text-gray-500 hover:text-red-500"
      }, item.name)))))));
    }
    function links() {
      return [
        { rel: "stylesheet", href: tailwind_default },
        { rel: "icon", type: "image/svg", href: "/images/logo.png" }
      ];
    }
    var meta = () => {
      return { title: "Camille Meat Shop" };
    };
    function App() {
      return /* @__PURE__ */ React.createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React.createElement("head", null, /* @__PURE__ */ React.createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React.createElement("meta", {
        name: "viewport",
        content: "width=device-width,initial-scale=1"
      }), /* @__PURE__ */ React.createElement(import_remix5.Meta, null), /* @__PURE__ */ React.createElement(import_remix5.Links, null)), /* @__PURE__ */ React.createElement("body", null, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement(Example, null), /* @__PURE__ */ React.createElement(import_remix5.Outlet, null), /* @__PURE__ */ React.createElement(Footer, null)), /* @__PURE__ */ React.createElement(import_remix5.ScrollRestoration, null), /* @__PURE__ */ React.createElement(import_remix5.Scripts, null), /* @__PURE__ */ React.createElement(import_remix5.LiveReload, null)));
    }
    function CatchBoundary() {
      const caught = (0, import_remix5.useCatch)();
      return /* @__PURE__ */ React.createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React.createElement("head", null, /* @__PURE__ */ React.createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React.createElement(import_remix5.Links, null)), /* @__PURE__ */ React.createElement("body", null, /* @__PURE__ */ React.createElement(Error2, null), true ? /* @__PURE__ */ React.createElement(import_remix5.LiveReload, null) : null));
    }
    var assigned_orders_exports = {};
    __export2(assigned_orders_exports, {
      default: () => Example2
    });
    init_react2();
    var import_solid = require_solid();
    var positions = [
      {
        id: 1,
        title: "Order 123-456",
        type: "Packaging",
        location: "Phase 1 Block 2 Lot 3, Parklane Country Homes",
        department: "Evan Monreal",
        closeDate: "2022-01-07",
        closeDateFull: "January 7, 2022"
      },
      {
        id: 2,
        title: "Order 123-457",
        type: "For Delivery",
        location: "House #12, Sapphire Street, Camella Lessandra",
        department: "Samantha Lugtu",
        closeDate: "2022-01-07",
        closeDateFull: "January 7, 2022"
      },
      {
        id: 3,
        title: "Order 123-459",
        type: "Completed",
        location: "Block 76 Lot 5, Lumina Homes",
        department: "Joshua Lopez",
        closeDate: "2022-01-14",
        closeDateFull: "January 14, 2022"
      },
      {
        id: 3,
        title: "Order 123-005",
        type: "Completed",
        location: "Block 76 Lot 5, Lumina Homes",
        department: "Joshua Lopez",
        closeDate: "2022-01-14",
        closeDateFull: "January 14, 2022"
      },
      {
        id: 3,
        title: "Order 123-004",
        type: "Completed",
        location: "Block 76 Lot 5, Lumina Homes",
        department: "Joshua Lopez",
        closeDate: "2022-01-14",
        closeDateFull: "January 14, 2022"
      },
      {
        id: 3,
        title: "Order 123-003",
        type: "Completed",
        location: "Block 76 Lot 5, Lumina Homes",
        department: "Joshua Lopez",
        closeDate: "2022-01-14",
        closeDateFull: "January 14, 2022"
      },
      {
        id: 3,
        title: "Order 123-002",
        type: "Completed",
        location: "Block 76 Lot 5, Lumina Homes",
        department: "Joshua Lopez",
        closeDate: "2022-01-14",
        closeDateFull: "January 14, 2022"
      }
    ];
    function Example2() {
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
        className: "border-b border-gray-200 bg-white px-4 py-5 pt-24 sm:px-6"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "text-3xl font-extrabold leading-6 text-gray-900"
      }, "Assgined Orders"), /* @__PURE__ */ React.createElement("p", {
        className: "mt-3 text-sm text-gray-500"
      }, "List of all assgined orders to you.")), /* @__PURE__ */ React.createElement("div", {
        className: "overflow-hidden bg-white shadow sm:rounded-md"
      }, /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "divide-y divide-gray-200"
      }, positions.map((position) => /* @__PURE__ */ React.createElement("li", {
        key: position.id
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "block hover:bg-gray-50"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "px-4 py-4 sm:px-6"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between"
      }, /* @__PURE__ */ React.createElement("p", {
        className: "truncate text-xl font-medium text-red-500 hover:text-red-600"
      }, position.title), /* @__PURE__ */ React.createElement("div", {
        className: "ml-2 flex flex-shrink-0"
      }, /* @__PURE__ */ React.createElement("p", {
        className: `inline-flex rounded-full ${position.type === "Packaging" && "bg-red-100"} ${position.type === "For Delivery" && "bg-yellow-100"} ${position.type === "Completed" && "bg-green-100"} 
                        
                        px-2 text-xs font-semibold leading-5 
                        
                        ${position.type === "Packaging" && "text-red-900"}
                        
                        ${position.type === "For Delivery" && "text-yellow-900"}
                        
                        ${position.type === "Completed" && "text-green-900"}
                        
                        `
      }, position.type))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-2 sm:flex sm:justify-between"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "sm:flex"
      }, /* @__PURE__ */ React.createElement("p", {
        className: "flex items-center text-sm text-gray-500"
      }, /* @__PURE__ */ React.createElement(import_solid.UsersIcon, {
        className: "mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400",
        "aria-hidden": "true"
      }), position.department), /* @__PURE__ */ React.createElement("p", {
        className: "mt-2 flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-3"
      }, /* @__PURE__ */ React.createElement(import_solid.LocationMarkerIcon, {
        className: "mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400",
        "aria-hidden": "true"
      }), position.location)), /* @__PURE__ */ React.createElement("div", {
        className: "mt-2 flex items-center text-sm text-gray-500 sm:mt-0"
      }, /* @__PURE__ */ React.createElement(import_solid.CalendarIcon, {
        className: "mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400",
        "aria-hidden": "true"
      }), /* @__PURE__ */ React.createElement("p", null, position.type === "Completed" ? "Delivered on" : "Placed on", " ", /* @__PURE__ */ React.createElement("time", {
        dateTime: position.closeDate
      }, position.closeDateFull)))))))))));
    }
    var manage_products_exports = {};
    __export2(manage_products_exports, {
      default: () => Example3
    });
    init_react2();
    init_react2();
    var products = [
      {
        id: 1,
        imageSrc: "/images/BF-chicken-breaded-skin-350g.jpeg",
        imageAlt: "BF-chicken-breaded-skin-350g",
        name: "Chicken Breaded Skin",
        weight: "350g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 2,
        imageSrc: "/images/BF-chicken-breast-fillets-860g.jpeg",
        imageAlt: "BF-chicken-breast-fillets-860g",
        name: "Chicken Breasts Fillets",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 290,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 3,
        imageSrc: "/images/BF-chicken-breasts-860g.jpeg",
        imageAlt: "BF-chicken-breasts-860g",
        name: "Chicken Breasts",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 4,
        imageSrc: "/images/BF-chicken-leg-quarters-860g.jpeg",
        imageAlt: "BF-chicken-leg-quarters-860g",
        name: "Chicken Leg Quarters",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 5,
        imageSrc: "/images/BF-chicken-nuggets-200g.jpeg",
        imageAlt: "BF-chicken-nuggets-200g",
        name: "Chicken Nuggets",
        weight: "200g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 6,
        imageSrc: "/images/BF-chicken-popcorn-200g.jpeg",
        imageAlt: "BF-chicken-popcorn-200g",
        name: "Chicken Popcorn",
        weight: "200g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 7,
        imageSrc: "/images/BF-chicken-sticks-200g.jpeg",
        imageAlt: "BF-chicken-sticks-200g",
        name: "Chicken Sticks",
        weight: "200g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 8,
        imageSrc: "/images/BF-chicken-thighs-860g.jpeg",
        imageAlt: "BF-chicken-thighs-860g",
        name: "Chicken Thighs",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 9,
        imageSrc: "/images/BF-chicken-wings-860g.jpeg",
        imageAlt: "BF-chicken-wings-860g",
        name: "Chicken Wings",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 10,
        imageSrc: "/images/BF-drumstick-860g.jpeg",
        imageAlt: "BF-drumstick-860g",
        name: "Chicken Drumsticks",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 11,
        imageSrc: "/images/BF-everyday-chicken-piece.jpeg",
        imageAlt: "BF-everyday-chicken-piece",
        name: "Everyday Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 160,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 12,
        imageSrc: "/images/BF-family-feast-chicken.jpeg",
        imageAlt: "BF-family-feast-chicken",
        name: "Family Feast Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 280,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 13,
        imageSrc: "/images/BF-free-range-chicken.jpeg",
        imageAlt: "BF-free-range-chicken",
        name: "Free Range Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 250,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 14,
        imageSrc: "/images/BF-marinated-chicken-cut-ups-pepper-550g.jpeg",
        imageAlt: "BF-marinated-chicken-cut-ups-pepper-550g",
        name: "Marinated Chicken Cut Ups (Pepper)",
        weight: "550g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 115,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 15,
        imageSrc: "/images/BF-marinated-chicken-cut-ups-spicy-550g.jpeg",
        imageAlt: "BF-marinated-chicken-cut-ups-spicy-550g",
        name: "Marinated Chicken Cut Ups (Spicy)",
        weight: "550g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 115,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 16,
        imageSrc: "/images/BF-marinated-chicken-cut-ups-sweet-550g.jpeg",
        imageAlt: "BF-marinated-chicken-cut-ups-sweet-550g",
        name: "Marinated Chicken Cut Ups (Spicy)",
        weight: "550g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 115,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 17,
        imageSrc: "/images/BF-marinated-chicken-neck-500g.jpeg",
        imageAlt: "BF-marinated-chicken-neck-500g",
        name: "Marinated Chicken Neck",
        weight: "500g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 80,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 18,
        imageSrc: "/images/BF-premium-chicken.jpeg",
        imageAlt: "BF-premium-chicken",
        name: "Premium Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 250,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 19,
        imageSrc: "/images/BF-saucy-torikaraage-sweet-and-sour-450g.jpeg",
        imageAlt: "BF-saucy-torikaraage-sweet-and-sour-450g",
        name: "Saucy Torikaraage (Sweet and Sour)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 20,
        imageSrc: "/images/BF-saucy-torikaraage-teriyaki-450g.jpeg",
        imageAlt: "BF-saucy-torikaraage-teriyaki-450g",
        name: "Saucy Torikaraage (Sweet and Sour)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 21,
        imageSrc: "/images/BF-chicken-thigh-fillets-860g.jpeg",
        imageAlt: "BF-chicken-thigh-fillets-860g",
        name: "Chicken Thigh Fillets",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 290,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 22,
        imageSrc: "/images/BF-top-toriburger-cheese-and-chives-450g.jpeg",
        imageAlt: "BF-top-toriburger-cheese-and-chives-450g",
        name: "Top Toriburger (Cheese and Chives)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 200,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 23,
        imageSrc: "/images/BF-top-toriburger-classic-mayo-450g.jpeg",
        imageAlt: "BF-top-toriburger-classic-mayo-450g",
        name: "Top Toriburger (Classic Mayo)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 200,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 24,
        imageSrc: "/images/BF-top-torikatsu-cheese-and-chives-450g.jpeg",
        imageAlt: "BF-top-torikatsu-cheese-and-chives-450g",
        name: "Top Torikatsu (Cheese and Chives)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 25,
        imageSrc: "/images/BF-top-torikatsu-classic-mayo-450g.jpeg",
        imageAlt: "BF-top-torikatsu-classic-mayo-450g",
        name: "Top Torikatsu (Classic Mayo)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 26,
        imageSrc: "/images/BF-young-and-tender-chicken.jpeg",
        imageAlt: "BF-young-and-tender-chicken",
        name: "Young and Tender Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 190,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 27,
        imageSrc: "/images/BF-chicken-breaded-skin-350g.jpeg",
        imageAlt: "BF-chicken-breaded-skin-350g",
        name: "Chicken Breaded Skin",
        weight: "350g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 41,
        imageSrc: "/images/Camille-beef-cubes-500g.jpeg",
        imageAlt: "Camille-beef-cubes-500g",
        name: "Beef Cubes",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 42,
        imageSrc: "/images/Camille-beef-new-york-steak-500g.jpeg",
        imageAlt: "Camille-beef-new-york-steak-500g",
        name: "Beef New York Steak",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 43,
        imageSrc: "/images/Camille-beef-sakiyuki-500g.jpeg",
        imageAlt: "Camille-beef-sakiyuki-500g",
        name: "Beef Sakiyuki",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 44,
        imageSrc: "/images/Camille-beef-shanks-500g.jpeg",
        imageAlt: "Camille-beef-shanks-500g",
        name: "Beef Shanks",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 45,
        imageSrc: "/images/Camille-beef-strongranoff-500g.jpeg",
        imageAlt: "Camille-beef-strongranoff-500g",
        name: "Beef Strongranoff",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 46,
        imageSrc: "/images/Camille-ground-beef-500g.jpeg",
        imageAlt: "Camille-ground-beef-500g",
        name: "Ground Beef",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 47,
        imageSrc: "/images/Camille-ground-pork.jpeg",
        imageAlt: "Camille-ground-pork",
        name: "Ground Pork",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 48,
        imageSrc: "/images/Camille-pata-slice-500g.jpeg",
        imageAlt: "Camille-pata-slice-500g",
        name: "Pata Slice",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 49,
        imageSrc: "/images/Camille-pork-adobo-cut-500g.jpeg",
        imageAlt: "Camille-pork-adobo-cut-500g",
        name: "Pork Adobo Cut",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 50,
        imageSrc: "/images/Camille-pork-bacon-cut-500g.jpeg",
        imageAlt: "Camille-pork-bacon-cut-500g",
        name: "Pork Bacon Cut",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 51,
        imageSrc: "/images/Camille-pork-belly-slice-500g.jpeg",
        imageAlt: "Camille-pork-belly-slice-500g",
        name: "Pork Belly Slice",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 52,
        imageSrc: "/images/Camille-pork-sinigang-cut-500g.jpeg",
        imageAlt: "Camille-pork-sinigang-cut-500g",
        name: "Pork Sinigang Cut",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 53,
        imageSrc: "/images/Camille-porkchop-500g.jpeg",
        imageAlt: "Camille-porkchop-500g",
        name: "Pork Chop",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      }
    ];
    var returnTitle = ({
      onlyCategory
    }) => {
      if (onlyCategory === null) {
        return "All Products";
      } else if (onlyCategory === "Chicken") {
        return "Chicken Products";
      } else if (onlyCategory === "Pork") {
        return "Pork Products";
      } else if (onlyCategory === "Beef") {
        return "Beef Products";
      } else {
        return "All Products";
      }
    };
    function ProductsPage({
      onlyCategory
    }) {
      return /* @__PURE__ */ React.createElement("main", {
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl py-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8"
      }, /* @__PURE__ */ React.createElement("h1", {
        className: "text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl"
      }, returnTitle({ onlyCategory })), /* @__PURE__ */ React.createElement("div", {
        className: "mt-8 grid grid-cols-1 gap-y-12 sm:grid-cols-2 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8"
      }, products.sort((a, b) => b.id - a.id).map((product2) => {
        if (onlyCategory === "Chicken" && product2.category !== "Chicken")
          return;
        else if (onlyCategory === "Beef" && product2.category !== "Beef")
          return;
        else if (onlyCategory === "Pork" && product2.category !== "Pork")
          return;
        return /* @__PURE__ */ React.createElement("div", {
          key: product2.id
        }, /* @__PURE__ */ React.createElement("div", {
          className: "relative"
        }, /* @__PURE__ */ React.createElement("div", {
          className: "relative h-72 w-full overflow-hidden rounded-lg"
        }, /* @__PURE__ */ React.createElement("img", {
          src: product2.imageSrc,
          alt: product2.imageAlt,
          className: "h-full w-full object-cover object-center"
        })), /* @__PURE__ */ React.createElement("div", {
          className: "relative mt-4 h-16"
        }, /* @__PURE__ */ React.createElement("div", {
          className: "flex justify-between "
        }, /* @__PURE__ */ React.createElement("h3", {
          className: "text-md font-medium text-gray-900 hover:text-red-500"
        }, /* @__PURE__ */ React.createElement("a", {
          href: `/products/${product2.id}`
        }, product2.name)), /* @__PURE__ */ React.createElement("div", {
          className: "ml-2"
        }, /* @__PURE__ */ React.createElement("p", {
          className: "relative text-lg font-semibold text-red-500"
        }, "\u20B1", product2.price))), /* @__PURE__ */ React.createElement("p", {
          className: "relative text-sm font-semibold text-gray-500"
        }, product2.brand)), /* @__PURE__ */ React.createElement("a", {
          href: `/products/${product2.id}`
        }, /* @__PURE__ */ React.createElement("div", {
          className: "absolute inset-x-0 top-0  flex h-72 cursor-pointer items-end justify-end overflow-hidden rounded-lg p-4"
        }, /* @__PURE__ */ React.createElement("div", {
          "aria-hidden": "true",
          className: "absolute inset-x-0 bottom-0 h-36  bg-gradient-to-t from-neutral-500 to-white opacity-10  hover:opacity-5"
        })))), /* @__PURE__ */ React.createElement("div", {
          className: "mt-6"
        }, /* @__PURE__ */ React.createElement("a", {
          href: "#",
          className: "relative flex items-center justify-center rounded-md border border-transparent bg-red-500 py-2 px-8 text-sm font-medium text-white hover:bg-red-400"
        }, "Add to cart", /* @__PURE__ */ React.createElement("span", {
          className: "sr-only"
        }))));
      }))));
    }
    function Example3() {
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
        className: " bg-white px-4 py-5 pt-24 sm:px-6"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "text-3xl font-extrabold leading-6 text-gray-900"
      }, "Manage Products"), /* @__PURE__ */ React.createElement("p", {
        className: "mt-3 text-sm text-gray-500"
      }, "View, add, edit, or delete products.")), /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-col px-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "overflow-hidden border-b border-gray-200 shadow sm:rounded-lg"
      }, /* @__PURE__ */ React.createElement("table", {
        className: "min-w-full divide-y divide-gray-200"
      }, /* @__PURE__ */ React.createElement("thead", {
        className: "bg-gray-50"
      }, /* @__PURE__ */ React.createElement("tr", null, /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Product"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Description"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Price"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Weight"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Stock"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Brand"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "relative px-6 py-3"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Edit")))), /* @__PURE__ */ React.createElement("tbody", {
        className: "divide-y divide-gray-200 bg-white"
      }, products.map((product2) => /* @__PURE__ */ React.createElement("tr", {
        key: product2.id
      }, /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "h-10 w-10 flex-shrink-0"
      }, /* @__PURE__ */ React.createElement("img", {
        className: "h-10 w-10 rounded-md",
        src: product2.imageSrc,
        alt: ""
      })), /* @__PURE__ */ React.createElement("div", {
        className: "ml-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm font-medium text-gray-900"
      }, product2.name)))), /* @__PURE__ */ React.createElement("td", {
        className: "wrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-900"
      }, product2.description)), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-900"
      }, product2.price)), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-900"
      }, product2.weight)), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-900"
      }, "999")), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4 text-sm text-gray-900"
      }, product2.brand), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4 text-right text-sm font-medium"
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "text-red-500 hover:text-red-600"
      }, "Edit")))))))))));
    }
    var products_exports = {};
    __export2(products_exports, {
      Brand: () => Brand,
      Category: () => Category,
      default: () => ProductsPage2,
      products: () => products2
    });
    init_react2();
    var Brand = /* @__PURE__ */ ((Brand2) => {
      Brand2["CAMILLE"] = "Camille";
      Brand2["BOUNTY_FRESH"] = "Bounty Fresh";
      return Brand2;
    })(Brand || {});
    var Category = /* @__PURE__ */ ((Category3) => {
      Category3["CHICKEN"] = "Chicken";
      Category3["PORK"] = "Pork";
      Category3["BEEF"] = "Beef";
      return Category3;
    })(Category || {});
    var products2 = [
      {
        id: 1,
        imageSrc: "/images/BF-chicken-breaded-skin-350g.jpeg",
        imageAlt: "BF-chicken-breaded-skin-350g",
        name: "Chicken Breaded Skin",
        weight: "350g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 2,
        imageSrc: "/images/BF-chicken-breast-fillets-860g.jpeg",
        imageAlt: "BF-chicken-breast-fillets-860g",
        name: "Chicken Breasts Fillets",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 290,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 3,
        imageSrc: "/images/BF-chicken-breasts-860g.jpeg",
        imageAlt: "BF-chicken-breasts-860g",
        name: "Chicken Breasts",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 4,
        imageSrc: "/images/BF-chicken-leg-quarters-860g.jpeg",
        imageAlt: "BF-chicken-leg-quarters-860g",
        name: "Chicken Leg Quarters",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 5,
        imageSrc: "/images/BF-chicken-nuggets-200g.jpeg",
        imageAlt: "BF-chicken-nuggets-200g",
        name: "Chicken Nuggets",
        weight: "200g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 6,
        imageSrc: "/images/BF-chicken-popcorn-200g.jpeg",
        imageAlt: "BF-chicken-popcorn-200g",
        name: "Chicken Popcorn",
        weight: "200g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 7,
        imageSrc: "/images/BF-chicken-sticks-200g.jpeg",
        imageAlt: "BF-chicken-sticks-200g",
        name: "Chicken Sticks",
        weight: "200g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 8,
        imageSrc: "/images/BF-chicken-thighs-860g.jpeg",
        imageAlt: "BF-chicken-thighs-860g",
        name: "Chicken Thighs",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 9,
        imageSrc: "/images/BF-chicken-wings-860g.jpeg",
        imageAlt: "BF-chicken-wings-860g",
        name: "Chicken Wings",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 10,
        imageSrc: "/images/BF-drumstick-860g.jpeg",
        imageAlt: "BF-drumstick-860g",
        name: "Chicken Drumsticks",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 11,
        imageSrc: "/images/BF-everyday-chicken-piece.jpeg",
        imageAlt: "BF-everyday-chicken-piece",
        name: "Everyday Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 160,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 12,
        imageSrc: "/images/BF-family-feast-chicken.jpeg",
        imageAlt: "BF-family-feast-chicken",
        name: "Family Feast Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 280,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 13,
        imageSrc: "/images/BF-free-range-chicken.jpeg",
        imageAlt: "BF-free-range-chicken",
        name: "Free Range Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 250,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 14,
        imageSrc: "/images/BF-marinated-chicken-cut-ups-pepper-550g.jpeg",
        imageAlt: "BF-marinated-chicken-cut-ups-pepper-550g",
        name: "Marinated Chicken Cut Ups (Pepper)",
        weight: "550g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 115,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 15,
        imageSrc: "/images/BF-marinated-chicken-cut-ups-spicy-550g.jpeg",
        imageAlt: "BF-marinated-chicken-cut-ups-spicy-550g",
        name: "Marinated Chicken Cut Ups (Spicy)",
        weight: "550g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 115,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 16,
        imageSrc: "/images/BF-marinated-chicken-cut-ups-sweet-550g.jpeg",
        imageAlt: "BF-marinated-chicken-cut-ups-sweet-550g",
        name: "Marinated Chicken Cut Ups (Spicy)",
        weight: "550g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 115,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 17,
        imageSrc: "/images/BF-marinated-chicken-neck-500g.jpeg",
        imageAlt: "BF-marinated-chicken-neck-500g",
        name: "Marinated Chicken Neck",
        weight: "500g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 80,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 18,
        imageSrc: "/images/BF-premium-chicken.jpeg",
        imageAlt: "BF-premium-chicken",
        name: "Premium Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 250,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 19,
        imageSrc: "/images/BF-saucy-torikaraage-sweet-and-sour-450g.jpeg",
        imageAlt: "BF-saucy-torikaraage-sweet-and-sour-450g",
        name: "Saucy Torikaraage (Sweet and Sour)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 20,
        imageSrc: "/images/BF-saucy-torikaraage-teriyaki-450g.jpeg",
        imageAlt: "BF-saucy-torikaraage-teriyaki-450g",
        name: "Saucy Torikaraage (Sweet and Sour)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 21,
        imageSrc: "/images/BF-chicken-thigh-fillets-860g.jpeg",
        imageAlt: "BF-chicken-thigh-fillets-860g",
        name: "Chicken Thigh Fillets",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 290,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 22,
        imageSrc: "/images/BF-top-toriburger-cheese-and-chives-450g.jpeg",
        imageAlt: "BF-top-toriburger-cheese-and-chives-450g",
        name: "Top Toriburger (Cheese and Chives)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 200,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 23,
        imageSrc: "/images/BF-top-toriburger-classic-mayo-450g.jpeg",
        imageAlt: "BF-top-toriburger-classic-mayo-450g",
        name: "Top Toriburger (Classic Mayo)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 200,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 24,
        imageSrc: "/images/BF-top-torikatsu-cheese-and-chives-450g.jpeg",
        imageAlt: "BF-top-torikatsu-cheese-and-chives-450g",
        name: "Top Torikatsu (Cheese and Chives)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 25,
        imageSrc: "/images/BF-top-torikatsu-classic-mayo-450g.jpeg",
        imageAlt: "BF-top-torikatsu-classic-mayo-450g",
        name: "Top Torikatsu (Classic Mayo)",
        weight: "450g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 220,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 26,
        imageSrc: "/images/BF-young-and-tender-chicken.jpeg",
        imageAlt: "BF-young-and-tender-chicken",
        name: "Young and Tender Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 190,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 27,
        imageSrc: "/images/BF-chicken-breaded-skin-350g.jpeg",
        imageAlt: "BF-chicken-breaded-skin-350g",
        name: "Chicken Breaded Skin",
        weight: "350g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 41,
        imageSrc: "/images/Camille-beef-cubes-500g.jpeg",
        imageAlt: "Camille-beef-cubes-500g",
        name: "Beef Cubes",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 42,
        imageSrc: "/images/Camille-beef-new-york-steak-500g.jpeg",
        imageAlt: "Camille-beef-new-york-steak-500g",
        name: "Beef New York Steak",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 43,
        imageSrc: "/images/Camille-beef-sakiyuki-500g.jpeg",
        imageAlt: "Camille-beef-sakiyuki-500g",
        name: "Beef Sakiyuki",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 44,
        imageSrc: "/images/Camille-beef-shanks-500g.jpeg",
        imageAlt: "Camille-beef-shanks-500g",
        name: "Beef Shanks",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 45,
        imageSrc: "/images/Camille-beef-strongranoff-500g.jpeg",
        imageAlt: "Camille-beef-strongranoff-500g",
        name: "Beef Strongranoff",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 46,
        imageSrc: "/images/Camille-ground-beef-500g.jpeg",
        imageAlt: "Camille-ground-beef-500g",
        name: "Ground Beef",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 47,
        imageSrc: "/images/Camille-ground-pork.jpeg",
        imageAlt: "Camille-ground-pork",
        name: "Ground Pork",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 48,
        imageSrc: "/images/Camille-pata-slice-500g.jpeg",
        imageAlt: "Camille-pata-slice-500g",
        name: "Pata Slice",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 49,
        imageSrc: "/images/Camille-pork-adobo-cut-500g.jpeg",
        imageAlt: "Camille-pork-adobo-cut-500g",
        name: "Pork Adobo Cut",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 50,
        imageSrc: "/images/Camille-pork-bacon-cut-500g.jpeg",
        imageAlt: "Camille-pork-bacon-cut-500g",
        name: "Pork Bacon Cut",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 51,
        imageSrc: "/images/Camille-pork-belly-slice-500g.jpeg",
        imageAlt: "Camille-pork-belly-slice-500g",
        name: "Pork Belly Slice",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 52,
        imageSrc: "/images/Camille-pork-sinigang-cut-500g.jpeg",
        imageAlt: "Camille-pork-sinigang-cut-500g",
        name: "Pork Sinigang Cut",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 53,
        imageSrc: "/images/Camille-porkchop-500g.jpeg",
        imageAlt: "Camille-porkchop-500g",
        name: "Pork Chop",
        weight: "500g",
        brand: "Camille",
        category: "Pork",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      }
    ];
    var returnTitle2 = ({
      onlyCategory
    }) => {
      if (onlyCategory === null) {
        return "All Products";
      } else if (onlyCategory === "Chicken") {
        return "Chicken Products";
      } else if (onlyCategory === "Pork") {
        return "Pork Products";
      } else if (onlyCategory === "Beef") {
        return "Beef Products";
      } else {
        return "All Products";
      }
    };
    function ProductsPage2({
      onlyCategory
    }) {
      return /* @__PURE__ */ React.createElement("main", {
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl py-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8"
      }, /* @__PURE__ */ React.createElement("h1", {
        className: "text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl"
      }, returnTitle2({ onlyCategory })), /* @__PURE__ */ React.createElement("div", {
        className: "mt-8 grid grid-cols-1 gap-y-12 sm:grid-cols-2 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8"
      }, products2.sort((a, b) => b.id - a.id).map((product2) => {
        if (onlyCategory === "Chicken" && product2.category !== "Chicken")
          return;
        else if (onlyCategory === "Beef" && product2.category !== "Beef")
          return;
        else if (onlyCategory === "Pork" && product2.category !== "Pork")
          return;
        return /* @__PURE__ */ React.createElement("div", {
          key: product2.id
        }, /* @__PURE__ */ React.createElement("div", {
          className: "relative"
        }, /* @__PURE__ */ React.createElement("div", {
          className: "relative h-72 w-full overflow-hidden rounded-lg"
        }, /* @__PURE__ */ React.createElement("img", {
          src: product2.imageSrc,
          alt: product2.imageAlt,
          className: "h-full w-full object-cover object-center"
        })), /* @__PURE__ */ React.createElement("div", {
          className: "relative mt-4 h-16"
        }, /* @__PURE__ */ React.createElement("div", {
          className: "flex justify-between "
        }, /* @__PURE__ */ React.createElement("h3", {
          className: "text-md font-medium text-gray-900 hover:text-red-500"
        }, /* @__PURE__ */ React.createElement("a", {
          href: `/products/${product2.id}`
        }, product2.name)), /* @__PURE__ */ React.createElement("div", {
          className: "ml-2"
        }, /* @__PURE__ */ React.createElement("p", {
          className: "relative text-lg font-semibold text-red-500"
        }, "\u20B1", product2.price))), /* @__PURE__ */ React.createElement("p", {
          className: "relative text-sm font-semibold text-gray-500"
        }, product2.brand)), /* @__PURE__ */ React.createElement("a", {
          href: `/products/${product2.id}`
        }, /* @__PURE__ */ React.createElement("div", {
          className: "absolute inset-x-0 top-0  flex h-72 cursor-pointer items-end justify-end overflow-hidden rounded-lg p-4"
        }, /* @__PURE__ */ React.createElement("div", {
          "aria-hidden": "true",
          className: "absolute inset-x-0 bottom-0 h-36  bg-gradient-to-t from-neutral-500 to-white opacity-10  hover:opacity-5"
        })))), /* @__PURE__ */ React.createElement("div", {
          className: "mt-6"
        }, /* @__PURE__ */ React.createElement("a", {
          href: "#",
          className: "relative flex items-center justify-center rounded-md border border-transparent bg-red-500 py-2 px-8 text-sm font-medium text-white hover:bg-red-400"
        }, "Add to cart", /* @__PURE__ */ React.createElement("span", {
          className: "sr-only"
        }))));
      }))));
    }
    var manage_orders_exports = {};
    __export2(manage_orders_exports, {
      default: () => Example4
    });
    init_react2();
    var people = [
      {
        name: "Lorem Ipsum",
        id: "123-456",
        title: "Beef Cubes",
        department: "Optimization",
        role: "01-12-2022",
        email: "lorem.ipsum@example.com",
        number: "0912-123-1234",
        address: "House #123, Sample Subdivision"
      },
      {
        name: "Lorem Ipsum",
        id: "123-456",
        title: "Beef Cubes",
        department: "Optimization",
        role: "01-12-2022",
        email: "lorem.ipsum@example.com",
        number: "0912-123-1234",
        address: "House #123, Sample Subdivision"
      },
      {
        name: "Lorem Ipsum",
        id: "123-456",
        title: "Beef Cubes",
        department: "Optimization",
        role: "01-12-2022",
        email: "lorem.ipsum@example.com",
        number: "0912-123-1234",
        address: "House #123, Sample Subdivision"
      },
      {
        name: "Lorem Ipsum",
        id: "123-456",
        title: "Beef Cubes",
        department: "Optimization",
        role: "01-12-2022",
        email: "lorem.ipsum@example.com",
        number: "0912-123-1234",
        address: "House #123, Sample Subdivision"
      },
      {
        name: "Lorem Ipsum",
        id: "123-456",
        title: "Beef Cubes",
        department: "Optimization",
        role: "01-12-2022",
        email: "lorem.ipsum@example.com",
        number: "0912-123-1234",
        address: "House #123, Sample Subdivision"
      },
      {
        name: "Lorem Ipsum",
        id: "123-456",
        title: "Beef Cubes",
        department: "Optimization",
        role: "01-12-2022",
        email: "lorem.ipsum@example.com",
        number: "0912-123-1234",
        address: "House #123, Sample Subdivision"
      }
    ];
    function Example4() {
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
        className: " bg-white px-4 py-5 pt-24 sm:px-6"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "text-3xl font-extrabold leading-6 text-gray-900"
      }, "Manage Orders"), /* @__PURE__ */ React.createElement("p", {
        className: "mt-3 text-sm text-gray-500"
      }, "View, edit, or delete orders.")), /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-col px-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "overflow-hidden border-b border-gray-200 shadow sm:rounded-lg"
      }, /* @__PURE__ */ React.createElement("table", {
        className: "min-w-full divide-y divide-gray-200"
      }, /* @__PURE__ */ React.createElement("thead", {
        className: "bg-gray-50"
      }, /* @__PURE__ */ React.createElement("tr", null, /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Order Id"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Customer"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Address"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Order Items"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Status"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Date"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "relative px-6 py-3"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Action")))), /* @__PURE__ */ React.createElement("tbody", {
        className: "divide-y divide-gray-200 bg-white"
      }, people.map((person) => /* @__PURE__ */ React.createElement("tr", {
        key: person.email
      }, /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex "
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm font-medium text-gray-900"
      }, person.id))), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center"
      }, /* @__PURE__ */ React.createElement("div", {
        className: ""
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm font-medium text-gray-900"
      }, person.name), /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-500"
      }, person.email), /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-500"
      }, person.number)))), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex "
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm font-medium text-gray-900"
      }, person.address))), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-900"
      }, "1x ", person.title), /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-900"
      }, "2x ", person.title), /* @__PURE__ */ React.createElement("div", {
        className: "text-sm text-gray-900"
      }, "3x ", person.title)), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800"
      }, "Completed")), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4 text-sm text-gray-500"
      }, person.role), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4 text-right text-sm font-medium"
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "text-red-500 hover:text-red-600"
      }, "Edit")))))))))));
    }
    var order_history_exports = {};
    __export2(order_history_exports, {
      default: () => Example5
    });
    init_react2();
    var import_remix6 = __toESM(require_remix());
    var orders = [
      {
        number: "WU88191111",
        date: "January 22, 2021",
        datetime: "2021-01-22",
        invoiceHref: "#",
        total: "$238.00",
        products: [
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          }
        ]
      },
      {
        number: "WU88191111",
        date: "January 22, 2021",
        datetime: "2021-01-22",
        invoiceHref: "#",
        total: "$238.00",
        products: [
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          }
        ]
      },
      {
        number: "WU88191111",
        date: "January 22, 2021",
        datetime: "2021-01-22",
        invoiceHref: "#",
        total: "$238.00",
        products: [
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          }
        ]
      },
      {
        number: "WU88191111",
        date: "January 22, 2021",
        datetime: "2021-01-22",
        invoiceHref: "#",
        total: "$238.00",
        products: [
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          },
          {
            id: 1,
            name: "Machined Pen and Pencil Set",
            href: "#",
            price: "$70.00",
            status: "Delivered Jan 25, 2021",
            imageSrc: "https://tailwindui.com/img/ecommerce-images/order-history-page-02-product-01.jpg",
            imageAlt: "Detail of mechanical pencil tip with machined black steel shaft and chrome lead tip."
          }
        ]
      }
    ];
    function Example5() {
      return /* @__PURE__ */ React.createElement("div", {
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-7xl py-16 px-4 sm:px-6 lg:px-8 lg:pb-24"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "max-w-xl"
      }, /* @__PURE__ */ React.createElement("h1", {
        className: "text-2xl font-extrabold tracking-tight text-gray-900 sm:text-3xl"
      }, "Order history"), /* @__PURE__ */ React.createElement("p", {
        className: "mt-2 text-sm text-gray-500"
      }, "Check the status of recent orders, manage returns, and download invoices.")), /* @__PURE__ */ React.createElement("div", {
        className: "mt-16"
      }, /* @__PURE__ */ React.createElement("h2", {
        className: "sr-only"
      }, "Recent orders"), /* @__PURE__ */ React.createElement("div", {
        className: "space-y-20"
      }, orders.map((order) => /* @__PURE__ */ React.createElement("div", {
        key: order.number
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "sr-only"
      }, "Order placed on", " ", /* @__PURE__ */ React.createElement("time", {
        dateTime: order.datetime
      }, order.date)), /* @__PURE__ */ React.createElement("div", {
        className: "rounded-lg bg-gray-50 py-6 px-4 sm:flex sm:items-center sm:justify-between sm:space-x-6 sm:px-6 lg:space-x-8"
      }, /* @__PURE__ */ React.createElement("dl", {
        className: "flex-auto space-y-6 divide-y divide-gray-200 text-sm text-gray-600 sm:grid sm:grid-cols-3 sm:gap-x-6 sm:space-y-0 sm:divide-y-0 lg:w-1/2 lg:flex-none lg:gap-x-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex justify-between sm:block"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "font-medium text-gray-900"
      }, "Date placed"), /* @__PURE__ */ React.createElement("dd", {
        className: "sm:mt-1"
      }, /* @__PURE__ */ React.createElement("time", {
        dateTime: order.datetime
      }, order.date))), /* @__PURE__ */ React.createElement("div", {
        className: "flex justify-between pt-6 sm:block sm:pt-0"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "font-medium text-gray-900"
      }, "Order number"), /* @__PURE__ */ React.createElement("dd", {
        className: "sm:mt-1"
      }, order.number)), /* @__PURE__ */ React.createElement("div", {
        className: "flex justify-between pt-6 font-medium text-gray-900 sm:block sm:pt-0"
      }, /* @__PURE__ */ React.createElement("dt", null, "Total amount"), /* @__PURE__ */ React.createElement("dd", {
        className: "sm:mt-1"
      }, order.total))), /* @__PURE__ */ React.createElement(import_remix6.Link, {
        to: order.invoiceHref,
        className: "mt-6 flex w-full items-center justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto"
      }, "View Invoice", /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "for order ", order.number))), /* @__PURE__ */ React.createElement("table", {
        className: "mt-4 w-full text-gray-500 sm:mt-6"
      }, /* @__PURE__ */ React.createElement("caption", {
        className: "sr-only"
      }, "Products"), /* @__PURE__ */ React.createElement("thead", {
        className: "sr-only text-left text-sm text-gray-500 sm:not-sr-only"
      }, /* @__PURE__ */ React.createElement("tr", null, /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "py-3 pr-8 font-normal sm:w-2/5 lg:w-1/3"
      }, "Product"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "hidden w-1/5 py-3 pr-8 font-normal sm:table-cell"
      }, "Price"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "hidden py-3 pr-8 font-normal sm:table-cell"
      }, "Status"), /* @__PURE__ */ React.createElement("th", {
        scope: "col",
        className: "w-0 py-3 text-right font-normal"
      }, "Info"))), /* @__PURE__ */ React.createElement("tbody", {
        className: "divide-y divide-gray-200 border-b border-gray-200 text-sm sm:border-t"
      }, order.products.map((product2) => /* @__PURE__ */ React.createElement("tr", {
        key: product2.id
      }, /* @__PURE__ */ React.createElement("td", {
        className: "py-6 pr-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center"
      }, /* @__PURE__ */ React.createElement("img", {
        src: product2.imageSrc,
        alt: product2.imageAlt,
        className: "mr-6 h-16 w-16 rounded object-cover object-center"
      }), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("div", {
        className: "font-medium text-gray-900"
      }, product2.name), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1 sm:hidden"
      }, product2.price)))), /* @__PURE__ */ React.createElement("td", {
        className: "hidden py-6 pr-8 sm:table-cell"
      }, product2.price), /* @__PURE__ */ React.createElement("td", {
        className: "hidden py-6 pr-8 sm:table-cell"
      }, product2.status), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap py-6 text-right font-medium"
      }, /* @__PURE__ */ React.createElement(import_remix6.Link, {
        to: product2.href,
        className: "text-indigo-600"
      }, "View", /* @__PURE__ */ React.createElement("span", {
        className: "hidden lg:inline"
      }, " Product"), /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, ", ", product2.name)))))))))))));
    }
    var id_exports = {};
    __export2(id_exports, {
      default: () => Example6
    });
    init_react2();
    var import_react32 = require_react();
    var import_react42 = require_dist();
    var import_outline2 = require_outline();
    var import_remix7 = __toESM(require_remix());
    var import_tiny_invariant = __toESM(require_tiny_invariant_cjs());
    init_react2();
    var import_solid2 = require_solid();
    function Quantity() {
      return /* @__PURE__ */ React.createElement("div", {
        className: "relative inline-flex rounded-md shadow-sm"
      }, /* @__PURE__ */ React.createElement("button", {
        type: "button",
        className: "relative inline-flex items-center rounded-l-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Previous"), /* @__PURE__ */ React.createElement(import_solid2.MinusSmIcon, {
        className: "h-5 w-5",
        "aria-hidden": "true"
      })), /* @__PURE__ */ React.createElement("label", {
        htmlFor: "quantity",
        className: "sr-only"
      }, "Quantity"), /* @__PURE__ */ React.createElement("input", {
        name: "quantity",
        id: "quantity",
        className: "flex w-16 border border-gray-300 px-2 text-center shadow-sm  sm:text-sm",
        placeholder: "1"
      }), /* @__PURE__ */ React.createElement("button", {
        type: "button",
        className: "relative -ml-px inline-flex items-center rounded-r-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Next"), /* @__PURE__ */ React.createElement(import_solid2.PlusSmIcon, {
        className: "h-5 w-5",
        "aria-hidden": "true"
      })));
    }
    var product = {
      name: "Zip Tote Basket",
      price: "$140",
      rating: 4,
      breadcrumbs: [
        { id: 1, name: "Women", href: "#" },
        { id: 2, name: "Clothing", href: "#" }
      ],
      images: [
        {
          id: 1,
          name: "Angled view",
          src: "https://tailwindui.com/img/ecommerce-images/product-page-03-product-01.jpg",
          alt: "Angled front view with bag zipped and handles upright."
        }
      ],
      colors: [
        {
          name: "Washed Black",
          bgColor: "bg-gray-700",
          selectedColor: "ring-gray-700"
        },
        { name: "White", bgColor: "bg-white", selectedColor: "ring-gray-400" },
        {
          name: "Washed Gray",
          bgColor: "bg-gray-500",
          selectedColor: "ring-gray-500"
        }
      ],
      description: `
    <p>The Zip Tote Basket is the perfect midpoint between shopping tote and comfy backpack. With convertible straps, you can hand carry, should sling, or backpack this convenient and spacious bag. The zip top and durable canvas construction keeps your goods protected for all-day use.</p>
  `,
      details: [
        {
          name: "Storage Information",
          items: [
            "Multiple strap configurations",
            "Spacious interior with top zip",
            "Leather handle and tabs",
            "Interior dividers",
            "Stainless strap loops",
            "Double stitched construction",
            "Water-resistant"
          ]
        },
        {
          name: "Delivery Information",
          items: [
            "Multiple strap configurations",
            "Spacious interior with top zip",
            "Leather handle and tabs",
            "Interior dividers",
            "Stainless strap loops",
            "Double stitched construction",
            "Water-resistant"
          ]
        },
        {
          name: "Promos",
          items: [
            "Multiple strap configurations",
            "Spacious interior with top zip",
            "Leather handle and tabs",
            "Interior dividers",
            "Stainless strap loops",
            "Double stitched construction",
            "Water-resistant"
          ]
        }
      ]
    };
    function classNames(...classes) {
      return classes.filter(Boolean).join(" ");
    }
    function Example6() {
      const [selectedColor, setSelectedColor] = (0, import_react32.useState)(product.colors[0]);
      const { id } = (0, import_remix7.useParams)();
      const prod3 = products.find((p) => p.id === Number(id));
      (0, import_tiny_invariant.default)(prod3, "error");
      const breads = [
        { label: "All Products", route: "/products" },
        { label: prod3.category, route: `/${prod3.category.toLowerCase()}` }
      ];
      return /* @__PURE__ */ React.createElement("div", {
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8"
      }, /* @__PURE__ */ React.createElement("nav", {
        "aria-label": "Breadcrumb",
        className: "mx-auto mt-8 mb-8 max-w-7xl lg:mt-0"
      }, /* @__PURE__ */ React.createElement("ol", {
        role: "list",
        className: "flex items-center"
      }, breads.map((breadcrumb) => /* @__PURE__ */ React.createElement("li", {
        key: breadcrumb.label
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center"
      }, /* @__PURE__ */ React.createElement("a", {
        href: breadcrumb.route,
        className: " text-sm font-medium text-gray-900 hover:text-red-600"
      }, breadcrumb.label), /* @__PURE__ */ React.createElement("svg", {
        "aria-hidden": "true",
        width: "24",
        height: "24",
        fill: "none",
        className: "mx-2 flex-none text-gray-300"
      }, /* @__PURE__ */ React.createElement("path", {
        d: "M10.75 8.75l3.5 3.25-3.5 3.25",
        stroke: "currentColor",
        strokeWidth: "1.5",
        strokeLinecap: "round",
        strokeLinejoin: "round"
      }))))), /* @__PURE__ */ React.createElement("li", {
        className: "text-sm"
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        "aria-current": "page",
        className: "font-medium text-red-400 hover:text-red-600"
      }, prod3.name)))), /* @__PURE__ */ React.createElement("div", {
        className: "lg:grid lg:grid-cols-2 lg:items-start lg:gap-x-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-col-reverse"
      }, /* @__PURE__ */ React.createElement("img", {
        src: prod3.imageSrc,
        alt: prod3.imageAlt,
        className: "h-full w-full object-cover object-center sm:rounded-lg"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "mt-10 px-4 sm:mt-16 sm:px-0 lg:mt-0"
      }, /* @__PURE__ */ React.createElement("h1", {
        className: "text-4xl font-extrabold tracking-tight text-gray-900"
      }, prod3.name), /* @__PURE__ */ React.createElement("div", {
        className: "mt-3"
      }, /* @__PURE__ */ React.createElement("h2", {
        className: "sr-only"
      }, "Product information"), /* @__PURE__ */ React.createElement("p", {
        className: "text-3xl font-semibold text-red-500"
      }, "\u20B1", prod3.price, " ")), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "sr-only"
      }, "Description"), /* @__PURE__ */ React.createElement("p", {
        className: "mb-2 text-base font-medium text-gray-900"
      }, prod3.weight ? `${prod3.weight} per quantity` : null), /* @__PURE__ */ React.createElement("p", {
        className: "space-y-6 text-base text-gray-700"
      }, prod3.description)), /* @__PURE__ */ React.createElement("form", {
        className: "mt-6"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h3", {
        className: "text-md mb-2 font-medium text-gray-900"
      }, "Quantity"), /* @__PURE__ */ React.createElement(Quantity, null)), /* @__PURE__ */ React.createElement("div", {
        className: "sm:flex-col1 mt-10 flex"
      }, /* @__PURE__ */ React.createElement("button", {
        type: "submit",
        className: "flex max-w-xs flex-1 items-center justify-center rounded-md border border-transparent bg-red-500 py-3 px-8 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-offset-2 focus:ring-offset-gray-50 sm:w-full"
      }, "Add to cart"))), /* @__PURE__ */ React.createElement("section", {
        "aria-labelledby": "details-heading",
        className: "mt-12"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "details-heading",
        className: "sr-only"
      }, "Additional details"), /* @__PURE__ */ React.createElement("div", {
        className: "divide-y divide-gray-200 border-t"
      }, product.details.map((detail) => /* @__PURE__ */ React.createElement(import_react42.Disclosure, {
        as: "div",
        key: detail.name
      }, ({ open }) => /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("h3", null, /* @__PURE__ */ React.createElement(import_react42.Disclosure.Button, {
        className: "group relative flex w-full items-center justify-between py-6 text-left"
      }, /* @__PURE__ */ React.createElement("span", {
        className: classNames(open ? "text-red-500 group-hover:text-red-600" : "text-gray-900", "text-sm font-medium")
      }, detail.name), /* @__PURE__ */ React.createElement("span", {
        className: "ml-6 flex items-center"
      }, open ? /* @__PURE__ */ React.createElement(import_outline2.MinusSmIcon, {
        className: "block h-6 w-6 text-red-500 group-hover:text-red-600",
        "aria-hidden": "true"
      }) : /* @__PURE__ */ React.createElement(import_outline2.PlusSmIcon, {
        className: "block h-6 w-6 text-gray-400 group-hover:text-gray-500",
        "aria-hidden": "true"
      })))), /* @__PURE__ */ React.createElement(import_react42.Disclosure.Panel, {
        as: "div",
        className: "prose prose-sm pb-6"
      }, /* @__PURE__ */ React.createElement("ul", {
        role: "list"
      }, detail.items.map((item) => /* @__PURE__ */ React.createElement("li", {
        key: item
      }, item)))))))))))));
    }
    var checkout_exports = {};
    __export2(checkout_exports, {
      default: () => Example7
    });
    init_react2();
    var import_react52 = require_react();
    var import_react62 = require_dist();
    var import_solid4 = require_solid();
    var import_outline3 = require_outline();
    init_react2();
    var import_solid3 = require_solid();
    var prod = [
      {
        id: 18,
        imageSrc: "/images/BF-premium-chicken.jpeg",
        imageAlt: "BF-premium-chicken",
        name: "Premium Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 250,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 41,
        imageSrc: "/images/Camille-beef-cubes-500g.jpeg",
        imageAlt: "Camille-beef-cubes-500g",
        name: "Beef Cubes",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      }
    ];
    var paymentMethods = [
      { id: "gcash", title: "GCash", imageSrc: "/images/gcash-logo.png" },
      { id: "card", title: "Credit or debit card" },
      { id: "grabpay", title: "GrabPay", imageSrc: "/images/grabpay-logo.png" },
      { id: "paymaya", title: "PayMaya", imageSrc: "/images/paymaya-logo.png" },
      { id: "cod", title: "Cash on delivery" }
    ];
    function classNames2(...classes) {
      return classes.filter(Boolean).join(" ");
    }
    function Example7() {
      const [selectedPaymentMethod, setSelectedPaymentMethod] = (0, import_react52.useState)(paymentMethods[0]);
      const products3 = prod;
      return /* @__PURE__ */ React.createElement("div", {
        className: "bg-gray-50"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl px-4 pt-24 pb-24 sm:px-6 lg:max-w-7xl lg:px-8"
      }, /* @__PURE__ */ React.createElement("h1", {
        className: "mb-6 text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl"
      }, "Checkout"), /* @__PURE__ */ React.createElement("h2", {
        className: "sr-only"
      }, "Checkout"), /* @__PURE__ */ React.createElement("form", {
        className: "lg:grid lg:grid-cols-2 lg:gap-x-12 xl:gap-x-16"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h2", {
        className: "text-xl font-medium text-gray-900"
      }, "Contact information"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-4"
      }, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "phone-number",
        className: "block text-sm font-medium text-gray-700"
      }, "Phone number"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1"
      }, /* @__PURE__ */ React.createElement("input", {
        type: "tel",
        id: "phone-number",
        name: "phone-number",
        autoComplete: "tel",
        className: "block w-full rounded-md border-gray-300 py-3 px-3 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      })))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-5 border-t border-gray-200 pt-5"
      }, /* @__PURE__ */ React.createElement("h2", {
        className: "text-lg font-medium text-gray-900"
      }, "Delivery information"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "first-name",
        className: "block text-sm font-medium text-gray-700"
      }, "First name"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1"
      }, /* @__PURE__ */ React.createElement("input", {
        type: "text",
        id: "first-name",
        name: "first-name",
        autoComplete: "given-name",
        className: "block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      }))), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "last-name",
        className: "block text-sm font-medium text-gray-700"
      }, "Last name"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1"
      }, /* @__PURE__ */ React.createElement("input", {
        type: "text",
        id: "last-name",
        name: "last-name",
        autoComplete: "family-name",
        className: "block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      }))), /* @__PURE__ */ React.createElement("div", {
        className: "sm:col-span-2"
      }, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "address",
        className: "block text-sm font-medium text-gray-700"
      }, "Address"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1"
      }, /* @__PURE__ */ React.createElement("input", {
        type: "text",
        name: "address",
        id: "address",
        autoComplete: "street-address",
        className: "block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      }))), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "city",
        className: "block text-sm font-medium text-gray-700"
      }, "City / Municipality"), /* @__PURE__ */ React.createElement("div", {
        className: "relative mt-1"
      }, /* @__PURE__ */ React.createElement("select", {
        name: "city",
        id: "city",
        autoComplete: "address-level2",
        className: "leading block w-full appearance-none rounded-md border-gray-300 p-3 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
      }), /* @__PURE__ */ React.createElement("div", {
        className: "pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700"
      }, /* @__PURE__ */ React.createElement("svg", {
        className: "h-4 w-4 fill-current",
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20"
      }, /* @__PURE__ */ React.createElement("path", {
        d: "M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"
      }))))), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "region",
        className: "block text-sm font-medium text-gray-700"
      }, "Province"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1"
      }, /* @__PURE__ */ React.createElement("input", {
        type: "text",
        name: "region",
        id: "region",
        value: "Cavite",
        disabled: true,
        autoComplete: "address-level1",
        className: "block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 disabled:border disabled:text-gray-500  sm:text-sm"
      }))))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-5 border-t border-gray-200 pt-5"
      }, /* @__PURE__ */ React.createElement(import_react62.RadioGroup, {
        value: selectedPaymentMethod,
        onChange: setSelectedPaymentMethod
      }, /* @__PURE__ */ React.createElement(import_react62.RadioGroup.Label, {
        className: "text-lg font-medium text-gray-900"
      }, "Payment method"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4"
      }, paymentMethods.map((paymentMethod) => /* @__PURE__ */ React.createElement(import_react62.RadioGroup.Option, {
        key: paymentMethod.id,
        value: paymentMethod,
        className: ({ checked, active }) => classNames2(checked ? "border-transparent" : "border-gray-300", active ? "ring-2 ring-green-500" : "", "relative flex cursor-pointer rounded-lg border bg-white p-4 shadow-sm focus:outline-none")
      }, ({ checked, active }) => /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-1"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center"
      }, paymentMethod.id === "card" && /* @__PURE__ */ React.createElement(import_solid4.CreditCardIcon, {
        className: " mr-2 w-10 text-green-500"
      }), paymentMethod.id === "cod" && /* @__PURE__ */ React.createElement(import_outline3.CashIcon, {
        className: " mr-2 w-8 text-green-500"
      }), /* @__PURE__ */ React.createElement(import_react62.RadioGroup.Label, {
        as: "span",
        className: "flex text-base font-medium text-gray-900"
      }, (paymentMethod == null ? void 0 : paymentMethod.imageSrc) ? /* @__PURE__ */ React.createElement("img", {
        src: paymentMethod.imageSrc,
        alt: paymentMethod.id,
        className: "w-24"
      }) : paymentMethod.title))), checked ? /* @__PURE__ */ React.createElement(import_solid4.CheckCircleIcon, {
        className: "h-5 w-5 text-green-500",
        "aria-hidden": "true"
      }) : null, /* @__PURE__ */ React.createElement("div", {
        className: classNames2(active ? "border" : "border-2", checked ? "border-green-500" : "border-transparent", "pointer-events-none absolute -inset-px rounded-lg"),
        "aria-hidden": "true"
      })))))))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-5 lg:mt-0"
      }, /* @__PURE__ */ React.createElement("h2", {
        className: "text-xl font-medium text-gray-900"
      }, "Order summary"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6 rounded-lg border border-gray-200 bg-white shadow-sm"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "sr-only"
      }, "Items in your cart"), /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "divide-y divide-gray-200"
      }, products3.map((product2) => /* @__PURE__ */ React.createElement("li", {
        key: product2.id,
        className: "flex py-6 px-4 sm:px-6"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex-shrink-0"
      }, /* @__PURE__ */ React.createElement("img", {
        src: product2.imageSrc,
        alt: product2.imageAlt,
        className: "w-40 rounded-md"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "ml-6 flex flex-1 flex-col pt-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "min-w-0 flex-1"
      }, /* @__PURE__ */ React.createElement("h4", {
        className: "text-lg"
      }, /* @__PURE__ */ React.createElement("a", {
        href: `/products/${product2.id}`,
        className: "font-medium text-gray-700 hover:text-red-800"
      }, product2.name)), /* @__PURE__ */ React.createElement("p", {
        className: "text-md mt-1 text-red-500"
      }, "\u20B1", product2.price), /* @__PURE__ */ React.createElement("div", {
        className: "mt-2 "
      }, /* @__PURE__ */ React.createElement(Quantity, null))), /* @__PURE__ */ React.createElement("div", {
        className: "ml-4 flow-root flex-shrink-0"
      }, /* @__PURE__ */ React.createElement("button", {
        type: "button",
        className: "-m-2.5 flex items-center justify-center bg-white p-2.5 text-gray-400 hover:text-red-500"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Remove"), /* @__PURE__ */ React.createElement(import_solid4.TrashIcon, {
        className: "h-5 w-5",
        "aria-hidden": "true"
      })))), /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-1 items-end justify-between pt-2"
      }))))), /* @__PURE__ */ React.createElement("dl", {
        className: "space-y-6 border-t border-gray-200 py-6 px-4 sm:px-6"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "text-sm"
      }, "Subtotal"), /* @__PURE__ */ React.createElement("dd", {
        className: "text-sm font-medium text-gray-900"
      }, "\u20B11000")), /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "text-sm"
      }, "Delivery fee"), /* @__PURE__ */ React.createElement("dd", {
        className: "text-sm font-medium text-gray-900  line-through"
      }, "\u20B150")), /* @__PURE__ */ React.createElement("p", {
        className: "text-right text-sm font-medium text-gray-900"
      }, "Free delivery promo applied"), /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between border-t border-gray-200 pt-6"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "text-base font-medium"
      }, "Total amount"), /* @__PURE__ */ React.createElement("dd", {
        className: "text-base font-medium text-red-500"
      }, "\u20B11000"))), /* @__PURE__ */ React.createElement("div", {
        className: "border-t border-gray-200 py-6 px-4 sm:px-6"
      }, /* @__PURE__ */ React.createElement("button", {
        type: "submit",
        className: "w-full rounded-md border border-transparent bg-red-500 py-3 px-4 text-base font-medium text-white shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-50"
      }, "Confirm order")))))));
    }
    var chicken_exports = {};
    __export2(chicken_exports, {
      default: () => ChickenPage
    });
    init_react2();
    function ChickenPage() {
      return /* @__PURE__ */ React.createElement(ProductsPage, {
        onlyCategory: "Chicken"
      });
    }
    var routes_exports = {};
    __export2(routes_exports, {
      default: () => IndexPage
    });
    init_react2();
    var import_react72 = require_react();
    var import_remix8 = __toESM(require_remix());
    var trendingProducts = [
      {
        id: 2,
        imageSrc: "/images/BF-chicken-breast-fillets-860g.jpeg",
        imageAlt: "BF-chicken-breast-fillets-860g",
        name: "Chicken Breasts Fillets",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!"
      },
      {
        id: 3,
        imageSrc: "/images/BF-chicken-breasts-860g.jpeg",
        imageAlt: "BF-chicken-breasts-860g",
        name: "Chicken Breasts",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!"
      },
      {
        id: 4,
        imageSrc: "/images/BF-chicken-leg-quarters-860g.jpeg",
        imageAlt: "BF-chicken-leg-quarters-860g",
        name: "Chicken Leg Quarters",
        weight: "860g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 180,
        description: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!"
      },
      {
        id: 5,
        imageSrc: "/images/BF-chicken-nuggets-200g.jpeg",
        imageAlt: "BF-chicken-nuggets-200g",
        name: "Chicken Nuggets",
        weight: "200g",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 100,
        description: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus nemo illum dignissimos fugit obcaecati vel beatae? Numquam similique vitae inventore!"
      }
    ];
    var categories = [
      {
        name: "Chicken",
        imageSrc: "/images/category-chicken2.jpg",
        imageAlt: "category-chicken",
        href: "/chicken"
      },
      {
        name: "Pork",
        imageSrc: "/images/category-pork2.jpg",
        imageAlt: "category-pork",
        href: "/pork"
      },
      {
        name: "Beef",
        imageSrc: "/images/category-beef2.jpg",
        imageAlt: "category-beef",
        href: "/beef"
      }
    ];
    var testimonials = [
      {
        id: 1,
        quote: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.",
        attribution: "Sherrilyn Reyes, Camella Lessandra"
      },
      {
        id: 2,
        quote: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.",
        attribution: "Jason Orqueza, Parklane Country Homes"
      },
      {
        id: 3,
        quote: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia nobis autem, impedit dignissimos quidem cumque libero ea quam porro tempore.",
        attribution: "Evan Angelo Monreal, Lumina Homes"
      }
    ];
    function IndexPage() {
      const [mobileMenuOpen, setMobileMenuOpen] = (0, import_react72.useState)(false);
      return /* @__PURE__ */ React.createElement("div", {
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("main", null, /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-col border-b border-gray-200 lg:border-0"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "relative"
      }, /* @__PURE__ */ React.createElement("div", {
        "aria-hidden": "true",
        className: "absolute hidden h-full w-1/2 bg-gray-50 lg:block"
      }), /* @__PURE__ */ React.createElement("div", {
        className: "relative bg-gray-50 lg:bg-transparent"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-7xl px-4 sm:px-6 lg:grid lg:grid-cols-2 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl py-24 md:pt-40 lg:max-w-none lg:py-64"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "lg:pr-16"
      }, /* @__PURE__ */ React.createElement("h1", {
        className: "text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl lg:text-6xl"
      }, "Quality meats at your fingertips"), /* @__PURE__ */ React.createElement("p", {
        className: "mt-4 text-xl text-gray-600"
      }, "Choose from our wide selection of freshly prepared meats straight to your door."), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6"
      }, /* @__PURE__ */ React.createElement(import_remix8.Link, {
        to: "/products",
        className: "inline-block rounded-md border border-transparent bg-red-600 py-3 px-8 font-medium text-white hover:bg-red-700 "
      }, "Start shopping")))))), /* @__PURE__ */ React.createElement("div", {
        className: "flex h-48 w-full justify-center sm:h-80 lg:absolute lg:top-0 lg:right-0 lg:h-full lg:w-1/2"
      }, /* @__PURE__ */ React.createElement("img", {
        src: "images/hero-fresh-meat.jpg",
        alt: "hero-fresh-meat",
        className: "h-full w-full object-cover object-center"
      })))), /* @__PURE__ */ React.createElement("section", {
        "aria-labelledby": "trending-heading",
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "py-16 sm:py-24 lg:mx-auto lg:max-w-7xl lg:py-32 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between px-4 sm:px-6 lg:px-0"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "trending-heading",
        className: "text-3xl font-extrabold tracking-tight text-gray-900"
      }, "Bestsellers"), /* @__PURE__ */ React.createElement(import_remix8.Link, {
        to: "/products",
        className: "hidden text-sm font-semibold text-red-600 hover:text-red-500 sm:block"
      }, "See all products", /* @__PURE__ */ React.createElement("span", {
        "aria-hidden": "true"
      }, " \u2192"))), /* @__PURE__ */ React.createElement("div", {
        className: "relative mt-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "relative w-full overflow-x-auto"
      }, /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "mx-4 inline-flex space-x-8 sm:mx-6 lg:mx-0 lg:grid lg:grid-cols-4 lg:gap-x-8 lg:space-x-0"
      }, trendingProducts.map((product2) => /* @__PURE__ */ React.createElement("li", {
        key: product2.id,
        className: "inline-flex w-64 flex-col text-center lg:w-auto "
      }, /* @__PURE__ */ React.createElement("div", {
        className: "group relative"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-md bg-gray-200"
      }, /* @__PURE__ */ React.createElement("img", {
        src: product2.imageSrc,
        alt: product2.imageAlt,
        className: "h-full w-full object-cover object-center group-hover:opacity-75"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "mt-1 font-semibold text-gray-900 hover:text-red-600"
      }, /* @__PURE__ */ React.createElement(import_remix8.Link, {
        to: `/products/${product2.id}`
      }, /* @__PURE__ */ React.createElement("span", {
        className: "absolute inset-0 "
      }), product2.name)), /* @__PURE__ */ React.createElement("p", {
        className: "mt-1 text-red-500 hover:text-red-400"
      }, "\u20B1", product2.price)))))))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-12 px-4 sm:hidden"
      }, /* @__PURE__ */ React.createElement(import_remix8.Link, {
        to: "#",
        className: "text-sm font-semibold text-red-600 hover:text-red-500"
      }, "See all products", /* @__PURE__ */ React.createElement("span", {
        "aria-hidden": "true"
      }, " \u2192"))))), /* @__PURE__ */ React.createElement("section", {
        "aria-labelledby": "categories-heading",
        className: "bg-gray-50"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-7xl px-4 sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl py-16 sm:py-24 lg:max-w-none lg:py-32"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "categories-heading",
        className: "text-3xl font-extrabold text-gray-900"
      }, "Categories"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6 space-y-12 lg:grid lg:grid-cols-3 lg:gap-x-6 lg:space-y-0"
      }, categories.map((category) => /* @__PURE__ */ React.createElement("div", {
        key: category.name,
        className: "group relative"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "sm:aspect-w-2 sm:aspect-h-1 lg:aspect-w-1 lg:aspect-h-1 relative h-80 w-full overflow-hidden rounded-lg bg-white group-hover:opacity-75 sm:h-64"
      }, /* @__PURE__ */ React.createElement("img", {
        src: category.imageSrc,
        alt: category.imageAlt,
        className: "h-full w-full object-cover object-center"
      })), /* @__PURE__ */ React.createElement("h3", {
        className: "mt-6 text-lg font-semibold text-gray-900 hover:text-red-600"
      }, /* @__PURE__ */ React.createElement(import_remix8.Link, {
        to: category.href
      }, /* @__PURE__ */ React.createElement("span", {
        className: "absolute inset-0"
      }), category.name)))))))), /* @__PURE__ */ React.createElement("div", {
        className: "relative overflow-hidden"
      }, /* @__PURE__ */ React.createElement("div", {
        "aria-hidden": "true",
        className: "absolute inset-0"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "absolute inset-0 mx-auto max-w-full overflow-hidden"
      }, /* @__PURE__ */ React.createElement("img", {
        src: "images/sale-delivery.jpeg",
        alt: "",
        className: "h-full w-full object-cover object-center"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "absolute inset-0 bg-white bg-opacity-60"
      }), /* @__PURE__ */ React.createElement("div", {
        className: "absolute inset-0 bg-gradient-to-t from-white via-white"
      })), /* @__PURE__ */ React.createElement("section", {
        "aria-labelledby": "sale-heading",
        className: "relative mx-auto flex max-w-7xl flex-col items-center px-4 pt-32 text-center sm:px-6 lg:px-32"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl lg:max-w-none"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "sale-heading",
        className: "text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl lg:text-6xl"
      }, "Free delivery for orders worth", " ", /* @__PURE__ */ React.createElement("span", {
        className: "text-red-600"
      }, "\u20B1500"), " and above*"), /* @__PURE__ */ React.createElement("p", {
        className: "mx-auto mt-4 max-w-xl text-xl text-gray-600"
      }, "*within the 3.3 km radius of Parklane Country Homes"), /* @__PURE__ */ React.createElement(import_remix8.Link, {
        to: "/products",
        className: "hover:pointer mt-6 inline-block w-full rounded-md border border-transparent bg-red-600 py-3 px-8 font-medium text-white hover:bg-red-700 sm:w-auto"
      }, "Start shopping"))), /* @__PURE__ */ React.createElement("section", {
        "aria-labelledby": "testimonial-heading",
        className: "relative mx-auto max-w-7xl py-24 px-4 sm:px-6 lg:py-32 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl lg:max-w-none"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "testimonial-heading",
        className: "mt-2 text-3xl font-extrabold tracking-tight text-gray-900"
      }, "What are people saying?"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-16 space-y-16 lg:grid lg:grid-cols-3 lg:gap-x-8 lg:space-y-0"
      }, testimonials.map((testimonial) => /* @__PURE__ */ React.createElement("blockquote", {
        key: testimonial.id,
        className: "sm:flex lg:block"
      }, /* @__PURE__ */ React.createElement("svg", {
        width: 24,
        height: 18,
        viewBox: "0 0 24 18",
        xmlns: "http://www.w3.org/2000/svg",
        "aria-hidden": "true",
        className: "flex-shrink-0 text-red-600"
      }, /* @__PURE__ */ React.createElement("path", {
        d: "M0 18h8.7v-5.555c-.024-3.906 1.113-6.841 2.892-9.68L6.452 0C3.188 2.644-.026 7.86 0 12.469V18zm12.408 0h8.7v-5.555C21.083 8.539 22.22 5.604 24 2.765L18.859 0c-3.263 2.644-6.476 7.86-6.451 12.469V18z",
        fill: "currentColor"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "mt-8 sm:mt-0 sm:ml-6 lg:mt-10 lg:ml-0"
      }, /* @__PURE__ */ React.createElement("p", {
        className: "text-lg text-gray-600"
      }, testimonial.quote), /* @__PURE__ */ React.createElement("cite", {
        className: "mt-4 block font-semibold not-italic text-gray-900"
      }, testimonial.attribution))))))))));
    }
    var login_exports = {};
    __export2(login_exports, {
      action: () => action,
      default: () => Example8,
      loader: () => loader
    });
    init_react2();
    var import_remix10 = __toESM(require_remix());
    init_react2();
    var import_client2 = require_client2();
    var import_remix_auth = require_build();
    init_react2();
    var import_remix9 = __toESM(require_remix());
    var sessionStorage2 = (0, import_remix9.createCookieSessionStorage)({
      cookie: {
        name: "_session",
        sameSite: "lax",
        path: "/",
        httpOnly: true,
        secrets: ["s3cr3t"],
        secure: false
      }
    });
    var import_remix_auth_form = require_build2();
    var import_tiny_invariant2 = __toESM(require_tiny_invariant_cjs());
    var import_bcryptjs = __toESM(require_bcrypt());
    init_react2();
    var import_client = require_client2();
    var db;
    if (false) {
      db = new import_client.PrismaClient();
      db.$connect();
    } else {
      if (!globalThis.__db) {
        globalThis.__db = new import_client.PrismaClient();
        globalThis.__db.$connect();
      }
      db = globalThis.__db;
    }
    var authenticator = new import_remix_auth.Authenticator(sessionStorage2);
    authenticator.use(new import_remix_auth_form.FormStrategy(async ({ form, context: context2 }) => {
      const username = form.get("username");
      const password = form.get("password");
      (0, import_tiny_invariant2.default)(typeof username === "string", "username must be a string");
      (0, import_tiny_invariant2.default)(username.length > 0, "username must not be empty");
      (0, import_tiny_invariant2.default)(typeof password === "string", "password must be a string");
      (0, import_tiny_invariant2.default)(password.length > 0, "password must not be empty");
      const hashedPassword = await import_bcryptjs.default.hash(password, 10);
      const user = await db.user.upsert({
        where: {
          username
        },
        update: {},
        create: {
          username,
          password: hashedPassword,
          role: import_client2.Role.CUSTOMER
        }
      });
      return user;
    }));
    function Example8() {
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
        className: "flex min-h-full pt-16"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-1 flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto w-full max-w-sm lg:w-96"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("h2", {
        className: "mt-6 text-3xl font-extrabold text-gray-900"
      }, "Sign in to your account"), /* @__PURE__ */ React.createElement("p", {
        className: "mt-2 text-sm text-gray-600"
      }, "Or", " ", /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "font-medium text-red-600 hover:text-red-500"
      }, "sign up for an account"))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-8"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("p", {
        className: "text-sm font-medium text-gray-700"
      }, "Sign in with"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1 grid grid-cols-2 gap-3"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Sign in with Facebook"), /* @__PURE__ */ React.createElement("svg", {
        className: "h-5 w-5",
        "aria-hidden": "true",
        fill: "currentColor",
        viewBox: "0 0 20 20"
      }, /* @__PURE__ */ React.createElement("path", {
        fillRule: "evenodd",
        d: "M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z",
        clipRule: "evenodd"
      })))), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Sign in with Google"), /* @__PURE__ */ React.createElement("svg", {
        className: "h-5 w-5",
        "aria-hidden": "true",
        fill: "currentColor",
        viewBox: "0 0 24 24"
      }, /* @__PURE__ */ React.createElement("path", {
        xmlns: "http://www.w3.org/2000/svg",
        d: "M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032 s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2 C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z"
      }), " "))))), /* @__PURE__ */ React.createElement("div", {
        className: "relative mt-6"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "absolute inset-0 flex items-center",
        "aria-hidden": "true"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "w-full border-t border-gray-300"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "relative flex justify-center text-sm"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "bg-white px-2 text-gray-500"
      }, "Or continue with")))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6"
      }, /* @__PURE__ */ React.createElement(import_remix10.Form, {
        method: "post",
        className: "space-y-6"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "username",
        className: "block text-sm font-medium text-gray-700"
      }, "Username"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1"
      }, /* @__PURE__ */ React.createElement("input", {
        id: "username",
        name: "username",
        type: "username",
        autoComplete: "username",
        required: true,
        className: "block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm"
      }))), /* @__PURE__ */ React.createElement("div", {
        className: "space-y-1"
      }, /* @__PURE__ */ React.createElement("label", {
        htmlFor: "password",
        className: "block text-sm font-medium text-gray-700"
      }, "Password"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-1"
      }, /* @__PURE__ */ React.createElement("input", {
        id: "password",
        name: "password",
        type: "password",
        autoComplete: "current-password",
        required: true,
        className: "block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-red-500 focus:outline-none focus:ring-red-500 sm:text-sm"
      }))), /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center"
      }), /* @__PURE__ */ React.createElement("div", {
        className: "text-sm"
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "font-medium text-red-600 hover:text-red-500"
      }, "Forgot your password?"))), /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("button", {
        type: "submit",
        className: "flex w-full justify-center rounded-md border border-transparent bg-red-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2"
      }, "Sign"))))))), /* @__PURE__ */ React.createElement("div", {
        className: "relative hidden w-0 flex-1 lg:block"
      }, /* @__PURE__ */ React.createElement("img", {
        className: "absolute inset-0 h-full w-full object-cover",
        src: "/images/hero-fresh-meat2.jpg",
        alt: "fresh chicken pork meat and beef"
      }))));
    }
    var action = async ({ request: request2 }) => {
      const user = await authenticator.authenticate("user-pass", request2, {
        successRedirect: "/dashboard",
        failureRedirect: "/login"
      });
      if (user)
        return user;
      else
        return null;
    };
    var loader = async ({ request: request2 }) => {
      return await authenticator.isAuthenticated(request2, {
        successRedirect: "/dashboard"
      });
    };
    var sales_exports = {};
    __export2(sales_exports, {
      default: () => Example9
    });
    init_react2();
    var import_react82 = require_react();
    var import_outline4 = require_outline();
    var import_solid5 = require_solid();
    var cards = [
      {
        name: "Total Gross Sales",
        stat: "71,897",
        previousStat: "70,946",
        change: "12%",
        changeType: "increase"
      },
      {
        name: "Average Order Amount",
        stat: "1123",
        previousStat: "774",
        change: "145%",
        changeType: "increase"
      },
      {
        name: "Average Order Completion Rate",
        stat: "90%",
        previousStat: "95%",
        change: "5%",
        changeType: "decrease"
      }
    ];
    var transactions = [
      {
        id: 1,
        name: "123-456",
        href: "#",
        amount: "\u20B11,000",
        status: "Completed",
        date: "January 11, 2022",
        datetime: "2022-01-11"
      },
      {
        id: 1,
        name: "123-456",
        href: "#",
        amount: "\u20B11,000",
        status: "Completed",
        date: "January 11, 2022",
        datetime: "2022-01-11"
      },
      {
        id: 1,
        name: "123-456",
        href: "#",
        amount: "\u20B11,000",
        status: "Completed",
        date: "January 11, 2022",
        datetime: "2022-01-11"
      },
      {
        id: 1,
        name: "123-456",
        href: "#",
        amount: "\u20B11,000",
        status: "Completed",
        date: "January 11, 2022",
        datetime: "2022-01-11"
      },
      {
        id: 1,
        name: "123-456",
        href: "#",
        amount: "\u20B11,000",
        status: "Completed",
        date: "January 11, 2022",
        datetime: "2022-01-11"
      },
      {
        id: 1,
        name: "123-456",
        href: "#",
        amount: "\u20B11,000",
        status: "Completed",
        date: "January 11, 2022",
        datetime: "2022-01-11"
      },
      {
        id: 1,
        name: "123-456",
        href: "#",
        amount: "\u20B11,000",
        status: "Completed",
        date: "January 11, 2022",
        datetime: "2022-01-11"
      }
    ];
    function classNames3(...classes) {
      return classes.filter(Boolean).join(" ");
    }
    function Example9() {
      const [sidebarOpen, setSidebarOpen] = (0, import_react82.useState)(false);
      return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", {
        className: " bg-white px-4 py-5 pt-24 sm:px-6"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "text-3xl font-extrabold leading-6 text-gray-900"
      }, "Sales Dashboard"), /* @__PURE__ */ React.createElement("p", {
        className: "mt-3 text-sm text-gray-500"
      }, "Analyze sales from completed orders.")), /* @__PURE__ */ React.createElement("div", {
        className: "min-h-full"
      }, /* @__PURE__ */ React.createElement("main", {
        className: "flex-1 pb-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: ""
      }, /* @__PURE__ */ React.createElement("div", {
        className: "px-4 sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("h2", {
        className: "text-xl font-bold leading-6 text-gray-900"
      }, "Overview"), /* @__PURE__ */ React.createElement("div", {
        className: "mt-4 flex justify-between"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "h-52 w-full"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "mt-5 grid grid-cols-1 divide-y divide-gray-200 overflow-hidden rounded-lg bg-white shadow md:grid-cols-3 md:divide-y-0 md:divide-x"
      }, cards.map((card) => /* @__PURE__ */ React.createElement("div", {
        key: card.name,
        className: " px-4 py-5 sm:p-6"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "text-base font-normal text-gray-900"
      }, card.name), /* @__PURE__ */ React.createElement("dd", {
        className: "mt-1 flex items-baseline justify-between md:block lg:flex"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-baseline text-2xl font-semibold text-gray-900"
      }, card.stat, /* @__PURE__ */ React.createElement("span", {
        className: "ml-2 text-sm font-medium text-gray-500"
      }, "from ", card.previousStat)), /* @__PURE__ */ React.createElement("div", {
        className: classNames3(card.changeType === "increase" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800", "inline-flex items-baseline rounded-full px-2.5 py-0.5 text-sm font-medium md:mt-2 lg:mt-0")
      }, card.changeType === "increase" ? /* @__PURE__ */ React.createElement(import_outline4.ArrowSmUpIcon, {
        className: "-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-green-500",
        "aria-hidden": "true"
      }) : /* @__PURE__ */ React.createElement(import_solid5.ArrowSmDownIcon, {
        className: "-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-red-500",
        "aria-hidden": "true"
      }), /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, card.changeType === "increase" ? "Increased" : "Decreased", " ", "by"), card.change)))))), /* @__PURE__ */ React.createElement("h2", {
        className: "mt-8 px-4 text-xl font-bold leading-6 text-gray-900 sm:px-6 lg:px-8"
      }, "Completed orders"), /* @__PURE__ */ React.createElement("div", {
        className: "shadow sm:hidden"
      }, /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "mt-2 divide-y divide-gray-200 overflow-hidden shadow sm:hidden"
      }, transactions.map((transaction) => /* @__PURE__ */ React.createElement("li", {
        key: transaction.id
      }, /* @__PURE__ */ React.createElement("a", {
        href: transaction.href,
        className: "block bg-white px-4 py-4 hover:bg-gray-50"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "flex items-center space-x-4"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "flex flex-1 space-x-2 truncate"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "flex flex-col truncate text-sm text-gray-500"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "truncate"
      }, transaction.name), /* @__PURE__ */ React.createElement("span", null, /* @__PURE__ */ React.createElement("span", {
        className: "font-medium text-gray-900"
      }, transaction.amount), " "), /* @__PURE__ */ React.createElement("time", {
        dateTime: transaction.datetime
      }, transaction.date)))))))), /* @__PURE__ */ React.createElement("nav", {
        className: "flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3",
        "aria-label": "Pagination"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-1 justify-between"
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500"
      }, "Previous"), /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500"
      }, "Next")))), /* @__PURE__ */ React.createElement("div", {
        className: "hidden sm:block"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "px-4 sm:px-6 lg:px-8"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mt-2 flex flex-col"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "min-w-full overflow-hidden overflow-x-auto align-middle shadow sm:rounded-lg"
      }, /* @__PURE__ */ React.createElement("table", {
        className: "min-w-full divide-y divide-gray-200"
      }, /* @__PURE__ */ React.createElement("thead", null, /* @__PURE__ */ React.createElement("tr", null, /* @__PURE__ */ React.createElement("th", {
        className: "bg-gray-50 px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Order Id"), /* @__PURE__ */ React.createElement("th", {
        className: "bg-gray-50 px-6 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Amount"), /* @__PURE__ */ React.createElement("th", {
        className: "hidden bg-gray-50 px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 md:block"
      }, "Status"), /* @__PURE__ */ React.createElement("th", {
        className: "bg-gray-50 px-6 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500"
      }, "Date"))), /* @__PURE__ */ React.createElement("tbody", {
        className: "divide-y divide-gray-200 bg-white"
      }, transactions.map((transaction) => /* @__PURE__ */ React.createElement("tr", {
        key: transaction.id,
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("td", {
        className: "w-full max-w-0 whitespace-nowrap px-6 py-4 text-sm text-gray-900"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex"
      }, /* @__PURE__ */ React.createElement("a", {
        href: transaction.href,
        className: "group inline-flex space-x-2 truncate text-sm"
      }, /* @__PURE__ */ React.createElement(import_solid5.CashIcon, {
        className: "h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500",
        "aria-hidden": "true"
      }), /* @__PURE__ */ React.createElement("p", {
        className: "truncate text-gray-500 group-hover:text-gray-900"
      }, transaction.name)))), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4 text-right text-sm text-gray-500"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "font-medium text-gray-900"
      }, transaction.amount, " ")), /* @__PURE__ */ React.createElement("td", {
        className: "hidden whitespace-nowrap px-6 py-4 text-sm text-gray-500 md:block"
      }, /* @__PURE__ */ React.createElement("span", {
        className: classNames3("inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium capitalize")
      }, transaction.status)), /* @__PURE__ */ React.createElement("td", {
        className: "whitespace-nowrap px-6 py-4 text-right text-sm text-gray-500"
      }, /* @__PURE__ */ React.createElement("time", {
        dateTime: transaction.datetime
      }, transaction.date)))))), /* @__PURE__ */ React.createElement("nav", {
        className: "flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6",
        "aria-label": "Pagination"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "hidden sm:block"
      }, /* @__PURE__ */ React.createElement("p", {
        className: "text-sm text-gray-700"
      }, "Showing ", /* @__PURE__ */ React.createElement("span", {
        className: "font-medium"
      }, "1"), " to", " ", /* @__PURE__ */ React.createElement("span", {
        className: "font-medium"
      }, "10"), " of", " ", /* @__PURE__ */ React.createElement("span", {
        className: "font-medium"
      }, "20"), " results")), /* @__PURE__ */ React.createElement("div", {
        className: "flex flex-1 justify-between sm:justify-end"
      }, /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
      }, "Previous"), /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
      }, "Next")))))))))));
    }
    var beef_exports = {};
    __export2(beef_exports, {
      default: () => ChickenPage2
    });
    init_react2();
    function ChickenPage2() {
      return /* @__PURE__ */ React.createElement(ProductsPage, {
        onlyCategory: "Beef"
      });
    }
    var cart_exports = {};
    __export2(cart_exports, {
      default: () => Example10,
      prod: () => prod2
    });
    init_react2();
    var import_solid6 = require_solid();
    var import_remix11 = __toESM(require_remix());
    var prod2 = [
      {
        id: 18,
        imageSrc: "/images/BF-premium-chicken.jpeg",
        imageAlt: "BF-premium-chicken",
        name: "Premium Chicken",
        weight: "",
        brand: "Bounty Fresh",
        category: "Chicken",
        price: 250,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      },
      {
        id: 41,
        imageSrc: "/images/Camille-beef-cubes-500g.jpeg",
        imageAlt: "Camille-beef-cubes-500g",
        name: "Beef Cubes",
        weight: "500g",
        brand: "Camille",
        category: "Beef",
        price: 100,
        description: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias cumque nihil atque quae inventore. Aliquam cupiditate repudiandae suscipit corporis natus."
      }
    ];
    function Example10() {
      return /* @__PURE__ */ React.createElement("div", {
        className: "bg-white"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "mx-auto max-w-2xl px-4 pt-24 pb-24 sm:px-6 lg:max-w-7xl lg:px-8"
      }, /* @__PURE__ */ React.createElement("h1", {
        className: "text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl"
      }, "Shopping Cart"), /* @__PURE__ */ React.createElement("form", {
        className: "mt-12 lg:grid lg:grid-cols-12 lg:items-start lg:gap-x-12 xl:gap-x-16"
      }, /* @__PURE__ */ React.createElement("section", {
        "aria-labelledby": "cart-heading",
        className: "lg:col-span-7"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "cart-heading",
        className: "sr-only"
      }, "Items in your shopping cart"), /* @__PURE__ */ React.createElement("ul", {
        role: "list",
        className: "divide-y divide-gray-200 border-t border-b border-gray-200"
      }, prod2.map((product2, productIdx) => /* @__PURE__ */ React.createElement("li", {
        key: product2.id,
        className: "flex pt-6 pb-3 sm:pt-10 sm:pb-5"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex-shrink-0"
      }, /* @__PURE__ */ React.createElement("img", {
        src: product2.imageSrc,
        alt: product2.imageAlt,
        className: "h-24 w-24 rounded-md object-cover object-center sm:h-48 sm:w-48"
      })), /* @__PURE__ */ React.createElement("div", {
        className: "justify-betweensm:ml-6 ml-4 flex flex-1 flex-col"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0"
      }, /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement("div", {
        className: "flex justify-between"
      }, /* @__PURE__ */ React.createElement("h3", {
        className: "text-lg sm:text-xl"
      }, /* @__PURE__ */ React.createElement("a", {
        href: `products/${product2.id}`,
        className: "font-medium text-gray-900 hover:text-red-500"
      }, product2.name))), /* @__PURE__ */ React.createElement("p", {
        className: "mt-1 text-base font-medium text-red-500 sm:text-lg"
      }, "\u20B1", product2.price), /* @__PURE__ */ React.createElement("div", {
        className: "mt-4"
      }, /* @__PURE__ */ React.createElement(Quantity, null))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-4 sm:mt-0 sm:pr-9"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "absolute top-0 right-0"
      }, /* @__PURE__ */ React.createElement("button", {
        type: "button",
        className: "-m-2 inline-flex p-2 pt-2.5 text-gray-400 hover:text-red-500"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Remove"), /* @__PURE__ */ React.createElement(import_solid6.TrashIcon, {
        className: "h-5 w-5",
        "aria-hidden": "true"
      })))))))))), /* @__PURE__ */ React.createElement("section", {
        "aria-labelledby": "summary-heading",
        className: "mt-16 rounded-lg bg-gray-50 px-4 py-6 sm:p-6 lg:col-span-5 lg:mt-0 lg:p-8"
      }, /* @__PURE__ */ React.createElement("h2", {
        id: "summary-heading",
        className: "text-lg font-medium text-gray-900"
      }, "Order summary"), /* @__PURE__ */ React.createElement("dl", {
        className: "mt-6 space-y-4"
      }, /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "text-sm text-gray-600"
      }, "Subtotal"), /* @__PURE__ */ React.createElement("dd", {
        className: "text-sm font-medium text-gray-900"
      }, "\u20B11000")), /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between border-t border-gray-200 pt-4"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "flex items-center text-sm text-gray-600"
      }, /* @__PURE__ */ React.createElement("span", null, "Delivery fee"), /* @__PURE__ */ React.createElement("a", {
        href: "#",
        className: "ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500"
      }, /* @__PURE__ */ React.createElement("span", {
        className: "sr-only"
      }, "Delivery fee"), /* @__PURE__ */ React.createElement(import_solid6.QuestionMarkCircleIcon, {
        className: "h-5 w-5",
        "aria-hidden": "true"
      }))), /* @__PURE__ */ React.createElement("dd", {
        className: "text-right text-sm font-medium text-gray-900 "
      }, /* @__PURE__ */ React.createElement("p", {
        className: "line-through"
      }, "\u20B150"))), /* @__PURE__ */ React.createElement("p", {
        className: "text-right text-sm font-medium text-gray-900"
      }, "Free delivery promo applied"), /* @__PURE__ */ React.createElement("div", {
        className: "flex items-center justify-between border-t border-gray-200 pt-4"
      }, /* @__PURE__ */ React.createElement("dt", {
        className: "text-base font-medium text-gray-900"
      }, "Total amount"), /* @__PURE__ */ React.createElement("dd", {
        className: "text-base font-medium text-red-500"
      }, "\u20B11000"))), /* @__PURE__ */ React.createElement("div", {
        className: "mt-6"
      }, /* @__PURE__ */ React.createElement(import_remix11.Link, {
        to: "/checkout"
      }, /* @__PURE__ */ React.createElement("button", {
        className: "w-full rounded-md border border-transparent bg-red-500 py-3 px-4 text-base font-medium text-white shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-50"
      }, "Checkout")))))));
    }
    var pork_exports = {};
    __export2(pork_exports, {
      default: () => ChickenPage3
    });
    init_react2();
    function ChickenPage3() {
      return /* @__PURE__ */ React.createElement(ProductsPage, {
        onlyCategory: "Pork"
      });
    }
    init_react2();
    var assets_manifest_default = { "version": "e9afaa01", "entry": { "module": "/build/entry.client-PTAOBERS.js", "imports": ["/build/_shared/chunk-2XJ4UK7D.js", "/build/_shared/chunk-SQEYWRUL.js", "/build/_shared/chunk-WE4I4FD6.js"] }, "routes": { "root": { "id": "root", "parentId": void 0, "path": "", "index": void 0, "caseSensitive": void 0, "module": "/build/root-2NSYPCXQ.js", "imports": ["/build/_shared/chunk-JIJWUI3G.js", "/build/_shared/chunk-GAQ7PNQS.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": true, "hasErrorBoundary": false }, "routes/assigned-orders": { "id": "routes/assigned-orders", "parentId": "root", "path": "assigned-orders", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/assigned-orders-T6XLIF7B.js", "imports": ["/build/_shared/chunk-AHAACWRH.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/beef": { "id": "routes/beef", "parentId": "root", "path": "beef", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/beef-6GRVHOSU.js", "imports": ["/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/cart": { "id": "routes/cart", "parentId": "root", "path": "cart", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/cart-W6WEZGBF.js", "imports": ["/build/_shared/chunk-OCNUZF2U.js", "/build/_shared/chunk-P4HQNF37.js", "/build/_shared/chunk-AHAACWRH.js", "/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/checkout": { "id": "routes/checkout", "parentId": "root", "path": "checkout", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/checkout-KCEYCIPI.js", "imports": ["/build/_shared/chunk-OCNUZF2U.js", "/build/_shared/chunk-P4HQNF37.js", "/build/_shared/chunk-AHAACWRH.js", "/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/chicken": { "id": "routes/chicken", "parentId": "root", "path": "chicken", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/chicken-H72LGEGO.js", "imports": ["/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/index": { "id": "routes/index", "parentId": "root", "path": void 0, "index": true, "caseSensitive": void 0, "module": "/build/routes/index-PCYHODFF.js", "imports": ["/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/login": { "id": "routes/login", "parentId": "root", "path": "login", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/login-MLMEJMHU.js", "imports": void 0, "hasAction": true, "hasLoader": true, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/manage-orders": { "id": "routes/manage-orders", "parentId": "root", "path": "manage-orders", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/manage-orders-CS7DHTEI.js", "imports": void 0, "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/manage-products": { "id": "routes/manage-products", "parentId": "root", "path": "manage-products", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/manage-products-5J6GCGJ2.js", "imports": ["/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/order-history": { "id": "routes/order-history", "parentId": "root", "path": "order-history", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/order-history-F2M44C45.js", "imports": void 0, "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/pork": { "id": "routes/pork", "parentId": "root", "path": "pork", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/pork-EXILULTG.js", "imports": ["/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/products/$id": { "id": "routes/products/$id", "parentId": "root", "path": "products/:id", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/products/$id-MOYY4E37.js", "imports": ["/build/_shared/chunk-P4HQNF37.js", "/build/_shared/chunk-AHAACWRH.js", "/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/products/index": { "id": "routes/products/index", "parentId": "root", "path": "products", "index": true, "caseSensitive": void 0, "module": "/build/routes/products/index-3TF6O4XH.js", "imports": ["/build/_shared/chunk-NHTGIWXZ.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false }, "routes/sales": { "id": "routes/sales", "parentId": "root", "path": "sales", "index": void 0, "caseSensitive": void 0, "module": "/build/routes/sales-2B64CD2V.js", "imports": ["/build/_shared/chunk-AHAACWRH.js"], "hasAction": false, "hasLoader": false, "hasCatchBoundary": false, "hasErrorBoundary": false } }, "url": "/build/manifest-E9AFAA01.js" };
    var entry = { module: entry_server_exports };
    var routes = {
      "root": {
        id: "root",
        parentId: void 0,
        path: "",
        index: void 0,
        caseSensitive: void 0,
        module: root_exports
      },
      "routes/assigned-orders": {
        id: "routes/assigned-orders",
        parentId: "root",
        path: "assigned-orders",
        index: void 0,
        caseSensitive: void 0,
        module: assigned_orders_exports
      },
      "routes/manage-products": {
        id: "routes/manage-products",
        parentId: "root",
        path: "manage-products",
        index: void 0,
        caseSensitive: void 0,
        module: manage_products_exports
      },
      "routes/products/index": {
        id: "routes/products/index",
        parentId: "root",
        path: "products",
        index: true,
        caseSensitive: void 0,
        module: products_exports
      },
      "routes/manage-orders": {
        id: "routes/manage-orders",
        parentId: "root",
        path: "manage-orders",
        index: void 0,
        caseSensitive: void 0,
        module: manage_orders_exports
      },
      "routes/order-history": {
        id: "routes/order-history",
        parentId: "root",
        path: "order-history",
        index: void 0,
        caseSensitive: void 0,
        module: order_history_exports
      },
      "routes/products/$id": {
        id: "routes/products/$id",
        parentId: "root",
        path: "products/:id",
        index: void 0,
        caseSensitive: void 0,
        module: id_exports
      },
      "routes/checkout": {
        id: "routes/checkout",
        parentId: "root",
        path: "checkout",
        index: void 0,
        caseSensitive: void 0,
        module: checkout_exports
      },
      "routes/chicken": {
        id: "routes/chicken",
        parentId: "root",
        path: "chicken",
        index: void 0,
        caseSensitive: void 0,
        module: chicken_exports
      },
      "routes/index": {
        id: "routes/index",
        parentId: "root",
        path: void 0,
        index: true,
        caseSensitive: void 0,
        module: routes_exports
      },
      "routes/login": {
        id: "routes/login",
        parentId: "root",
        path: "login",
        index: void 0,
        caseSensitive: void 0,
        module: login_exports
      },
      "routes/sales": {
        id: "routes/sales",
        parentId: "root",
        path: "sales",
        index: void 0,
        caseSensitive: void 0,
        module: sales_exports
      },
      "routes/beef": {
        id: "routes/beef",
        parentId: "root",
        path: "beef",
        index: void 0,
        caseSensitive: void 0,
        module: beef_exports
      },
      "routes/cart": {
        id: "routes/cart",
        parentId: "root",
        path: "cart",
        index: void 0,
        caseSensitive: void 0,
        module: cart_exports
      },
      "routes/pork": {
        id: "routes/pork",
        parentId: "root",
        path: "pork",
        index: void 0,
        caseSensitive: void 0,
        module: pork_exports
      }
    };
    module2.exports = __toCommonJS(stdin_exports);
  }
});

// worker/index.ts
init_define_process();
var build = __toModule(require_build3());

// node_modules/remix/esm/index.js
init_define_process();
var import_cloudflare_pages = __toModule(require_cloudflare_pages());
var import_server_runtime2 = __toModule(require_server_runtime());

// worker/adapter.ts
init_define_process();
var import_cloudflare_pages2 = __toModule(require_cloudflare_pages());
var import_server_runtime3 = __toModule(require_server_runtime());
function createRequestHandler({
  build: build2,
  getLoadContext,
  mode
}) {
  const platform = {};
  const handleRequest = (0, import_server_runtime3.createRequestHandler)(build2, platform, mode);
  return (request2, env2, ctx) => {
    const requestUrl = new URL(request2.url);
    if (requestUrl.hostname === "127.0.0.1") {
      requestUrl.hostname = "localhost";
      return (0, import_server_runtime3.redirect)(requestUrl.toString());
    }
    const loadContext = typeof getLoadContext === "function" ? getLoadContext(request2, env2, ctx) : void 0;
    return handleRequest(request2, loadContext);
  };
}
function createFetchHandler({
  build: build2,
  getLoadContext,
  mode,
  getCache
}) {
  const handleRequest = createRequestHandler({
    build: build2,
    getLoadContext,
    mode
  });
  const handleAsset = async (request2, env2, ctx) => {
    const clonedRequest = newRequest(request2, (headers) => {
      headers.delete("If-None-Match");
      return headers;
    });
    const response = await env2.ASSETS.fetch(clonedRequest.url, clonedRequest);
    return response.ok ? new Response(response.body, response) : null;
  };
  return async (request2, env2, ctx) => {
    try {
      const isHeadOrGetRequest = request2.method === "HEAD" || request2.method === "GET";
      const cache = typeof getCache !== "undefined" ? await getCache() : null;
      let response;
      if (isHeadOrGetRequest) {
        response = await handleAsset(request2, env2, ctx);
      }
      if (response) {
        return response;
      }
      if (isHeadOrGetRequest) {
        response = await (cache == null ? void 0 : cache.match(request2));
      }
      if (!response) {
        response = await handleRequest(request2, env2, ctx);
      }
      return response;
    } catch (e2) {
      if (define_process_default.env.NODE_ENV === "development" && e2 instanceof Error) {
        return new Response(e2.message || e2.toString(), {
          status: 500
        });
      }
      return new Response(e2.message || e2.toString(), {
        status: 500
      });
    }
  };
}
function newRequest(request2, headerFn) {
  function cloneHeaders() {
    const headers2 = new Headers();
    for (const kv of request2.headers.entries()) {
      headers2.append(kv[0], kv[1]);
    }
    return headers2;
  }
  const headers = headerFn ? headerFn(cloneHeaders()) : request2.headers;
  return new Request(request2.url, {
    ...request2,
    headers
  });
}

// worker/index.ts
var handleFetch = createFetchHandler({
  build,
  getLoadContext(request2, env2, context2) {
    return {
      ...context2,
      cloudflareImagesToken: define_process_default.env.CLOUDFLARE_IMAGES_TOKEN,
      cloudflareAccountId: define_process_default.env.CLOUDFLARE_ACCOUNT_ID,
      sessionStorage: (0, import_server_runtime2.createCookieSessionStorage)({
        cookie: {
          name: "_session",
          sameSite: "lax",
          path: "/",
          httpOnly: true,
          secrets: ["s3cr3t"],
          secure: define_process_default.env.NODE_ENV === "production"
        }
      })
    };
  }
});
var worker = {
  fetch: handleFetch
};
var worker_default = worker;
export {
  worker_default as default
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
/**
 * @license bcrypt.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/bcrypt.js for details
 */
/**
 * @remix-run/cloudflare-pages v1.2.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * @remix-run/react v1.2.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * @remix-run/server-runtime v1.2.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
/**
 * React Router DOM v6.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * React Router v6.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-dom-server.browser.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=_worker.js.map
